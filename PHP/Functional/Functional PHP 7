                    Functional PHP 7
                    Course Notes


                    Section 1 - PHP 7 CRASH COURSE
1 - The Course Overview
Brief intro to the instructor & the course
There are a few different reasons to learn Functional Programming
  - It is very high in the minds of programming communities
  - There is widespread industry and platform adoption
  - It provides an alternative paradigm to OOP
  - It allows developers to enhance their skills
There are some prerequisites
  - PHP 7.1 on any OS
  - A lightweight IDE
  - Composer for dependency management
  - A desire to learn

2 - Static Versus Dynamic Typing

3 - The Closure Class

4 - Higher-Order Functions



                    Section 2 - WHY CONSIDER FUNCTIONAL PROGRAMMING?
1 - Reasoning About Your Code

2 - Declarative Programming

3 - Testable Functions



                    Section 3 - FUNDAMENTALS OF FP
1 - What Is Functional Programming?

2 - Pure Functions

3 - Loops Versus Recursion

4 - FP Transformation



                    Section 4 - FUNCTIONAL EVALUATION STRATEGIES
1 - Lazy Versus Eager Evaluation

2 - Partial Function Application

3 - Currying



                    Section 4 - COMPOSITION
1 - The Composer Of Functions

2 - Defining Composition

3 - PRamda Functional Library

4 - Auto-Currying And Composition

5 - Course Summary
