                     Action and Filter Hooks
                     Course Notes 


                     Section 1 - Introduction
1 - Welcome
A brief introduction to the course and the instructor
  - The course will benefit both experienced and more inexperienced Wordpress devlopers

2 - What You Should Know 
There are some recommendations for students of the course
  - Be comfortable writing procedural PHP
  - How to use Wordpress
    - This is from a users point of view rather than a developers 
  - Have both a code editor and Wordpress installed

3 - Exercise Files
A quick guide on how to use the exercise files that are provided with the course



                     Section 2 - Understanding Hooks And Filters
1 - What Is Wordpress
It is open source software built mainly on PHP and MySQL
  - It is a fully featured Content Management System
  - It powers about 25% of sites
There are 2 different versions available
  - The hosted version at -- https://wordpress.com 
  - The self-hosted version -- https://wordpress.org
    -- This requires hosting of some type
The course will use a local installed version of WP
  - There are 2 main ways to interact with WP
  - Themes which are the visual layer of WP
  - Plugins which allow addition of functionality to WP core

2 - What Is The Plugin API
Plugins allow for extending WP without altering core code
A plugin is at its most basic a set of functions written in PHP that add specific feature to a WP site
The rules that WP enforces for these functions is the plugin API
  - https://codex.wordpress.org/Plugin_API
  - This API is made up of hooks which allow for latching on to WP at runtime
  - This can be anything from user login to new post
  - This can also be used to change WP
    - The example used could change the wp-admin slug to something else using the login_url hook
    - You could also use login_redirect to change where user logs into by default

3 - Action Hooks Explained
There are 2 different types of hooks in WP
  - Actions and Filters
  - WP gives action functions to be able to work with actions

4 - Filters Explained
Filters take an input, modify it and then returns it
In the example the filters can be thought of as sitting between the database and the browser
  - Before data from the database is rendered to the page a filter can modify it
  - The reverse is also true when writing to the database from the page
Wordpress has a set of filter functions the look similar to the action functions
  - has_filter(), add_filter(), apply_filter(), current_filter to name a few
  - apply_filters is the filter version of the do_action() action function
Example Syntax
  // Demo plugin
  <?php
  
    add_action( 'login_header', 'hello_world');
    function hello_world(){
      echo 'Hello World';
    }
    
    // Example filter
    // This will add a custom url to the Wordpress logo on the login page
    add_filter( 'login_headerurl', 'change_header_url');
    function change_header_url($url){
      $url = "https://example.com";
      return $url;
    }
    
  ?>

5 - Priorities

6 - Arguments



                     Section 3 - Hooks And Filters In Action
1 - Customizing The Wordpress Login Page 

2 - Adding A Custom Stylesheet

3 - Filtering Login Error Messages

4 - Removing The Login Page Shake



                     Section 4 - Working With Hooks And Filters
1 - Finding References And Documentation

2 - Identifying Available Hooks And Filters

3 - A Look At Load Order

4 - Understanding Callback Functions

5 - Using Apply_ Filters 

6 - WP_Hook vs $wp_filter



                     Section 5 - Working With Non Wordpress Hooks
1 - Adding Custom Hooks

2 - Inside Themes And Plugins With Custom Hooks 

3 - Tips For Using Third Party Hooks 



                     Section 6 - Building A Demo Plugin
1 - A Look At What You Are Building

2 - Setting Up The Folder And File Structure

3 - Registering A Sidebar 

4 - Displaying A Sidebar On Single Posts 

5 - Applying Filters For Loading Stylesheets

6 - Putting It All Together



                     Section 7 - Conclusion
1 - Stay Updated With Wordpress Development            

2 - Next Steps
