                    HTML5 Web Component Fundamentals
                    Course Notes
                    
                    
                    Section 1 - Five Problems One Solution
1 - Intro
Intro to the course and the instructor
Web Developers have problems, the section will cover those problems

2 - Problem 1 Undescriptive Markup
Most markup is not descriptive, it is unfortunately highly generic
  - Div-soup is a problem, multi-layer divs
  - Generic divs convey no meaning

3 - Problem 2 Style Conflicts
Styling conflict are hard to avoid
  - Avoiding conflicts may necessitate the use of highly specified CSS selectors
  - Sometimes it is necessary to use the !important directive to force using of styles
  - There is no guarantee of conflic avoidance and stylesheet bloat happens

4 - Problem 3 No Native Templates

5 - Problem 4 No Bundling

6 - Problem 5 No Standard

7 - The Solution Web Components

8 - Browser Support

9 - Why Learn Web Components First

10 - Selecting A Level Of Abstracting

11 - The Dawn Of The Democratic Web

12 - Summary Why Web Components



                    Section 2 - Templates
1 - Intro
A brief introduction to what is ahead in the section

2 - Common Approaches

3 - Template Characteristics

4 - Defining And Cloning

5 - Injecting Dynamic Data

6 - Nested Templates

7 - Summary
A brief run through of what the section covered



                    Section 3 - Custom Elements
1 - Intro
A brief introduction to what is ahead in the section

2 - Core Functionality

3 - Registering Custom Elements

4 - Instantiating Custom Components 

5 - Instantiating Extended Custom Components

6 - Lifecycle Callback Methods

7 - Naming Approaches

8 - Summary
A brief run through of what the section covered



                    Section 4 - ShadowDOM Fundamentals
1 - Intro
A brief introduction to what is ahead in the section

2 - Light DOM vs ShadowDOM
DOM - Document Object Model
LightDOM - The DOM that you already know
ShadowDOM - The DOM that hides away complexity
LogicalDOM - This is an umberella combining the two DOM types

3 - You Already Use ShadowDOM
The ShadowDOM is not a new concept, it has been around for quite a while
Example Syntax
  // The elements already use the ShadowDOM to hide complexity and markup away
  <input type="range">
  <video controls width="250"></video>
  <input type="date" />

  // Some native HTML elements that use the ShadowDOM
  // Using the gear icon in chrome dev tools will allow you to see the ShadowDom
  // It will have #shadow-root, there maybe be trees of nested ShadowDOM
  <!DOCTYPE>
  <html>
    <head>
    
    </head>
    <body>
      <video controls ></video>
      <input type="date" />
    </body>
  </html>

4 - ShadowDOM Alternatives
The ShadowDOM encapsulates DOM Subtrees and styles
Iframes can be used to get ShadowDOM like behaviour without having support for the ShadowDOM

5 - Demo: Creating ShadowDOM

6 - Shadow Host And Shadow Boundary

7 - Demo: ShadowDOM Terminology 

8 - Demo: Shadow RootDOM Methods 

9 - Javascript Is Not Encapsulated

10 - Demo: Javascript Is Not Encapsulated

11 - Summary
A  brief summary of the material that the chapter has covered




                    Section 5 - ShadowDOM Insertion Points & Events
1 - Intro
A brief introduction to what is ahead in the section

2 - Content Insertion Points

3 - Insertion Points vs Distributed Nodes

4 - Content Selectors

5 - Shadow Insertion Points

6 - Listing Distributed Nodes And Destination Insertion Points

7 - Event Retargeting

8 - Events That Stop

9 - Summary
A  brief summary of the material that the chapter has covered



                    Section 6 - ShadowDOM Styling
1 - Intro
A brief introduction to what is ahead in the section

2 - Host Pseudo Selector

3 - Host Theming

4 - 

5 - 

6 -

7 - 

8 - 

9 - Deep Combinator

10 -

11 - Dynamic Styling

12 - Summary
A  brief summary of the material that the chapter has covered




                    Section 7 - Imports
1 - The Bundling Problem

2 - 

3 -

4 -

5 - 

6 -

7 -

8 -

9 -

10 -

11 -

12 -

13 -

14 - Summary
A  brief summary of the material that the chapter has covered



                    Section 8 - Native Alternatives
1 - Want Cross Browser Components Today 

2 - Browser Requirements

3 - Feature Matrix For Non-Standard Framework

4 - Problem Solved By Non-Standard Framework



                    Section 9 - Resources
1 - Resources
