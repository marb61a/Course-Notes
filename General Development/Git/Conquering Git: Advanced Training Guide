                    Conquering Git: Advanced Training Guide
                    Course Notes


                    Section 1 - GIT STASHING
1 - The Course Overview
A brief intro to the course instructor
There is a brief run through of the course curriculum
The goals of the course are 
  - The student will fully understand how Git works under the hood
  - Stash, branch etc will not be unclear
  - Students will be able to add and maintain sub-repositories
  - Students will be able to create scripts for rebasing and git hooks
  - There will experience with external tools and services
There are some pre-requisites
  - Basic knowledge of Git
  - Knowledge of how to use the command line

2 - Stash and Pop

3 - Tracked/Indexed Files

4 - Multiple Stashes

5 - Stashing into a Branch



                    Section 2 - BRANCHING UNDER THE HOOD
1 - Branching Basic

2 - HEAD and Other Names

3 - Branches on filesystem

4 - Git Branch Advanced Tricks - rename, track, contains



                    Section 3 - GIT MERGING UNDER THE HOOD
1 - Fast-Forward or 3-Way Merge

2 - Merge with Different Strategies

3 - Sign a Merge with GPG



                    Section 4 - VISUALLY MANAGING YOUR REPOSITORIES
1 - Using gitk to Show the Repository History

2 - Using Git Gui to Create a Commit

3 - Using Filemerge to Solve Conflicts



                    Section 5 - DIFF AND CONFLICTS
1 - Understand diff Format
Making changes in the develop branch to the sample application to demonstrate the diff format

2 - Understand the diff3 Format

3 - diff Working Copy Versus Stage Area

4 - diff - One Single File



                    Section 6 - REBASE
1 - Differences between rebase and merge

2 - Rebase with Conflicts

3 - Rebase Interactive - reword and edit commits

4 - Rebase Interactive â€“ squash and reorder commits



                    Section 7 - TAGGING
1 - Create Tags for Important Milestones

2 - Lightweight Versus Annotated Tags

3 - Git Tag Options

4 - Git Remote and Git Tag - Do's and Don'ts



                    Section 8 - GIT SUB-PROJECTS
1 - Create and Update a Submodule

2 - Use a Repository with Submodule

3 - Git Subtree



                    Section 9 - GIT HOOK
1 - Introduction to Git Hook
When you initialise a git repo in a project it creates a .git folder
  - Inside this folder is a hooks folder which contains several .sample files

2 - Improve Commit Messages with prepare-commit-msg

3 - Format Your Code Before Push with pre-push



                    Section 10 - GIT BISECT
1 - Introduction to git bisect Command

2 - Use git bisect to Find a Bug

3 - Automatize git bisect



                    Section 11 - GIT FLOW
There are notes on how to use the GitFlow branching strategy available at
  - https://github.com/marb61a/Course-Notes/blob/master/General Development/Git/Using GitFlow

1 - Git Flow - A Successful Git Branching Model
2 - Git Flow with Sourcetree
3 - Using Sourcetree



GIT ADMINISTRATION
Repository Maintenance with Git Garbage Collection
Git Data Recovery
Git on Server



GIT BEST PRACTICES
Improve Git with Aliases
Tools and Services
Deploy a Web App with Git

