                    Progressive Web Apps And Offline
                    Course Notes Part 3


4 - Home Screen Icons
Application Manifest
  - This is part of the PWA standard
Example Syntax
  // The manifest.json file
  // This is the link that would be in the index.html file
  <link rel="manifest" href="manifest.json">
  
  {
    "name": "MyApp",                        //App name
    "icons": [                              //Various icon sizes
      // A 192px square is recommended for "add to home screen"
      // This is used for Android high resolution
      // There is no image resizing so images must be correct
      {
        "src": "image_src_path",
        "sizes": 192x192,
        "type": "image/png"
      },
      // A 512px square is recommended for the startup screen
      {
         "src": "image_src_path",
        "sizes": 512x512,
        "type": "image/png"
      }
    ]
    "theme_color": "#2d89ef",               //Theme bar styling
    "background_color": "#2d89ef",          //Used for startup screen
    "display": "standalone"                 //Launch as an app
  }

5 - schema.org
PWA's should be linkable
  - They should also be discoverable
  - This means that they show up in search results
Example Syntax
  // Schema/org Metadata
  // There are notes on structured data available at
  // - https://github.com/marb61a/Course-Notes/blob/master/HTML5/HTML Structured Data
  // The script tags allow for inert data to be added to html, there is another way which
  // uses attributes. These give machines more information on what the data actually is and what it is doing
  // This description will improve the SEO of the app
  <script type="application/ld+json">
    "@context": "http://schema.org",
    "@type": "Product",
    "image": "image_path",
    "name": "product_or_service_name",
    "offers": {
      "@type": "Offer",
      "price": "price_of_offer"
    }
  </script>

6 - Challenge 1: Metadata
The exercise for the section involves making enhancements to the app
  - Add to home screen
  - FEGrocer should be used as the app name
  - Home screen icon
  - Remover Browser UI 
  - Theme bar is the same as the app bar
  - Icons for 192, 96, 48
  // This is ensure an app is entered through a certain url
  // This is not the same experience as a true native app
  - start_url is "."
  - Viewport suitable for mobile devices and applike
Tips for solving the exercise
  - index.html is generated from /client/index.ejs
  - Webpack can be used to generate a file via file-loader
    - import 'file-loader?name=web-app-manifest.json!./web-app-maifest.json';
      - This file will exist when the app is built as a result of this lin
    - This goes at the top of the ./client/index.js or./client/app.jsx file
  - Use the simulator to verify changes are working
  - Add schema.org product metadata for grocery items
    - ./client/components/grocery-item/index.jsx
  - There maybe a need to change a setting is some IDE's due to build errors caused by tab size
    - Tab size should be 2 and is 4 by default in VS Code
    - This may need to be set although some plugins cause issues

7 - Challenge 1: Solution
Solving the challenges from the end of the previous section
  - Create a web-app-manifest.json file in the client folder
  - Copy the sample code for the manifest file
    - This can then be adjusted for the app
  - index.ejs will represent the index.html file
    - The ejs stands for embedded javascript
  - The course will use up to 4 types of manifest file
    - This means that they should be named properly
  - Rebuild the app and then run
    - Open up the devtools panel on Chrome
    - Under the application tab you should see a manifest 
  - Debugging can be challenging in the PWA world as warnings are not given
    - In the course the presence of comments was affecting the manifest file
  - After the app is runing  there is a short name property added to the manifest file
  - Then the icons can be added beginning with the 192x192 size
    - Each size will have to be added individually
    - When the page is refereshed these icons can be seen in the manifest
  - Next the start_url property is added to the manifest file
    - In this case it is set to "."
  - After these few changes the app will be ran to see what the Lighthouse score will be
    - There are a few steps which must be taken before running Lighthouse due to HTTPS
      - Make a build of the app
      - Then serve it over HTTP2
        - ./run serve --http2 is used in the course but is deprecated
  - The Lighthouse score will probably differ from machine to machine
    - The report it generates is very in-depth so is very good to have
  - Add a meta tag with the theme-color will get rid of the warning about it being missing
    - The theme-color can be the one specified in the manifest file
    - <meta name="theme-color" content="#2d89ef">
  - A viewport tag needs to be added
    - This can be added along with the Apple specific tags to index.ejs
      - <meta name="viewport" content="width=device-width, initial-scale=1">
      - <meta name="apple-mobile-web-app-capable" content="yes">
      - <meta name="apple-mobile-web-app-status-bar-style" content="black">
      - <meta name="apple-mobile-web-app-title" content="Home Screen">
  - There may be a web-socket problem on the ios-simulator
    - This is down to an implementation problem on browser implementation
