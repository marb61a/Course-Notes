                    Make Webpack Easy with Poi
                    Course Notes Part 3


8 - Build and Analyze Your JavaScript Bundles with Poi
To build a Poi project use the following command
  - poi build
  - This creates a dist folder
To see the exact same content served statically
  - http-server dist
To analyze the bundles generated a package needs to be installed
  - npm install webpack-bundle-analyzer - D
  - It will need to be added to the poi.config file
Example Syntax
  // poi.config.js file
  const BundleAnalyzer = require("webpack-bundle-analyzer").BundleAnalyzerPlugin;
  
  // This is moved to a function so that bundle analysis is not ran every time
  // To run this use -> poi build --analyze
  module.exports = options => ({
    webpack(config){
      if(options.analyze){
        config.plugins.push(
          new BundleAnalyzer
        )
      },
      config.module.rules.push({
        test: /\.md$/,
        loaders: [
          // Order is important here
          "babel-loader",
          "react-markdown-loader"
        ]
      })
      
      return config
    }
  })

9 - Use Poi Presets from npm to Skip Configuration
Poi has a list of presets which can be used
  - https://github.com/egoist/poi/tree/master/packages
Example Syntax
  - npm i -D poi-preset-svelte
  - To run the svelte demo
    - poi --presets svelte
  // Example files for a svelte demo
  // App.html
  <div>
    {{message}}
  </div>
  
  // index.js file
  import App from './App.html';
  
  new App({
    target: document.querySelector("#app"),
    data: {
      message: "Hello from Poi"
    }
  })

10 - Setup PostCSS and Tailwind with Poi                   
Installing the Tailwind PostCSS library
  - npm i tailwindcss
To install npm without having to answer all questions
  - npm init -y
To create the configuration file
  - npm tailwind init
  - This creates a tailwind.js file
Example Syntax
  // PostCSS config file -> postcss.config
  const tailwindcss = require("tailwindcss");
  
  module.exports = {
    plugins: [
      tailwindcss("./tailwind.js")
    ]
  }
  
  // index.js file
  import "./styles.css";
  
  document.querySelector("#app").innerHTML`
    <div class="hello"> 
      Hello Tailwind
    </div>
  
  // styles.css
  @tailwind preflight;
  .hello {
    @apply text-white bg-grey;
  }
  @tailwind utilities;
  `
