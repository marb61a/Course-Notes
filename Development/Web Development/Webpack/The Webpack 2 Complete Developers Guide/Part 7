                    Webpack 2: The Complete Developer's Guide
                    Course Notes Part 7


7 - Effect of Code Splitting
Webpack will not only include common modules the one time which is why both of the generated files
are so large
  - There is a plugin which will help resolve the issue of modules being included more than once
    - Commons- chunk plugin
Example Syntax
  var webpack = require('webpack');
  var path = require('path');
  
  const VENDOR_LIBS = [
    'react', 'loadsh', 'redux', 'react-redux', 'react-dom', 'faker', 'react-input-range', 'redux-form', 'redux-thunk'
  ]
  
  module.exports = {
    entry: {
      bundle: './src/index.js',
      vendor: VENDOR_LIBS
    },
    output: {
      path: path.join(__dirname, 'dist'),
      filename: '[name].js'
    },
    module: {
      rules: [
        {
          use: 'babel-loader',
          test: /\.js$/,
          exclude: /node_modules/
        },
        {
          use: ['style-loader', 'css-loader],
          test: /\.css$/
        },
      ]
    },
    plugins: [
      new webpack.optimize.CommonsChunkPlugin({
      // This will ensure common files are only added to the vendor entrypoint
        name: 'vendor'
      })
    ]
  }

8 - Troubleshooting Vendor Bundles
The refactoring has caused an error which has lead the html page not to be displayed
  - Using devtools is is shown as jsonp not being defined in the bundle.js file
  - The vendor.js script was not added in
    - Every script file will need a script tag
  - To avoid having to manually manage scripts and adding the tags to html there is a plugin available
    - html-webpack-plugin
    - npm --save-dev html-webpack-plugin
Example Syntax
  // Webpack config file
  var webpack = require('webpack');
  var path = require('path');
  var HtmlWebpackPlugin = require('html-webpack-plugin');
  
  const VENDOR_LIBS = [
    'react', 'loadsh', 'redux', 'react-redux', 'react-dom', 'faker', 'react-input-range', 'redux-form', 'redux-thunk'
  ]
  
  module.exports = {
    entry: {
      bundle: './src/index.js',
      vendor: VENDOR_LIBS
    },
    output: {
      path: path.join(__dirname, 'dist'),
      filename: '[name].js'
    },
    module: {
      rules: [
        {
          use: 'babel-loader',
          test: /\.js$/,
          exclude: /node_modules/
        },
        {
          use: ['style-loader', 'css-loader],
          test: /\.css$/
        },
      ]
    },
    plugins: [
      new webpack.optimize.CommonsChunkPlugin({
      // This will ensure common files are only added to the vendor entrypoint
        name: 'vendor'
      }),
      new HtmlWebpackPlugin({
        // Add a new index.html file to the src directory and add everything from the top level index file
        // Then delete the top level file to avoid dangling references
        // You can the delete the script tag
        template: 'src/index.html',
        
      })
    ]
  }

