                    Scrum Developer Series
                    Course Notes Part 2


Next is the Scrum team formation
  - Scrum Teams are multi-functional
  - Some key skills are 
    - Independent Thinking
    - Self Motivation
    - Customer Focused
    - Responsible
    - Collaborative
  - Typically Scrum teams are 6 - 10 people
When you are the Scrum team there will be certain outputs
  - Identifies both the team members and backups
  - Collaboration plan is generated
  - Team Building plan
    - One model used is Bruce Truckmans 
      - http://www.businessballs.com/tuckmanformingstormingnormingperforming.htm
      - Forming
      - Storming
      - Norming
      - Performing
    - Conflict Management especially seeking win-wins

An Epic is a large collection of high-level unrefined user stories which are
  - Desired functionality
  – Easy to understand
  – Estimable
  – Used to craft more detailed user stories
You can gather requirements for Epics in 
  - User Group Meetings
  – User Story Workshops
  – Focus Group Meetings
  – User/Customer Interviews
  – Questionnaires
Used to identify & write customer requirements
They can help
  – Formulate acceptance criteria
  – Product Owner prioritizes requirements
  – Team identifies and assess risk
Epics tell a story for example, What would the customers and users like to happen?
Personae describe an example bringing the connection to life eg How would the solution drive value for a specific type of stakeholder?
Developing Epics will create certain outputs
  - Epics
  - Personae
  - Approved Changes
  - Identified Risks

The Prioritized Product Backlog is a prioritized list of Epics, User Stories, Changes, and maybe Risks to be managed during the project
The Product Owner normally develops and maintains  Prioritized Product Backlog
  - On occasion the Scrum Master may facilitate User Group Workshops or Focus groups to help prioritize options
There are several techniques used is crating the Prioritized Product Backlog
  - MoSCoW analysis
  – Paired Comparisons
  – 100 Point Method
  – Kano Analysis
MoSCoW analysis -- MoSCoW is an acronym which stands for 
  - Must have -- Defines a requirement that has to be satisfied for the final solution to be acceptable
  - Should have -- A high priority requirement that should be included if possible within the time delivery box
  - Could Have -- This is a desirable or nice-to-have requirement but the solution will still be acceptable without it
  - Won't Have -- These are requirements that the stakeholders have agreed will not be implemented in this version.
Paired Comparisons
  - List all of the User Stories
  - Compare them, two at a time
  - Keep going until all the User Stories are prioritized
100 Point Method
  - Each user gets 100 points to vote for User Stories
  - Points can be allocated among the stories any way a user wishes
  - Aggregated point total drives the prioritization
Kano Analysis Classifies features as
  – Exciters/Delighters
  – Satisfiers
  – Dissatisfiers
  – Indifferent 
Other considerations are also needed and inputs prioritized
  - User Group Meeting feedback
  - Plan for Value
    – Value Stream mapping
  - Risk Assessment
  - Project Value Estimation
  - User Story Estimation methods
    – Planning Poker
    – Fist of Five
  - Scrum Guidance Body (SGB) Guidance
The outputs generated from the planning of the Prioritized Product Backlog include
  - Prioritized Product Backlog
    - Value Centered
    - Manages Risk and Uncertainty in Priority
    – Identifies Dependencies
    – Estimates
  - Done Criteria
    - A set of Rules applicable to all User Stories
    – Demonstrated to and Approved by the Product Owner
    – Augmented by Specific User Story Acceptance Criteria

Release Planning
The ideals ways to conduct Release Planning are
  - Deliver high-value functionality to the customer sooner rather than later.
  - Release Planning meetings ensure shared expectations for delivery timelines between a Scrum team, 
    - Product Owner & other stakeholders 
  - Release Strategies
    – Continuous Deployment – feature centered
    – Phased Deployment – time-centered
  - Needs to reflect organizational release planning and priorities
Some of the outputs of release planning are
  - Release Planning schedule usually evolves as the project progresses
  - The length of Sprint
    – Most Scrum practices max out at 4 weeks
    - Some last 6 weeks
    - Many prefer shorter Sprints of 2 or 3 weeks
    – Sprint Length should be consistent across a project.
  - Define Target Customers for a release
  - Product Owner may update Prioritized Project Backlog

                    
                    Course 04 - Planning & Estimating a Project 
Creating user stories 
User group meetings & workshops write Epics and create user stories.
  - User stories describe
    – Requirements
    – Increments of desired functionality
    – Story acceptance criteria
  - A user story tells
    – Who uses the system
    – What work the system performs
    – Why this is valuable to the customer
  - The Prioritized Product Backlog is a dynamic list of User Stories in priority order
    – Developed and maintained by the Product Owner
User Stories follow a specific format such as
  - As a <insert role or persona here>, I should be able to <do this thing I want to do> so that <I get a benefit I want>
User Stories will have to meet certain criteria to be accepted
  - Because User Stories are subjective, the Acceptance Criteria enable the team to establish objective measures
    of whether a User Story is Done or Not Done.
  - The Product Owner defines & communicates the Acceptance Criteria to the Scrum team.
  - THe Scrum Master ensures that the Product Owner does not change the Acceptance Criteria during a Sprint.
  - Any new Acceptance Criteria that are identified during a Sprint can be written into 
    - new User Stories for subsequent Sprints.
The outputs for writing User Stories are
  - The User Stories
  - User Story Acceptance Criteria
  - Updates to the Prioritized Product Backlog
  - Updated or Refined Personae

User Group Meetings are used to 
  - Engage Relevant Stakeholders
    - This is primarily users or customers for the product
  - Provide the Scrum Team with first hand user expectations
    - This often provides valuable insights for epics
  - Prevent expensive rework resulting from ambiguity
  - Promote buy-in for project

Planning Poker
  - Use a deck of cards numbered in some sequence
    - Each team member will have their own deck
  - Product Owner presents a User Story to the team.
  - The Scrum team assess and asks questions about the story to tryto understand it
  - Each team member picks a card to reflect their estimate for that story
    – Number chosen represents team member estimation of difficulty or effort (depending on team member)
  - If the majority select the same card, continue with next story
    – Agreed card is the estimated effort for “this” story.
  - No consensus: outliers are given opportunity to discuss their selection followed by another round of card selection
    – Discussion and card selection continues until there is agreement 

Fist of Five
  - This is a relatively simple mechanism used to drive discussions and if possible achieve consensus
  - After the discussion has completed  the Scrum Master asks the team to vote on a 1-5 scale.
  - Each team member is asked to explain their vote, to allow for addressing team member concerns. This usually looks like
    - I strongly disagree with the group’s conclusions and have major concerns
    - I disagree with the group’s conclusions and would like to discuss some minor issues
    - I am not sure and would like to go with the group’s consensus conclusion
    - I agree with the group’s conclusion and would like to discuss some minor issues
    - I strongly agree with the group’s conclusions

Points for Cost Estimations
  - This uses Story points, not monetary units
  - Estimation technique in relative terms.
  - In trying to estimate costs to complete a User Story, it is often helpful to have a benchmark.
  - A Baseline User Story could equal 10 points for example
  - How many story points of effort will User Story cost?
    – Relative to the baseline story
  - Decisions are not changed during a Sprint
  
There are other methodologies available for estimation including
  - Wideband Delphi
    - More information on Wideband Delphi available here
      - http://leansoftwareengineering.com/wideband-delphi/
  - Relative Sizing/Story Points
    - https://help.rallydev.com/sizing-and-estimates-overview
  - Affinity Estimation
    - Tutorial on Affinity Estimation available at
      - http://www.gettingagile.com/2008/07/04/affinity-estimating-a-how-to/
  - Estimate Ranges
    - http://opensourceconnections.com/blog/2010/08/10/software-estimation-using-range-estimates-in-scrum/

The outputs from the  Approve, Estimate & Commit User Stories
  - User Stories Committed by the Team for the Sprint
  - Basis for Sprint Backlog
  - Product Owner approves the initial User Stories for a Sprint
  - Final Decision lies with the Scrum team (with consultation from the Product Owner as needed)

The Task Planning Meeting
  - It runs at the beginning of every Sprint
    - It is some times referrred to as The Sprint Planning Meeting
  - It contains 2 main parts
    - What to do
      - Product Owner and Development Team
      - Select items from the product backlog for inclusion in the sprint
    - How to do it
      - Development Team
      - Identify & estimate tasks to turn selected User Stories into increment of functionality
  - The meeting is time-boxed
    - 2 hours for each week in the sprint
    - Time is split evenly between the 2 main parts
  - The Product Owner
    - Confirms the accuracy of the product backlog
The Task Planning Meeting has 2 parts
  - User Stories
    - The product owner suggests User Stories for the sprint
    - The Scrum Team determines how many stories it can deliver in the sprint
    - A consensus is reached on the stories to be included in the sprint
  - Tasks
    - The Scrum team breaks down the User Stories into Tasks to create a Product Increment
    - The Scrum team commits to deliverables
Using Index Cards
  - User Stories are written on small Index Cards
  - Only Essential Details are documented
  - Using Index Cards will
    – Facilitate Collaboration and discussion
    – Increase visibility and transparency
    – Reduce risk and assist with problem determination
Decomposition
  - Breaks down tasks into lower-level, more detailed tasks.
  - All User Stories should be sufficiently decomposed to allow the Scrum team to create the desired deliverables from
    the tasks mentioned in the task list.
Determine Dependencies
  - Once the tasks have been idenfified then its time to consider people and technical dependencies
    - Mandatory dependencies
    – Discretionary dependencies
    – External dependencies
    – Internal dependencies
The oututs generated for the Create Tasks are
  - Task List
  - Updates to the Approved, Estimated, and Committed User Stories
  - Dependencies

Estimating the Tasks
Task Estimation Meetings
  - These are often combined with Task/Sprint Planning Meetings
  - They are used to estimate
    - People
    - Resources Needed
    - Use Task List to drive shared perspective
  - They use the techniques discussed above eg Poker Planning etc
Establish the Estimation Criteria
  - Keep sizes relative
  - Minimize the need for re-estimating
  - Samples include
    – Story Points
    – Ideal time i.e. how long it would take without interruptions
The outputs generated for Estimating Tasks are
  - Effort Estimated Task List
    – Provides key input for producing the Sprint Backlog and Sprint Burndown Chart
    – Allows the team to see if they can take on more commitment or reduce commitment for a Sprint
  - Updated Task List

Creating the Sprint Backlog
  - The Spring Backlog take input from the following sources
    - Committed User Stories
    - Changes
    - Risks
    - Effort Estimated Task list
  - The Sprint Backlog is simply the list of User Stories to be delivered in that sprint
  - A Scrumboard helps organise the stories and the tasks
Velocity
  - Measure of the number of User Stories/Sprint done
  - Useful in longer-term planning of progress across many Sprints
  - Can provide input and measures of team affinity and improved efficiency and effectiveness of practices
  - Improved velocity comes from more effective practices and better teamwork
Sprint has tracking metrics that it uses
  - Business value delivered which is the value of the User Stories from a business perspective
  - Number of User Stories (nominal or weighted)
  - Velocity (up/down)
The outpust that omer from creating the Spring Backlog ar
  - Sprint Backlog
  - Sprint Burndown Chart


                    
                    Course 05 - Implementing a Project 
 Create the deliverables
  - Obvious main activity within the sprint
    - Do the work
    – Deliver the goods
  - Along the way
    – Update the Scrumboard
    – Identify Impediments
  - Impediment Log
    – Logs any hindrance to the progress of the team
      - Can be internal or external
    – Builds an action item list for the Scrum Master
Build Deliverables 
  - Scrum teams produce working and potentially shippable solutions in each sprint
  - Including all necessary cross functional work
    - Requirements
    - Design
    - Development
    - Testing
    - Demonstration at the Sprint Review Meeting
  - There are many organisations the use the Test Driven Development (TDD) methodology
    - Write a test
    - Fail the test
    - Write enough code to pass the test
    - Refactor the code for a better solution
  - This can dramatically reduce Technical Debt and speeds up the delivery of value to a business
    - Technical Debt is a concept in programming that reflects the extra development work that arises when code that is easy
      to implement in the short run is used instead of applying the best overall solution
Refactoring Code
  - This is specific to Software projects
  - The goal is to improve both the quality and maintainability of the code
    - It can be simpler
    - More concise
    - More flexible
  - Refactoring will change the flow and design of the code without changing what its behaviour seems like
    - It eliminates repetitive and redundant code
    - Breaks methods and functions into smaller routines
    – Creates clearly define variables and method names
    – Simplifies code design
    – Makes code easier to understand and modify
  - It establishes the use of Design Patterns
    - More information on the Gang Of Four design patterns available at
      - https://sourcemaking.com/design_patterns
The outputs for Creating deliverables are
  - Sprint Deliverables
  - Updated Scrumboard
  - Updated Impediment Log
  - Updated Risk Identification and Mitigation
  - Updated Dependencies
  - Unapproved change requests

Conducting the daily Standup\Scrum
  - This is a daily meeting
  - It is time-boxed to about 15 minutes in duration
  - All team member are expected to attend
  - It proceeds if anybody has to miss
    - Report progress
    - Plan the days activities
  - Although discussions are encouraged ther occur mostly as sidebars after the meeting concludes
  - Team members will usually stand in a circle
  - The meeting is facilitated by the Scrum Master
The 3 daily questions to be answered
  - Each team member will answer 3 questions 
    - What did I complete yesterday
    - What will I complete today
    - What impediments or obstacles am I currently facing
  - Answers to the first two questions should be quantitative to avoid long qualitative answers
The War Room
  - Scrum teams usually work better when colocated
  - This location is generaly referred to as the War Room
  - This enables freedom of movement, work and collaboration
  - There is extensive use of charts, cards etc
  - It can becone a bit noisy
Manging Distributed Teams
  - Sometimes there are practical issues which will force a team to be distributed
  - There has to be appropriate care given to Open Communications
    - Video Conferencing Tools
    - Easy to use collaboration tools
    - Electronic Scrumboards and Burndown charts
The outputs that are generated from the Daily Standup are
  - There are updates to
    - Sprint Burndown Chart
    – Impediment Log
    – Scrumboard
    – Unapproved Change Requests
    – Identified and Mitigated Risks
    – Dependencies
  - Team Motivation and morale will need to be monitored
    - Each member is important
    – Self-organization
    – Enhanced performance
    – Improved quality of deliverables

Grooming The Prioritized Product Backlog
Product Backlog Review Meetings
  - This is driven by the product owner
  - Engage with
    - Relevant stakeholders
    – Scrum Master
    – The Scrum team
  - Check to ensure understanding of
    - User Stories
    - Acceptance Critera
  - Ask questions
    - Do we need to update to reflect new customer priorities?
    – Change requests?
    – Risks and risk mitigation activities?
  - Set the table for the next Sprint.
Facilitate Communications
  - Scrum facilitates ongoing, informal communications
  - Requirements change
    - Customer needs
    – Priorities
  - The Scrum team will use the techniques it has learned such as
    - MoSCoW
    – Paired Comparisons
    – Kano Model
    – Planning Poker
    – Fist of Five
  - The Product Owner ensures that the Prioritized Product Backlog is regularly groomed to reflect the customers needs
The outputs of  Grooming the Prioritized Product Backlog are
  - Updated Product Backlog
  - Update Release Plnning Schedule
  
                    
                    Course 06 - Sprint Review and Retrospect 
The Scrum Cycle Review and Retrospect
  - Sprint Review
  - Accept Deliverables
  - Retrospect Scrum

Convening a Scrum of Scrums
  - Bigger projects, Programs and Portfolios of products will require scalability and integration
  - Scrum itself scales through using regular integration points
  - Roles can then be aligned across the different levels
  - Chief Product Owner -> Program Product Owner -> PO
  - Chief Scrum Master -> Program Scrum Master -> SM
  - Alignment is maintained using a Scrum of Scrums

A Scrum of Scrums
  - Relatively short but not time boxed in order to allow for information to be shared
  - There will be one representative from each Scrum team which is usually the Scrum Master of that team
  - It is held at predetermined times or can be held when required
  - This helps to monitor
    - Project Risks
    - Any issues
    - Dependencies
  - There are usually 4 questions per team which is similar to the 3 questions for a team member in individual Scrums
    - What has my team worked on since the last meeting?
    - What will my team do until the next meeting?
    - What were other teams counting on our team to finish that remains undone?
    - What does our team plan to do that might affect other teams?
  - Teams may need to use video conferencing for non colocated teams
The outputs generated from the Scrum of Scrums
  - There will be better team cordination
  - Issues will be resolved
  - There will be updates to 
    - The impediment log
    - Dependencies

Sprint Review Meeting
  - Each Sprint produces whole capabilities: demonstrable user stories end-to-end
  - The sprint review meeting will offer an opportunity to
    - Demonstrate the completed User Stories to the Product Owner and other Stakeholders
    - It allows the Product Owner to confirm stories have been completed
    - Consider stakeholder requested changes for subsequent Sprints
    - Identify issues that occurred and how the team resolved them
    - Update the Product Backlog when the Product Owner reviews
  - The focus of this meeting is on the product being delivered
Tracking Overall Progress
  - Gantt charts are of limited use when tracking the overall value generated by a project
  - In Scrum the follwoing are rcommended instead
    - Earned Value Analysis
      - More information available at -- https://www.wbdg.org/resources/earned-value-analysis
    - Cumulative Flow Diagrams
      - More info -- http://kanbantool.com/kanban-library/analytics-and-metrics/explaining-cumulative-flow-diagrams#.WQrugWhtnIU
The outputs generated by the demonstrate and validate sprint are
  - Accepted Deliverables
  - Rejected Deliverables which are returned to the product backlog
  - Updated diferrent sections
    - Risks
    - Release Plans
    - Dependencies
  - Earned Value results

Conducting the Retrospect Sprint Meeting
  - Retrospect meetings will help a team inprove its performance
  - Held in an open relaxed environment after the Sprint Review at the end of the Sprint
  - All Scrum members will attend
    - The Scrum Master will facilitate the meeting
    - Another team member will take notes/minutes
    - The Product owner may attedn but it is not a compulsory requirement
  - There are explorations of things that the team needs to keep doing
    - Keep doing – best practices
    - Begin doing – process improvement
    - Stop doing – process problems & bottlenecks
  - Results in Agreed Actionable Improvements
  - Focus is on the team’s processes & collaboration
Explorer-Shopper-Vacationer-Prisoner (ESVP)
  - This is a technique used by the Scrum Master to assess the engagement and participation in the Retrospect
    - Explorer
      - This person wants to participate in and learn everything from the Retrospect
    - Shopper
      - This person wants to listen to everything and choose what they take away from the retrospect
    - Vacationer
      - This person wants to relax and  wants to be a tourist in the Retrospect
    - Prisoner
      - This person wants to be elsewhere and is only attending because it is required
  - Votes are anonymous but the overall information will be shared with the group to set expectations
Speed Boat
  - This is a technique that is used in Scrum to identify team improvements
  - The team members will role play a team on a ship trying to reach its destination
  - The team is asked to identify
    - Engines which are things that will speed them up
    - Anchors which are thing s that will slow them down
    - All are identified and prioritised
    - Engines are acknowledged and mitigation options for anchors are identified
  - It is time boxed to a few minutes to maintain focus
The Metrics and Measurement Review
  - Team Velocity -- This is the number of story points in a Sprint
  - Done Success Rate -- Percentage of points done vs committed
  - Estimation Effectiveness -- Number and percentages of deviations between estimated and actual time spent on tasks and User Stories
  - Feedback ratings from Stakeholders
  - Team Morale ratings from self-assessments
  - Peer Feedback -- This is a full review which facilitates constructive criticism and insgiht into team performance
  - Progress to Release -- This demnstrates the business value acheived as a result of the teams performance
The outputs that are generated from the Retrospect Sprint include
  - Agreed actionable improvements
  - Assigned action dates and due items
  - Proposed Non-Functional Requirements for the Prioritized Product Backlog
  - Retrospect Sprint Log
  - Scrum Team Lessons Learned
  - Recommendations for the Scrum Guidance Body


                    Course 07 - Release 
Shipping Deliverables
  - When it comes down to it the purpose of every sprint is to produce potentially shippable solutions
  - Based on an organisations expaectaions and preferences, deliverables handed over to the customer depend on
    - Release Plan
    - Customer Requirements
  - Many Sprints do not result in an immediate release of new functionality, the Product Owner workd with customers to determine
    - The appropriate strategy for new releases
    - The timeline for new releases
Pilot Plan
  - One of the key inputs into Ship Deliverables is a pilot plan
  - Maps a Pilot deployment in detail
    - Scope and Objectives
    - Target User Base
    - Deployment Schedule
    - Transition Plans
    - User Preparation requirements
    - Evaluation Plan and Critical Success Factors
Organisational Deployment Methods
  - An actual deployment depends on organisational methods
  - Product Owner establishes a Minimum Functionality at which the customer releases a product or service.
  - Integration with formal Release and Deployment processes manages risk and maximizes value
    – QA
    – Validation
    – Compliance
    – User Acceptance Testing
    – Sign-offs
Communications Plan  
  - Projects will have a defined communications plan
  - During the testing phase the Product Owner & Sponsor will facilitate communications to ensure consistency with the pan
  - There is no specific format or owner for the communications plan in Scrum
  - The structure of the Scrum will server as a communications plan in how any information is shared to different parties
The outputs generated from Shipping Deliverables
  - Working Deliverables agreement
    - Customer sign off
    - Often triggers revenue recognition
  - Working Deliverables
  - Product Release
    - Release Content
    - Release Notes

Retrospect Project
Conduct the Retrospect Project Meeting
  - Similar to the Sprint Retrospect,  Project Retrospect Meetings help the team improve its performance
  - Better held in an open, relaxed environment at the end of the Sprint; can be virtual if required
  - This meeting is also not time-boxed
  - All Project team members will need to attend, along with the Chief Scrum Master, Chief Product Owner and Stakeholders
  - The meeting explores
    - Best Practices
    - Process Improvements
    - Process problems
  - Results in Agreed Actionable Improvements
  - Focus is on Lessons Learned for future projects
Some of the tools and techniques used are
  - Similar to the tools used in the Sprint Retrospect
    - ESVP, Speedboat, Metrics and Measures
  - Scrum Guidance Body ensures lessons learned are taken and integrated into the organization guidance
Outputs generated from Retrospect Project
  - Agreed Actionable Improvements
  - Assigned Action Items and Due Dates
  - Proposed Non-Functional Requirements for the Prioritized Product Backlog
  - Recommendations for the Scrum Guidance Body
    
