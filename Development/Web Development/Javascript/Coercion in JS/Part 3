                    Coercion In Javascript 
                    Course Notes Part 3


                    Section 3 - Implicit vs Explicit Coercion
1 - Explicit Coercion Strings & Numbers
There is not a direct way to call toPrimitive() or toNumber()
Operations in other languages such as casting are explicit coercions
Example Syntax
  // Explicit Coercion, this is sometimes called conversion in JS
  // It is used a lot but still has a bad reputation
  var foo = "123";
  // This indicates using base10
  // Some say parseInt is a coercion
  var baz = parseInt(foo, 10);
  baz;                            //123
  
  // This is similar to type casting in other languages
  // This is an explicit coercion
  baz Number(foo);
  baz;                            //123
  
  baz = +foo;                     //Explicit?
  baz;                            //123
  
  baz = 456;
  foo = baz.toString();
  foo;                            //"456"
  
  foo = String(baz);
  foo;                            //"456"
  
The terms explict and implicit are subjective to the developer involved
  - Be consistent in the approach do not mix and match
JavaScript uses behind the scenes boxing of primitives
  - It is not explicitly coercion but part of that family

2 - Explicit Coercion Booleans
Example Syntax
  var foo = "123";
  var baz = Boolean(foo);
  baz:                              // true
  
  // Most developers use this rather than the Boolean function which in according to instructor 
  // should not be the situation
  baz = !!foo;
  baz;                              // true
  
  // Explicitly implicit
  // This is idiomatic code from languages such as Java
  // Instructor recommends against using this
  baz = foo ? true : false;
  baz;                              // true
  
  // Advanced programmers don't use the parentheses as you can drop them on constructor calls 
  // This example takes advantage of operator precedence
  var now = +new Date();
  // now = Date.now(); -- ES5 only
  
  var foo = "foo";
  // ~N -> -(N + 1)
  if(~foo.indexOf("f")){
    alert("Found it");
  }

3 - Implicit Coercion Strings & Numbers 
This happens as a side effect of some operation
The instructor disagrees with the notion that implicit coercion is always evil
Example Syntax
  var foo = "123"
  // Minus only works on arithmetic so the string is converted to a number implicitly
  var baz = foo - 0;
  baz;                            // 123
  
  // When both sides are strings both are implicitly coerced to numbers as minus only works on math
  baz = foo - "0";
  baz;                            // 123
  
  // Dividing by 1 and multiplying by 1 also causes coercion and is sometimes used in other languages
  baz = foo/1;
  baz;                            // 123
  
  // There are 2 different ways of using the plus sign, if both sides are numbers then numerical addition 
  // takes place but if one is a string the the plus sign refers string concatenation
  baz = 456;
  foo = baz + ""
  foo;                            // "456"
  
  foo = baz - "";
  foo;                            // 456
There is no performance hit from using explicit coercion rather than implicit
