                    The Coding Interview Bootcamp: Algorithms + Data Structures
                    Course Notes Part 5


                    Section 11 - Printing Steps
1 - The Steps Question
This is similar to the next section
  - These are both used often in interviews
The directions in this challenge are to write a function
  - It should accept a postive number N
  - It should console.log a step shape with N levels using the # character
  - Also there should be the necessary spaces on the right side

2 - Steps Solution #1
The process for solving the challenge in the first method uses recursion
  - From 0 - N iterate through rows using a for loop
  - Create an empty string called stair
  - From 0 - N iterate through columns using a for loop
  - If the current column is equal to or less than the current row then add a # to stair
  - Else add a space to stair
  - Console.log stair

3 - Steps Solution #1 Continued
Highly recommended to write out a solution using pseudocode before coding
  - This is even more so in an interview setting
Example Syntax
  // The first solution to the Steps question
  function steps(){
  
  }
  
  module.exports = setting;

4 - Step Up Your Steps Game

5 - More on Steps



                    Section 12 - Two Sided Steps - Pyramids
1 - Pyramids Vs Steps

2 - Pyramid Solution #1

3 - Pyramid Solution #2



                    Section 13 - Find The Vowels
1 - Get Your Vowels
The challenge in this section is to
  - Write a function that returns the number of vowels in a string
    - Vowels in English are the characters a, e, i, o, u
  - For Example  Hi There -> 3, Why -> 0 

2 - Finding Vowels
Example Syntax
  // First Solution to finding the vowels in a string
  function vowels(str){
    let count = 0;
    const checker = ["a", "e", "i", "o", "u"];
    
    foreach(let char of str.toLowerCase()){
      if(checker.includes(char)){
        count++;
      }
    }
    
    return count;
  }
  
  module.exports = vowels;

3 - Another Way to Find Vowels



                    Section 14 - Enter the Matrix Spiral
1 - General Matrix Spirals

2 - Spiral Solution

3 - More on Spiral



                    Section 15 - Runtime Complexity
1 - What is Runtime Complexity?
There are ways of comparing solutions to problems that is independent of personal opinion
  - Runtime Complexity describes the performance of an app
  - For example if the inputs to an algorithm were doubled how much more processing power would be required

2 - Determining Complexity

3 - More on Runtime Complexity



                    
