                    The Coding Interview Bootcamp: Algorithms + Data Structures
                    Course Notes Part 4


                    Section 9 – Anagrams
1 - What Are Anagrams?
The challenge in this section is to see if 2 provided strings are anagrams of each other
  - A string in an anagram of another if it uses the same characters in the same quantity
  - Casing is not important as upper or lower case is considered the same character in this case
  - Special characters and spaces are disregarded
Example Syntax
  // Using regex to remove special characters and change to lower case
  const word = "HI THERE!!!!!!!";
  
  // This will return hithere
  word.replace(/[^\w]/g, "").toLowerCase();

There are many different ways to solve the same problem but generating character maps for each string is recommended

2 - Solving Anagrams
Example Syntax
  // The first solution to anagrams
  // Anagrams are a favourite of interviewers
  function anagrams (stringA, stringB){
    const aCharMap = buildCharMap(stringA);
    const bCharMap = buildCharMap(stringB);
    
    // Object.keys can be used to find the keys associated with an object and the length property will 
    // give the quantity of keys on each object
    if(Object.keys(aCharMap).length !== Object.keys(bCharMap).length){
      return false'
    }
    
    for(let char in charMap){
      if(aCharMap[char] !== bCharMap[char]){
        return false;
      }
    }
    
    return true;
  }
  
  // Rather than using 2 separate loops it is better practice to make helper functions
  // this logic only has to be written one time and can be used on both strings
  function buildCharMap(str){
    const charMap = {};
    
    // The clean up logic is more compact being added to the loop
    // The regex replaces anything not a character with nothing
    for(let char of str.replace(/[^\w]/g, '').toLowerCase()){
      charMap[char] = charMap[char] + 1 || 1;
    }
    
    // Make sure to put in a return statement
    return charMap;
  }
  
  module.exports = anagrams;

3 - Another Way to Tackle Anagrams



                    Section 10 – Sentence Capitalization
1 - Understanding Capitalization
The challenge to be solved in this section is as follows
  - Write a function that accepts a string
  - It should capitalise the first letter of each word and then return the capitalised string
    - For example hello how are you today -> Hello How Are You Today

2 - Capitalization Solution #1
Example Syntax
  // This is the more direct solution
  function capitalize(str){
    // Create an empty array words
    const words = [];
    
    // Split str into words using split at the space between words
    for(let word of str.split(' ')){
      // Take the first character of each word and uppercase it
      // Join it to the rest of the word using the slice() function beginning at the second element
      // Push the results into the words array
      words.push(word[0].toUpperCase() + word.slice(1));
    }
    
    // Rejoin the words using the space character
    return words.join(' ');
    
  }
  
  module.exports = capitalize

3 - How Else Can We Capitalize?

