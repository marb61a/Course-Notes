                    ES6 Javascript: The Complete Developer's Guide
                    Course Notes Part 16
                    
                    
6 - A Practical Use of ES6 Generators
Example Syntax
  const engineeringTeam = {
    size: 3,
    department: 'Engineering',
    lead: 'Jill',
    manager: 'Alex',
    engineer: 'Dave'
  }
  
  function* TeamIterator(team){
    yield team.lead;
    yield team.manager;
    yield team.engineer;
  }
  
  const names = [];
  for(let name of TeamIterator(engineeringTeam)){
    names.push(name);
  }
  
  names;

7 - Delegation of Generators
You will neeed to give it time to understand properly
Example Syntax
  const testingTeam = {
    lead: 'Amanda',
    tester: 'Bill'
  }

  const engineeringTeam = {
    testingTeam,
    size: 3,
    department: 'Engineering',
    lead: 'Jill',
    manager: 'Alex',
    engineer: 'Dave',
  }
  
  function* TeamIterator(team){
    yield team.lead;
    yield team.manager;
    yield team.engineer;
  }
  
  function* TestingTeamIterator(team){
    yield team.lead;
    yield team.tester;
  }
  
  const names = [];
  for(let name of TeamIterator(engineeringTeam)){
    names.push(name);
  }
  
  names;

8 - Delegation of Generators Continued
A continuation of the previous chapter
Example Syntax
  const testingTeam = {
    lead: 'Amanda',
    tester: 'Bill'
  }

  const engineeringTeam = {
    testingTeam,
    size: 3,
    department: 'Engineering',
    lead: 'Jill',
    manager: 'Alex',
    engineer: 'Dave',
  }
  
  function* TeamIterator(team){
    yield team.lead;
    yield team.manager;
    yield team.engineer;
    // Delegators are used when there are multiple generators that belong together
    const testingTeamGenerator = TestingTeamIterator(team.testingTeam);
    // Ensures that the testing team iterator is seen by the for-of loop
    yield* testingTeamGenerator;
  }
  
  function* TestingTeamIterator(team){
    yield team.lead;
    yield team.tester;
  }
  
  const names = [];
  for(let name of TeamIterator(engineeringTeam)){
    names.push(name);
  }
  
  names;
