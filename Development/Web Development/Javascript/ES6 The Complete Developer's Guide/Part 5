                    ES6 Javascript: The Complete Developer's Guide
                    Course Notes Part 5
                    
                    
Section: 6 - The 'every' and 'some' Helper
1 - A Little Every and a Lot of Some
Every and Some are very similar
This will help looking at a list and condensing down into a single value
Example Syntax
  var computers = [
    {name: "Apple", ram: 24},
    {name: "Compaq", ram: 4},
    {name: "Acer", ram: 32}
  ];
  
  var allComputersCanRunProgram = true;
  var onlySomeComputersCanRunProgram = false;
  
  // Using the every helper
  computers.every(function(computer){
    // As always, make sure that there is a return statement
    // This will return false as not every computer has greater than 16gb of ram
    return computer.ram > 16
  });

2 - More on Every and Some
The every function drastically reduces boilerplate code
Code is also much more readable
The difference between every and some is that
  - Between each every operation there is an adn where as between every there is an or
Example Syntax
  var computers = [
    {name: "Apple", ram: 24},
    {name: "Compaq", ram: 4},
    {name: "Acer", ram: 32}
  ];
  
  var allComputersCanRunProgram = true;
  var onlySomeComputersCanRunProgram = false;
  
  // Using the every helper
  computers.some(function(computer){
    // As always, make sure that there is a return statement
    // This will return true as there are computers that have greater than 16gb of ram
    return computer.ram > 16
  });

3 - Every and Some Syntax
Example Syntax
  var names = [
    "Alexandria",
    "Matthew",
    "Joe"
  ]
  
  names.every(function(name){
    return name.length > 4;
  });
  
  names.some(function(name){
    return name.length > 4;
  });

4 - Every and Some in Practice
You will use the helpers as often as you wish
Example Syntax
  function Field(value){
    this.value = value;
  }
  
  Field.prototype.validate(function(){
    return this.value.length > 0;
  });
  
  var username = new Field("2Cool");
  var password = new Field("my_field");
  var birthdate = new Field("10/10/2010");
  
  var fields = [username, password, birthdate];
  
  var formIsValid = fields.every(function(field){
    return field.validate();
  });
  
  if(formIsValid){
    // Submit form
  } else {
    // Error message
  }

5 - Exercise 1
Solution Syntax
  var users = [
    { id: 21, hasSubmitted: true },
    { id: 62, hasSubmitted: false },
    { id: 4, hasSubmitted: true }
  ];

  var hasSubmitted = users.every(function(user){
      return user.hasSubmitted === true;
  });

6 - Exercise 2
Solution Syntax
  var requests = [
    { url: '/photos', status: 'complete' },
    { url: '/albums', status: 'pending' },
    { url: '/users', status: 'failed' }
  ];

  var inProgress = requests.some(function(request){
      return request.status === 'pending';    
  });

