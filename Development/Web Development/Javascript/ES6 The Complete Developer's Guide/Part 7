                    ES6 Javascript: The Complete Developer's Guide
                    Course Notes Part 7


                    Section: 8 - Const/Let
1 - Variable Declarations with Const and Let
Improvements in ES6 belong in 2 main categories
  - Syntactic Sugar
    - These are basically improvements to help write less code
    - Although they may seem superfluous they are not changing JS for the sake of it
    - They will help code maintainability
  - Ideas that bring new functionality to the language such as
    - New constructs

Example Syntax
As of ES6 var is no longer used to declare variables
  const - This is used to declare variables where we do not espect the value to change
  let - This is used where we expect the value of the variable to change over time
  
  ES 5
  var name = "Tom";
  var title = "Web Developer";
  var hourlyWage = 40;
  
  ES6
  const name = "Tom";
  let title = "Web Developer";
  let hourlyWage = 40;

2 - What Const and Let Solve
Understanding why Let and Const are used
Example Syntax
  function count(targetString){
    var characters = ['a', 'e', 'i', 'o', 'u];  // Changed to const
    var number = 0;   // Changed to let
    
    for(var i = 0; i < targetString.length; i++){
      if(character.includes(targetString[i])){
        number++;
      }
    }
    
    return number;
  }
  
  count('aeiobzxceiaipbiox');
By using let and const will make the code more legible and quicker to understand eg by understanding which objects are 
not due to change and which will change

3 - Exercise 1
Solution Syntax
  const name = "Steve";
  let age = 40;
  const dateOfBirth = "25/12/1975";

4 - Exercise 2
Solution Syntax
  const statuses = [ 
    { code: 'OK', response: 'Request successful' },
    { code: 'FAILED', response: 'There was an error with your request' },
    { code: 'PENDING', response: 'Your reqeust is still pending' }
  ];
  let message = '';
  const currentCode = 'OK';

  for (var i = 0; i < statuses.length; i++) {
    if (statuses[i].code === currentCode) {
      message = statuses[i].response;
    }
  }


                   
