                    Data Structures And Algorithms in Javascript 
                    Course Notes Part 4


                    Section 5 - Elementary Sorting
1 - Bubble Sort
  - https://www.youtube.com/watch?v=lyZQPjUT5B4

2 - Stability and Adaptability

3 - Selection & Insertion Sort

4 - Exercise: Bubble, Insertion, and Selection Sort
  - https://github.com/kuychaco/algoClass/tree/master/sorting-algorithms

5 - Bubble, Insertion, and Selection Sort Solution
Example Syntax
  var bubbleSort = function(array) {
    // While wall is greater than 0
    var wall = array.length
    // iterate though the array up to wall
    while(wall >= 0){
      for(var i = 0; i < wall; i++){
        if(array[i] > array[i+1]){
          // Here, if the next value is less than the current, then swap them
          array = swap(array, i, i+1)
        }
      }
      
      wall--;
    }
    
    return array;
  }


                    Section 6 - Sorting Algorithms
1 - Merge Sort
This is the first sorting algorithm which is subquadratic time
  - This means that it can take a substatial amount of data and sort it
Divide & Conquer
  - Step 1 - Recognise the base case
  - Step 2 - Divide -- Break down problem during each call
  - Step 3 - Conquer -- Do work on each subset
  - Step 4 - Combine Solutions
Merging Lists - The merge step takes 2 sorted lists and mergers them into 1
  - The time complexity involved is linear
  - It would be quadratic if it was not sorted

2 - Pseudocoding the Merge Routine

3 - Pseudocoding Merge Sort

4 - Time Complexity for Merge Sort

5 - Quick Sort Overview

6 - Understanding the Quick Sort Partition

7 - Pseudocoding Quick Sort Part 1

8 - Pseudocoding Quick Sort Part 2

9 - Reviewing the Pseudocode

10 - Debugging the Quick Sort Algorithm

11 - Quick Sort Review Part 1

12 - Quick Sort Review Part 2



                    Section 7 - Trees & Searching
1 - Trees

2 - Linked Lists

3 - Pseudocoding a Linked List

4 - Exercise: Implement a Linked List
  - https://github.com/kuychaco/algoClass/blob/master/data-structures/linkedList.js

5 - Implement a Linked List Solution
  - https://github.com/kuychaco/algoClass/blob/solutions/data-structures/linkedList.js

6 - Implementing a Tree

