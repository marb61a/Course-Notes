                    Four Semesters of Computer Science in 5 Hours
                    Course Notes Part 1


Big O & Recursion
1 - Introduction
Introduction to the course
The GitHub site associated with the course is 
  - https://btholt.github.io/four-semesters-of-cs/
The course will help with interviews which may not be related to day to day jobs
  - It will also help to create more complex but readable code
  - Learning this material will make a better developer

2 - Big O
Big O is how we determine how efficient an algorithm is
  - It is a mathematical concept borrowed as it is very helpful
  - We don't get too mired in the details
  - Small differences in performance is not importand but orders of magnitude difference is
Example Syntax
  // In this function the BigO is n because everything will be gone over once 
  function crossAdd(input) {
    var answer = [];
    for (var i = 0; i < input.length; i++) {
        var goingUp = input[i];
        var goingDown = input[input.length-1-i];
        answer.push(goingUp + goingDown);
    }
    
    return answer; 
  }

Example Syntax
  // In this example the BigO is n squared which is because
  // every input, we have to go through a full loop inside of another full loop
  // This is one of the tricks, if there were 3 loops inside of each other then it would be n3 (cubed)
  function makeTuples(input) {
    var answer = [];
    for (var i = 0; i < input.length; i++) {
        for (var j = 0; j < input.length; j++) {
            answer.push([input[i], input[j]]);
        }
    }
    
    return answer;
  }


3 - Finding Big O

4 - Recursion

5 - Recursion Example

6 - Exercise 1: Recursion

7 - Exercise 1 Solution



                    Section 2 - Sorting Algorithms
1 - Bubble Sort

2 - Exercise 2: Bubble Sort

3 - Exercise 2 Solution

4 - Insertion Sort

5 - Exercise 3: Insertion Sort

6 - Exercise 3 Solution

7 - Merge Sort

8 - Exercise 4: Merge Sort

9 - Exercise 4 Solution

10 - Median Values

11 - Quick Sort

12 - Exercise 5: Quick Sort

13 - Exercise 5 Solution

