                    Build Node-js API's With OpenAPI Spec Swagger
                    Course Notes Part 5


15 - Build Monitoring Into Your API Server
The example uses process.hrtime() to measure execution time
You will need to install this package
  - npm install process.hrtime
  - https://blog.tompawlak.org/measure-execution-time-nodejs-javascript
Example Syntax
  // Creating a monitor.js file
  // This will need to be imported into the various files
  // it will need to be started at the beginning of functions
  var client = require('../helpers/es');
  
  var  monitor = function(){
    if(start){
      var endTime = process.hrtime(start);
      var duration = parseInt((endTime[0] * 1000) + (endTime[1] / 1000000));
      if(process.end.NODE_ENV == 'development'){
        console(`Duration for ${tag}: ${duration } msec`);
      }
      client.create({
        index: 'monitoring',
        type: 'todo-api',
        id: new Date().getTime(),
        body:{
          'duration': duration,
          'tag': tag
        }
      })
    } else{
      return process.hrtime();
    }
  }
  
  module.exports = monitor;

16 - Perform Load Tests On An API Server Using-apache-jmeter
Apache JMeter is an open source application for performing load tests on applications
  - http://jmeter.apache.org
  - You will need to download and you must also have Java installed as it is a Java based application
  - To launch from the command line switch to the installation folder and run bin/jmeter
  - Tutorials on JMeter are available at - http://www.guru99.com/jmeter-tutorials.html
The JMeter UI will launch
  - Change the Test Plan Name to Todo API Test
  - Right Click Todo API Test -> Add -> Config Element -> User Defined Variables
    - add host value = localhost
    - add port value = 10010
  - Right Click Todo API Test -> Add -> Config Element -> HTTP Header Manager
    - add Content-Type value = application/json
  - Right Click Todo API Test -> Add -> Config Element -> HTTP Request Defaults
    - use ${host} for the host name defined previously and ${port} for the post number previously added
    - Port protocol is HTTP
  - Right Click Todo API Test -> Add -> Threads -> Thread Group
    // Threads are ways to group requests in an organised way
    - Rename to API Test
  - Right Click Thread Group -> Add -> Sampler -> HTTP Request
    - Rename to GetAllTodos
  - Right Click Todo GetAllTodos -> Add -> Assertion -> Response Assertion
    - Listen for a HTTP 200 request
  - Right Click Todo API Test -> Add -> Listener -> View Results Tree
To run just click the little green play button
You can also see what is happening using the NodeJS dashboard framework
  - https://formidable.com/blog/2016/10/12/introducing-nodejs-dashboard/
  - It is preferred that you do a global install
    - npm install -g nodejs-dashboard
