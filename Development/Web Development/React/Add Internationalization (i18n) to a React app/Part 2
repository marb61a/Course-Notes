                    Add Internationalization (i18n) to a React app using React Intl
                    Course Notes Part 2


2 - Convert A Hard Coded String Using react-intl FormattedMessage (cont)
At this point we can begin to swap out text
Example Syntax
  // In the BookDetail.js file

3 - Render Content With Placeholders using react-intl FormattedMessage
Example Syntax
  // Add some more strings to the messages.js file 
  // The placeholder tokens will be replaced by content when the component renders
  export default {
    'en-US': {
      detail: {
        author: "by {author}",
        toggle: "Toggle",
        purchase: "Purchase this book from : ",
        reviewsHeading: "Reviews",
        averageRating: "Average Rating : {avg}",
        userRating: "{user} rated it : {rating} out of 5"
      }
    },
    'es-ES': {
      detail: {
        author: "de {author}",
        toggle: "Palanca",
        purchase: "Compre este libre de : ",
        reviewsHeading: "Comentarios",
        averageRating: "Puntuacion media : {avg}",
        userRating: "{user} classificado : {rating} de 5"
      }
    },
    'fr-FR': {
      detail: {
        author: "par {author}",
        toggle: "Basculer",
        purchase: "Achetez ce livre a partir de : ",
        reviewsHeading: "Avis",
        averageRating: "Note Moyenne : {avg}",
        userRating: "{user} L\'a note : {rating} par 5"
      }
    }
  }

4 - Render Content With Markup Using react-intl FormattedHTMLMessage

5 - Format Date And Time Using react-intl FormattedDate And FormattedTime

6 - Format A Date Relative To The Current Date Using react-intl FormattedRelative

7 - Format Numbers With Separators And Currency Symbols Using react-intl FormattedNumber

8 - Render Content Based On A Number Using react-intl FormattedMessage

9 - Use A react-intl Higher Order Component To Format Messages And Get Current Locale

10 - Write Tests For react-intl Output Using Enzyme And Jest

11 - Use Webpack To Conditionally Include An Intl Polyfill for Older Browsers

