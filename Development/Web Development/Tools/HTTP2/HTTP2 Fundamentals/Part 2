                    HTTP2 Fundamentals 
                    Course Notes Part 2


HTTP2 Messages
These are used because HTTP2 needs to keep the semantics of HTTP1.X
A message consists of a series of frames
A HTTP2 Request Message consists of a series of Header frames and Data frames
  - The response message is similar in structure
The data frame is by far the most important frame as it carries the payload of the request and response bodies
Padding in used in the data frame to mitigate against attacks

Headers Frame
The headers frame corresponds to headers sent in a request and response
There can be many headers and they can be distributed over multiple frames
A series of flags such as endheaders and endstream are used to indicate if the headers frame is the last
or followed by a series of continuation frames which contain additional header information
There is a single headers frame and one or more continuation frames
A few fields E, Stream Dependency and Weight are related to stream priorities

Every HTTP2 connection has a series of settings that apply through out the exchanges
These settings are defined with the settings frame and are sent when establishing a connection
The parameters include
  - SETTINGS_HEADER_TABLE_SIZE
  - SETTINGS_ENABLE_PUSH
  - SETTINGS_MAX_CONCURRENT_STREAMS
  - SETTINGS_INITIAL_WINDOW_SIZE
  - SETTINGS_MAX_FRAME_SIZE
  - SETTINGS_MAX_HEADER_LIST_SIZE

3 - Headers
Headers in HTTP2 are similar to headers in HTTP1.X
They are key-value pairs with a possibility of multiple values per key
Field names are still strings and are case insensitive
  - It is required to have all in lowercase before encoding  
HTTP2 has Pseudo-Header fields which are specific fields which provide information on 
  - Scheme -- :scheme is the scheme of the URI
  - URL
  - Method -- This indicates the verb use eg GET
  - Response Status -- :status is used in the response and is the status code
  - Authority -- :authority indicates authority information about the URI
  - Path -- :path indicates the actual path of the URI
These fields are pre-fixed with a colon
The Pseudo Header fields must also appear prior to other header fields in a request and response
HTTP2 takes header treatment a step further than HTTP1.X
HTTP1.X is very wasteful as it retransmits information that had not changed
HTTP2 seeks to address this waste by using compression
  - This compression is known as HPack
    - This is used to compress headers
    - This compression uses Huffman encoding along with 2 tables
      - Static and Dynamic which maintain a list of headers
      - The Dynamic table is initially empty and its maximum size is set by the settings frame
      - The Static table has a list of known and frequently used headers
      - The combination of the tables form the Index Address Space
  - Initiallly Zlib was used for the compression
    - This was removed due to the CRIME attack 
      - More information is available at -- https://en.wikipedia.org/wiki/CRIME
Instead of sending either header names and values HPack uses indexes to look up the corresppnding name-values
This means the with a HTTP2 there is state being maintained for these headers

4 - Basic Tooling
Author recommends tools for using during the course
  - curl
    - This uses nghttp2 behind the scenes
  - Wireshark
    - Protocol Analyser
    - Industry standard
    - Wireshark supports SSL decryption
      - You need to export the sslkeylog file to a specific file and configure Wireshark to use this file
  - Chrome Browser
    - The network tab in the developers tools shows the protocol being used
    - Chrome also provides the ability to see the live HTTP2 session
      - In the url bar type chrome://net-internals/#http2
      - You can then select a session

5 - Demo An HTTP 2 Connection
Demonstration of the tools listed above
The nghhtp2.org site is the site being used in the example
  - curl -vs -o /dev/null --http2 http://nghttp2.org
  - Initial connection will be using HTTP1.x
  - At that point then the connection is upgraded to using HTTP2
The easiest way to ensure Wireshark uses the keylogfile and the browser exports to it is to set an environmental variable
  // This command may differ on each platform
  // You may need to create the file
  - export SSLKEYLOGFILE =#/tools/ssl/sslkeylog.log
To ensure that environment variable is applied in the righ context launch the browser and wireshark from the same terminal
To avoid going through all traffic apply the http2 filter in Wireshark

6 - Summary
Brief summary of the material covered in the chapter

