                    BIND and DNS 
                    Course Notes Part 2


                    Section 4 - Zone Configuration File
1 - Zone Config Files
Zone files are plain text files 
They describe what is in a DNS zone
The chapter will be explaining each section of a zone file
  - There is a sample zone file included as part of the course

2 - TTL
The $TTL or Time To Live field is usually the first one in a zone file
It sets the default TTL for the zone
It can be overridden
The values in TTL are in seconds
  - The maximum value allowed works out at about 68 years
  - You should work with more reasonable values eg 2400000 equals about 4 weeks
  - A minimum should be 86400 which is 1 day
When the duration of a TTL has passed it is no longer considered valid
  - If you cannot get an answer after 4 weeks you should assume that the record is inaacurate
Syntax
  $TTL num_of_seconds eg $TTL 2400000
Bind V9 will not load a zone without a valid TTL
An example of when to use smaller values is when planning changes to a network
  - If you change an IP address it may take a long time to propogate with a larger TTL
  - If a change is imminent you may wish to put the change as low as 12 hours or $TTL 43200;
Overiding the values can be done and the specification for dooing so is in RFC2038
  - Bind has its own syntax that makes things much easier
    - It will accept durations other than seconds
      - m for minutes
      - h for hours
      - d for days
      - w for weeks
    - Instead of 86400 you can use 1d, 48h for 48 hours, you can combine 1h 30m for 90 minutes

3 - ORIGIN
$ORIGIN value
  - The value appended to names without a trailing dot
  - It is meant to clean up a zone file and make it easier to read
$ORIGIN example.com.
  - Any records in the lines following this without an ending dot will have example.com. appended to it
  - Therefore ftp IN CNAME server1 becomes
    - ftp.example.com. IN CNAME server1.example.com.
Entries that end in a dot are called Fully Qualified Domain Names (FQDN's)
  - ftp.example.org. is an FQDN but ftp.example.org is not

4 - SOA
SOA - Start Of Authority which is the most important entry in a zone file
  - This record can be quite complex and is often quite long
  - The @ sign is used as a substitute for the current $origin
The SOA will look like
  $86400                // Often not set as uses the previously set default
  $ORIGIN example.com.
  @ IN SOA nameserver.example.com . emailadmin.example.com. (
    // The serial number can be anything between 0 and over 4 billion
    // Convention dictates that you use yyyymmddss as the basis for your serial
    // The last 2 numbers can be incremented for version or revisions, you always start low and increment
              2015081703; serial 
              
              21600;                 // Refresh value which is set to 6 hours here, This is the time
                                     // Taken by the slave server to check with the master for zone modifications
              
              3600;                  // Retry interval which is the intervals which will be used by a slave if it is
                                     // unable to contact the master server to check for zone modification
                                     
              604800;                // The slave will continue trying to contact the master until the expiry time is 
                                     // reached, in this case a week, if this value is reached the slave will give up
                                     // and stop responding to queries
              
              86400                  // The negative response TTL value is used when a resolver requests to resolve a
                                     // host name but the name server cannot resolve it because it does not exist then
                                     // it will receive an NX domain error from the server, the resolver will then return
                                     // this value for the duration of the NX value which can be from 0 - 3 hours
  );

5 - NS
Second only to the previous in importance is the NS Resource Record
  - Its purpose is to define the authoritative name server(s)
  - They are defined in RFC1035
NS Resource Record Syntax
  name                              // Can be explicitly stated but is often taken from the SOA record, it is the zone record
  ttl                               // This is a standard ttl for this record should you override the zone default
  class                             // Almost always IN which defines it as the internet
  NS                                // 
  name                              // This is the name of the name server usually a FQDN

6 - MX

7 - A

8 - CNAME

9 - PTR

10 - Other Zone Files

                    
                    
                    Section 5 - Basic Name Server Setup
1 - Get Ready
Some information on the examples that will be used through the rest of the course
  - The examples will be used are fictitious and are put together in a sandbox
  - These are not examples that should be used on your company network
  - Understand that adminsistering a name server may not be a viable option for the company
    - You will need to ensure that there is full buy in from stakeholders
    - If there is a security team they will need to be involved heavily
  - Everything is a trade off
  - The examples used are as close to real world as possible
    - Being a part of an example is not an endorsement of any kind
    - In order for there to be examples there had to be some providers chosen
    - Always do your own search and research
  - In order to follow along with the lab there are a few prerequisites
    - You will need to have a registered domain name
      - You can make use of free domain names that are available on the internet for testing purposes
    - You will need a web hosting provider
      - There are many different choices available for this purpose
    - You will also need to have an e-mail hosting provider
      - Like the example above there are a wealth of choices available
      - You will need to choose one which allows you to use your domain and set your routings
    - You will also need to have a secondary DNS provider
      - You do not always want to run a slave server on-premises
    - You will also need shell access on an external computer
      - This will give the ability to test as if you were an outsider
      - For example querying your own name server from outside your network
  - There are a couple of things to be kept in mind when building the lab
    - Security, make sure that you perform a risk analysis
    - Security, discuss options with your security person
    - Security, do more research!!!!!!

2 - Create And Verify The Zone File

3 - Load And Test The Zone File

4 - Allow Queries From Localnets

5 - Reverse Zone File

6 - External Zone File

                    
                    
                    Section 6 - Advanced Name Server Setup
1 - Configure a Secondary Name Server  

2 - Register A Name Server

3 - Updating Zones

4 - Serve A Website

5 - Third Party Email Server Setup

6 - MX and SPF Records For Email
                    
                    
                    Section 7 - Security Concerns
1 - TSIG
Due to the nature of DNS information is usually sent in the clear
  - A man in the middle attack is possible
  - Hijacking of resources can occur
The solution to some of these problems is called TSIG
  - Transaction SIGnatures
    - TSIG ensures data integrity and authentication
    - It is lightweight and flexible for secure communications between name servers
    - Its standard can be found at RFC 2845
    - It uses a single shared secret key
    - Keys need to be securely distributed
    - Keys can be generated using a utility called dnssec-keygen
Example Key Generation 
  - mkdir var/named/keys
  - cd var/named/keys
  - dnssec-keygen -a hmac-md5 -b 128 -C -n host tinjaw.site
    - The -a is for the algoritm which is hmac-md5
    - The -b is for how big the key size, in the example 128 bits

2 - RNDC

3 - DNSSEC
TSIG may not be good enough
  - It uses a single shared secret
  - One key is used on all servers for convenience which means the network is vulnerable
  - Separate keys for admins may improve security but are unwieldy 
  - There is no mechanism for definitively stating a host does not exist
DNSSEC
  - DNS Security Extensions
  - Used on large networks used by large corporations usually
  - Maybe useful on small networks that need high security
  - Some records that will be seen are DNSKEY, RRSIG, NSEC, DS
  - They are described in standards -> RFC's 4033, 4034 and 4035
  - There is a trade off as greater security needs greater resources

                    
                    
                    Section 8 - Conclusion
1 - Next Steps
A brief thank you video from the instructor
  - There are also some suggested courses to follow on from  this one
