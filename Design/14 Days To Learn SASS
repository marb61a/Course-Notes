                    14 Days To Learn SASS notes
                    
                    Section 1 - Introduction3 lessons
1 - Welcome
Quick intro to the author and the course

2 - What Are Preprocessors?
SASS is a preprocessor
Preprocessor transforms SASS cose into CSS
SASS is an extension of the original CSS
SASS will save a lot of time writing CSS and you get much more power the standard CSS
There is an extra step as SASS will have to be compiled

3 - The Course Structure
A quick run through of what the structure of the course will cover
Try doing the exercises
You can do more than 1 lesson per day to speed up learning



                    Section 2 - Installing and Using Sass2 lessons
1 - Install Method 1: The Command Line
SASS is written in Ruby
Ruby Installer in Windows
Typing sass -v at command line will check for SASS installation
If no version type gem install sass
SASS files have .scss extension
Compiling SASS using command line is done from within project folder
 -> sass -watch file.scss:file.css

2 - Install Method 2: Dedicated Apps and Services
You can use third party apps to build SASS
https://prepros.io - Windows tool
https://codepen.io - Browser based tool for learning Front End development


                    Section 3 - Week 1
1 - Day 1: Syntax
2 Syntaxes - SCSS & SASS
.sass & .scss file extensions
SCSS is an extension of traditional standard CSS
You can write traditoional CSS is the file
SASS uses indentation rather than brackets
Properties separated by new lines in SASS rather than semi-colons in SCSS and traitional CCS
Comments in SCSS - // or  multiline /* */ in SASS its similar but nesting is also used and there is no need for ending */
SCSS is going to be used & is recommended

2 - Day 2: Nesting
Nesting is not available is regular CSS
Nesting is where you write a selector inside another selector
You are able to go as many levels as you want
Parent Selector ampersand is replaced by parent selector when compiled
Parent selectors have multiple uses
The ampersand does not have to be at the start of the selector
 - Works very well with modernizr as you can write for browsers without certain features
 - Not all browsers support things like CSS transforms
Best practice is about 3 or 4 levels of nesting beyond this is not recommended
Nesting is also best used on pseudo classes

3 - Day 3: Nested Properties
SASS helps with CSS namespaces
Namespaces help group properties that share the same together more elegantly
Do not include properties that dont exist
Properties have short hand notation

4 - Day 4: Variables
Variables can be used for several things
 - They start with # 
 - Values that repeat
 - You just change the value in one place
 - You are able to easily change values
 - You can use operations on variables
 - Variables defined at root are available in all selectors
 - Variables defined inside selectors are only available in the selector defined unless the flag !global is used

5 - Day 5: Interpolation
Also called variable interpolation
You will need to use brackets for variable interpolation
You cannot add variables without brackets for selectors eg .div-$variable it must be .div-#($variable)
You can use as a property value without brackets

6 - Day 6: Data Types
7 main data types supported by SASS
 - Numbers
  - Numbers with units 100px
  - Decimal 0.5 
  - Numbers without units
  - Percentages
 - Strings
  - Quoted & Unquoted strings
  - Quoted strings are unquoted in interpolation
 - Colours
  - Hex -- #cccccc
  - RGB -- 255, 255, 255 (Red, Green, Blue)
  - RGBa
  - HSL -- Hue Saturation Lightness
  - HSLa
  - Named colour -- Blue etc
 - Booleans
  - True or False
 - Nulls
  - Equals nothing, good for removing values 
 - Lists
  - Comma Seperated items or space separated items
  - Lists can contain other lists
  - You can omit brackets
 - Maps
  - Lists converted to key-value pairs
  - Cannot be converted to CSS
  - Defined with $ sign
  - You must use brackets
  - You must use key-value pairs
  - Comma separated values
  - Can contain lists
  - If inner lists have same separators as outer then you must use brackets
  - Use map.get function -- map-get($map, $key)
 
Named colours are available at - https://github.com/synapticism/sass-named-colors/blob/master/sass/index.scss

7 - Day 7: Operations
SASS supports operations on most of the data types
Section covers numbers & colours
2 values of same unit type will add, subtract etc, if units are different then the wont 
Division is a more specialised case again though eith the same unit or unitless
Correct placement of parentheses is needed to avoid logic problems, parentheses change order of execution
You can use relational operators eg > than or < than
Most common string operation is concatenation


                    Section 4 - Week 2
1 - Day 1: @import Directive
Import rule in CSS allows you to import style rules from other style sheets
SASS extends this by allowing you to import multiple SASS & SCSS files
All imported files will be exported into a single CSS sheet
SASS by default looks in the same directory for other SASS\SCSS files
If the fies are in another directory they will need to have the proper path
You don't have to put file extensions
You can import multiple files from the same directory
Order imported will be order generated
As with CSS general styles at top and more specific down further

2 - Day 2: Partials
Partials are imported but not be compiled
They start with an underscore _
They can have either the SASS or SCSS syntax
You cannot include a partial and non partial with the same name in the same directory

3 - Day 3: @media Directive
@media directive is just like the standard CSS example but can be nested
@media screen and (max-width : "screen width")
You can use variables but they need to be interpolated

4 - Day 4: @extend Directive
@extend directive allows a selector to inherit styles from another selector
SASS allows for chaining multiple @extend directives together
You can only extend selectors within the same directive

5 - Day 5: @if and @for Directives

6 - Day 6: @each and @while Directives
Similar to @for directive
@each directive will run through a map or list
@each can be used with variables but again this will need interpolation
@while will keep operating until the condition becomes false
@while $i < 10 -- This if put with a counter will operate 9 times
You must put a counter to avoid running infinitely
You can achieve more complex looping than @for directive

7 - Day 7: Mixins



                    Section 5 - Conclusion lesson
1 - Final Words
Quick final thoughts from the author
