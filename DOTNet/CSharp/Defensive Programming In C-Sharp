                    Defensive Programming In C#
                    Course Notes
                    
                    
                    Section 1 - Introduction
1 - Intro
Very quick overview of the course and intro to the author

2 - What Is Defensive Coding 
Defensive Coding is an approach to improve software and source code in terms of
  - General Quality which will reduces bugs and other issues
    - This is usually done with automated code testing
  - Making the source code comprehensible so that it is readable and understandable in a code audit
  - Making the software behaviour predicatble despite unexpected actions or inputs
The goals of Defensive Coding are
  - Clean Code which improves comprehension, simplifies maintenance and reduces bugs
  - Testable Code & Unit Tests which improves quality, confirms maintenance and reduces bugs

3 - Clean Code
Comprehensive Notes on Clean Code principles available at 
  - https://github.com/marb61a/Course-Notes/blob/master/DOTNet/CSharp/C# Developers: Learn the Art of Writing Clean Code 
  
4 - Testable Code And Unit Tests

5 - Predictable Code

6 - Topics



                    Section 2 - Defending Your Methods Part 1
1 - Introduction
A quick introduction to what this section will cover

2 - Clean Testable And Predictable Methods

3 - 

7 - Key Points


                    Section 3 - Defending Your Methods Part 2
1 - 

2 - 


                    Section 4 - Automated Code Testing
1 - 

2 -


                    Section 5 - Defending Your Methods Part 3 Returning Predicatble Results
1 -

2 - 


                    Section 6 - Defending Your Code Constructs
1 - 

2 - 
                    
                    Section 7 - Asserts, Errors And Exceptions
1 - Introduction

2 - Legacy Code

3 - For More Information

4 - Summary
A brief summary of what the chapter covered



2 -


                    Section 8 - Final Words
1 - 
