                    C# Best Practices: Collections and Generics
                    Course Notes


                    Section 1 - Course Overview
1 - Course Overview
Very quick high level overview of the course



                    Section 2 - Introduction
1 - Introduction
Brief overview of the course and introduction to the author
The course is part of a series
  - These courses are similar to apprecticeships
  - The sample application used in the course is part of the other series
Introduction to the section
  - To get the most from collections generics need to be leveraged
This can be used with C# version 5 & 6
  - Most versions of Visual Studio can be used

2 - Collections Overview
A collection in C# is a class that provides in-memory management of in-memory items
  - These can be simple or complex types
  - Each item is referred to as an element
There are many different collection types in C#, they can be divided into 2 broad categories
  - Lists & Dictionaries
  - Lists allow for managing a group of items and retrieving it by index position(zero based)
  - Dictionaries allow for managinging a group of items each with a unique key which is then used to retrieve that item

3 - Get the Most from This Course

4 - Sample Application

5 - Course Outline



                    Section 3 - Arrays
1 - Introduction

2 - Declaring and Populating an Array

3 - Using Collection Initializers

4 - Retrieving an Element from an Array

5 - Iterating Through an Array

6 - Using Array Methods

7 - Frequently Asked Questions



                    Section 4 - Building Generic Code with Generics
1 - Introduction

2 - Making the Case for Generics

3 - Building a Generic Class

4 - Using a Generic Class

5 - Defining Generic Methods

6 -Leveraging Generic Constraints

7 - Frequently Asked Questions



                    Section 5 - Generic Lists
1 - Introduction

2 - Declaring and Populating a Generic List

3 - Using Collection Initializers

4 - Initializing a List of Objects

5 - Retrieving an Element from a Generic List

6 - Iterating Through a Generic List

7 - Types of C# Lists

8 - Frequently Asked Questions



                    Section 6 - Generic Dictionaries
1 - Introduction
4m 12s
Declaring and Populating a Generic Dictionary
5m 53s
Using Collection Initializers
2m 1s
Initializing a Dictionary of Objects
5m 24s
Retrieving an Element from a Generic Dictionary
3m 49s
Iterating Through a Generic Dictionary
6m 36s
Types of C# Dictionaries
2m 42s
Frequently Asked Questions



                    Section 7 - Generic Collection Interfaces
Introduction
6m 48s
Making the Case for Using Interfaces
3m 56s
Built-in Generic Collection Interfaces
4m 11s
Using an Interface as a Parameter
6m 42s
Using an Interface as a Return Type
5m 40s
Returning IEnumerable T
5m 25s
Defining an Iterator with Yield
7m 1s
Frequently Asked Questions
4m 30s
8
LINQ
27m 45s
Introduction
7m 26s
Building a LINQ Query: Query Syntax
4m 27s
Building a LINQ Query: Method Syntax
5m 53s
Using Lambda Expressions
2m 35s
LINQ and Collections
4m 34s
Frequently Asked Questions
2m 47s
9
Final Words
6m 11s
Introduction
0m 31s
Takeaways
3m 53s
For More Information
1m 10s
Closing
0m 35s
