                    CLR Reflection For Developers
                    Course Notes
                    
                    
                    Section 1 - Introduction
1 - Welcome
A brief welcome to the course from the instructor

2 - What You Should Know
Some prerequisites for the course are
  - .NET developer or have access to some version of Visual Studio
  - Comfortable with OO COncept eg class, objects
  - Familiarity with the command line

3 - Using The Exercise Files
It is recommended to follow along
There are exercise files available with both a beginning and an end file for each chapter



                    Section 2 - Reflection
1 - Reflection Overview
The course covers .NET Reflection
Reflection 
  - Gives runtime access to type metadata
  - Read only information as once it is defined it is immutable
    - some languages allow run time modifications but not the CLR
  - Type information such as fields, methods etc
  - Gives instance information such as values of fields or method invocations and results

2 - Point Demo
Example Syntax
  // Console application to demonstrate Reflection
  using System;
  using System.Collections.Generic;
  using System.Linq;
  using System.Text;
  using System.Threading.Tasks
  
  namespace Reflection{
    public class Point{
      public Point(int x, int y){X = x; Y = y;}
      public int X {get; set;}
      public int Y {get; set;}
    
      public static double Distance(Point lhs, Point rhs){
        return Math.Sqrt(
          (Math.Pow((double)rhs.X - (double)lhs.X, 2)) +
          (Math.Pow((double)rhs.Y - (double)lhs.Y, 2))
        );
      }
      
      public static Point ORIGIN {get; {return new Point(0, 0); }}
      
      public override string ToString(){
        return String.Format("({0} {1})", X, Y);
      }
      
      public override bool Equals(object other){
        if(Object.ReferenceEquals(this, other))
          return true;
          
        if(!(other is Point))
          return false
      }
    }
  }



                    Section 3  - IL Disassembler
1 - ILDasm.exe

2 - ILDasm.exe Demo



                    Section 4 - Reflection Namespace And Types
1 - Reflection Types

2 - Reflection Types Demo

3 - Assemblies Modules Demo



                    Section 5
1 -      
 
                    Section 6
1 -                     
                    Section 7
                    
                    Section 8
