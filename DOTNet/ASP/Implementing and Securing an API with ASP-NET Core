                    Implementing and Securing an API with ASP.NET Core
                    Course Notes


                    Section 1 - Course Overview
1 - Course Overview
A quick overview of the course by the instructor
There are a couple of prerequisites for the course
  - The student should be familiar with Entity framework & ASP.NET Core


                    Section 2 - Getting Started
1 - Introduction
An introduction of the material coming in the section

2 - What Is HTTP?

3 - What Is REST?

4 - Where Are You Going?

5 - Demo: Starting the Project

6 - Demo: Using Postman

7 - Demo: What's in the Project?

8 - What You've Learned
A quick run through of what the section covered


                    Section 3 - Reading Data
1 - Introduction
An introduction of the material coming in the section

2 - API Basics
Nouns are good, verbs are bad
  - URI's should point at nouns
    - It should preferably be plural eg /api/cutomers or /api/games
  - Use Identifiers to locate individual items in a URI
    - This does not have to be an internal key eg /api/customers/123
    - It could be used though in /api/games/halo-3 
      - There is only going to be one Halo-3 game so a constructed key can be used
      - This not only reads better but avoids exposing primary keys
  - Status Codes which are defined in HTTP
    - A full list of status codes is available at the following location
      - 
    - At a minimum it is suggested to use 200, 400, 500
    - You will probably use more but probably not more than 10
  - Formatting Results
    - There is a need for formatting different data types
    - These aill normally be accompanyed by accept
      - Some examples include
        - JSON -- application/json
        - XML -- text/xml
        - JSONP -- application/javascript

3 - First Controller
Example Syntax
  namespace MyCodeCamp.Controllers{
    public class CampsController : Controller {
      
    }
  }

4 - First Route

5 - The Data Model

6 - Getting Collections

7 - Seeding the Database

8 - Getting Items

9 - Summary
A quick summary of the chapter material



                    Section 4 - Modifying Data via an API
1 - Introduction
An introduction of the material coming in the section

2 - Designing URIs
When designing URI's there will be a need to leverage the verbs inside the requests
  - These will be POST, GET, PUT & DELETE

3 - Demo: Model Binding

4 - Demo: Implementing POST

5 - Demo: Logging

6 - Demo: Implementing PUT

7 - Demo: Implementing DELETE

8 - Summary
A quick summary of the chapter material



5
Entities and Models
49m 54s
Introduction
2m 27s
Demo: Adding a View Model
1m 45s
Demo: Using Model Mapping
7m 22s
Demo: Customizing Mapping
3m 42s
Demo: Mapping URLs
5m 9s
Demo: Building a UrlResolver
8m 1s
Demo: Using a Surrogate Key
3m 51s
Demo: Using Mappings in POST
8m 26s
Demo: Using ModelState and Validation
4m 10s
Demo: Using Mappings in PUT
4m 3s
What You've Learned
0m 50s
6
Associations in APIs
42m 47s
Introduction
1m 57s
Demo: An Association Controller
3m 25s
Demo: Association GET
2m 17s
Demo: Mapping to a Model
5m 31s
Demo: Association POST
5m 51s
Demo: Adding Validation
6m 5s
Demo: Association PUT
4m 50s
Demo: Association DELETE
3m 26s
Demo: The Talk Association
8m 17s
What You've Learned
1m 3s
7
Functional APIs
9m 15s
Introduction
2m 56s
Demo: Creating a Functional Controller
5m 7s
What You've Learned
1m 11s
8
Securing APIs
62m 43s
Introduction
0m 26s
Security Basics
6m 33s
How SSL Works
6m 56s
Demo: Supporting SSL
10m 4s
Demo: Supporting CORS
6m 17s
Authentication Basics
5m 49s
Demo: Using Identity
9m 38s
Demo: Cookie Authentication
8m 49s
Demo: Using Identity Information
6m 23s
What You've Learned
1m 44s
9
Token Authentication
28m 21s
Introduction
0m 16s
What Are JSON Web Tokens?
4m 9s
Demo: Generating JWTs
10m 19s
Demo: Validating JWTs
1m 27s
Demo: JWT Middleware
4m 15s
Demo: Using Claims
3m 27s
Demo: Authorizing with Claims
3m 48s
What You've Learned
0m 36s
10
Versioning Your API
27m 39s
Introduction
2m 34s
Versioning Methods
3m 22s
Demo: Adding Versioning
4m 18s
Demo: Using Versioning Attributes
2m 48s
Demo: Using a Versioned Controller
3m
Demo: Versioning a Payload
3m 38s
Demo: Customizing Versioning Methods
4m 2s
Demo: Use Versioning Conventions
3m 17s
What You've Learned
0m 35s
11
REST Constraints
32m 27s
Introduction
0m 16s
What Are REST Constraints
2m 33s
What Is Caching?
3m 29s
Demo: Implementing ETags
7m 30s
Demo: Using ETags in Updates/Deletes
5m 23s
Understanding Uniform Interface
1m 55s
Demo: Implementing Link Collections
6m 33s
The REST of Constraints
3m 36s
What You've Learned
1m 7s
