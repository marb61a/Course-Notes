                    WordPress Development - Create WordPress Themes and Plugins




                    Section 1 – Getting Started
1 - Introduction 
Introuction to the course
Course will cover both Plugins and Themes
Course not for beginners as you will need to know
  - PHP
  - Javascript
  - HTML
  - CSS

2 - Setting up an Environment & Installing WordPress 
You need to setup a Wordpress environment
Windows has WAMP & XAMPP
Author uses WAMP to setup environment
Turn Apache rewrite_module on - Its very important to be on as in ensures support for custom WP permalinks
Wordpress.org - Download WP
Setup database - PHPMyAdmin -> databases -> create database -> name -> collation utf-8_general_ci (character set)
Wordpress recommends UTF-8 as character set
Fill in WP setup config form
Basic install information form will need to be filled in and installation is done
Set permalink structure to post name



                    Section 2 – Theme Basics
1 - Theme File Headers 
Wordpress is flexible with themes
Sample theme provided - non Wordpress ready
-> wp-content -> themes -> create new folder -> create 2 new files
- style.css
- index.php
A file header is a comment block placed at the very top of the style.css file that describes the theme
More information available here
  - https://codex.wordpress.org/File_Header
Same theme header copied to style.css file
Minimum requirement is to have a theme name
-> Admin Dashboard -> themes -> this should now have theme named the same as your folder which you can also activate
Adding hello world to the index.php file will cause the to be the output on the page
index.php can be thought of as the default template of Wordpress
Theme URI is where your theme information can be found officially
Author is the creator of the theme
Author URI is link to the site of the author
Tags are used to help users find your theme if it is uploaded to Wordpress
Text Domain is usually set to the same name as your folder
Wordpress searches for screenshot.png, this is a screenshot of the theme that will be displayed in the admin side of Wordpress
Sreenshot recommended size is 880 x 660 pixels

2 - The Functions File 
Assets folder is created in the theme folder and static example is unzipped into here
There is no set folder structure
Content from index.html is copied to index.php to illustrate missing scripts
Create a new file functions.php, you don't have to do anything to set it up WP will do it
Spacing out sections is not compulsory but recommended
Echoing out anything is not recommended practice

3 - Action Hooks 

4 - Adding Styles through Hooks 

5 - Adding Scripts through Hooks 

6 - Adding Dummy Content 

7 - Adding Menu Support 

8 - Displaying Menus 

9 - Creating Headers and Footers 

10 - Creating Widget Areas 

11 - Formatting the sidebars 

12 - Formatting the Search Form 

13 - The Loop 

14 - Template tags inside the Loop

15 - Pagination 

16 - Template Hierarchy 

17 - Single Posts 

18 - Comments Template 

19 - Page Template 

20 - 404 Template 

21 - Category Template 

22 - Search Template 

23 - Custom Templates 

24 - Finishing Up and what’s to come 



                    Section 3 – Digging Deeper with Themes
1 - WordPress APIs 
API - Acronym which stands for Application Programming Interface
API's are basically sets of functions provided by a system to allow you to interact with that system
Wordpress has several API's available, they can be used in both themes and plugins

2 - Creating Default Settings Upon Activation 


3 - Options API 

4 - Adding a menu page to WordPress Admin 

5 - Enqueueing Styles & Scripts in the Admin 

6 - Setting Up a Form in the Admin 

7 - Saving our Settings 

8 - Displaying the updated setting values 

9 - Uploading a Logo with the WordPress Media Uploader 

10 - Finalizing the front end and using the options API once more 

11 - Going Deeper 



                    Section 4 – Plugin Basics
1 - What are plugins? 
Plugins are extensions to the core of Wordpress
Wordpress loading order must be understood
  - Configuration file
  - Functions
  - Plugins
  - Processing code & checks URL
  - Translations
  - Themes
  - Page content

wp-config.php - The configuaration file which is the most important file in a Wordpress installation
WP_DEBUG - should be set to true during development and changed back before entering production
If it does not exist you could add it in

2 - Creating a Plugin File Header 

3 - Activating Our Plugin 

4 - 1 Simple Trick to Secure a Plugin 

5 - Creating a Custom Post Type 

6 - Metadata and Metaboxes 

7 - Enqueueing Files

8 - Working with Meta Data 

9 - Filter Hooks 

10 - Making our Strings Translatable 

11 - Creating Database Tables 

12 - Including the jQuery Rating Plugin 

13 - Sending AJAX Requests from the Front End

14 - Handling AJAX Requests and Inserting Data into the Database 

15 - Averaging and Displaying the Rating 

16 - Changing the Custom Post Type’s Table Columns 

17 - Creating a Widget 

18 - Cron Jobs 

19 - Transients API 

20 - Finalizing our Widget 

21 - Creating a Shortcode 

22 - Including the WordPress Content Editor 

23 - Sanitizing HTML Input and Inserting a Post

24 - Extending our Plugin with the Plugin API 

25 - Sending an E-mail with our Custom Hook 



                    Section 5 - Advanced Theme Development
1 - WordPress Coding Standards Overview 

2 - Child Themes 

3 - Diving Deep into the Shortcodes API 

4 - Using the WP_Query Class 

5 - Difference between get and non get 

6 - Theme Customizer API 

7 - Supporting Various Post Formats 

8 - Creating a Contact Form by Requiring a Plugin 



                    Section 6 – Advanced Plugin Development
1 - Overview 

2 - Prepared Database Queries 

3 - Uninstalling a Plugin 

4 - Creating a Dashboard Widget 

5 - Using the HTTP API to Retrieve Content from External Sources 

6 - Flushing the Rewrite Rules with the Rewrite API 

7 - Translations 

8 - Licensing and Making Money with your Plugin/Theme 

9 - Conclusion 
A brief conclusion to the course
