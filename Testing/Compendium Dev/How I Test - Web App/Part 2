                    How I Test - Web App
                    Course Notes Part 2


  - Environments are a massive thing. 
  - One of the interesting things with Docker 
    - It makes environment provision a lot easier and once we understand it then we can do a lot with it. 
    - It is only really a particularly good thing if also using Docker in Live. 
    - If we suddenly use a different process in Live, we have to do some sort of process to mitigate the risk 
      - This is the risk that the Live environment might operate differently from the Docker environments 
        -We need to try as a project to mitigate that. 
        - One of the ways we can do that is by repeating the automated execution on our Live environments but then
we have to tear down data. So we might have a subset. But that notion that
environments impact testing and when we are not looking at those properly,
there is a risk. This is a constant source of risk. When I’m looking at projects,
when I’m doing consultancy, the environments that people use is really, really
important. People underestimate it. So that was an important lesson to come
across early in my particular process.


Install and Getting Started
  - In this section we will look at the install sessions and how I got started.
  - Install Session Debrief
  - A debrief of my first install session.
What’s interesting for me is the very first session that I have to do, is an install
session, right? If I was on a project, there’d be lots of discussion, et cetera, et
cetera. But for me, I’m not working on a project, but I can’t do anything until
I have an environment until I have an application installed that can work. So
for me the first session is an install session and for Tracks there’s multiple ways
that I can install Track. I could go off to the tracks website, download it and
instal it and run it locally. To do that, I need to have Ruby on Rails, I need set
up an environment to do that. Given the timescales I’ve got, I don’t really want
to do that. Given the risk that I might pose to my main machine.
I don’t really want to do that. So I want to try and isolate it somewhat. There
are Docker instances that I can use to install this. There’s at least three that I
know of if I go off to Docker. So there’s a bunch of Tracks installs on Docker. If
I do Tracks - there’s a few in here. The one that I mainly use is the Stannoe one.
I’m not going to use the Docker install for this because my Docker knowledge
isn’t particularly good. So the technology and the environment would impact my
testing and I want to give myself as many opportunities as possible for exploring
the thought processes behind testing. So I want to make my environment as
flexible as humanly possible, which is why I am going to use a virtual machine.
I’m going to download the Track’s virtual machine from Turkey Linux Turnkey
Linux, not Turkey, (it’s not . . . well it is Thanksgiving at the moment) and it’s
not Turkey Linux it’s Turnkey Linux. I’m just going to stall a VM and run that
using Oracle VM virtual box, that’s open source, that’s free and that allows
other people to repeat this if they want and then Tracks runs quite happily in a
VM and I can use it.
The benefit of that is it’s just another machine I can SSH into. I can access
the database there. I can proxy requests to it quite easily without any issues.
There’s a specific IP address, everything becomes a little easier. Basically I’ve
got tracks installed on another machine in my environment and I’m connecting
it to it there and I can give myself whatever permission I want. This comes with
some constraints, because this version of Tracks is not the most up to date. For
the purposes of my exercise, I don’t mind that. All right, so the first session I
have is an install session to download it, set it up, go through the process. I’ve
gone through the process, I’ve set up an admin user on here, just going through


What to Test?
 Choosing What To Test - Intro
 An overview of test basis and using it to plan testing holistically.
 Why We Plan
 A slide based overview of why we plan - to know what to do, and what we have discounted. A short planning session can set us up for a long time.
 Session Debrief - Planning Session
 A 'very soon after the testing' debrief session for the planning session. Where I outline the thought processes for the planning session.
 Planning to Test Holistically
 A meta analysis of the planning session with additional thoughts of how this fits into Agile Processes and how to evaluated projects for risks to help target your testing.
 Recon Session
 What is a Recon Session
 An overview of a recon session and why we would perform one.
 Recon Session Debrief
 A debrief session conducted very soon after the testing to describe the results of the recon session. Highlights benefits of capturing evidence as we test. Also showing some examples of the system state constraints and testing performed based on the notes that I took. Explaining how my tooling was limiting my testing.
 Recon Session Meta Analysis
 Slide based overview of the recon session which is a short process to help us adjust our approach to better target the application.
 Debrief Session
 Debrief Session
 A 'live' debrief session looking at the exact notes taken. Recorded immediately after the debrief session.
 Debrief Meta Analysis
 Description of why debriefs are important and lessons learned from my note taking and debriefs.
 Modelling Session
 Modelling And Planning Session Debrief
 An overview of my modelling and planning session recorded immediately after my modelling session. With a discussion of the model representations I used.
 An Overview and Lessons learned from Modelling
 An overview of the modelling process and why it is important, with lessons learned from this session and general modelling experience.
 Planning And Modelling Meta Analysis
 Discussion of my planning approach and how differences in approach and timing impact our planning depth.
 Coverage Session
 Coverage Session Introduction
 An introduction to a coverage session where I am more focussed on coverage scope, than identifying new coverage and ideas through exploration.
 Coverage Session Debrief
 Explanation of the coverage session with a walkthrough of my notes and explanation of the tools used. Explaining the expansion of the coverage model during the session.
 Coverage Sessions Lessons Learned
 A summary of the lessons learned from a coverage system.
 Issues and Tooling
 About Issues
 Examining the defect to think through when it might be found. The identification of the requirements and edge cases that would lead to the identification is an exploratory process.
 What drives tooling?
 People are often more interested in what tooling we use, than what process and thinking we use. But thinking through what drives our tooling choices is important.
 Technical Exploratory Session
 Introduction to a Technical Exploratory Session
 An overview of an Exploratory Session and discussing the nuance of a Technical Exploratory Session
 Technical Exploratory Session Debrief
 Debrief recorded immediately after conducting a technical exploratory session, showing the tools used and why I used them.
 Technical Session Macro Summary and Lessons
 A high level overview of lessons learned from the technical session.
 Conclusions
 Additional Activities
 What did I not do? Automating. Short description of how I would approach that. And additional lessons learned. Admin. Description of typical admin processes and how I would approach them.
 Basic Testing Flow Used
 An explanatory summary of the basic testing flow that I used in this process.
 Summary of Testing, Tooling, Bugs, Exploration and Coverage
 Looking back over all sessions and summarising key lessons learned.
 Final Notes
 Why the course was built the way it was and why I didn't show the live test sessions. With an encouragement for you to test and identify your unique approach to testing.
