                    Technical Web Testing 101
                    Course Notes Part 9


Configure Firefox to Use BurpSuite Proxy
  - Will need to download BurpSuite
    - https://portswigger.net/burp
    - This is a paid product but there is a free community edition available
      - Depending on the testing the free version maybe enough
    - To install Java must be installed
    - You should explore the UI of BurpSuite to get an understanding of the tool
    - On the proxy tab set the intercept option to off
      - This means that any request sent will go through BurpSuite so turn off
    - On the Options tab you can set listeners
      - They will be on 127/0/0/1:<port_number> and there can be more than 1
      - You can set FireFox to use the proxy to connect to the internet
        - Go into preferences -> Network settings -> settings and setup address and port
        - This will use the manual configuration option
        - Ensure that the proxy and browser point to the same address and port number
        - You can use the proxy for different protocols

Basics of BurpSuite
  -

Repeating a Request in BurpSuite
  -

Intercepting and manipulating requests
  -

Generic Configure Browser to use a proxy
  -

Self Study Recommended Books
  -
     
Self Study Recommended Proxies to Try
  -

Next Actions
  -

How To Chain HTTP Debug Proxies
  -


An Introduction to Interactive REST API Testing
Introduction
  - The section will show how to test a REST API
  - It will be mostly practical with not that much theory
  - It will involve using the RestMud game

What is REST? 
  - Stands for REpresentational State Transfer
  - It is an API (Application Programming Interface) using HTTP calls where the HTTP verbs dictate the actions
    - And the URI is the thing to act on, a URI is essentially a browser URL
      - There are formal differences but for practicality they can be thought of as the same
    - The main verbs are GET, POST, PUT, DELETE
  - In REST theory each call is stateless and cacheable
    - This is not always the case
  - When most people talk about a REST API they usually mean an API accessible via HTTP
    - This is on URL's using either JSON or XML on the message or response data
      - JSON stands for JavaScript Object Notation
    - This is what the course will focus on whether it is a REST API or not
  - The API used in the course is the Randomser.me API
    - https://randomuser.me/
    - A free, open-source API for generating random user data. Like Lorem Ipsum, but for people.
    - This will use GET requests on the API
    - GET requests can be sent through the browser
    - The example query parameters use nationality and gender
  - HTTP is either a scheme or protocol name
    - The double slash separator is important in HTTP
    - A query string starts with ?
    - Variables are in the form of key=value
    - Variables are separated using an ampersand (&)

Exercise: Explore a REST API using a Browser
  - The exercise will use the RandomUser API
  - There is a series of challenges for students to do 
    - Instruction can be found in the site documentation
      - https://randomuser.me/documentation
     
Exercise Answers: Explore a REST API using a Browser
  - The challenges and results are as follows
  - Challenge -- Get 10 random people from Germany
    - Result -- https://randomuser.me/api/?nat=de&results=10
  - Challenge -- Get 2 random males from France
    - Result -- https://randomuser.me/api/?nat=fr&results=2&gender=m
  - Challenge -- Get name, email and phone number for 25 people
    - Result -- https://randomuser.me/api/?inc=name,email,phone&results=25
  - Challenge -- Get results as a csv list
    - Result -- https://randomuser.me/api/?inc=name,email,phone&results=25&format=csv
  - The instructors results are the same apart from the ordering of the queries
    - Ordering of query parameters should not affect an application
    - If there are issues then it may be something else in the application causing an issue
  
