                    Technical Web Testing 101
                    Course Notes Part 11


A Little More REST Theory 
  - HTTP verbs dictate the action in CRUD model
    - CRUD            HTTP Verb               Description
      Create          POST                    Insert Data
      Read            GET                     Retrieve Data
      Update          PUT                     Amend Data
      Delete          DELETE                  Delete Data
  - HTTP Return Codes tell whether a request was successful or not
    - Code          Description
      1xx           Information Message
      2xx           Action Successful
      3xx           Redirection Response
      4xx           Client Error -- Error in Request
      5xx           Server Error -- Error processing Request
  - There is a list of HTTP codes available at the following address
    - https://en.wikipedia.org/wiki/List_of_HTTP_status_codes
  - 200 -> OK
  - 201 -> Created after a post
  - 

Sample REST APis to practice on 
  - These are some sample Open Source API's on which to practice
  - Redmine
    - https://www.redmine.org/
    - This is a project management application written in ruby
    - There are virtual machines available
      - https://bitnami.com/stack/redmine
      - https://www.turnkeylinux.org/redmine
    - It is recommended to use pre-built virtual machines
    - The API is well documented and can be challenging to get used to
  - Get on Tracks
    - This is essentially a todo app
    - https://www.getontracks.org/
    - Again there are virtual machines available and are recommended to use
    - https://www.turnkeylinux.org/tracks
    - https://bitnami.com/stack/tracks
      - This is discontinued



Testing JavaScript from the Browser Dev Tools Console
Javascript Console Section Intro 
  - Learning how to automate and manipulate the application under test
  - It will give the tester a lot of power being able to write code in the console
  - Doing this will help learn and understand how an application works
  - It is very important to know the technology behind the application
  - This section will show how to do things in the dev tools console using JS
  - This should open up a lot of new things to use in your testing
  - This section will show how to do things that the app cannot and should not do
    - This has to be controlled so as to not impact the app in a bad way

The Evil Tester Sloganizer Applicaton Overview 
  - This is a simple JavaScript application which randomly generates a slogan when a button is clicked
  - The aim of this is to show how how to interact with JS without using the GUI
  - The button is the most important part of the GUI
  - There is an onclick event which triggers a changeSlogan function
  - Sometimes in web elements it will not be obvious what JS is executed
    - In complicated apps the event listeners tab will be needed
    - The code might not be on the element that we think it is
    - This means navigating up through the elements until reaching the proper element
  - Clicking the link provided should bring up the source code in the sources view
    - Sometimes the code might not be displayed so a page refresh is needed
  - The JavaScript console has its own console tab
    - It can also be brought up in other tabs by hitting the esc button
  - The names of function can be typed in to run functions from the console
    - Autocompletion is available and uses the tab button to complete 
    - If the necessary brackets are missing the function will not execute

Exercise: The Evil Tester Sloganizer Applicaton Overview
  - As an exercise students should do the following
  - Visit The Evil Tester Sloganizer v 1 at the following address
    - http://www.eviltester.com/apps/sloganizer/version/1/sloganizer.html
  - Inspect the button element
  - See that you can view the event in the 'Elements' 'Event Listeners' tab
  - Use the JavaScript console to change the slogan by typing 'changeSlogan()' at the console 

JavaScript Functions and Objects
  - There are sets of notes on JavaScript at the following URL
  - https://github.com/marb61a/Course-Notes/tree/master/Development/Web Development/Javascript
  - 

Exercise: JavaScript Functions and Objects
  -
