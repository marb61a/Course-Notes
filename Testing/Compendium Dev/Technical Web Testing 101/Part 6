                    Technical Web Testing 101
                    Course Notes Part 6


Exercise: View Page Source Challenges
  - The challenge in this section is to Find and use the View Page Source functionality
  - For each browser, identify how to access the View Page Source functionality
  - There are different approaches and each tester will have a preference
  - Then Compare the functionality of the different browsers View Page Source
    - What are the differences that you noticed
    - It is a good idea to write these down so as to remember where each may be of use
    - These will also evolve over time so doing the checks every so often may be of benefit
  - Ask how might the differences help your testing
    - Answering this sets you on your way to gaining an edge over other testers and developers
    - Identify alternative functionality for something do not just rely on what something is supposed to do
      - A lot of people do this and don't see what an application can do
  - Always try and identify gaps in your knowledge
    - Time shouuld then be spent plugging those gaps where possible
  - Find some reference sites that will help understand what  HTML tags and other HTML, CSS, JS commands and syntax mean
  - A tester get in the habit of looking for their own answers

View Page Source Challenge Slide Retrospective
  - Compare Functionality to find Differences Between Browsers
  - To get to the source page
    - All browsers have the right click action available
    - This is the only action available in Edge as Ctrl|U does not work
    - IE has a menu option for View -> source
      - Opera has the option under Developer -> View Source
    - Firefox allows for adding view:source instead of http:// to the beginning of a url
  - All browsers have color coding for syntax
  - IE (11)
    - The view source is very basic similar to a notepad view
    - There are no clickable links in the source
      - This means links will have to be pasted into the address bar
    - Find is a dialog which may make it a little more difficult to use
  - Chrome
    - Using find in Chrome will show all matches in the scroll bar
      - This should make it easier to find the items being searched for
    - When using the inspect functionality Chrome uses the DOM view
      - Again this should make finding things like differences easier
    - Chrome does not open links in view-source, it opens them as a rendered view
  - Edge Browser
    - Like in Chrome using find will show all matches in the scroll bar
    - Edge does not have clickable links but can ctrl+click to open a link as source in the in the debugger 
      - It does not however open images
  - Firefox
    - Fireox is the only browser to show syntax errors in the html
    - Click on links to open those files as ‘source’ (ctrl opens in a new window)
    - Find shows the matching tag and use keys to navigate through
    - Inspect in Firefox on source shows the rendered source view, not the DOM view 
  - Safari
    - Find is like Firefox and it shows the matching tag and use keys to navigate through
    - There are clickable links and Safari views css as source 
      - This means it shows images as images and html links open in a new tab
  - There are some general conclusions
    - FF is best for identifying syntax errors and for navigating source on clicks
    - Chrome and Edge are the best for finding things
    - IE maybe the best for differentiating between code and copy (comments etc)
  - Browers will change with versions so check back regularly
  - Examine real code where possible to build skill

View Page Source Challenge Live Retrospective
  - A quick demo session of how some of the above information was obtained by the instructor



Incognito Mode - A Technical Web Testing Browser Challenge
Section Intro - Incognito Mode - A Technical Web Testing Browser Challenge
  - The purpose of this Technical Web Testing Challenge is to spend about an hour
    - Performing a guided investigation of another very simple browser function
  - Students should watch the introduction and the challenge exercise
    - After that then work through the exercise
  
Incognito Mode Introduction 
  - Incognito mode also known as private browsing mode
  - There is something that testers often forget when testing websites
    - Multi-user interaction which is the impact one user can have on another
    - This is because testers often test on an individual basis
    - Individual interactions with the system therefore make sense
    - There needs to be a reminder when testing to go beyond a single user
  - Incognito mode is the browser's way of going beyond a single user mode
    - Windows has been easier to test multiple users than OSX
    - Windows just needs starting multiple versions of a browser
    - Mac OSX tends to centralise cookie jars which may mean sharing tools
      - This can have problems eg logging in to a tool in the broswer logs in elsewhere
    - Windows does not share the same as OSX but does share some internet connection items
    - It is important to know what is shared eg sessions etc
  - Incognito mode tells the browser explicitly that different sessions are wanted
  - Incognito and Private browsing Modes
    - These create a temporary session that is secret
      - There is no sharing of history, cache, cookies etc of any other user
    - This mode creates a temporaty session that is deleted and erased when the browser tabs are closed
      - These are the incognito tabs that need to be closed
  - Using Incognito mode
    - You can login using the same logged in user from a non incognito session
      - This can test how concurrent sessions are handled
  
