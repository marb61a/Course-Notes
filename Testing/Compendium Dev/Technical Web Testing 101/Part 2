                    Technical Web Testing 101
                    Course Notes Part 1

(Course is being updated so some material may be listed differently due to be moved)

Applications to use for Testing
Some free online applications to test against
  - You can use some free apps for testing if you do not have an app of yourself
  - A lot of these applications are aimed at hackers and security testing
    - This is not the aim of this type of testing 
    - There is a very slim line between some types og functionality testing and security testing
    - https://google-gruyere.appspot.com/
    - https://hack.me/
    - http://demo.testfire.net/

Self Study Applications to test against
  - Recommendations for self study
  - The above applications are highly recommended by the course instructor



Modern Browsers
Intro to Modern Browsers
  - Modern browsers have a lot of functionality to the apps listed above
    - Observe traffic through tools such as Firebug and the developer console
    - Fiddle and tamper with the DOM before use
    - You should explore to see how far you can get
    - This can help if you are unable to install and run a proxy server

Heuristic Overview Form follows function
  - https://en.wikipedia.org/wiki/Form_follows_function
    - Form follows on from the functionality of what is being built
    - Form should support what something is supposed to do
  - This can help understand testing
    - The form of testing can be restricted by tool restraints
    - This will allow testers to seek out tools and better learn about technology
  - Functionality of tools can open up new forms of testing
    - Learning about tools and technology will improve testing
    - For example using the devices available in dev tools
    - If you do not know about these tools they cannot be used
    - Understand what form testing is to take can help finding tools
    - Do not be limited by official documentation

Google Chrome Device Toolbar
  - The device toolbar allows for simulating mobile devices
  - It is available on the left hand side of the dev tools toolbar
  - It opens up a lot of testing possibilities
    - CSS Testing, Layout Testing across multiple devices
  - There are a lot of options available in dev tools
    - They will have to be found by experimenting as no documentation exists
  - Some options are not available until others are used
  - Screenshots can be generated in the browser
    - These will not use the actual device rendering engine but a browser simulation of it
  - On respoosive set to 100%
    - The view will be a normal desktop view
    - The User Agent Redirection Page can be used to demonstrate what responsive is
    - Different headers will be sent through depending on what device you are looking at
    - The server will think that you are on a certain device eg mobile
      - This will not fully replace using a mobile device for testing
  - Using the Add device type option
    - You can add various devices types to extending testing
    - For example you can be on Responsive and Desktop
    - You can also have responsive and mobile
      - Different events can be fired when on mobile
      - Using the mobile setting will stop any hover events being fired
        - This will stop some dropdown menus from working
    - There is an option to make more devices available
      - Also in the same menu is the option to add custom devices
  - When using the device options css testing can benefit
    - You can see if the styles arrive in from different sources
    - You can also see and test breakpoints
  - Rendering testing is simulation not emulation

Google Chrome Docking Help
  - On the right hand side of the dev tools toolbar are more options
    - Included is the option to change how the dev tools appears
      - The tools can be on the bottom, side or a separate tab
  - The console drawer is useful to keep open
  - Run command can be very useful
    - Chrome may hide functionality but run command will enable you to find it
    - If a screenshot is need while not is mobile view
      - Simply type screenshot into the input box where code completion is available
      - Keyboard shortcut is Ctrl|Shift|P
      - This can negate the need for a separate screenshot tool (full page is already available)
  -

Google Chrome Elements DOM View
  -

Google Chrome Network Tab
  -
