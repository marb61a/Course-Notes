                    Postman: The Complete Guide
                    Course Notes Part 2


Creating with API requests
Note about requestbin
  - The following lectures will be using an online tool called Requestbin.
    - http://requestbin.net/
  - It is recommended that students use this site
  - There is a caveat involved as this works differently than the videos show
  - There are also some other sites recommended
    - https://httpbin.org/
    - https://hookbin.com/
    - There is also an option to run an instance using Docker
      - https://github.com/Runscope/requestbin#deploy-your-own-instance-using-docker

Creating Requests
  - HTTP requests have 4 parts 
    - The request method such as GET, POST, PUT etc
    - The url where the request is to be sent
      - Using the requestbin site, you will need to create a requestbin
      - This will then generate a url which can be used for testing
        - In the video a paramterless request will return ok
        - Using now it will return an IP address
      - Reloading the postbin page will then show the methods involved and the headers as well as other information
      - After running postman with parameters in the request postbin will show the parameters as query string on the left of the page
      - By default what Postman sends is not urlencoded
        - If there are spaces between params sent they will be seen on requestbin with spaces
        - A single space that is url encoded is shown as %20
      - If you wish to url encode params being sent then you can right click and select encodeURIComponent
      - You can add descriptions to your postman requests
      - There is also an autocomplete available which will complete URL addresses being entered
      - Postman also supports path variables
        - Instead of having a user number eg user2, you could have :userid
      - It is good practice to check headers prior to send a request
    - Headers
      - These are also part of the request and have the form of a key-value
      - You can define your own headers as well as making use of your own
      - When you try to add a key you will get a drop down list of posssible pre-defined options
      - When selecting a header option if you send the request to requestbin it will show this option (after a page refresh)
      - The same goes for headers you are defining yourself
      - There are a number of headers that are automatically sent by Postman
      - Some of the headers that appear are from the request rather than Postman
    - Body
      - Body will only be visible for requests other than GET
      - form-data and x-www-form-urlencoded are very similar
        - This is similar to standard HTML forms being submitted
        - The difference will be that requests in urlencoded option will be automatically urlencoded
      - Postman will add a Content-Type to request
        - EG Form and Post parameters will show as will Content-Type: multipart/form-data
      - REST API's will expect requests in a certain format
        - This is usually JSON but some API's will accept other format eg XML
      - Binary is designed for info to be sent to your API that cannot be entereed into Postman
        - One example is an image file
        - Postman will give you an option to select a file which can then be sent to your server
      - When entering JSON pressing ctrl-b will automatically format the text properly
      - You cannot use form-data option for JSON you must use raw
      
Importing request from your browser
  - Importing complex requests with many parameters from your browser
  - The example uses the Trello which is a kanban application for todos
  - Also it is assumed that the request being made uses XHR
    - https://en.wikipedia.org/wiki/XMLHttpRequest
  - In the Chrome Dev-Tools Network panel
    - To open Dev-tools right click an element and select inpsect element, then select the Network tab 
  - Right click the sent request and the copy option and then copy as cURL
  - In the top bar select import and there is the option paste raw text and then import
  - Postman will fill the appropriate fields automatically

