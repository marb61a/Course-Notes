                    The definitive, step-by-step guide to Git
                    Course Notes Part 3


5 - Basic Git Workflow (add, commit, pull & push)
Filler text available - http://meettheipsums.com
Home directory noted by tilde ~
You can change your environment to show what branch of a repository you are on
Authour uses Textmate on MAC - Using touch filename on Linux will work the same and there are many ways of doing this on 
any platform
git add filename - adds file to staging area
git commit - without options will open text editor for commit message
Uses SHA1 for unique identifier for commit
After commit there is nothing left in the staging area
git pull origin master will pull any changes to the remote repository down to local repository
Author recommends always doing a pull before a push to maintain sync
git push origin master will push local commits to remote repository
You will need to enter your Github credentials to push commits to remote Github repository

6 - Tracked Files
.gitconfig - Git configuration file
  - Contains user email etc
You can short cut git commiting updates
  - git commit -am "message"
  - -a will add to staging area but only works with tracked file
To list the files being currently being tracked in the repository
  - git ls-files

7 - Editing Files
Git status allows you to see both staged and unstaged files
Use the staging area for longer file changes

8 - Recursive Add
mkdir -p level1/level2/level3/level4/level5 -- Creates a nested folder structure 5 levels deep
-p can be used to make parent directories --parents can also be used
cd ../../.. - can be used as many times as need to get back to folder root
To add files recursively
  - git add . 

9 - Backing Out Changes
You can issue git command from most places within the repository
To remove file from staging area
  - git reset HEAD filename eg git reset HEAD file1.txt
To discard changes
  - git checkout --filename eg git checkout --file1.txt

10 - Renaming and Moving Files
Uses git commands rather than OS to rename files
  - git mv ooldfile newfile eg git mv file1.txt file2.txt
  - Name changes have to be committed
BASH shell also uses mv but there is no git prefix
Using the OS to rename files makes git think that 2 operations have taken place
  - File removed and new file added
To add new files and recursively add changes
  - git add -A
You can use git mv to rename files in the staging area rather than resetting and then renaming

11 - Deleting Files
You cannot use Git to delete untracked files
rm filename - a shell command for removing files
Git has its own removal command for staged files
  - git rm filename
  - removal has to be committed
You can also backout of deleting files
Tab completion will not work on files that are not in the git working directory
To remove recursively using shell commands
  - rm -rf foldername
Be very careful using the removal command

12 - History
git help     -- This command will bring up the manual pages for git
git help log  -- This will bring up the man page for log which will be used for git history
git log    -- This will show the commit history for the repo in reverse chronological order
git log --abbrev-commit     -- This will show the SHA1 commit identifier in shorter format
git log --oneline --graph --decorate     -- This command will
  - Compress entries into one line
  - Provide an ASCII graph depicting a branching graph
  - Will add labels or tags or any annotations
You can use git log to specify a range using the shortened SHA1 id as beginning and end values
git log --since="3 days ago"    -- This will list the commits in the past 3 days
git log -- filename     -- This will show the commit history for a specific file
git log --follow -- filepath    -- This will show commits for a renamed file
git show commitID     -- Will show information from a specific commit

13 - Git Alias
Setting up aliases in GIT
You can use aliases to associate a created command with alias
Example Syntax
  - git config -- global alias.hist "log --all --graph --decorate --oneline"
  - This will assign the name hist to the commands in the brackets
  - running git hist will run git log --all --graph --decorate --oneline
Git aliases are stored in the .gitconfig under the alias section

14 - Ignoring Unwanted Files and Folders
You will probably want to exclde Operating Systems files
Using .gitignore file to exclude files
Git ignore patterns - 1 per line
  - Specific File -- MyFile.ext
  - File Pattern -- *.ext
  - Folder -- my-folder/
.gitignore will need to be tracked and added

15 - Cleanup and Back to Origin (GitHub)
Synchronizing back up to the remote repository
Git status will tell you about commits being ahead of remote repository

16 - Git Basics Resources
PDF file of resources/commands from the chapter
