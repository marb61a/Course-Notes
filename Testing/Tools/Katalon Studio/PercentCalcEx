using System;
using System.Text;
using System.Text.RegularExpressions;
using System.Threading;
using OpenQA.Selenium;
using OpenQA.Selenium.Firefox;
using OpenQA.Selenium.Support.UI;
using AventStack.ExtentReports;
using AventStack.ExtentReports.Reporter;
using Microsoft.VisualStudio.TestTools.UnitTesting;

// Needed to run tests in parallel
[assembly: Parallelize(Workers = 0, Scope = ExecutionScope.MethodLevel)]
namespace AutoloanExProject
{
    [TestClass]
    public class UnitTest1
    {
        private IWebDriver driver;
        static ExtentReports testReports;
        static ExtentHtmlReporter htmlReport;
        public TestContext TestContext { get; set; }

        [TestInitialize]
        public void Setup()
        {
            // Generating reports
            if (testReports == null)
            {
                testReports = new ExtentReports();
                htmlReport = new ExtentHtmlReporter(@"C:\Users\stester13\source\repos\AutoloanExProject\AutoloanExProject\Reports\");
            }

            testReports.AttachReporter(htmlReport);
            driver = null;
        }


        [TestCleanup]
        public void Cleanup()
        {
            driver.Quit();
            testReports.Flush();
        }

        [DataSource("Microsoft.VisualStudio.TestTools.DataSource.CSV", @"Data\LoanData.csv", "LoanData#csv",
        DataAccessMethod.Sequential)]
        [TestMethod]
        public void LoanCalc()
        {
            driver = new FirefoxDriver();
            string LoanAmount = TestContext.DataRow[0].ToString();
            string SaleTax = TestContext.DataRow[1].ToString();
            string UpfrontPayment = TestContext.DataRow[2].ToString();
            string TotalOfLoanPayments = TestContext.DataRow[3].ToString();
            string TotalInterest = TestContext.DataRow[4].ToString();
            string TotalCost = TestContext.DataRow[5].ToString();

            driver.Navigate().GoToUrl("https://www.calculator.net/auto-loan-calculator.html");
            driver.FindElement(By.LinkText("Auto Loan Calculator")).Click();
            driver.FindElement(By.Id("cloanamount")).Click();
            driver.FindElement(By.Id("cloanamount")).Clear();
            driver.FindElement(By.Id("cloanamount")).SendKeys("1000");
            
            try
            {
                driver.Manage().Window.Maximize();
                Thread.Sleep(2000);
            }
            finally
            {
                driver.FindElement(By.Id("cloanterm")).Clear();
                driver.FindElement(By.Id("cloanterm")).SendKeys("60");
                driver.FindElement(By.Id("cinterestrate")).Click();
                driver.FindElement(By.Id("cinterestrate")).Clear();
                driver.FindElement(By.Id("cinterestrate")).SendKeys("6");
                driver.FindElement(By.Id("cdownpayment")).Click();
                driver.FindElement(By.Id("cdownpayment")).Clear();
                driver.FindElement(By.Id("cdownpayment")).SendKeys("500");
                driver.FindElement(By.Id("ctradeinvalue")).Click();
                driver.FindElement(By.Name("cstate")).Click();
                new SelectElement(driver.FindElement(By.Name("cstate"))).SelectByText("New Hampshire");
                driver.FindElement(By.XPath("//table[@id='calinputtable']/tbody/tr[6]/td[2]/select/option[31]")).Click();
                driver.FindElement(By.Id("csaletax")).Click();
                driver.FindElement(By.Id("csaletax")).Clear();
                driver.FindElement(By.Id("csaletax")).SendKeys("7");
                driver.FindElement(By.Id("ctitlereg")).Click();
                driver.FindElement(By.Id("ctitlereg")).Clear();
                driver.FindElement(By.Id("ctitlereg")).SendKeys("300");
                driver.FindElement(By.XPath("//input[@value='Calculate']")).Click();
            }
            
            
        }

        [DataSource("Microsoft.VisualStudio.TestTools.DataSource.CSV", @"Data\Data.csv", "Data#csv",
        DataAccessMethod.Sequential)]
        [TestMethod]
        public void PercentCalc()
        {
            driver = new FirefoxDriver();

            string num1 = TestContext.DataRow[0].ToString();
            string num2 = TestContext.DataRow[1].ToString();
            string expectedResult = TestContext.DataRow[2].ToString();

            driver.Navigate().GoToUrl("https://www.calculator.net/percent-calculator.html");
            driver.FindElement(By.LinkText("Percentage Calculator")).Click();
            driver.FindElement(By.Id("cpar1")).Click();
            driver.FindElement(By.Id("cpar1")).Clear();
            driver.FindElement(By.Id("cpar1")).SendKeys(num1);
            driver.FindElement(By.Id("cpar2")).Click();
            driver.FindElement(By.Id("cpar2")).Clear();
            driver.FindElement(By.Id("cpar2")).SendKeys(num2);
            driver.FindElement(By.XPath("//input[@value='Calculate']")).Click();

            Assert.AreEqual(expectedResult, driver.FindElement(By.Id("h2result")).Text);
        }
    }
}
