using System;
using System.Text;
using System.Text.RegularExpressions;
using System.Threading;
using OpenQA.Selenium;
using OpenQA.Selenium.Firefox;
using OpenQA.Selenium.Chrome;
using OpenQA.Selenium.Support.UI;
using Microsoft.VisualStudio.TestTools.UnitTesting;

namespace GetAttributeExProject
{
    [TestClass]
    public class UnitTest1
    {
        private IWebDriver driver;

        [TestInitialize]
        public void Setup()
        {
            driver = new FirefoxDriver();
        }


        [TestCleanup]
        public void Cleanup()
        {
            driver.Quit();
        }

        [TestMethod]
        public void FirefoxTest()
        {
            driver = new FirefoxDriver();

            driver.Navigate().GoToUrl("https://www.calculator.net/bmi-calculator.html");
            driver.FindElement(By.LinkText("US Units")).Click();

            IWebElement cage = driver.FindElement(By.Id("cage"));
            string actualCage = cage.GetAttribute("value");
            string expectedCage = "25";
            Assert.AreEqual(actualCage, expectedCage);

            IWebElement maleButton = driver.FindElement(By.Id("csex1"));

            // Will make the assertion fail if active
            // IWebElement femaleButton = driver.FindElement(By.Id("csex2")).Click();

            if (maleButton.Selected == false)
            {
                Assert.Fail();
            }

            IWebElement feet = driver.FindElement(By.Id("cheightfeet"));
            string actualFeet = feet.GetAttribute("value");
            string expectedFeet = "5";
            Assert.AreEqual(actualFeet, expectedFeet);

            IWebElement inch = driver.FindElement(By.Id("cheightinch"));
            string actualInch = inch.GetAttribute("value");
            string expectedInch = "10";
            Assert.AreEqual(actualInch, expectedInch);

            IWebElement cpound = driver.FindElement(By.Id("cpound"));
            string actualCpound = cpound.GetAttribute("value");
            string expectedCpound = "160";
            Assert.AreEqual(actualCpound, expectedCpound);

            driver.FindElement(By.XPath("//input[@value='Calculate']")).Click();
        }

        [TestMethod]
        public void ChromeTest()
        {
            driver = new ChromeDriver();

            driver.Navigate().GoToUrl("https://www.calculator.net/bmi-calculator.html");
            driver.FindElement(By.LinkText("US Units")).Click();

            IWebElement cage = driver.FindElement(By.Id("cage"));
            string actualCage = cage.GetAttribute("value");
            string expectedCage = "25";
            Assert.AreEqual(actualCage, expectedCage);

            IWebElement maleButton = driver.FindElement(By.Id("csex1"));

            // Will make the assertion fail if active
            // IWebElement femaleButton = driver.FindElement(By.Id("csex2")).Click();

            if (maleButton.Selected == false)
            {
                Assert.Fail();
            }

            IWebElement feet = driver.FindElement(By.Id("cheightfeet"));
            string actualFeet = feet.GetAttribute("value");
            string expectedFeet = "5";
            Assert.AreEqual(actualFeet, expectedFeet);

            IWebElement inch = driver.FindElement(By.Id("cheightinch"));
            string actualInch = inch.GetAttribute("value");
            string expectedInch = "10";
            Assert.AreEqual(actualInch, expectedInch);

            IWebElement cpound = driver.FindElement(By.Id("cpound"));
            string actualCpound = cpound.GetAttribute("value");
            string expectedCpound = "160";
            Assert.AreEqual(actualCpound, expectedCpound);

            driver.FindElement(By.XPath("//input[@value='Calculate']")).Click();
        }

    }
}
