                          Beginner To Guru Part 1
                          Course Notes


1 - Apache Maven Introduction
  - A welcome to the course
  - Introduction to the instructor
  - You should make the time to complete the course
  - All Source Code Examples for the Course are available in GitHub
    - Each section has a beginning and end branch for student comparison 
  - The recommended workflow
    - Fork repos to your own github account as they are good for showcasing skills
    - Students should also code along and compare their code to course code
  - IntelliJ is the recommended IDE
    - Not compulsoty but students can get a 120 day trial
  - There are many reasons to use Maven
    - Maven has ~70% of the build tool market for Java applications
    - Very common in large companies
    - Supported by all major IDEs
    - It is commonly used in large Open Source projects such as Spring
  - There are advantages to using Maven
    - Quick setup due to Maven favouring conventions over configuration
    - The projects are modular
    - There is a large selection of plugins available
    - The project build lifecycle is matured
  - Maven is the De Facto Standard
    - Maven standards are used by other build tools
    - Maven Standard Directory Layout used by Gradle
    - Artifact Repositories of which Maven established the structure.
    - Some of these adopted standards did not exist prior to Maven
    - New build tools are compatible with these ‘standards’
  - There are some Maven Disadvantages
    - Projects are described in and XML document, constrained by an XML Schema
    - Some developers consider XML dated
    - Groovy DSL, which can offer greater build flexibility is used by Gradle
    
