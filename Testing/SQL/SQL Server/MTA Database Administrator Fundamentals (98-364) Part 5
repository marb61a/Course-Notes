                    MTA Database Administrator Fundamentals (98-364) Part 5

Adding Data
Inserting Data
  - The INSERT Statement is part of DML
  - This adds rows to a table
  - It is good coding practice to always provide a column list
  - Always match data types
  - There are extensions to the INSERT statement such as INSERT... SELECT and INSERT.... EXEC
  - You can insert multiple rows but need an INSERT for each
  - You can also insert partial rows but neeed to properly state the fields
  - Syntax is INSERT INTO tbl_name (Column_List) VALUES (Values Matching Comma List
  
Updating and deleting Data
Updating Data
  - Syntax for updating is UPDATE tbl_name SET column_list = values
  - You can restrict rows that can be changed
  - This is done using a WHERE clause
Deleting Data
  - It is used to change existing rows in a table
  - Uses the DELETE keyword
  - It removes records from a table and is fully logged
  - You generally cannot delete a row which is the parent of another
  - There is a more complex form of DELETE available where you delete based on what is found in another table
  - This is generally done with a sub-query
  - This sub-query determines which rows are to be deleted
  - You can use joins, this in SQL Server specific and not ANSI standard
  - There are 2 FROM clauses involved, the 1st indicates the table to be deleted from, the 2nd indicates selection criteria
  - Where criteria are not satisfied there will be no deletions
Transactions
  - You can put queries in between certain keywords which makes them into transactions
  - This means that they can be completed or undone if errors occur
  - Transactions are a logical unit of work, which means something is done successfully or not at all
  - This helps prevent anomalies from occuring
  - To begin a transaction the keywords BEGIN TRAN are used
  - To make changes permanent use the COMMIT TRAN keywords
  - To undo changes use the ROLLBACK TRAN keywords
 
Working With Views
View Defined
  - A view is a virtual table defined by a query
  - Every view must include a SELECT statement
  - The view is simply this SELECT statement which is saved in the db and named
  - A view does not take any extra disk space and there are no copies of the data made
  - To create a view use CREATE VIEW view_name AS SELECT....
  - Views can be used to hide complex db design
  - They can be used to limit access to certain columns or rows
  - Views can simplify permissions, virtually rename columns, provide aggregation
  - They can organise data for movement, export and reporting
  - The can improve the speed of aggregates especially for large structures
View Types
  - There are several types of views
  - Standard view
  - Indexed view which is materialised as it is computed and stored thus taking up space
  - Partitioned views which are horizontally segregated data from multiple databases and servers
    - Although from different sources they act like one table
Standard View
  - This does not contain any data
  - It saves the syntax for SELECT statements
  - It does not include ORDER BY unless it has TOP IN
  - It can refer to another view
  - A view can join 2 views together
    - These can be nested upto 32 levels deep
  - It can have many columns and can be encrypted
  - To remove a view use the syntax DROP VIEW view_name
  - You can use the Object Explorer to graphically set up views
    - Right click on the views folder in a db and create view
    - You will be asked to add tables etc

Stored Procedures and Functions
Stored Procedures
  - This is a named collection of SQL statements saved on the server
  - It acts like a small program but is just a group of statements executed together
  - There are several types of System Stored Procedures
  - There are other types such as remote, local, temporary, clr and extended
  - They can accept bot input and output parameters
  - You can pass a value in, have a parameter passed out and an automatic result set
  - There is an integer associated with retrun status to indicate success or failure
  - They can be used to encapsulate repetitive tasks
  - They can improve performance by reducing network activity by sending multiple statements together
  - Implementation details can also be hidden
    - This is good practice across a lot of IT fields
  - They provide security
  - Vulnerability to SQL Injection attacks can be reduced
  - To create a Stored Procedure use the CREATE command
  - By default they will be in the database you are currently operating in
  - These can be nested upto 32 levels deep
  - It can call itself
  - It can be large, up to about 250mb
  
  
