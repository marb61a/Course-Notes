                    MTA Database Administrator Fundamentals (98-364) Part 6
                    Course Notes


Data Normalisation
Database Design Phases
  - The first phase of database design is the conceptual phase
    - This deals with the conceptual idea of the business
    - You will decide what items are and aren't important
    - How do these items then relate to one another
    - User views of the db are in user language
  - The second phase of the process is the Logical phase
    - This is where normalisation techniques are used which will optimise data appropriately
  - The next phase is the Physical phase
    - This involves working with a specific database
    - Primary and Foreign keys will be implemented
DB Normalisation
  - This is the formal methodology for logical DB design
  - This is where the tables are organised and refined
  - This process makes the DB more flexible and easier to maintain
  - Redundancy is reduces in the DB
  - It helps address anomalies cause by INSERT, UPDATE and DELETE
  - It also helps to avoid query bias, this means not answering 1 particular question
    - It means being able to answer questions about many different areas
  - It makes it easy to add new information without needing fixes
  - Each attribute must be a fact about the key
DB Design Problems
  - Poor DB design can kill a project
    - The project can be rejected due to performance and maintainability issues
  - Good design methodology can help eliminate redundant data
Anomalies
  - Row INSERT Anomoaly
    - INSERT Anomaly is the inabilty to add records because a primary key is not available
    - DELETE Anomaly similar to above but where records are being removed from a table
    - UPDATE Anomaly is related to redundant data too, if there is redundant data the will be inconsistencies

First Normal Form
Overview of Normal Forms
  - EF Codd first developed the process of normalisation
  - Each level is more stringent than the previous one
  - Boyce-Codd developed a more stringent form of the 3NF
  - This is known as BCNF
  - Most modellers try to design to 3NF which avoid many DB issues
1NF Rules
  - All attributes depend on the key
  - Rows are uniquely identifiable
  - There are no duplicate rows
  - Eliminate repeating groups, they are also called multi-valued dependencies
  - Attribute values must be atomic, that is non-decomposable
  - Non-decomposable means in the smallest form you intend to use
  - Every entity has to have a primary key
  - This is implemented by creating a separate entity for each set of related attributes, each has a primary key
  - All attributes depend on the key
Candidate Keys
  - An entity can have many candidate keys
  - Each candidate key is one or more columns
Primary Keys
  - A primary key is the one or more attributes that uniquely identify a row
  - EF Codd said only 3 pieces of information are needed to ID a value or retrieve a row
  - These are Table name, Column name and PK of the row
  - Every row must have a PK value that is not NULL
  - All values must be unique
  - They can contain one or more columns
  - Sometimes more than 1 column is needed for the proper uniqueness
  - This is called a composite primary key
  - PK's should be short and stable
  - Integers make good primary keys
  - You should try not to use natural keys
  - These are keys which have a value such as a personID
  
  
  
