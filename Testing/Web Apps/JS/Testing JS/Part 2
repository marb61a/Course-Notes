                    Testing JavaScript
                    Course Notes Part 2


4 - Support Async Tests with JavaScripts Promises through async await

5 - Provide Testing Helper Functions as Globals in JavaScript

6 - Verify Custom JavaScript Tests with Jest

7 - Lint JavaScript by configuring and running ESLint

8 - Install and run Prettier

9 - Configure Prettier

10 - Use eslint-config-prettier to disable unnecessary ESLint stylistic rules

11 - Validate all files are formatted when linting

12 - Install, run and configure Flow

13 - Run the validate script in a pre-commit git hook with husky

14 - Auto-format all files and validate relevant files in a precommit script with lint-staged

15 - Override Object Properties to Mock with Monkey-patching in JavaScript

16 - Ensure Functions are Called Correctly with JavaScript Mocks

17 - Restore the Original Implementation of a Mocked JavaScript Function with jest.spyOn

18 - Mock a JavaScript module in a test

19 - Make a shared JavaScript mock module

20 - Install and run Jest

21 - Transpile Modules with Babel in Jest Tests

22 - Configure Jest’s test environment for testing node or browser code

23 - Support importing CSS files with Jest’s moduleNameMapper

24 - Support using webpack CSS modules with Jest

25 - Generate a Serializable Value with Jest Snapshots

26 - Test an Emotion Styled UI with Custom Jest Snapshot Serializers

27 - Handle Dynamic Imports using Babel with Jest

28 - Setup an afterEach Test Hook for all tests with Jest setupTestFrameworkScriptFile

29 - Support custom module resolution with Jest moduleDirectories

30 - Support a test utilities file with Jest moduleDirectories

31 - Step through Code in Jest using the Node.js Debugger and Chrome DevTools

32 - Configure Jest to report code coverage on project files

33 - Analyze Jest Code Coverage Reports

34 - Set a code coverage threshold in Jest to maintain code coverage levels

35 - Report Jest Test Coverage to Codecov through TavisCI

36 - Use Jest Watch Mode to speed up development

37 - Run Jest Watch Mode by default locally with is-ci-cli

38 - Filter which Tests are Run with Typeahead Support in Jest Watch Mode

39 - Run tests with a different configuration using Jest’s --config flag and testMatch option

40 - Support Running Multiple Configurations with Jest’s Projects Feature

41 - Test specific projects in Jest Watch Mode with jest-watch-select-projects

42 - Run ESLint with Jest using jest-runner-eslint

43 - Run only relevant Jest tests on git commit to avoid breakages

44 - Install and run Cypress

45 - Write the first Cypress Test

46 - Configure Cypress in cypress.json

47 - Installing cypress-testing-library

48 - Scripting Cypress for local development and Continuous Integration

49 - Debug a test with Cypress

50 - Use Cypress to test user registration

51 - Cypress Driven Development
