                    ISTQB Certified Tester Foundation Level
                    Course Notes Part 25
                    
                    
White-Box Test Techniques
  - White-Box test techniques may also be referred to as structural or structure based techniques. 
    - They can also go by other names like Glass-Box techniques.
  - With White-Box test techniques, we concentrate on the structure and the processing within the test object. 
    - This is in stark contrast to Black-Box test techniques, where we are not concerned at all about the internal structure. 
  - White-Box testing techniques are based on an analysis of the Architecture as well as the Detailed design. 
  - The Internal structure, and the Code of the test object comprise the basis for White-Box test techniques. 
    - Common characteristics of White-Box test techniques include 
      - The fact that the test conditions, test cases, and test data are Derived from a test basis.
  - That includes the architecture, detailed design, and any other sources of information regarding the structure of the software. 
    - Coverage for white-box testing is measured, based on the items tested within the selected structure. 
    - Specifications, are very often used as an additional source of information 

Experience-Based Test Techniques
  - Experience-based test techniques, leverage the experience of members of the team. 
    - That's developers, testers, users and even other stakeholders, in the design, implementation, and execution of tests. 
    - In practice, these techniques are often combined with both Black-Box and White-Box test techniques.
  - Common characteristics of Experience-based test techniques include:   
    - Test conditions, test cases, and test data that are derived from a test basis. 
    - That may include knowledge from testers, from developers, from users, and even other stakeholders. 
    - This knowledge and experience includes the expected use of the software, how that software is going to be used, its environment.
    - The likely defects that are going to show up in the software, as well as, the distribution of those defects. 
    - With Experience-based test techniques, really what we're doing, is taking full advantage of the experience members of the project 

Error Guessing
  - Error guessing is an experience-based testing technique which is used to anticipate the occurrence of problems, mistakes, defects, 
  - This is based on the tester's knowledge of the software and the domain. 
    - The tester's knowledge may include the previous functioning of the software.
    - In other words, how was the application used? Or how did it work in the past? 
    - What types of mistakes did developers tend to make in previous incarnations of this software or projects similar to it?
    - And failures that have occurred in other similar applications. 
    - A methodical approach to the error guessing test technique is to generate a list of potential mistakes, defects, and failures. 
  - These mistake, defect, and failure lists may be built based on experience, defect, and failure data. 
    - Or from common knowledge about why software fails. 
    - Benefits of Error Guessing test techniques include that it relies on the tester's knowledge. 
    - Or takes advantage of the tester's knowledge in the area. 
    - It helps to be able to prioritize further testing. 
    - Error Guessing test techniques can locate otherwise, overlooked defects.

Exploratory Testing
  - In Exploratory Testing, informal, that is not predefined tests, are designed, executed, logged, and evaluated. 
    - This is done dynamically during the execution of the tests. 
    - The results are used to learn more about the component or the system and then to go further 
      - To create tests for the areas that may need or require more testing.
  - Exploratory testing allows the tester to perform the maximum amount of testing with minimal planning. 
    - Exploratory testing is sometimes conducted using what's called session-based testing, to structure the activity. 
    - In session-based testing, exploratory testing is performed within a predefined time-box 
    - The tester uses a test charter that contains the test objectives, in order to guide the testing.
  - With exploratory testing, the tester may also use test session sheets
  - These allow them to document the steps followed and the discoveries that they made. 
  - Benefits of exploratory testing include when there are few or perhaps inadequate specifications,
    - Exploratory testing is also very useful, because of the minimal amount of planning and pre-work that goes on before testing, 
    - Because of its ad-hoc nature, exploratory testing is also very helpful when complementing other more formal testing techniques. 
    - And one thing to keep in mind, that exploratory testing is strongly associated with what's called reactive test strategies. 
    - And can incorporate the use of other black-box, white-box and experience-based techniques.

Checklist-Based Testing
  - In Checklist-Based testing, testers design, implement, and execute tests designed to cover test conditions 
    - These are contained in a checklist.
  - In their analysis, testers create a new checklist, or amend or expand an existing checklist. 
  - However, testers may also choose to use an existing checklist without modifying it in any way.
  - When checklists are built, they can be built based on the prior experience of those building the checklist. 
  - Based on user preference, that is, information or knowledge about what the user thinks is important. 
  - When building checklists, it's also helpful to consider the reasons why and how software typically fails. 
  - Checklists can be created to support various test types. And this includes both functional and non-functional testing.
  - The benefits of Checklist-Based testing include. 
    - In Checklist-Based testing, experienced testers can base their past experience and prepare the checklist, 
    - This functions as a pseudo manual to direct the testing process. 
    - The typical checklist is of high and standard level as far as testing goes
    - It consistently reminds the tester of what they should be testing.
  - Now, when there's an absence of detailed test cases
    - Checklist-Based testing may work to provide guidelines and some degree of consistency. 
    - Another benefit is that checklists prepared by testers aren't static. 
    - So, they may be amended or changed, altered in some way in order to meet the requirements of the testing.
    - Since, they are high-level lists, there is some variability in the actual testing likely to occur. 
    - This results in potentially greater coverage but less repeatability. 
    - The checklist, as a benefit is the only tool in this form of testing that ensures complete test coverage.

