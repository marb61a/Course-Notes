                    ISTQB Certified Tester Foundation Level
                    Course Notes Part 39
                    

Components and kinds of test plans (Cont)
  - A test plan is ideally a master test plan that accommodates all the revisions made to the plan as the test progresses. 
    - This helps you reduce redundant documentation. 
    - You can create the master plan during the early stages of a project
      - Include the planned high-level test activities in it.
  - You can choose acceptance testing to test these product features and ensure that it is completed on time.
  - To identify critical defects and ensure that the software is compatible with the hardware, you perform system testing.
  - You can check whether the software can operate with the modules already developed using integration testing. 
    - Checking the code or any component of the software can be performed using component testing. 
      - The test plans for all the Acceptance, System, Integration, and Component test levels are combined 
        - This will create a master test plan.
  - You can create test plans at various levels and derive these plans from the master test plan. 
  - Acceptance test plan
    - You begin acceptance test planning in the early stages of the product life cycle 
    - This is after the high-level requirements are defined. 
    - Acceptance testing ensures that all requirements are met. 
  - System test plan
    - System testing is comprehensive testing on the performance and reliability of the software. 
  - Integration test plan
    - You ensure that all the components of a system interact and function cohesively through integration testing. 
    - You can start the integration test planning when you are stabilizing the software design. 
    - In integration testing, you must test the critical components first 
      - This is so that errors in these components don't show up at a later stage in development resulting in costly delays.
  - Component test plan
    - You can test individual software components, such as the individual units of source code, through component testing. 
    - You can use component testing to detect errors early in the development cycle. 
    - This makes integration testing easier because all components are tested before they are integrated. 

Factors influencing a test plan
  - Test planning is the most prominent phase in any test project. 
  - A test plan lists all the tasks and key areas in a test along with the estimated test effort. 
  - You can use the test plan when you develop, implement, and maintain software.
  - To test a product efficiently, you must clearly understand the factors that can influence the test planning process     
  - Product
    - Product knowledge helps you perform efficient testing. 
    - Any risks that can cause the software product to fail should be understood at an early stage in development. 
    - Failure of software involves heavy avoidable costs and labor if diagnosed and resolved before or during development. 
  - Approach
    - Different approaches are required for testing different types of software products. 
  - Process
    - Test planning is influenced by factors affecting the testing process such as the availability of testing tools. 
    - Using these tools can reduce the manual effort that would be required for executing a test. 
  - People
    - One factor with a significant effect on the testing process is people. 
    - This can include the skills of individuals on the team and their experience with similar software and testing projects.


Test Estimation, Test Strategies, Entry and Exit Criteria
Estimating tests using test strategies
  - You should analyze a software test project in order to obtain an accurate estimate. 
  - This will enable you to check if available resources such as the test environment, funding and the people are adequate 
  - You can then use the test estimate data to assess risks and ensure timely delivery of a project.
  - Before delivering a product, you need to also ensure that you successfully complete the test plan 
    - You must ensure that it meets all the necessary exit criteria with no outstanding critical errors.
  - Successful completion of a test is based on the approach you adopt for testing. 
  - You can decide a testing approach according to the risks, cost and time requirements of a project.
  - To estimate the overall cost for a project or its duration, you can use two approaches:
    - Metric-based
      - You can use the metric-based approach when you rely more on the test data for estimation. 
    - Expert-based
      - You can use the expert-based approach when you want to use an expert's experience for test estimation. 
      - These experts may be technical, analytical, or business experts. 
      - With their guidance, you can determine the test scope and the risks involved.
  - You can then divide the testing process into several tasks based on the expert's data
    - You can calculate the cost, time, and the resources required for each task separately. 
    - By summing up the data collected for all the tasks, you can estimate the cost of the whole testing project.
  - These approaches, when combined, can estimate a test more accurately than when handled separately. 
    - For example, based on the expertise of the testing team in your organization
      - You can breakdown a project into several tasks to estimate the testing effort needed for each task.
  - Then you identify similar metrics from past projects such as the number of tests run 
    - And the number of defects found per day. 
    - You then apply these parameters to calculate the test duration and test effort for all key tasks in your project. 
    - Finally, you estimate individual tasks and obtain a project level estimate.
  - Testing is a complex activity, and the testing effort is influenced by a variety of factors. 
  - When you create test plans or estimate test efforts, concentrate on these factors to complete the test successfully.

