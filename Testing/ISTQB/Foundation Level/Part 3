                    ISTQB Certified Tester Foundation Level
                    Course Notes Part 3
                    
                    
SDLC Analysis Phase
  - The analysis phase is used to dig deep into the system concept
    - It shows what needs to be implemented to satisfy the concept proposed 
  - Analysis will show use cases or scenarios which are seqeunces of events
    - This captures user input to the system, system behaviour and possible outputs
    - Use cases explore main user paths, error handling and recovery
    - They capture how a system interacts with a user
  - Once a system has been understood it can be broken down into subsystems and components
    - The breakdown gives a high level system architecture
    - It aids in documenting the final system
  - The goal of the analysis phase is to gather system function and system requirements
  - The analysis phase produces a number of artifacts to support the design phase
    - The most important is the requirements document
    - This is often used a contact of project deliverables
    - It holds system and functional requirements
    - Each requirement holds an aspect of the system
    - Each requirement must be testable
    - Requirements are not implementations
  - Technical and business groups must work together to uncover system requirements
    - Communication between departments is done with graphs etc
    - This will help to accomodate the different thought processes
  - Often sitting with and interviewing users is helpful when gathering information for requirement
    - The notes from these interviews can be very helpful with requirements
  - A high level ERD of the database is often part of the analysis process
SDLC Design Phase
  - The design phase is where what the system must do is translated into the design
  - This is repeatedly refined until complete
  - It is completed by the entire team
  - The process begins with defing the high level architecture
  - The high level description shows which modules will talk to each other
    - This covers not only modules but to existing systems in the production environment
    - The communication protocol being used is also in the description
  - The software architecture is reviewed to ensure it covers all functional requirements
  - Different modules are assigned to different members of the development team who will be responsible for their design
  - During detail design large modules are broken down
  - Prototypes are often used and shown to stakeholders
  - QA planning is also put in place eg how defects are reported
  - During this phase build out of development environments is needed
  - The design phase generates artifacts that are used in development
  - The Architecture Design Document gives a blueprint for how the system will be built
    - This will include many diagrams, wireframes, Database logical design documents
    - Diagrams include UML diagrams, ERD diagrams
  - The detailed design document has the deatails for each part of the system
  - Some projects use pseudocode to show how code will be structured
  - All planning done by QA is captured by the Quality Assurance Plan
SDLC Implementation Phase
  - This is the longest phase in the SDLC.
    - Implementation happens in the Development phase, which occurs after Design
    - This also feeds into the validation phase
  - Software engineers use the design documents and diagrams to guide app implementation
  - The work is done by the entire development team
  - Code reviews with other developers may also be required to catch bugs early before system integration
  - Build scripts are used to control compilation and linking of the software
  - The build scripts ensure the software is always built the same way
  - Developer source files are added to the scripts as they are completed, so they can all be built together as a single combined system
  - Many times daily builds which are done in the build environment are automated to find build issues early
  - Best practice is for developers to update their individual development environments
    - This is with the latest build modules often to find integration issues as early as possible
  - After modules are completed they are integrated with  other modules in the system integration environment
  - Merging into a single system allows developers to test the system as a whole
  - Integration testing by developers is not rigidly controlled
  - The software code, etc are all stored in the software configuration management system
  - The SCM system uses authentication methods to control access to the files of archives.
  - The SCM system also keeps track of revisions to the source files
  
