                    ISTQB Certified Tester Foundation Level
                    Course Notes Part 8


Fundamentals of Software Testing
The Necessity of Software Testing
  - SW systems are integral to daily lives
  - Failures can have a huge impact and be very expensive
  - Failures in critical systems can be fatal
  - Most software issues can be divided into 3 categories
    - Error, defect, failure
  - Errors can cause a defect which may lead to failure
  - Root cause analysis involves tracking an issue all the way to its root cause
  - Root cause analysis is an important quality tool
  - Defects can arise in any of the 4 stages of a product lifecycle
    - Analysis, Design, Development, Implementation
  - If a defect is discovered after a product is launched it can be very expensive to fix
  - It is imperative to eliminate defects as soon as possible in the cycle to reduce cost
  - The cost of fixing a defect is proportional to the passage of time in the project
  - Quality is how well a system or process is designed
  - Testing increases confidence that a product meets the quality criteria
  - Weak tests may not discover defects so are not that useful
  - A successful is one that is on time and in budget
  - Exhaustive testing will test everything but is inadviable and unrealistic
  - Testing efforts should be on risks and priorities

What is Software Testing
  - The main objective of testing is to discover defects
  - Testing includes a range of activities that cover every part of the lifecycle
  - Testing during the requirement phase involves checking the test basis 
    â€“ Testing client requirements and design specifications  against the test design.
  - Various types of testing methods are used during each stage of the software life cycle
  - You can classify testing into static and dynamic testing.
    - Testing by running a software program it is known as dynamic testing
    - Dynamic testing, is less cost-effective than static testing it is more thorough testing than static testing.
    - Static testing includes reviewing software related documentation and source code.
    - Static testing methods would form a part of the activities such as analyzing customer requirements and specifications
  - Planning is key to software testing and includes processes that take place before and after test execution.
  - Planning may include activities such as creating a test plan and test strategy
  - Planning also includes defining entry and exit criteria.
  - After creating a test plan, preparation is the next step in software testing, it includes designing test cases
  - After running tests  you should evaluate to check whether tests satisfied all preconditions stated in the test plan.
  - Different testing viewpoints take different objectives into account
    - These include finding defects, preventing defects and increasing product confidence
  - Other than development and acceptance testing, you also need to conduct maintenance and operational testing
  - The main objective of operational testing is to check for characteristics such as reliability and availability.
  - Testing is an iterative process, and organizations will improve their testing capability and knowledge with time
  - An effective software testing plan should include both testing as well as debugging the software.
  - Debugging is performed by developers as a result of testing to uncover where a defect in the code exists and correct it.
  - Debugging can be performed on code or on requirements and specifications.
  - A detailed debugging exercise is important to make the software worthy enough to complete the testing phase


Testing Throughout the Software Lifecycle
  -

Static Techniques and Test Designing Software Testing
  -

Black-box Sofware Testing Techniques
  -

White-box Sofware Testing Techniques
  -

Software Test Management
  -                    
