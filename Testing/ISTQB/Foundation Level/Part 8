                    ISTQB Certified Tester Foundation Level
                    Course Notes Part 8


Fundamentals of Software Testing
The Necessity of Software Testing
  - SW systems are integral to daily lives
  - Failures can have a huge impact and be very expensive
  - Failures in critical systems can be fatal
  - Most software issues can be divided into 3 categories
    - Error, defect, failure
  - Errors can cause a defect which may lead to failure
  - Root cause analysis involves tracking an issue all the way to its root cause
  - Root cause analysis is an important quality tool
  - Defects can arise in any of the 4 stages of a product lifecycle
    - Analysis, Design, Development, Implementation
  - If a defect is discovered after a product is launched it can be very expensive to fix
  - It is imperative to eliminate defects as soon as possible in the cycle to reduce cost
  - The cost of fixing a defect is proportional to the passage of time in the project
  - Quality is how well a system or process is designed
  - Testing increases confidence that a product meets the quality criteria
  - Weak tests may not discover defects so are not that useful
  - A successful is one that is on time and in budget
  - Exhaustive testing will test everything but is inadviable and unrealistic
  - Testing efforts should be on risks and priorities

What is Software Testing
  - 


Testing Throughout the Software Lifecycle
  -

Static Techniques and Test Designing Software Testing
  -

Black-box Sofware Testing Techniques
  -

White-box Sofware Testing Techniques
  -

Software Test Management
  -                    
