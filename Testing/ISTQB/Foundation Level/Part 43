                    ISTQB Certified Tester Foundation Level
                    Course Notes Part 43
                    
                    
The code you type in the System Config row is defined in the test plan document.
  - Bug ID and Bug RPN
    - In the Bug ID and Bug RPN rows, you record the ID and risk priority number (RPN) of each bug, respectively. 
    - You use the defect-tracking database to determine the ID of a bug. You use values 1 through 25 for the RPNs. 
    - These values are in descending order of risk level. For example, you assign the RPN value of 1 to the most risky bug.
  - Comment
    - In the Comment row, you store specific information related to a test case or sub test. 
    - For example, if the testers didn't conduct the Printing capabilities sub test
      - You would type the text "Not conducted" in the Comment row.
  - You can also track the progress of testing activities and test levels based on the number of defects found and closed. 
  - To depict the defect data for a testing activity or test level, a graphical format is most suitable. 
    - A graph helps you check the overall status of testing easily and quickly.
  - By using a graph, you can also show the planned and actual start and end dates for a testing activity or test level. 
  - Additionally, you can plot the number of defects the testers are expected to find 
    - And the number of defects they actually found. 
    - The graph also helps you monitor the difference between the number of defects found and closed on specific days.
  - When the gap between the number of defects open and the number of defects closed reduces to an acceptable level 
    - The product is fit to be released.
  - An alternative way to represent defects in a graph is by depicting the failure-rate or defect-density. 
    - You use this type of graph over a period to track the progress of testing. 
    - You declare a product fit for release when the failure rate or defect density falls below a pre-specified value.
  - A failure-rate or a defect-density graph proves useful if you want to create a highly reliable product. 
    - You calculate failure rates of a product or a component in terms of a unit of measurement. 
    - For example, you calculate the number of times a product fails per hour. 
    - You can also use the number of times the product or component is run as a unit of measurement.

Evaluating reports and controlling tests
  - You need to share the data and metrics you collect while monitoring a test level with other members of your team. 
  - To share the data and metrics in a format that is easy to interpret, you prepare a test summary report.
  - Team members can then use the summary report to quickly check what events occurred during a testing activity or level. 
  - They can also use the report to quickly learn about existing defects in a product or component
    - Risks involved, confidence level of testers in the product or component being tested 
      - And the feasibility of repeatedly testing a product or component.
  - You can use the IEEE 829 Standard: Test Summary Report Template to create a test summary report. 
  - This template consists of eight sections.
You use the Test summary report identifier section to assign a numeric identifier to a test summary report. This identifier helps configuration managers easily identify and track the report.

In the Summary section, you include a summary of all testing activities that were part of the test level. Your team members can then use this section to quickly gather information about test-design specifications, test cases, test procedures, and test environments. This section also enables you to identify defect details, version numbers and descriptions of the products and components that were tested.

The Variances section refers to the variations between the actual testing strategies, specifications, and procedures and guidelines mentioned in the test plan. A testing manager can use this section to learn how to improve and streamline future testing activities and ensure that the activities don't deviate from the plans.

The other five sections of the template include

Comprehensive assessment
In the Comprehensive assessment section, you specify the extent to which the testers completed the testing activities. In this section, you also explain whether or not the activities conformed to the test-plan guidelines. Additionally, you include a detailed reference to the steps the testers took to ensure successful and efficient testing.

Using this section, you can determine the extent to which a product or component meets the exit criteria at the end of each test level.
Summary of results
The Summary of results section provides a summary of the output and results of the testing process. This section also includes a summary of all types of defects and the defect-resolution process.
Evaluation
Using the Evaluation section, you evaluate each tested component or product against the specified requirements and metrics. For example, during integration testing, you evaluate the interaction between software components and record the expected and unexpected behavior of the components.

In the Evaluation section, you also specify the scenarios under which the tested component or product may fail. This information is based on the stability and reliability the component or product exhibited during testing.
Summary of activities
In the Summary of activities section, you include a summary of the major testing activities and events. You also document the total resources, time, and budget you allocated to testing. For example, you document the total number of testers and computers you employed and the duration for which you assigned them to the testing activities.

A testing manager can use the information in this section to estimate the requirements for future testing activities.
Approvals
You record details about the parties responsible for approving the test summary report in the Approvals section. You also obtain their signatures in this section. The signatures certify that the parties responsible for approval understand and accept the test results.

4. Comprehensive assessment
Each testing activity can be delayed by risks. For example, testers might be unable to complete system testing on time because they don't have the administrative rights to access the product. In such cases, you can avoid or minimize the impact of risks on the testing activities by taking measures to control the tests.

Test-control decisions are based on the test metrics and information in the test summary report. For example, if the test summary report indicates a deviation from planned testing activities and the planned testing schedule, you take control measures to minimize the deviation.

As a testing manager, the test-control activities you need to perform include

analyzing test-monitoring data
You analyze the test-monitoring data and make test-control decisions based on the data. For example, if you find that a higher percentage of test cases fail, you may suggest more stringent guidelines for preparing test cases. Similarly, if you find that the testers are ignoring potential risks during testing, you can ask them to test the product against those risks.
changing test schedule and priority
To accommodate delays, you change the test schedule and the priority of the testing activities. For example, if testers don't receive a crucial component for testing on the scheduled date, you change the priority of the testing activities and allow testers to test components available to them. Similarly, you can reschedule testing activities if the test environment is not made available to testers on the scheduled date.
setting acceptance criteria
You can minimize or eliminate defects in a fixed component or product by setting the acceptance criteria for retesting the component or product. For example, you can allow testers to accept the component or product for retesting only if the developers first thoroughly test it and declare it defect free. This type of testing, which is conducted by developers, is known as confirmation testing.
reviewing risks
You can control tests by periodically reviewing risks. For example, during the course of a testing activity or a test level, the risks to a product may change. Existing risks may be eliminated or become less severe, or you may discover new risks. You can then review these risks and change ratings of the identified risks. This also helps you avoid unnecessary tests and allows you to perform efficient testing in less time.
adjusting scope of testing
If new features are added or changes are made to a product during a late stage of development, you need to adjust the scope of testing accordingly. For example, if a client requests that new features be added to a software application that has already been integrated, you include additional tests to check the new features.
There are also a few test activities that the project manager rather than the tester or testing manager is directly responsible for. To help project managers handle these activities efficiently, you can share your test-control experience with them and make suggestions.
                  
