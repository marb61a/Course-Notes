                    ISTQB Certified Tester Foundation Level
                    Course Notes Part 51
                    
                    
  - Modeling tools can also check state models or object models. 
  - They are particularly useful in complex system architectures. 
  - Examples of modeling tools include visual modeling, database, state, and object modeling tools.
  - The tools available for test specification are
    - Test design tools
    - Test data preparation tools
  - Test design tools help in generating test inputs. 
  - When an automated oracle or test basis is available
    - Test design tools also help generate test cases with the expected results. 
    - This is why many design tools are integrated with other tools such as test management tools
      - Requirements management tools, static tools, and modeling tools. 
      - The details of a test basis are already available in these other tools.
  - There are different types of test design tools with varied levels of automation. 
  - The levels are dependent upon the characteristics of the design tool 
    - And the way the test basis is recorded in the tool.
  - Some types of test design tools are
    - Tools where test cases with inputs and expected results are generated using specifications in a formal language
    - Tools that generate tests based on a GUI model of the test basis
    - Tools that generate a partially completed template from the requirement specifications held in narrative form
    - Tests that can verify that the model has been built correctly and derive some test cases
  - Data preparation tools help you collect data, such as fictitious names and addresses, for creating test cases. 
    - They are especially useful when you need to collect an extensive volume of data for testing.
  - Test data preparation tools can generate the data used in tests. 
    - They can also select and transfer live data from an existing database and modify it for use in tests. 
    - The data acceptable for use can be in a wide range of database formats and files.
  - The test data preparation tools are used by developers as well as testers during performance and reliability testing. 
    - They may also be used for system or acceptance testing.
  - Test data preparation tools help in
    - Generating new records with random or guidelines-related data
    - Sorting or rearranging existing records differently
    - Extracting selected data records from files or databases
    - Using a template to construct a large number of similar records for volume tests
    - Modifying data records for data protection so they cannot be connected to real people

Tools for Test Execution, Logging, and Monitoring
Using test execution and logging tools
  - As well as providing support for managing tests, test specifications, and static testing
    - There are other activities such as test execution and logging, and performance and monitoring
    - That can be supported with the use of tools. 
    - To help you perform these activities more efficiently, you have tools that help you execute tests
      - Compare them, and keep them secure. You also have tools to help you monitor a software or system being used
        - And evaluate its performance in real time.
  - Some types of tools that enable you to execute and log test cases are
    - Test execution tools
    - Test harness/unit test framework tools
    - Test comparators
    - Coverage measurement tools
    - Security tools
  - Some test execution tools, which are also called capture/playback tools
    - Help you to automatically run test scripts and record their results in a test log.
  - A test script is a file that is used to test software and compare the actual results to the expected results.
Test execution tools enable you to
  - Store expected results for comparison when the test is run again
  - Execute tests from stored scripts and data files accessed by scripts
  - Compare test elements dynamically and post execution
  - Record test timings and test results
  - Send results to test management tools
  - A test script is essentially program code, and programming skills are required to write or modify scripts. 
  - However, many test execution tools facilitate script generation by capturing and recording 
    - A tester's or user's manual actions as lines of script. 
    - These scripts can then be automated to run repeatedly on the same software module
      - Or modified by a script programmer to utilize different data inputs or to run on different software modules.
  - However, it is recommended that you don't reuse a captured test script as a long term testing solution 
    - Because it is likely to be valid only within the exact condition in which it was captured.
  - Suppose, you record a test script and find that the data values of the original test are embedded in the script itself. 
  - This will prevent you from using the original script for another component effectively. 
  - While this script can be modified to make it work in most cases, doing so will cause unanticipated delays.
  - Or, suppose you play back a recorded test script. 
    - You then run the risk of the time from the original test being displayed in the current playback. 
    - This will result in confusing a test comparator and causing a comparison test to fail.
  - Test execution tools are especially useful when you need to repeat a test performed earlier for a similar application. 
    - For example, you may be able to use a script that captures standard personal details 
      - In a number of different software applications.
  - Though test execution tools are usually used in many forms of testing, they are best suited for regression testing. 
  - Here, old tests are rerun to ensure that changes made to an existing system 
    - Have not altered the functioning of the system.
  - When used in the medium and long term, the costs of using test execution tools for regression testing decrease. 
  - After a point, the costs of automated regression testing become lower than the costs of manual regression testing.

