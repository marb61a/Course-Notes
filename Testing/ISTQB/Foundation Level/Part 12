                    ISTQB Certified Tester Foundation Level
                    Course Notes Part 12


Contrasting Software Developers and Testers
  - The success of software testing is dependent on effective communication across different teams 
  - As a software tester, you need to interact with the programmers or developers, who build the software applications 
    - This interaction drives the entire process, helping achieve the project goals and objectives. 
    - Project objectives drive the test plans
    - To understand these objectives thoroughly, developers and testers need to interact with one another seamlessly.
  - The interaction between the testers and the developers are influenced by numerous factors 
    â€“ psychological differences, roles and responsibilities in the testing process, and more.
  - The roles and responsibilities of testers and developers impact their differing attitudes toward testing.
  - There are basic differences in the mindset of testers and that of developers.
    - A tester tests the product for defects, keeping in mind the complete picture of the development life cycle 
      - Consequently, they are most likely to locate defects in the product.
    - A developer is usually an expert in a specific technical domain. 
      - Developers understand how a specific development model works
      - However, because they delve deeply in their domains, they may lose perspective of the complete picture
  - Testers should display competence by thoroughly understanding the objectives and requirements of the application. 
  - In doing so, they should get the developer's perspective so they know what is critical and valid. 
    - This understanding is reflected in the test cases and in the nature of defects reported. 
  - In addition, testers should demonstrate maturity and integrity in communicating defects
  - The mindset of testers is to look at products being tested as flawed
    - They design test suites to detect defects instead of designing test cases that only check if something works.
  - The differing mindsets of the testers and developers can lead to misunderstandings and communication gaps 
  - There are ways that testers and developers can bridge this gap
    - Understand and appreciate each other's roles and responsibilities in the testing process
    - Communicate and coordinate with one another throughout the development and testing life-cycle
    - Initiate conversations with the programmers, as testers, and not wait for them to start inquiring about defect reports
    - Share plans, drafts, schedule, design documents, and prototypes to stay updated of the process
    - Provide fair feedback to the developers, appreciating their good work and reporting defects objectively



2.2 CTFL: Fundamentals
  - Software testing provides us with a process that helps to minimize the risk of failure of that particular software under test
    - It also offers a way for us to measure the quality of that software.
  - A common misperception about testing is that it consists of just running tests
    - This is not the case, testing consists of a process that comprises many activities
  - This leads to the evaluation of the quality of a particular test object.
  - Some testing involves the execution of a component or a system that's under test, and this is called dynamic testing.
  - Another type of testing that doesn't include the execution of the component or system being tested is known as static testing.
  - Another common misperception of testing is that it is solely focused on the verification of requirements
  - While testing does include checking whether the system meets specified requirements, it also involves validation
    - Validation amounts to checking whether the system will meet stakeholder requirements in its operational environments.
  - For any given test project, there will be a set of objectives which could include
    - Evaluate work products, and this includes products like requirements, user stories, code and design specifications
    - Another objective may be to verify whether all specified requirements have been fulfilled
    - Another objective could be to validate whether the test object is complete and works as expected
  - Objectives can vary significantly and this depends on the context of the component or the system under test
  - The SDLM is an acronym standing for Software Development Lifecycle Model
  - Testing and debugging are entirely different and separate activities
  - They both comprise different parts of the test process
    - Best practice means that different team members should be assigned to testing and debugging
  - Debugging is a development activity
  - By rigorously testing components and systems, as well as their associated documentation, defects can be identified andfixed
  - This reduces the overall risk of operational failure, as well as improving the quality of the software or components
  - Also software testing can also be required in order to meet contractual, legal requirements, or industry specific standards.
  - Using the correct test techniques can reduce the frequency of problematic deliveries
  - Having testers involved in requirements' reviews or user story refinement, could help detect defects
    - This will reduce the risk of faulty software being developed
    - It also helps to ensure that the software is testable
  
