                    ISTQB Certified Tester Foundation Level
                    Course Notes Part 35


Software Test Management
Dependent and Independent Software Testing
  - The software testing activity may take on one of many forms within an organization 
    - This goes from being fully integrated with the development life cycle to the complete outsourcing of responsibilities 
    - An organization uses these styles of testing based on its testing requirements and approach towards testing.
  - The two testing styles that an organization can use are the dependent and independent styles.
    - Dependent testing involves developers testing the software they create 
      - While independent testing sees someone other than the developers testing the software.
    - Independent testing can be more beneficial than dependent testing
    - This is because it adds a level of objectivity to the testing process. 
    - Developers who create the application may not be able to identify defects 
      - Because they are familiar with the software application. 
      - A tester that is independent from the application is more likely to be critical of the application 
      - They therefore find more errors and report them with supporting evidence.
  - Organizations may also employ different levels of independence within the independent testing process. 
    - These levels of independence are inversely proportional to the level of association a tester has with the application.
    - Developers
      - The lowest level of independence is employed when a software developer within the development team tests the software.
    - Testers within a development team
      - When integrated testers who work alongside developers review the software product
        - The level of independence employed is slightly higher.
      - In this situation, when you develop an application and want to test specific modules
        - You hand over the modules to the integrated test team. 
        - These testers, who report to the development manager, check the modules. 
          - The level of independence is low because the testers work in close collaboration with the developers,
          - This then reduces the objectivity in testing.
  - Testers within an organization
    - You implement a slightly higher level of testing independence by using the test team within your organization to review 
  - Using an internal QA team is common in most development environments. 
    - However, this independence level is only marginally higher than using a developer or an integrated tester. 
    - The testers and the developers in this case are within the same organization
    - They are not completely independent of one another.
  - Testers provided by operational business units
    - When a tester from an operational business unit is employed to test your software application
      - The level of independence is increased further. 
      - In this case, the separation of responsibilities between the testers and the developers is more evident.

Test specialists
  - To implement a highly independent test practice, you employ specialist testers, such as usability, security testers.
  - Suppose your team has developed a web service that is built on a recently updated development environment. 
    - To test the service, you can hire a certified tester who is competent in the new environment. 
    - This would ensure a highly independent and effective test approach for your application.
  - Outsourced testers
    - The highest level of testing independence is implemented when a third-party testing team tests your application. 
      - Although this approach is expensive, it ensures the highest degree of independence.
      - For example, after you develop an application, you can outsource it to third-party testers. 
      - They would perform a complete review of the application and provide objective feedback.
  - When you apply the independent testing approach in your organization, benefits include
    - Difference in perspective
      - Independent testing provides a different set of testing perspectives. 
      - Independent testers view the product from their perspective instead of the developers'. 
      - Because the testers are unbiased, they can identify varied defects that developers can miss. 
      - The perspective of a developer reflects that of a creator, who is more likely to be possessive and biased 
      - Due to this, developers might overlook critical defects in functionality.
    - Verification of assumptions
      - Independent testers verify the assumptions made during the specification and implementation phases of the test process
      - This prevents them from logging invalid defects against the application and missing critical errors. 
    - Different sets of assumptions
      - Independent testers make assumptions that are different from those of developers; 
      - This helps them to detect hidden problems in the application. 
  - Although independent testing is beneficial for an organization, it does have its drawbacks. These may include
    - Isolation
      - Independent testing is performed in isolation from the development team. 
      - Because of this, testers might have to rely on test cases that are rarely updated to communicate the scope of testing.
      - For example, testers and developers of the same project working from different geographical locations face difficulties
        - In communicating the details of testing.
    - Lack of communication
      - With independent testing there may exist a lack of communication between developers and testers. 
      - Suppose a testing team requires clarification about an application's functionality. 
      - They could either read the test cases, or ask the developer to clarify the doubts. 
      - If the communication process between the testers and developers is not strong
        - Then the parties might not be able to arrive at a solution promptly. 
        - Unfortunately, this may introduce unexpected delays in the development of the product.
    - Probable delay in delivery
      - Independent testing is time-consuming and may delay project delivery. 
      - This testing is usually done in the final stage of the project, 
        - It may become a bottleneck if there were delays at earlier stages. 
    - Less responsibility
      - Independent testing reduces the sense of responsibility in the development team. 
   - In addition to the dependent and independent approaches, there is one more approach to software testing 
    - The agile approach. 
      - In this approach, quality assurance is more integrated with development than in more "traditional" development models,
      - where everybody performs multiple roles. 
      - Because of this, the level of independence is comparatively lower than other testing approaches. 
      - Peer reviews are an example of this approach; 
        - Developers working in the same team test the applications developed by their peers.
  - The agile testing approach ensures minimal overhead on communication and coordination, 
    - Developers are aware of their responsibility for quality. 
    - Additionally, the technology and application expertise required for quality assurance tasks are similar to the 
      - Expertise required for development tasks. 
      - So a developer can perform testing, even if he or she has no specific expertise in certain skills, 

