                    ISTQB Certified Tester Foundation Level
                    Course Notes Part 49


Roles of scripts
  - Some of these tools which use scripting languages require special considerations 
    - Such as experts to help design tests and script conformance with new coding standards.
  - These test tools are
    - Test execution tools
      - Test execution tools replay scripts designed to select and execute tests stored electronically. 
      - The scripts must be unambiguous for the test execution to understand and execute it.
    - Performance testing tools
      - Performance testing tools test non-functional quality characteristics 
      - Such as the time taken for a transaction to be completed or the number of users who can log on to and use the system.
      - These tools require an expert in performance testing to help design tests. 
      - This expert should know what should be measured, ways of interpreting and presenting the information collected, 
        - And the duration of the test.
    - Static analysis tools
      - Static analysis tools are used to enforce coding standards and identify code errors. 
      - These tools help create code that is easy to maintain. 
      - When these tools are used, there may be issues such as the need to change the old code 
        - So that it implements new standards. 
        - However, doing so may have some unexpected negative results
          - Which may not be discovered even during regression testing.
    - Test management tools
      - Test management tools support the testing process and make it more efficient. 
      - They use other testing tools or spreadsheets to communicate the information 
        - Or reports they produce in the most effective way. 
        - The reports produced need to be monitored to ensure that the reports are most relevant 
          - And useful at the time of creation.
    - Test execution tools may use a variety of scripting techniques. 
    - Whichever scripting technique is used, the expected results for each test should be stored for comparison later.
  - The scripts used by testing tools include
    - Data-driven scripts, where a control script reads the test data stored in a file or a spreadsheet
    - Keyword-driven scripts, where information about the test 
      - And the control scripts that implement the tests is stored and described in a file
    - Linear scripts, which are captured by recording the actions of a manual tester or created manually
    - Shared scripts, which can be reused as a script that can be called by other scripts
    - Structured scripts, which use selection and iteration programming structures
  - Data-driven scripts and keyword-driven scripts are the most advanced of all the scripts. 
  - In a data-driven approach, all test inputs and expected results are stored in a table or a spreadsheet. 
  - A single control generic script then reads and executes all tests in the table 
    - And performs these tests using different data. 
    - This type of testing is often used to support the application of test execution tools such as capture/playback tools.
  - In a keyword-driven approach, the spreadsheet contains the test data 
    - And the expected results as well as the keywords related to the application being tested. 
    - These keywords describe the actions to be taken on the data.
  - When using the data-driven technique, testers who are not familiar with the scripting language 
    - Can enter test data only for a set of predefined scripts. 
    - These would be hard-coded commands and only the actual inputs would be open for editing.
  - With the keyword-driven technique, the testers have a number of keywords available that are recognized by the scripts 
    - And customized to the application being tested. 
    - For example, they may have keyword phrases such as type user, click login, and check name 
      - That they can use to define and build their own tests. 
      - The keyword-driven technique means that script developers are only called upon when new keywords are needed
        - And relatively few developers can support a much larger number of testers.
  - Keyword-driven tools are generally more flexible than data-driven tools.


Tools for Management, Specification, and Static Testing
Using test tools for management
  - Tools used in software testing can be classified according to the activities they support. 
  - Tools designed for the management of the testing process, and for managing tests themselves
    - Come under the Management classification which include Test, Requirements, Incident, and Configuration management tools.
  - Management tools help make the testing process more efficient by facilitating the scheduling 
    - And management of tests and all testing activities, tracking systems requirements
      - And logging information about configurations and incidents. 
      - For example, requirement management tools provide support to analysts to record 
        - And handle the requirements of a system when it is being tested.
The tools for the management of tests and testing procedures include
  - Test management tools
  - Requirements management tools
  - Incident management tools
  - Configuration management tools
  - Test management tools manage the testing process. 
  - These tools are used by expert testers or test managers during system or acceptance testing.
  - They contain features that provide support for
    - Managing testing activities and tasks
      - Test management tools provide support for managing testing activities and tasks throughout the development lifecycle.
      - They do this by interfacing with other tools or fully integrated modules 
        - That provide some or all of the services and functions provided by specialist tools.
  - Managing test procedures
    - Test management tools keep track of test procedures. The test procedures can be stored, edited, linked to requirements,
      - Risks or conditions and or reused for future test projects. The procedures are grouped and scheduled to be executed in the most effective manner.
  - Providing management progress reports based on metrics
    - Test management tools can capture and present information on metrics such as incidents raised 
      - And the number of tests run, passed, and failed. They can also provide information on the number of defects fixed.
  - Interfacing with other tools
  - Test management tools can interface with test execution, incident management, and requirements management tools. 
  - They can also interface with configuration management tools, or alternatively provide 
    - Their own version control facilities.
  - Requirements management tools can be used to store, manage, and ensure the consistency 
    - And integrity of requirements during the testing life cycle.

