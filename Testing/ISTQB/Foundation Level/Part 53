                    ISTQB Certified Tester Foundation Level
                    Course Notes Part 53


Using performance and monitoring tools
During testing you can also use additional tools such as
  - Dynamic analysis tools
  - Performance testing tools
  - Monitoring tools
  - Dynamic analysis tools are used to analyze defects while the software code is executing. 
  - Developers use these tools during component testing and component integration testing 
    - To detect defects that are difficult to find during static testing.
  - For example, time dependencies lend themselves to dynamic testing, as does memory leakage handling, or boot-up processes.
You can also use dynamic analysis tools to check websites for dead links.
  - Dynamic analysis tools can
    - Iidentify memory leaks
    - Identify pointer arithmetic
    - Detect time dependencies
    - Report the status of the software during code execution
    - Monitor the allocation, use, or deallocation of memory
Performance testing tools test the performance of a system under different load or usage patterns. 
  - Like test execution tools, performance testing tools use test scripts and data-driven testing
    - Where variables that point to data in a data table are used to replace hard-coded inputs in test scripts.
  - You can also use performance testing tools to perform
Load testing
  - In load testing, you check whether the system can cope with a certain number of transactions
    - Loads, or usage patterns by pushing it beyond its normal and expected usage. 
    - You increase the load on the system gradually using a test driver so you can identify the usage pattern 
      - Or the load that could make the system collapse. 
      - The output of the test is written to a log. 
      - After completion, you generate reports or graphs from the contents of the log to check the performance level.
Volume testing
  - When you are checking volume, you test whether the system is able to handle a large amount of data. 
  - Take the case of a file that has many records in it. 
    - During volume testing, you check if the system can open and display all the records in the file.
Stress testing
  - In stress testing, you check whether the system can handle more transactions than it is known to handle. 
  - You perform both load and volume testing. 
    - When you are checking load, you push the system to go beyond its normal and expected usage. 
    - You increase the load on the system gradually so you can identify the usage pattern 
      - Or the load that can make the system collapse. 
    - This will help anticipate load issues after the system is deployed and help prevent them. 
    - For instance, when an HR system supports details of only 1,000 employees
      - Entering information about the next employee might make the system collapse.
  - In performance testing, you verify how a system or a software application behaves under simulated usage conditions. 
    - For instance, when testing the performance of a web site
      - You check if the web site can handle the amount of traffic it is supposed to handle. 
    - Performance testing is best done at the system level. 
    - Ensuring the system is active, you replicate an end-user environment or user profiles. 
    - You send a number of test inputs to the system. 
    - The parameters that you set for the inputs may vary depending on the performance testing tool you use.
  - The tool then measures system characteristics such as response time and mean time between failure and sends you a report.
  - If you find that the performance does not meet standards, you analyze where the problem is and how it can be improved.
  - Analyzing the output of performance testing tools takes time and skill. 
  - Therefore, it is a good idea to use specialists to carry out performance testing activities. 
  - This is especially so because the cost of some of these tools is quite high. 
  - Implementation and training costs increase the investment further. 
  - Using specialists will ensure that these tools are used optimally.
  - Performance testing tools are used to test an integrated group of systems, such as servers, databases, or an environment.
    - Once functional, they need not be continually monitored.
  - Performance testing tools can typically
    - Siscover performance issues
    - Measure loads, average response times, and timing of specific transactions
    - Identify memory leaks
    - Generate graphs or charts of responses
    - Record problems such as locking, concurrency, excessive disk space, or system resources usage
  - Monitoring tools monitor the status and the performance of the systems in use. 
    - They are likely to be used after deployment. 
    - For instance, they may be used to recognize increasing demands on the system 
      - Or abnormal behavior that requires alerting the administrator. 
      - If you use a tool to monitor your e-business websites, it will report any unusual behavior from visitors. 
      - If a monitoring tool detects a security attack then visitors can be automatically routed to another site
        - nd site administrators receive an alert. 
      - You can prevent adverse consequences for the business such as negative publicity or financial loss.
  - Monitoring tools cover all aspects of IT infrastructure such as servers, databases, networks, performance
    - Applications, and Internet usage. 
    - Because monitoring tools are used to monitor network traffic as well as the number of users on a network, 
      - They can help identify problems and alert the concerned people. 
      - They can also be used to log real-time information and historical data.
  - Apart from the testing tools covered, there are some other tools that are not specifically designed for testers 
    - Or developers, but can still be used to support test activities. 
    - Examples of such tools are office productivity tools, database query tools
      - Or communication tools, and backup or restore utilities.
  - For instance, in the absence of a test management tools, you can use a spreadsheet to store data temporarily.

