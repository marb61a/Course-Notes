                    ISTQB Certified Tester Foundation Level
                    Course Notes Part 2


ADLC Product Phases
  - The Operation phase occurs after the initial SDLC
    - This is when the application is deployed to the customer environement
    - This is the longest and most expensive phase of the ADLC
    - Application SDLC may only last a certain time an application can operate for decades
    - Most costs are incurred while an application is in production
    - Operation is administration of the software
  - Applications in production should have a maintenance plan
    - A change control plan should be a part of this to handle how users report issues or updates are handled
    - This should also specify how a helpdesk will handle requests eg priority, specification
  - Operational applications should be continually tested to measure effectiveness 
    - Performance must meet Service Level Agreements (SLA's)
  - Maintenance should also include analysis to ensure there is no obsolesence
    - Performance analysis is also need to ensure it reflects business processes
    - Many changes can happen in an environment which can affect an application
  - Many applications will need to be updated while in operation
    - This can include new features which can happen when customers start using the application
      - At this point the customer may have ideas on using the application more effectively
    - Sometimes bug/defects can only be found in operation and must be repaired
  - Some applications may need to be updated as a preventative measure
    - This can be to improve relability or prevention of future issues
  - Evaluation of applcations includ knowing when it is reaching the end of usefulness
    - There are many reasons as to why an organisation will begin a sunset initiative for an application
    - Many legacy apps are expensive to run but offer little benefit
    - Sunsetting can be an expensive process
    - There must be detailed plans on both keeping and disposing data properly


Software Development Lifecycle
The Software Development Lifecycle
  - The SDLC is a framework which describes the different phases in a software development project
  - Each phase in the framework has distinct activities
  - SDLC phases are project oriented
  - The SDLC begins after a project has been initiated and planned
    - It also ends after an application enters production use
  - Umbrella tasks are not contained in a single phase of the SDLC
    - These are management activities and some cover all phases
SDLC Umbrella Tasks
  - Umbrella tasks are defines by activities not phases
  - The project management plan guides how the umbrella tasks are managed in the project
  - Software project managemant covers a wide range of activities
  - Software releases to QA and production must be controlled
  - The Project Manager must co-ordinate activities with many groups
  - A project is controlled through a series of formal technical reviews
    - These are used to accept artifacts
    - The show a part of the project is complete
    - Artifacts are normally formal documents
  - Software QA provides oversight across the entire development process
    - This will ensure both requirements are fulfilled and quality metrics are met
    - QA also ensures that regulations are adhered to
    - There are 2 main areas of requirements that must be met
      - Functional requirements
      - Non-functional requirements such as application robustness
  - Software configuaration management is concerned with how the project will implement and control
    - Software archival, update, build and versioning
    - This includes the choice of an configuaration management system
      - This covers not only the archival of development code but also test code etc
    - Configuration Management systems provide a controlled change process for software
    Configuration Management systems can be linked to the defect tracking system
  - Reusability management is the process of identifying items which maybe re-used in the project or elsewhere
    - Reusing exiting software/code can significantly reduce project effort and cost
    - A successful reuse initiative requires both management and develpment buy-in
    - Developers must keep reusability in mind when designing software
    - Reused code must be carefully monitored to ensure there are no unintended modifications
  - Over the life of the project the PM must gather objective, quantitative data
    - This must be analysed to influence future plans
    - Data gathered can be used in metrics to assess where the project is and any issues that are appearing
    - These metrics influence both schedule and budget
  - Documentation invloves several different departments
    - The QA and Development teams will prepare their own SDLC documents
      - These will include the requirements design and test plans
    - Documentation used in production is written by technical writers
      - These include user manuals and support manuals for administrators
    - Marketing will produce its own material such as brochures etc to sell the product
    - Once documentation is written there must be a process to review and accept it
  - Risk Management is an ongoing process in any project
    - It attempts to identify, measure and assess risk
    - Strategies are then developed to manage or mitigate the risk
