                    ISTQB Certified Tester Foundation Level
                    Course Notes Part 15


CTFL: Test Process Fundamentals
    - Test Execution
      - Key activities include
        - Accurate recording of ID's and versions
        - Test execution which may use test execution tools
        - Comparing actual results with expected results
        - Analysing any anomalies that occur
        - Reporting of defects
        - This will be repeated as required
    - Test Completion
      - Collecting test data to assemble information
      - This occurs at milestones
      - Key activities include
        - Ensuring that defect reports are closed
        - Test summary report generated
        - Test environment finalised and archived
        - Hand testware over to maintenance
        - Analysis of lessons learned
    - Each Phase is comprised of other activities
    - Each activity can have multiple tasks
    - They are typically implemented iteratively
    - Test Work products are generated as part of the test process
    - There is significant variation from organisation to organisation
      - Type of work products generated
      - How they are managed and organised
      - How the work products are named
    - Test Work Products
      - Typically include one or more test plans
      - This includes information regarding the test basis
    - Test implementation work products include
      - Test procedure creation and implementation
      - Test suites and execution schedule
      - Once implementation is complete acievement of coverage criteria can be confirmed through bi-directional traceability
      - In some situations products can be created using tools
      - Refinement of tests defined in the plan can occur
    - Test Execution Work products include
      - Documentation regarding the status of test cases and test procedures
      - Defect reports
      - Documentation concerning test items such as objects, tools etc
    - Test Completion Work products include
      - Test summary reports
      - Action items for improvement
      - Change request or product backlog items
      - Finalised testware



Testing Throughout the Software Lifecycle
Software Testing and Development Models
  - Depending on the requirements of a software-development project, you use a specific development strategy.
  - Your development strategy depends on the availability of time and resources, the allocated budget, and project scope.
  - Each development strategy is known as a Software development model.
    - Each model defines the order in which you should perform project-related activities.
    - These activities include identifying the client's requirements, creating a product design etc
    - Testing is an important part of each model.
  - Software development models are of two types: sequential or iterative
  - In a sequential development model, the project-related activities are distinct from each other.
    - Only after you complete one activity can you initiate the next.
  - The simplest sequential development model is the waterfall model. 
  - The waterfall model comprises six activities.
    - Identify client requirements
      - To develop a satisfactory product, the development team starts by identifying the client's requirements. 
      - During this activity, the team determines the client's expectations of the product. 
      - Then the team records these requirements in a requirement specification document.
    - Identify system requirements
      - After identifying the client's requirements, the team identifies system requirements.
      - This helps  identify the features and functions the software product needs to possess to meet the client needs. 
      - The output of this activity is the functional specification document.
    - Create an overall design
      - Based on the identified requirements, the team creates an overall design of the software product. 
      - This overall design outlines the external features of the product. 
      - This design also describes the internal components of the product, such as modules and classes,
      - The team saves the overall design in the technical specification document.
    - Create a detailed design
      - While creating a detailed design, the team defines the functions of each of the identified components 
      - It decides on the method to create the components. 
      - To store the detailed design, it creates the program specification document.
    - Develop the product
      - Using the detailed design as a blueprint, the team writes code for each component of the product 
      - Finally the team integrates the components to create the product.
    - Test the product
      - After developing the product, it will be tested to ensure that it meets the client and product requirements 
