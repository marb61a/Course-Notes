                    ISTQB Certified Tester Foundation Level
                    Course Notes Part 19
                    
                    
Functional and Non-Functional Software Testing
  - Testing happens at all phases of the product development life cycle
  - At every stage of development, testing reveals defects that need to be fixed to assure quality.
  - Merely testing the functionality of each component or system is not always sufficient
  - To meet the overall test objectives, you focus your testing on specific objectives at each level. 
    - To meet these specific objectives, you use different test types.
  - These test types are typically a set of test activities, focused on specific objectives, used to test different components and systems
    - Different tests enable you to meet each specific objective in different test phases
  - There are different test types:
    - Functional testing which tests the functionality of a selected component
    - Non-functional testing, this tests the behavioral, or the quantified characteristics, of the systems and software
    - Structural testing which tests the structural aspects of the component or system
    - Changed-based testing – including regression and confirmation testing 
        - This involves the re-run of tests to ensure that the software is working correctly following changes
  - Functional testing is the process of testing a software product to determine its specified behavior or functionality
  -  As a functionality tester test the function that the component or system needs to perform
  - The International Organization for Standardization (ISO) quality standard 9216 regulates testing
  - Based on the standard, functional testing is also performed for various quality characteristics, such as
    - Suitability
      - Testing suitability involves testing the capability of the software product to provide an appropriate set of functions 
       for specified tasks and user objectives. Suitability testing determines if the product performs as expected for its intended use. 
    - Interoperability
      - Testing interoperability involves evaluating the capability of the system to interact with other specified components or systems.
    - Accuracy
      - Testing accuracy involves ensuring that faulty products do not leave the production line and cause errors during beta testing.
  - Functional testing is also performed for various quality characteristics, such as
    - Security
      - Testing security involves investigating the functions relating to prevention of unauthorized access to software and data, 
      - This is either intentionally or unintentionally. It also involves detection of malicious outside threats, such as viruses.
    - Compliance
      - When you test compliance, you determine whether the system adheres to certain specified criteria
      - This covers items such as standards, conventions, regulations, or laws.
  - To perform functional testing, derive test conditions and cases from the requirements spec, functional spec, or from use cases.   
  - You design a model, such as a state transition model, a process model, or a plain language specification, as part of the test design.
  - Two approaches to functional testing are:
      - Requirements-based testing
        - Requirements-based testing designs tests based on a functional requirements specification for the system. 
        - To decide the items to test, you can use the table of contents of the requirements specification
        - Then prioritize the requirements based on the risk criteria. 
        - This ensures that the most important tests are included in the testing effort.
      - Business-process-based testing
        - Use cases provide a basis for test cases from a business perspective 
        - This isbecause they often use business processes as a starting point. 
        - Business-process-based testing uses knowledge of business processes to describe the scenarios business use of systems.
  - As well as testing the functional aspects of a software system, you must also test the non-functional aspects of the system
  - Testing, where you measure how well or fast a system works, is called non-functional testing
    - The behavioral characteristics of systems and software are tested and quantified on a varying scale.
  - Non-functional testing comprises various types of testing:
    - Performance testing – tests the degree to which a system fulfills its specified functions
    - Load testing – measures the behavior of a system with increasing load
    - Stress testing – evaluates a system at and beyond the boundaries of its specified requirements
    - Usability testing – tests how easily a user can perform a specific task
    - Maintainability testing – tests how easily a product can be modified in the future
    - Reliability testing – tests how reliably a product performs over a given period of time
    - Portability testing – tests how easily a system can be transferred from one platform to another
  - According to ISO 9216 there are five characteristics covered by non-functional testing
  - These are divided into subcategories of 2 and 3 characteristics
  - Reliability
    - A software product is reliable when it performs its required functions under stated conditions. 
    Reliability testing tests if the product meets the standards of reliability. 
    Reliability testing can be defined further into maturity, fault-tolerance, recoverability, and compliance. 
  - Usability
    - A product is said to be usable if the user understands and likes the interface, the product itself, and finds it easy to operate. 
    - Usability testing tests the extent to which the software product meets these requirements under the specified conditions. 
    - Usability testing is divided into understandability, learnability, operability, attractiveness and compliance. 
  - Efficiency
    - Efficiency is the capability of the software product to provide appropriate performance
    - This is relative to the amount of resources used under stated conditions. 
    - Efficiency testing checks if the software is efficient. 
    - Efficiency testing is divided into performance, resource utilization, and compliance. 
  - Maintainability
    - The ease with which a product can be modified to correct defects
    - Meet new requirements, make future maintenance easier, or be adapted to a changed environment is called maintainability.  
    - Maintainability testing is divided into analyzability, changeability, stability, testability, and compliance.
  - Portability
    - When a software product can be transferred easily from one hardware or software environment to another, it is said to be portable.
    - Portability testing is the process of testing to determine the portability of a software product. 
    - Portability testing is divided into adaptability, installability, co-existence, replaceability, and compliance. 
