                    ISTQB Certified Tester Foundation Level
                    Course Notes Part 5


SDLC Cost of Change
  - The cost of finding and fixing a defect in the requirements increases exponentially as the project progresses. 
    - One reason for this increased cost is as the project progresses, more and more artifacts are reviewed and accepted. 
  - Changes to the requirements means all completed artifacts must be updated, reviewed, and accepted again 
  - The number of people involved in creating, updating, and reviewing the artifacts increases as the project progresses. 
  - Software is especially expensive to modify. 
    - If a software design does not satisfy its requirements, it is easy to fix while in the design stage, and document. 
    - However, if the error is not realized, until the software components are being integrated, 
    - Then unit tested code must be modified along with the unit tests. 
      - This could include modules that interface with the defective code, causing work to halt until the rework is complete.
  - In severe cases, a design defect could require changes to the software architecture
  - These types of changes found late in the project, delay the scheduled due dates. 
    - Project management must then push out the schedule to accommodate the rework 
    - Work must be done with stakeholders to increase the budget to pay for it. 
    - Delays in the schedule affect release dates, set by product management and marketing in coordination with departments. 
    - The product manager normally notices a defect in the requirements while interacting with the stakeholders. 
  - If a requirement change is found in analysis, it only involves the architect writing the requirements document. 
    - The architect will discuss the change with the product manager and update the requirements document 
    - This is before it is reviewed and accepted by the stakeholders. 
    - If a requirements change is found during design, it will need to be understood how it affects the design.
  - The requirements will need to be updated to accommodate the change and then must be re-reviewed and accepted by the stakeholders. 
  - The design will also need to be modified to accommodate the updated requirement. 
    - This design change may involve several modules and the developers working on them. 
    - If a requirement change is found during implementation, the will be a need to review the change 
    - This is with the PM to understand how it affects the design and the code already developed. 
    - The requirements and design will need to be updated to accommodate the change 
      - Both must then be re-reviewed and accepted by the stakeholders. 
      - Changes to the design will mean modifications to the code already implemented 
  - Changes this late in the project may require pushing back the scheduled release of the software, 
  - The requirements and the design will need to be updated to accommodate change
    - Then both must be re-reviewed and accepted by the stakeholders. 
     - Code changes mean updates to the unit test and QA test cases  
      - QA will need to perform a full regression test of all previously passed tests to ensure changes did not affect working code.
  - If a requirements change is found during deployment
    - All departments involved with the development and deployment of the software are affected. 
    - Again all artifacts produced in previous phases, must be updated and re-reviewed 
    - Validated software goes back to rework the design and update the code. 
    - The updated software must be validated, 
      - This includes a full regression test of all the test cases to ensure the changes did not affect working code. 
    - Schedule changes will affect not only development and QA, but also support departments, 

The Sequential Software Approach
  - This approach advocates an orderly linear appraoch to development
  - Each phase is visited only once.
  - Each phase depends on the upstream being correct
  - The project flow from one phase to the next is controlled by gates
  - Each gate documents the work that must be complete before advancing
  - The work is represented by artifacts such as documents
  - Once these artifacts and work have been reviewed and approved then the project may go through the gate to the next phase
  - All project movement is forward previous phases may not be revisited
  - This can be very rigid
  - Value to customer is only seen at the end of the project
  - This was the prodominant methodology for many years
  - Often a change board is added to accomodate needed changes as this is not easy to do in a sequential approach
  - Most software has changing requirements but this approach needs all requirements know at initiation
  - This also often gives a false sense of progress and control in the project
  - If requirements changed or were not accurate the customer may not accept the project

