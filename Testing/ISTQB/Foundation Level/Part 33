                    ISTQB Certified Tester Foundation Level
                    Course Notes Part 33
                    
                    
Exploratory techniques
  - Exploratory testing technique is another kind of experience-based testing technique. 
    - It is a combination of ad hoc and structure-based testing.
  - Exploratory testing is the process by which you design test cases, execute tests
    - Log test results based on a test charter within a time box. 
    - A test charter contains test objectives & the time box denotes a specific span of time in which testing should be completed.
  - You typically perform exploratory tests if specifications are missing or if they're insufficient or if time is limited. 
  - You perform exploratory tests in addition to specification-based tests to ensure 
    - That most of the critical defects are detected.
  - In the exploratory test technique, the testers control the design of the tests. 
  - Based on their experience, the testers decide the aspects of the product to be tested, the coverage of tests, 
    - And the time frame within which the testing should be completed. 
    - The information gained from the tests is used to create new tests.
  - In exploratory testing, you learn about the software by exploring it and figuring out how it works. 
  - When you explore the system, you make decisions about what to test within the stipulated time.
  - To perform exploratory tests, you follow a sequence of steps:
    - Understanding how the system works
    - Making informed guesses regarding the location of the errors
    - Designing a test case to check for bugs
    - Executing the tests
  - When time is limited, skilled testers design and execute test cases in parallel, based on a test charter. 
  - Therefore, while the tests are performed, you need to simultaneously document the test cases and test conditions 
    - This is because no separate time is allotted for documenting.
  - As a skilled tester, you should generate a test log that contains the main aspects of the tested product, defects, 
    - And the strategies implemented to discover those defects. 
    - You can then use these findings to create test cases for other similar projects.
  - Although you can perform exploratory tests on any type of project
    - They are usually performed when the requirements of a product or a project change frequently. 
    - An example of such a product is one that is updated every two months. 
    - With each new release, product features are enhanced. 
    - Exploratory testing can help test the new features and check the compatibility between current and previous versions 
  - In this case, it would be difficult to maintain scripted test cases because you need to constantly update them. 
  - Because exploratory tests don't require you to maintain test cases, you save time and effort spent on documenting them.
  - You can also use exploratory tests when you want to provide feedback on a new product or feature. 
  - You use this technique if you want to find the most serious defect in the shortest possible time.
  - Exploratory tests performed by skilled and experienced testers can be more beneficial and effective than structured tests
    - performed by less-experienced testers.

Selecting a test technique
  - You can use various software testing techniques, such as structure-based, specification-based, and experience-based, 
    - This depends on the requirements of your project. 
    - None of these techniques are right, wrong, better, or worse 
    - This is because each technique is suitable for a specific situation and covers a certain area. 
    - However, sometimes you might need to use multiple techniques because a single technique would be inadequate 
  - Sometimes, test specifications are well documented, but the code doesn't cover all the specifications. 
    - Such discrepancies can be detected only through specification-based testing.
  - In some cases, you may need to use a combination of testing techniques
    - This is because one alone may not be sufficient to detect all types of bugs in the software. 
    - For example, to test complex software, you must use specification-based test techniques. 
    - Then to complement this, you would use experience-based testing. 
    - This approach helps discover bugs that couldn't be detected using specification-based techniques alone.
  - The three types of test techniques are specification-based, structure-based, and experience-based.
  - Suppose you're testing software that doesn't contain sufficient documentation for creating specification-based test cases
  - You have a limited amount of time to run a structured test. 
    - In this scenario, rely on the skills and experience of the tester to exercise the important areas of the software.
  - Assume that you've created a complex web application. All the specifications are well documented and there is separate time allocated for testing the software before it is deployed.
  - You might want to perform exhaustive and thorough testing. 
    - So you use structure-based techniques, such as statement and decision testing. 
    - These techniques help you test the structure and logic of the application code.
  - Determining the technique used to test an application or software depends on various internal factors.

