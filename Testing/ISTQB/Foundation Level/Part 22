                    ISTQB Certified Tester Foundation Level
                    Course Notes Part 22
                    
                    
Static Testing
  -  Static testing techniques assess code or other work products without ever executing the code that is under test.
  - There are two types
    - First, manual examination of work products and this is called a review. 
    - There's also tool-based code or work product evaluation, and this is known as static analysis
  - Static analysis is very important for safety-critical systems
  - Static analysis is also incorporated into automated build and delivery techniques, for example, Agile development
  - Almost any work product is a candidate for examination using static testing
    - It may also be applied to epics, user stories as well as acceptance criteria, raw software code
  - Reviews can be applied to any work product that those testing understand and know how to read
  - Static analysis can be applied efficiently to any work product with a formal structure
  - Static testing has several benefits
    - First, static testing enables early detection of defects.
    - Another benefit of static testing is that defects are discovered early, in the development lifecycle
      - Defects discovered early in the development lifecycle are typically less costly and easier to address.
    - Defects found in static testing and fixed right away are practically always less costly than using dynamic testing
    - Additional benefits of static testing include the fact that defects are found and fixed typically far more efficiently.
    - Some defects are just harder to find with dynamic testing. 
    - Static testing prevents defects in design or coding
    - Static testing reduces development time and cost, and increases development productivity
    - Static testing also improves communication between team members 
  - In a requirements review, we want to ensure that requirements adhere to quality standards
  - Every requirement should be atomic 
    - This means is that you shouldn't be able to take a requirement and separate it out into multiple requirements
    - Each requirement must be uniquely identified
    - Each requirement must be complete and unambiguous
  -
  - 
