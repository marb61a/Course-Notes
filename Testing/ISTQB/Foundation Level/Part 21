                    ISTQB Certified Tester Foundation Level
                    Course Notes Part 21
                    
                    
Maintenance Software Testing
  - There is a need to perform testing at every stage in the product development life cycle
  - You have to carry out functional and non-functional testing in the initial stages of the development
    - It is then followed up with structural, confirmation, and regression testing in the later stages.
  - The type of retesting when you test a system, which is in operation in a live environment, is called maintenance testing. 
  - Maintenance testing not only tests the changes to the operational system, but also the impact of this modified system 
  - The main reasons for using maintenance testing include
    - Modifications
      - Modifications refer to any enhancements and emergency corrections made to an operational system. 
      - They also include environment changes for rectifying any vulnerabilities. 
      - Maintenance testing for modifications involves verifying that these changes do not adversely affect the system.
    - Migrations
      - Migrations refer to a transfer of a system from one platform to another. 
      - Maintenance testing for migrations involve operational testing of the new environment and the modified software. 
    - Retirement of the system
      - Maintenance testing for the retirement of a system refers to testing of data migration. 
      - Or, if data is to be retained for long periods, archiving is considered.
  - Of the main reasons for maintenance testing, modifications are the ones most frequently occurring in organizations, 
  - It is therefore very important. From the view point of testing, modifications can be classified into
    - Planned modifications
      - Planned modifications account for around 90% of the maintenance work. 
      - They are structured modifications and are decided well in advance.
      - Planned modifications include three types of modifications. 
      - Perfective modifications refer to changes such as including additional features or enhancing system performance
      - Adaptive modifications refer to changes such as the product being retired or migrated to a new platform 
      - Corrective planned modifications refer to changes such as deferred defects being finally corrected.
    - Unplanned modifications
      - Unplanned modifications occur when defects arise suddenly and the malfunctions require an immediate solution. 
  - During maintenance testing, two fundamental tests are carried out to ensure the quality of the product:
    - Confirmation tests – Verifies that changed software is functioning correctly after the changes have been carried out
    - Regression tests – Checks that unchanged software is continuing to work as expected following changes carried 
  - Ideally, maintenance testing should test all the changes made to the system and the working of the entire system itself. 
    - However, this may not always be cost effective or even possible. 
    - To reduce the amount of regression testing, always first determine the parts of the system that could be affected 
    - Analyzing this impact of the changes on the system is called impact analysis.
  - Maintenance testing often makes use of original test specifications with some updates applied. 
    - An impact analysis helps in assessing the amount of updating required to the original test specifications.
  - It may be difficult to conduct an impact analysis for a system which has already been released. 
Impact analysis enables you to focus your regression test activities where they are most needed.  The process involves:

performing a risk analysis
The function of a risk analysis is to establish which of the areas of a software product constitute the greatest risk to the operational services. When you do not have the time to repeat all the tests, you perform a risk analysis to help you determine which areas to focus on during regression testing.

For example, you perform a risk analysis on a software system that malfunctions to help you decide where to focus first and what to do next and where.
checking for the product's original test specifications
If you have the test specifications from the original development process, you can reuse them for the regression tests. You do this by adapting them for changes to the system. For instance, you may just change the expected results for the original tests. This helps in reducing the overall regression testing time.

This also helps you decide if you need to build additional tests for specific areas, which is often the case for enhancement or extension projects or for updates for automated test sets that support regression testing.
There are some specific differences between maintenance and regular testing for new products. The differences are due to factors, such as

test types
Maintenance testing can include all test types that a new product undergoes, although often only a subset of test types is required.  For example, usability testing is unlikely to be required if changes affecting the user experience have not been made.  In most cases however, regressions and confirmation tests form part of maintenance testing. Maintenance testing is also different from maintainability testing, which is a test to determine how easily a system can be maintained. It also tests how quickly a system can be modified to meet new requirements, adapt to a changed environment, or correct existing defects, and make future maintenance easier.
test triggers
While testing for new products is carried out as part of a project, maintenance testing is carried out as an activity in a regular organization, only when there are modifications to the system, or migration, or retirement activities.

This makes maintenance testing more prone to challenges such as resource availability, flexibility, and competition from other activities when compared with regular new product testing.
issues faced
When systems are maintained for a while, a number of defects come to light. Specifications are needed, but unlike in the testing for a new product, they are often unavailable.

Also whenever there is an extension or addition, specifications have to be created. For this you can use documentation similar to the original product specifications. But this poses a problem too as you may end up having many test cases executing the same scenario. And because no traceability exists, if an incident is found, it is difficult to trace it back to the actual defect.
From a test management perspective, a somewhat different path is followed for maintenance testing as against new product testing.

Suppose you are the test manager carrying out the fundamental test activities for a new product. Upon the receipt of an application for a product test, you produce a test plan using the application as a basis. Next, you receive test specifications and create test cases, which you execute upon receiving the test object. Finally, upon completion of the testing, you preserve the testware.

Suppose you are carrying out the fundamental test activities for a maintenance product instead. You will follow the same process followed for a new product, except for when it comes to the test specifications. This is because unlike in regular product testing, test specifications may not be available. Especially in the case of enhancements or extensions.

So, if test specifications are not available, and if it is impossible to compile them again, you use an alternative test basis such as a test oracle. The test oracle contains information that is used to determine expected results to compare with the actual results of the tested product. The oracle may be anything from the current system in use to a tester's knowledge, as long as it is not code.

Finally, upon receipt of the test object, you execute the new and modified tests and perform the regression tests, and then preserve the testware.
