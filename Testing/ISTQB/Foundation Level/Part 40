                    ISTQB Certified Tester Foundation Level
                    Course Notes Part 40
                    
                    
The key factors that influence the testing effort are
  - Product
    - You can use project documentation to obtain information about the software product. 
    - Adequate information, such as usability of the software, helps you to plan effective and efficient tests. 
  - Process
    - The cost of a test project is directly proportional to the size and life cycle of the test project. 
    - If the test process is mature enough to enable effective management of changes
      - It will enable you to reduce test execution cost by avoiding rework costs. 
      - You can also reduce test execution costs by automating tests through test tools. 
      - This also helps reduce the time required to complete testing.
  - People
    - A good test team with relevant experience and skills is more capable of performing efficient testing. 
    - The team must be reliable in order to commit to timely delivery of quality projects. 
    - The stability and geographical distribution of the team also plays an important role in influencing the test effort. 
  - Test results
    - Test results are also important to the total test effort. 
    - If you deliver high quality software and quickly fix errors, you can prevent delays in test execution 
  - Choosing an appropriate test approach or strategy plays an important role in the success of a testing project. 
  - A test strategy defines the test levels and their corresponding activities within the project. 
  - Depending on the project, you can use different testing strategies for each level.
  - When you implement one of these strategies on a project, you effectively define an approach for the project tests. 
  - With this strategy-enabled approach, you understand how to perform a test
    - Identifying the requirements for the tests from beginning to end. 
    - The strategy you apply also helps you to identify the risk analysis to be carried out, 
      - And the design techniques to be applied, and the exit criteria to be applied.

The various software testing strategies include
  - Analytical
    - You use an analytical strategy when you analyze the requirements of a project and the associated risks involved. 
    - You plan, design, and estimate tests based on the parameters derived from this analysis. 
  - Modelbased
    - In model-based testing strategy, you derive test cases from a model
      - This describes some functional aspects of the product under test. 
      - Model-based testing presents an excellent candidate for automation. 
  - Methodical
    - For a methodical test strategy, you use a planned, systematic approach through which you gather information 
      - This is from major areas of testing and develop a checklist based on this information. 
      - You then design, implement, and execute tests based on this checklist.
  - Standard-compliant
    - You can adopt a standardized strategy for testing. 
    - These standards often depend upon an externally developed approach to testing. 
    - For example, you can follow the IEEE 829 standard or similar standards for developing a template testing strategy.
  - Dynamic
    - By employing a dynamic strategy, you can concentrate on finding the maximum number of defects possible during testing
    - For example, exploratory testing is a dynamic strategy where you control the design of tests, when they are performed. 
    - You can use the knowledge obtained from this to design more efficient tests. 
    - You can apply this form of testing at any stage in the development process.
  - Consultative
    - You can use a consultative strategy when you need to consult with the developers or users for guidance on the product. 
    - These resources are normally from outside the test team. 
    - They can guide you on product technologies and other items in the testing process.
  - Regression-averse
    - Regression occurs when a software upgrade identifies errors that were previously not observed. 
    - In this strategy, you re-run previous tests and use automated testing tools to run regression tests and report failures
  - You can choose between test strategies that are preventive or reactive. 
  - For example, analytical test strategies identify defects prior to test execution and so they are preventive. 
  - Dynamic test strategies locate defects during the test execution process and enable you to solve them reactively.
  - You may also combine any of these strategies to suit a particular test requirement. 
  - For example, a tester wants to explore, write, and execute test scripts simultaneously. 
  - You then need to consider risks that may cause test cases to fail so that you can avoid or correct them. 
  - In this case, you can blend the analytical, dynamic, and regression-averse strategies to satisfy all conditions.
  - Blending strategies to enhance the success of a testing effort depends on many important factors. 
  - Some of these factors are
    - Risks
      - Risk-management is an important factor to consider in any project. 
      - You need to identify, analyze, track, and communicate risks in software intensive programs 
      - This is because they can affect the potential for success of a project. 
    - Skills
      - To execute the chosen strategy, you must consider the skills that a test team has and the lack of skills as well. 
      - When a team lacks skill , the best strategy to choose is one based on standards rather than creating a new approach.
    - Objectives
      - To perform successful testing, you must ensure that your test meets all objectives of the testing strategies used. 
      - If your objective is to find the maximum errors possible within a stipulated time and effort
        - Then a dynamic strategy is appropriate.
    - Regulations
      - In addition to meeting objectives, your test should also satisfy any regulations that may exist. 
      - You may need to develop a methodical strategy to ensure that testing also meets all necessary regulatory requirements.
    - Product
      - Some software products, such as those used in weapon systems, have stringent requirements. 
      - You need to analyze whether the software meets these requirements. 
      - Therefore, applying an analytical strategy is appropriate in this case.
    - Business
      - Business considerations are essential as is business continuity. If
      - You can use an existing system as a model for new development, a model-based strategy is a good candidate.
