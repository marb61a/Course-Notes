                    Agile Tester Certification Training
                    Course Notes Part 11


Testable acceptance criteria
  - Acceptance criteria are a set of statements
    - Each of these has a clear pass or fail result
  - The Microsoft definition of Acceptance criteria is as follows
    - Conditions that a software product must satisfy to be accepted by a user or customer or other stakeholder
  - The Google definition of Acceptance criteria is as follows
    - Pre-established standards or requirements a project or product must meet
  - There is no partial acceptance critera
    - The criteria has either been met or it has not
  - Testable vs Non-Testable Criteria
    - Testable Criteria
      - The login page should load in less than 2 seconds
      - The system should be available 24\5
      - A person in a doctor role can access patient files
    - Non-Testable Criteria
      - The login page should load quickly
      - The system should be available always
      - A user can access patient files

Functional and non-functional black box test design
  - Testing Types & Testing Design Techniques
    - Positive Tests
    - Negative Tests
    - Experience based testing
    - Exploratory Testing
    - Test Design Techniques
      - Equivalence Testing
      - Boundary Value Analysis
      - Decision Testing
      - State Transition Design

Exploratory Testing and Agile Testing
  - What is Exploratory Testing
    - Learn about the system as you design and test it
    - Test design and execution occur at the same time
    - It is guided by the test charter
    - Test charter provides the test condition to cover during time-boxed testing
    - The most recent results guide the next step
    - Testers use both white and black box test design techniques
  - Information included in the Test Charter
    - Actor -- Who is using the system
    - Purpose -- Test conditions or objectives
    - Setup -- Pre-conditions or setup required before starting the test
    - Priority -- The importance of this charter
    - Reference -- To the related User Stories and risks
    - Data -- The test data required to carry out testing
    - Activities -- A list of the possible scenarios to be performed by the user
    - Oracle Notes -- How to eveluate the product to determine whether it meets the expected results
    - Variations -- Alternative actions to perform to complement scenarios that are described in Activities
  - Heuristics that can be applied while testing
    - CRUD
    - Follow The Data
    - Configuration Variations
    - Constraints
    - Interruptions
    - Multi-user
  - Useful Information Than Needs to be Documented
    - Test Coverage -- Meaning how much testing is covered
    - Evaluation Notes -- Covering what are the risks and observations
    - Risk/Strategy -- What are the risks covered
    - Issues, Doubts or Anomalies -- Any findings or doubts during execution
    - Actual Behaviour -- What is the actual behaviour of the system including video, screenshots etc
  - How is Exploratory Testing Managed
    - Use a session-based Time Management Technique
      - This should be an uninterrupted period of time-boxed testing
        - This should be between 90 and 120 minutes
      - Test Sessions should include the following
        - Survey Session
        - Analysis Session
        - Deep Coverage
  - Other Testing Techniques To Be Used
    - Other testing techniques to be combined with exploratory testing
      - Analytical Strategy
      - Model Based Strategy
      - Regression Averse Strategy
      - Process or standard compliant strategy
      - Consultative strategy 
  


                    Section 11: Tools in Agile Projects
Tools in Agile Projects
  - Tool Categories
    - Task Management and Tracking Tools
      - These tools record story and tasks for development
      - Record the effort estimations for stories
      - Track the story and task progress
      - Visual representation of the current state of stories and tasks
      - Report about sprint or release progress
      - Provide dashboards to include progress tracking/burndown cases
      - Integration with config management tools
    - Communication and Information sharing tools
      - Wiki 
        - Online knowledge base for different project information
      - Instant Message
        - For chat and group chat
      - Desktop Sharing
        - For sharing desktop to demo and review peer work
      - Video Conferencing
        - For daily face to face communication
    - Software build and distribution tools
      - Daily builds and deployment are key in Agile Development
      - Continuous Integration and build tools are very important
        - This is to have continuous and fast devlivery cycles
    - Configuration Management tools
      - Required to store and track changes to all important work products
      - Allows traceability
      - Stores historical information
    - Test Design, Implementation and Execution tools
      - Test Design Tools
      - Test Management Tools
      - Test data preparation and generation tools
      - Test data load tools
      - Automated test execution tools
      - Exploratory Test Tools
    - Cloud Computing and Visualisation tools
      - Virtualisation allows a single physical resource to act as many small resources
      - Cloud computing allows for virtualising of resources by an external organisation

