                    Agile Tester Certification Training
                    Course Notes Part 3


Extreme Programming (XP) Primary Practices
  - There are 13 primary practices in XP
  - Sit Together
    - Teams should be co-located
    - Collaboration and communication is more effective if teams are co-located
  - 10 Minute Build
    - Create a build and run automated tests in 10 minutes or less
    - Automated testing and building reduces costs and efforts
  - Whole Team
    - Bring together all skills and perspectives necessary
    - Teamwork is proven to produce higher quality products
  - Informative Workspace
    - A workspace should have visible lists, graphs etc to show project progress
    - The team itself should have visible notices and graphs about tasks
  - Energised Work
    - Work-life balance promotes enthusiam as well as better contribution
    - The workplace should be stress free
    - There should be no overtime
  - Slack
    - Include some minor tasks that can be dropped if needed
    - Do not over-commit and under-deliver
    - Set realistic attainable targets
  - Pair Programming
    - 2 heads are better than 1
    - Keep each other task focused
    - Brainstorm and clarify ideas
    - Hold each other accountable to team standards
    - Take programming tasks in pair and alternate partners between 1 - 3 hours 
  - Stories
    - Describe requirements in the form of user stories
    - Brief statements of required capabilities that can be finished in a short time frame
  - Weekly Cycle
    - Do planning on a weekly basis
    - Review the weekly progress
    - Pick a weeks worth of stories to implement this week
  - Quarterly Cycle
    - High level planning for 3 months
    - Pick a quarter's worth of stories to implement
    - Review lessons learned and improvements implemented
    - Focus on the big picture, wher the project fits within the organisation
  - Continuous Integration
    - Integrate and test changes frequently
    - Verify the integrated code by automated build and tests
    - Regular integration detects errors quickly
  -

SCRUM
  - Is an Agile Framework for managing software product development
  - It is a lightweight iterative and incremental approach to product development
  - Scrum is easy to understand but can be difficult to master
  - Scrum contains a number of instruments and practices
    - Sprint
      - SCRUM divides projects into iterations know as Sprints
      - Sprints are a fixed length usually 2 - 4 weeks for the project duration
    - Product Increment
      - Product development is done in increments
      - After each sprint, deliverable product is released
    - Product Backlog
      - This is a list of all items that need to be delivered in the sprint
      - The product owner manages and prioritises the product backlog
      - Product backlog evolves from sprint to sprint
    -  

SCRUM Roles
  - 

KANBAN
  - 

Collaborative User Story Creation
  - 

21. Retrospectives

22. Continuous Integration

23. Iteration Planning

24. Release Planning


