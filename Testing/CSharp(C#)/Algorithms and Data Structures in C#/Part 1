        Algorithms and Data Structures in C#: Complete Tutorial
        Course Notes Part 1


Intro to Algorithms and Data Structures
Introduction to Data Structures
  - ADT is an acronym for Abstract Data Type
    - This is a mathematical model for data types where a data type is defined by its own behaviour
    - It is from the point of view of the data user specifically in terms of possible values, operations and operation behaviour of the type
  - A data structure is a data organisation, management and storage format
    - It enables quick access and modification
    - To be more precise it a collection of data values their relationships and the operations that can be applied
  - An ADT is an abstract implementation of how a set of data can be organised
  - A data structure is a concrete implementation of an ADT
  - An ADT can describe a stack as a data type that will allow push, pop and peek operations
  - A stack has an abstract definition and a concrete implementation
  - Data structures are based on primitive data types eg bool, int etc
    - Primitive data types are the basic building blocks provided by programming languages

Introduction to Algorithms
  - An algorithm is a correctly defined computational procedure which has an input and output
  - An algorithm is a sequence of steps for transforming inputs to outputs
  - Algoritms are needed for solving computational problems
  - An algorithm is always formalised and is unambiguous in defining the computational procedure to reach desired results
  - It will be considered correct if it produces correct output for any input
  - An algorithm will include
    - A description of a correct input
    - A full description of its computational steps
    - A description of a correct output
  -

Intro to Algorithm Analysis
01-Complexity
02-LogLog-Plot - 5:23
03-Approximations - 5:40
04-Orders of Growth



