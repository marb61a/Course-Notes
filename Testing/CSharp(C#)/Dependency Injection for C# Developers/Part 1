                    Software Architecture: Dependency Injection for C# Developers
                    Course Notes Part 1


Dependency Inversion Principle and Dependency Injection
Outline
  - Outline of the course and module

Definition of DIP
  - Dependency Inversion Principle is about decoupling
  - Coupling is about how dependent modules are on the inner workings of other modules
  - DIP can be applied at both the source code and binary level
  - Low coupling should be the objective
    - This is because Low Coupling is often the sign of a well structured system
    - This combined with good design and high cohesion makes code both more readable and easier to maintain 
  - High level modules  should not depend on low level modules
    - Both of these should depend on abstractions
  -

Dependencies
  -

Volatile and Stable Dependencies
  -

05-Definitions-IoC and DI - 3:18
06-DIP Violation Demo - 2:47
07-Refactoring to a Better Design - 8:31
08-Dependency Injection Techniques - 7:09
09-Architectural Implications - 5:24
Common Smells of DIP Violation
  - 

