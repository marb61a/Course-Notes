                    Asp.Net MVC 5 - Ultimate Guide - Indepth & Sample Project
                    Course Notes Part 2
                    

Additional Basics of Asp.Net Mvc
ASP.net MVC vs ASP.net Web Forms
  - MVC
    - Supports clean separation of concerns
    - It has a business logic layer and controllers can be unit tested
    - It supports dependency injection
    - It offers faster performance than Web Forms
    - There is no page lifecycle, controls, postback and viewstate
    - Applications run on the principle that the web is stateless
  - Web Forms
    - Presentation Logic (.aspx files) and Event Logic (.aspx.cs files) are tightly coupled
    - Presentation Logic and Application Logic are not unit testable
    - Web Forms do not support dependency injection
    - Is slower running than ASP.net MVC
    - Supports page lifecycle, controls, postback and viewstate
    - Hides statelessness of web and assumes a stateful environment

Versions of ASP.net MVC
  - ASP.net MVC was released in October 2013
  - It works with Visual Studion 2012, 2013, 2015, 2017
  - It features ASP.net Web API, ASP.net Identity, Attribute Based Routing, Filter Overrides

Folder Structure of an MVC App
  - 


Section 3: Getting Started [Practical Starts Here]


Section 4: ActionResult


Section 5: Razor View Engine


Section 6: HTTP


Section 7: Shared Views


Section 8: Layout Views & Partial Views


Section 9: Convention URL Routing


Section 10: Attribute Routing


Section 11: Models & Strongly Typed Views


Section 12: Model Binding


Section 13: Entity Framework Db-First Approach


Section 14: EF Code-First Approach

Section 15: HTML Helpers

Section 16: Validations

Section 17: Asp.Net Identity

Section 18: Filters

Section 19: Built-in Filters

Section 20: Security

Section 21: Exception Handling in MVC

Section 22: Service Pattern & Repository Pattern

Section 23: State Management

Section 24: AJAX & Web API

Section 25: Performance Optimization
