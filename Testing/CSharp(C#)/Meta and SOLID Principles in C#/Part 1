                    Software Architecture: Meta and SOLID Principles in C#
                    Course Notes Part 1


Single Responsibility Principle (SRP)
Outline
  - Quick intro to the course and what the section will cover

SOLID Intro
  - The design of software is the source code itself
  - Architecture can be thought of as the shape that code takes
  - Source code specifies how software works
  - The final product is a running program
  - Big design upfront is very expensive in software development
  - There is no guarantee that all possible requirements are taken into account with upfront design
    - Also requirements can change very quickly
  - You should keep the design as clean as possible
  - There are 5 different desin smells that a codebase can have
    - Rigidity 
      - 
    - Fragility
    - Immobility
    - Viscosity
    - Needless complexity
  -

Problem Statement
  -

Demo of the Problem
  - 

05-Refactoring to a Better Design - 5:36
06-More Examples of SRP Violations - 4:21
07-SRP Related Patterns - 5:19
08-Conclusion


