using System;
using static System.Console;
using System.Collections.Generic;
using System.Collections;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace QueueSortingEx
{
    class QueueSorting
    {
        public static void QueueSorter()
        {
            Queue firstQueue = new Queue();
            firstQueue.Enqueue(777);
            firstQueue.Enqueue(112);
            firstQueue.Enqueue(450);
            firstQueue.Enqueue(50);
            firstQueue.Enqueue(-115);

            Queue secondQueue = new Queue();
            secondQueue.Enqueue(1244);
            secondQueue.Enqueue(321);
            secondQueue.Enqueue(1625);
            secondQueue.Enqueue(659);
            secondQueue.Enqueue(234);

            // Converting the Queue into array 
            Object[] arr1 = firstQueue.ToArray();
            Object[] arr2 = secondQueue.ToArray();
            int[] newArray = new int[arr1.Length + arr2.Length];

            // Displaying the elements in array 
            foreach (Object ob in arr1)
            {
                WriteLine("This is what the first array contains {0} ", ob);
            }
            WriteLine("\n\n");
            foreach (Object ob2 in arr2)
            {
                WriteLine("This is what the second array contains {0} ", ob2);
            }

            Array.Copy(arr1, newArray, arr1.Length);
            //The First Array automaticaly starts at 0 but needs 0 on second. 
            //The newArray is an array that recieves the data index of the destination array where storing begins
            //The final argument is the number of elements to copy
            Array.Copy(arr2, 0, newArray, arr1.Length, arr2.Length);

            Array.Sort(newArray);
            WriteLine("\n\n");

            foreach (int el in newArray)
            {
                WriteLine("This is what the new array contains {0} ", el);
            }
            
        }
        static void Main(string[] args)
        {
            QueueSorter();
            ReadKey();
        }
    }
}
