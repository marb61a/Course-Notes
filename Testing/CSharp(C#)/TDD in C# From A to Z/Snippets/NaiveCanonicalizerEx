Program.cs File
using System;
using static System.Console;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace NaiveCanonicalizerEx
{
    class Program
    {
        static void Main(string[] args)
        {
            // This will cause an initial error in the aggregating function 
            // due to there not being an initial value
            string empty = NaiveCanonicalizer.GetTheCanonicalForm("");
            WriteLine(empty == "");
            empty = NaiveCanonicalizer.GetTheCanonicalForm(" ");
            WriteLine(empty == "");
            empty = NaiveCanonicalizer.GetTheCanonicalForm("      ");
            WriteLine(empty == "");

            // App will not show strings correctly with whitespace (initially)
            // It is removed using StringSplitOptions.RemoveEmptyEntries
            WriteLine(NaiveCanonicalizer.GetTheCanonicalForm("   Smoke on the water Deep   Purple   "));

            // Will rearrange the words in alphabetical order and capitalize
            WriteLine(NaiveCanonicalizer.GetTheCanonicalForm("Stairway to heaven Led Zepplin"));
            WriteLine(NaiveCanonicalizer.GetTheCanonicalForm("Smoke on the water Deep Purple"));

            ReadKey();
        }
    }
}


NaiveCanonicalizer.cs
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace NaiveCanonicalizerEx
{
    class NaiveCanonicalizer
    {
        public static string GetTheCanonicalForm(string searchTerm)
        {
             // At first the app will accept a empty string, which will cause errors
            //if (string.IsNullOrWhiteSpace(searchTerm))
            //    throw new ArgumentNullException("searchTerm");

            // This is better than above as it checks for null input
            if (searchTerm==null)
                throw new ArgumentNullException("searchTerm");

            return searchTerm
                // Splits the letters at the space
                // The RemoveEmptyEntries will remove the whitespace in the string
                .Split(new[] {' '}, StringSplitOptions.RemoveEmptyEntries)
                // Converts each letter to uppercase
                .Select(x=>x.ToUpper())
                // Orders alphabetically
                .OrderBy(x=>x)
                // Gathers all the words by concatenating, the space will delimit words
                // The aggregate function needs an initial seed in case of 0 elements
                // This can be prevented by passing the initial seed as the first argument
                .Aggregate("",(x, y) => x + " " + y)
                .Trim();
        }
    }
}
