using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

// Sets the context of the tests
using NUnit.Framework;

// Status of tests
using NUnit.Framework.Interfaces;

using AventStack.ExtentReports;
using AventStack.ExtentReports.Reporter;

// Method base
using System.Reflection;

namespace AsbestosInsuranceQuotes
{
    public class MyExtentReport : TestSetup
    {
        static ExtentReports testReports;
        static ExtentHtmlReporter htmlReporter;
        static ExtentTest extentTest;

        public static void CheckReportEmpty()
        {
            if(testReports == null)
            {
                testReports = new ExtentReports();
                htmlReporter = new ExtentHtmlReporter(imgFilePath);
            }
            testReports.AttachReporter(htmlReporter);
        }

        public static void BeforeTest(object method)
        {
            try
            {
                extentTest = testReports.CreateTest(method.ToString());
                Logging.SaveLogFile(MethodBase.GetCurrentMethod(), "getting the method name");
            }
            catch (Exception e)
            {
                throw (e);
            }
        }

        public static void AfterTest(object method)
        {
            try
            {
                var status = TestContext.CurrentContext.Result.Outcome.Status;
                var stacktrace = "" + TestContext.CurrentContext.Result.StackTrace + "";
                var errorMessage = TestContext.CurrentContext.Result.Message;
                Status logstatus;

                switch (status)
                {
                    case TestStatus.Failed:
                        logstatus = Status.Fail;
                        extentTest.Log(logstatus, "Test ended with " + logstatus + " â€“ " + errorMessage);

                        DateTime now = DateTime.Now;
                        string asNow = now.ToString("dd-mmm-yyy hh-mm-ss");
                        extentTest.AddScreenCaptureFromPath(imgFilePath + method + asNow + ".png");
                        break;
                    case TestStatus.Skipped:
                        logstatus = Status.Skip;
                        extentTest.Log(logstatus, "Test ended with " + logstatus);
                        break;
                    default:
                        logstatus = Status.Pass;
                        extentTest.Log(logstatus, "Test ended with " + logstatus);
                        break;
                }
            }
            catch (Exception e)
            {
                throw (e);
            }
        }

        public static void AfterAllTests()
        {
            try
            {
                testReports.Flush();
            }
            catch (Exception e)
            {
                throw (e);
            }
        }
    }
}
