                    Learn Unit Testing with NUnit and C#
                    Course Notes Part 2


Benefits of Unit Tests
  - Some of the benefits of Unit Tests are
    - You will be sure that code under test works correctly
    - If there are changes to implementations of methods then tests will fail showing an issue
    - Unit tests will document how a system is supposed to behave
    - This will have the effect of making a development team more productive by
      - Having more time to work on new features
      - Changing and refactoring code without fear of silent breaking of code
    - Complex systems that are covered by tests are easier to understand
    - There will be fewer defects in production code
    - There will be a reduction is costs from the software for organisations
    - Unit tests are very helpful for Continuous Integration (CI)

Who Should Write Unit Tests and When 
  - Many developers do not think they should be writing code for tests
  - This is a mistake as developers should be responsible for the code that they write
  - Testers have a part to play in the testing process as much as developers
  - Unit tests should be written for any complex application

Programmer's Oath 
  - An oath that shows a programmers attitude to responsibility
  - Programmers should promise to the best of their ability to
    - Not produce harmful code
    - Code produced will always be the best work and the will be no allowing defective code to accumulate
    - Produce proof with each release that the code works as it should
    - Make small frequent releases so as to avoid impeding progress elsewhere on an application
    - Continually try to their code at every opportunity
    - Kepp productivity high and not do anything that would downgrade performance
    - As part of a team cover for each others as team members
    - No make promises or estimate without certainty where possible
    - Never stop learning to improve themselves

DegreeConverter-Exercise
  - The task in this is to take a couple of simple methods and write unit tests for them
    - The methods are temperature converters (Celsius to Farenheit and Farenheit to Celcius)

DegreeConverter-Solution 
  - The code for the solution is located at
    - 


NUnit Testing Framework
Outline
  - Quick intro to the course and what the section will cover

Assert Intro

Assert Demo 

Arrange-Act-Assert 8

Running Tests from the Console

SetUp and TearDown

OneTimeSetUp and OneTimeTearDown

Parameterized Unit Tests

Grouping and Ignoring Unit Tests

Code Coverage

FizzBuzz Exercise

FizzBuzz Solution 

Roman Numerals Exercise

Roman Numerals Solution

Stack Exercise

Stack Solution

Conclusion




