                    Learn Unit Testing with NUnit and C#
                    Course Notes Part 1


Getting Started
Outline
  - Quick intro to the course and what the section will cover

What is a Unit Test 
  - A Unit Test is a function which calls another function, it then checks the outcome of the called function for correctness
    - If the outcome is not correct then the test fails
  - SUT is an acronym standing for System Under Test
    - It is an object instance which are going to be tested
  - Integration Testing is testing a unit of work without having control over it
    - This will use some of the real dependencies such as database, threads etc
  
Unit Testing Frameworks
  - There are several different unit testing frameworks available
  - MSTest
    - This is a framework already integrated into Visual Studio by default
    - It is however missing some features out of the box
  - NUnit
    - Is one of the oldest .net testing frameworks
    - It has the complete feature set required from a good unit testing framework
    - It is easy to use and integrates well with other tools
  - xUnit.NET
    - This is not recommended as there is poor documentation and a poor API
  - There is very little difference between the frameworks
  
Your First Unit Test
  - Example App, code located at
  - You should add a new project for tests
  - This should be the same name as the project being tested but with tests appended eg Business and BusinessTests
  
Naming Conventions
  - 

Running and Debugging Unit Tests

Benefits of Unit Tests

Who Should Write Unit Tests and When 

Programmer's Oath 

DegreeConverter-Exercise

DegreeConverter-Solution 

Conclusion



