                    MTA Introduction to Programming Using Java (98-388) Session 2 Part 1
                    Course Notes


Primitive Type Variables
Data Types and Initialisation
  - In Java there are 8 types of primitive data
  - byte which goes from 128 to -127 
  - char which defines a single character or a number up to 65535, a letter needs to be in single quotes
  - int which is an integer is a 32 bit whole number and can go up to over 2 billion
  - double is a 64 bit decimal number
  - short is a 16 bit whole number
  - long is a 64 bit whole number which needs an l after the number to stop Java thining it is an integer
  - float is a 32 bit decimal and needs an f after the number or Java will see it as a double
  - boolean will be either true or false
  - Primitive means predefined
  - Variables should be declared in the following order data type var_name = 'variable_value';
  - This is called initialising the variable
  - Variable names can have characters, numbers, underscores, currency symbols but cannot start with a number
  - Camel casing should be used for variable names
  - Try commenting code to ensure that code is not confusing
  - In real apps remove unused variables from code
Lost Precision
  - This can be a problem with floating point decimals
  - There can be tiny inaccuracies in large decimal numbers
  - For very large decimals it is suggested to use double and not float for data types
  - Double handles large decimals far better than float
Primitive vs Wrapper Objects
  - Wrapper Objects expand on primitives
  - They wrap them and allow the primitives to be treated like objects
  - These can then be used in various collections
  - Wrapper types use uppercase letters eg int becomes Integer
  

String Manipulation
String Classes and Literals
  - String declaration starts with an uppercase S
  - It is an object type not a primitive
  - It is not limited in size
  - In java strings are immutable
  - There are many different methods eg toUpperCase(), isEmpty(), toLowerCase()
String Format
  - It allows for taking a string and formatting it along with some other text
  - It saves have to write concatenation and gives some formatting flexibility
  - "\" + product1 + "|" becomes String.format("|%s|", product1);
  - %s means display as a string
  - You can also control output length  String.format("|%20s|", product1); is 20 characters long
String Operators
  - String operators can be used to better display data
  - Methods such as trim() remove extra spaces from a string
  - The subString() method takes part of a string eg product.subString(3, 7); will take from position 3 - 7
  - The charAt() method will determine which character is at a certain position in a string
  - charAt(3) will get the 4th character due to Java using 0 to initialise an array
Primitive to String conversion
  - To convert to a string use the toString() method
  - Instead of using Integer.toString() you can use String.valueOf()
Nature of Strings
  - Strings in Java are immutable which means that they cannot be changed
  - When a string is changed the string itself is not changed but gotten rid of
  - This is done for security reasons
Initialisation Null
  - Null is empty

 
Arrays and ArrayLists
One Dimensional Array
  - 
