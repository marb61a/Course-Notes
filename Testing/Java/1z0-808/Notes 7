                                        Oracle Java SE 8 Certification Part 7
                                        Notes from the Selikoff/Boyarsky book
                                        
                                        
Identifiers
There are only three rules to remember for legal identifiers:
  - The name must begin with a letter or the symbol $ or _.
  - Subsequent characters may also be numbers.
  - You cannot use the same name as a Java reserved word.
  - There is no need to remember the keywords for the exams, know the common ones though
  - Legal examples are okidentifier, $OK2Identifier, _alsoOK1d3ntifi3r, __SStillOkbutKnotsonice$
  - Non-legal include 
    - 3DPointClass // identifiers cannot begin with a number
    - hollywood@vine // @ is not a letter, digit, $ or _
    - *$coffee // * is not a letter, digit, $ or _
    - public // public is a reserved word
  - Avoid using weird names as although legal may cause problems eg debugging
  - Consistency is enforced using CamelCase eg myNameIs etc where the first letter of each word is uppercase
  - This can help in the exam because if the question contains an illegal identifier then it will not compile

Understanding Default Initialization of Variables
Before you can use a variable, it needs a value. Some types of variables get this value set automatically
Local Variables
  - A local variable is a variable defined within a method.
  - They must be initialised before use
  - They do not have a default value and contain garbage data until initialized.
  - The compiler will not allow for reading an uninitialised variable
Instance and Class Variables
  - You can tell a variable is a class variable because it has the keyword static before it.
  - Instance and class variables do not need to be initialised as they get assigned a default value
  - Default initialization values by type
          Variable type                 Default initialization value
            boolean                       false
        byte, short, int, long            0 (in the type’s bit-length)
        float, double                     0.0 (in the type’s bit-length)
             char                         '\u0000' (NUL)
  - All object references (everything else) null
Understanding Variable Scope
  - public void eat(int piecesOfCheese) {
  -   int bitesOfCheese = 1;
  - }
  - There are two local variables in this method.
  - bitesOfCheese is declared inside the method. piecesOfCheese is called a method parameter. It is also local to the method.
  - They are both said to have scop that is local to the method
  - This means that they cannot be used outside of the method
  - When you see a set of braces ({ }) in code eg if statements or for loops, it means you have entered a new block of code.
  - Each block of code will have its own scope
  - The exam may attempt to trick you with questions on scope.
  - The first step in figuring out the scope of something is to identify the blocks of code.
  - Identifying blocks needs to be second nature for the exam.
  - The rule for instance variables is easier: they are available as soon as they are defined and last for the entire object lifetime.
  - Static variables are easy too they go into scope when declared like the other variables types. However, they stay in scope for the entire life of the program.
  
  
