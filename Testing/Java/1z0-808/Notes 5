                                        Oracle Java SE 8 Certification Part 4
                                        Notes from the Selikoff/Boyarsky book
                                        
                                        
Reading and Writing Object Fields
  - It is possible to read and write instance variables directly from the caller.
  - Reading a variable is known as getting it, writing to a veriable is known as setting it

Instance Initializer Blocks
  - When writing a method you use {} (curly braces)
  - The code that lies between these braces is called a code block
  - These code blocks are usually in a method
  - Code blocks appearing outside a method are called instance initializers.
  - Counting code blocks is easy, you just count the number of pairs of braces.
  - If the opening and closing braces do not match in number then there will be a compilation error
  - When counting instance initializers, keep in mind that it does matter whether the braces are inside a method. 
    - There are only one pair of braces outside a method.

Order of Initialisation
  - If writing code that initialises in multiple places then you must keep track of the order of initialisation
  - Fields and instance initialiser blocks are run in the order in which they appear in the file.
  - The constructor runs after all fields and instance initializer blocks have run.
  - Order matters for the fields and blocks of code. 
    - You cannot refer to a variable before it has been initialised:

Distinguishing Between Object References and Primitives
Primitive Types
  - Java has 8 primitive types
    - boolean                 true or false
    - byte                    8-bit integral value
    - short                   16-bit integral value
    - int                     32-bit integral value
    - long                    64-bit integral value
    - float                   32-bit floating-point value
    - double                  64-bit floating-point value
    - char                    16-bit Unicode value
  - These eight data types represent the building blocks for Java objects
  - The exam assumes you are well versed in the eight primitive data types
  - A float requires the letter f following the number so Java knows it is a float.
    - long will also need an L to follow the number to show it is a long
  - Each numeric type uses twice as many bits as the smaller similar type.
  - When a number is present in the code, it is called a literal.
  - Java assumes you are defining an int value with a literal by default
  
