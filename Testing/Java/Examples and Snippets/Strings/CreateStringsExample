public class CreateStringObject{
	public static void main(String[] args){
		// Assign and then check for equality
		String s3 = "Java";
		String s4 = "Java";
		
		// The == operator is used to test whether two String Object references point to the same object on the heap.
		// This will return true
		System.out.println(s3 == s4);
		
		// Using the new keyword will create 2 different objects
		String s1 = new String("Java");
		String s2 = new String("Java");
		// This will return false
		System.out.println(s1 == s2);
		
		// You can pass a string literal to a method
		System.out.println("abc");
		
		// String has a substring which can be used on an existing object
		String c = "abc".substring(2, 3);
		
		// When you compare a string literal with a string object created with the new keyword it will return false
		String e = "JDK";
		String f = new String("JDK");
		// This will return false
		System.out.println(e == f);
		
		// Strings are immutable which means that they cannot be changed
		// altering them will require a new string eg concat
		String str1 = "I am not for changing";
		String str2;
		String str3;
		
		// Points str2 to str1
		str2 = str1;
		
		String str1a = "I am new string in the string pool";
		System.out.println(str2);
		// Will be true
		System.out.println(str1 == str2);
		
		str3 = new String("I am not for changing");
		// Will be false
		System.out.println(str1a == str3);
		
	}
}
