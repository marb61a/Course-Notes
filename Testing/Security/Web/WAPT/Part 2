                    Web Application Penetration Testing
                    Course Notes Part 2


1.2 Methodologies
  - The Penetration Testing Execution Standard (PTES) is an initiative by a community of experienced penetration testers
    - It defines how penetration tests should be carried out in real world situations
  - The OWASP Testing guide is the effort of a number of web application security specialists 
    - This helps standardize how vulnerabilities and weaknesses should be tested during an assessment
    - The document targets not only penetration testers but also companies
      - The companies have to be willing to assess their web applications with a solid and comprehensive methodology.
    - The OWASP Top 10 is based on the risks associated with web application vulnerabilities
      - The OWASP Testing guide contains a number of actionable tests
      - Each test is still closely related to the most important web application weaknesses and vulnerabilities 
        - Instead of risk discussion the testing guide gives step by step instructions for testing for weakness existence 

1.3 Reporting
  - The Penetration Report is the ultimate deliverable from an engagement
  - By hiring a penetration tester or a penetration testing firm a client in usually interested in
    - Knowing the status of the security of the assets in scope 
    - Knowing what is vulnerable 
    - Knowing what needs to be fixed first 
  - Knowing the techniques used may not be important to some clients
    - For example using a reverse TCP shell once you managed to exploit an RFI
  - The judgment of the overall engagement is based solely upon the final report 
  - There is not a prescribed or standard structure to penetration testing reports
    - There are best practices and critical aspect that should be taken care of when writing a report
  - The reporting phase begins at the moment you sign the Rules of Engagement with your client
    - This is probably the right time to put together some material to describe the engagement and goals
    - The Engagement Summary is something that is great to have in the Executive summary section of the report
  - Reporting is often believed to be the last chronological step of an engagement
    - This is a mistake and can be dangerous
    - When you create your report as a last step you will forget important details
    - If the engagement is large testing time may simply run out
    - This does not mean that during your tests you have to keep stopping to write your report
      - A more appropriate process may be to consistently test and collect information and then report
  - While performing tests you will have to collect and organize information methodically
    - This information should be the core of the report
    - By collecting information and storing it properly a tester will have already made a contribution to the report
      - At the end then it is simply a matter of gathering and presenting this information professionally
    - Mind mapping tools and spreadsheets are the best two ways to store information with structure and relationships
    - You can create a structure that adapts to your needs or to the type of engagement
  - The report can live in many different structures and formats
    - There are mainly 3 types of people that will read the report
      - The C-Level eg CEO, CTO etc
        - These people will not really care what kind of exploits you used
        - Ironically they are the level of people that sought the penetration test in the first place
        - Money, man-hours and time are the metrics at this level. 
      - The IT department
        - This is whare a dive into more detail about which areas or departments are more affected is shown
        - Also shown is what kind of vulnerabilities are present
      - The company developers
        - These will usually not care about the graphs and the money involved in implementing a patch 
        - The care here is what is being patched and how
      - If the company is small then there will be people wearing many hats
      - You will want to create as many sections as the types of audience your report needs to have
    - The trick to create a perfect report is to build it in different sections
      - Use different language and terminology as they are understood by each part of the client organisation
      - You can match your target audience groups with the actual report structure. 
  - A typical report structure is laid out as follows
    - Executive Summary -> Vulnerability Report -> Remediation Report
    - The executive summary should be no more than 2-3 pages
      - It is where you talk to the corporate types and give a brief and concise overview about the whole engagement
      - Ensure that current security metrics are visible in the first two pages 
      - There is no interest in approach or tool selection use graphs, charts, stats and tables
    - Metrics are important because they can be acted on as they evolve over time
      - This is critical to the client at this level as they want to know the effectiveness of expenditure
      - Management will want concrete proof that hiring a tester and following recommendations has lowered risk
      - Past reports may be needed to produce an estimate of current risk to previous levels
    - Executive levels might be interested in what attacks a tester has been able to perform against organisation assets
      - A good classification of vulnerabilities and attacks is the MITRE CAPEC 
        - An acronym standing for Common Attack Pattern Enumeration and Classification
      - It offers a comprehensive dictionary on attacks along with useful information 
    - There are many reasons that system can be exploited including
      - 0-Day vulnerabilities
      - Unpatched software
      - Failure to implement security controls
      - Improper authentication management
      - Misconfigurations of software and/or hardware
    - Charting vulnerabilities by their root cause will allow the executives to identify responsibilities and take actions
  - It is important to touch on the amount of work required to fix all the discovered issues
  - 


