                    Web Application Penetration Testing
                    Course Notes Part 10


Fingerprinting Custom Applications 
  - When not in front of a commonly available application, you have to go through an initial overview of the application logic
    - This example has an in-house application customised for the organisation being tested
    - The inner logic is unknown to us but can be reverse engineered with a careful analysis of its behavior
  - 

Enumerating Resources 
  -

Relevant Information Through Misconfigurations
  - Sometimes the best way to retrieve relevant information about our web applications is to look for potential mistakes in web server configuration
  - A quick and very common way to gather information, files, source code and misconfigurations is by looking for open directory listings
    - These directories have been configured to show a list of the files and subdirectories in paths that we can access directly
    - 99% of the time, these directories have not been deliberately configured to show their content
      - They are just the result of a misconfiguration
    - Looking for directory listings is a task that anyone with a basic experience in scripting languages like Perl, Python etc can automate in few minutes
  - 

Google Hacking 
  -

Shodan HQ 
  -



Module 4 : Cross-Site Scripting
  - Thare notes on XSS attacks available at the following URL
    - https://github.com/marb61a/Course-Notes/tree/master/Testing/Security/Web/XSS/Ultimate XSS
  -   
    
Cross Site Scripting 
  - Attacks triggered by user input are called input validation attacks
  - 

Anatomy of an XSS Exploitation
  -

The three types of XSS 
  -

Finding XSS
  -
  
XSS Exploitation
  - 

Mitigation 
  -
  


Module 5 : SQL Injection
Introduction to SQL Injections 
  -

Finding SQL Injections
  - 

Exploiting In-Band SQL Injections
  -

Exploiting Error Based SQL Injections
  -

Exploiting Blind SQL Injections 
  -

SQLMap
  -

Mitigation Strategies
  -

From SQLi to Server Takeover 
  -


Module 6 : Authentication and Authorization
6.1 Introduction 
6.2 Common Vulnerabilities 
6.3 Bypassing Authorization


Module 7 : Session Security
7.1 Weaknesses of the Session Identifier 
7.2 Session Hijacking 
7.3 Session Fixation 
7.4 Cross-site Request Forgeries 



Module 8 : Flash
8.1 Introduction 
8.2 Flash Security Model 
8.3 Flash Vulnerabilities 
8.4 Pentesting Flash Application 


Module 9 : HTML5
9.1. Cross Origin Resource Sharing (CORS) 
9.2. Cross Windows Messaging 
9.3. Web Storage 
9.4. WebSockets 
9.5. Sandboxed frames 



Module 10 : File and Resource Attacks
Path traversal 
  -

File Inclusion Vulnerabilities 
  -

Unrestricted File Upload 
  -

Module 11 : Other Attacks

Module 12 : Web Services

Module 13 : XPath

Module 14 : Penetration Testing Content Management Systems

Module 15 : Penetration Testing NoSQL Databases
