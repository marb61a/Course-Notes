                    Web Application Penetration Testing
                    Course Notes Part 3


1.3 Reporting (Cont)
  - Vulnerability Report (Cont)
    - For each vulnerability found there should be a schema containing
      - Name of vulnerability containing description, impact, classification if available and ID if found elsewhere
      - Exploit Proof of Concept - Containing code from the exploit and screenshots taken
      - Affected Targets -- This will contain a list of the assets and which vulnerabilities have affected them
      - Where there is one vulnerability affecting multiple targets there will need to be proof of concept for each
    - If the vulnerability is in common off-the-shelf software, you should include its description from NIST or OSVDB
    - Is is good to add further explanation when the description sounds meaningless
      - The description should always be relevant to the client environment
        - It must provide clear information on the specific situation from the tests
    - It is a good idea to also add an impact value to a vulnerability, this will use
      - Exploit difficulty, whether it was difficult or relatively easy
      - Affect Systems, which would be judged by the asset value
      - How much exposure does the vulnerabilty need, is it remote or local or need elevated priviliges
      - Availability of exploits eg Metasploit modules
    - The OWASP Top 10 already assigns an impact to each risk so make it meaningful for each client by adjusting values
      - This should reflect the value an affected asset has in a business
    - A vulnerability ID is important to your client in order that they may gather more information 
      - Mitre CVE-ID’s are “unique, common identifiers for publicly known information security vulnerabilities”
      - Standard practice to be followed is for known vulnerabilities you should include the corresponding ID 
        - This should be from at least Mitre CVE and OSVDB, including a link to their page
  - The Exploitation proof should not be too long
    - It is intended for your audience to understand how the exploitation was carried out
      - This is to help the devlopment team reproduce the exploit
    - When handing over proof include snapshots and available exploit payloads
      - Exploit payloads can include HTTP request and response headers in the case of web application testing
      - Where possible only include the vulnerable parameter, the HTTP method and the payload
      - Only add the full headers if exploit reproduction depends on them
  - Try to keep redundant information at a minimum
    - However do keep in mind that further explanation maybe needed if existing explanation is unclear
  - If vulnerabilities are heterogeneous, or the number of targets in scope is little
    - Then the information needed can be arranged on a per target basis
    - You can include a couple of graphs to highlight the types of vulnerabilities found on the single target
      - If using colours to show impact levels then this must be used throughout the report
  - The Remediation report is the place where the developers in charge of fixing the vulnerabilities are addressed
    - These are the vulnerabilities from the Vulnerability report that you have shown to be exploitable
    - This is where the difference between a professional pen tester and a hacker comes to ligh
      - Professional pen testers will help a client find the right solution to their issues
    - There are 2 different time horizons in the remediation report
      - Short Term and Long Term
      - In the short term you want the remediation team to address the most important vulnerabilities as soon as possible. 
        - You may need to suggest an emergency number to be provided by the client
          - This is for the possibility that vulnerabilities are found that put the clients vital assets at risk
        - Sometimes it takes weeks or months from the beginning of the tests to the release of the deliverables
        - You will want to persuade the client to address these high-impact issues as soon as possible
      - Long term action should also be suggested to the client such as
        - Implementation of SSDLC (Secure Software Development Lifecycle) 
        - Usage of security checks early in both business and development processes
        - Using different platforms, versions or frameworks
    -
  - 



Module 2 : Introduction to Web Applications
HTTP Protocol Basics
  - Hypertext Transfer Protocol (HTTP) is the basic protocol used for web browsing
  - 

Encoding 
  - Information encoding is a critical component of  information technology
  - 

Same Origin 

Cookies 

Session 

Web Application Proxies 


