                    Web Security 
                    Course Notes Part 8


                    Section 5 - Third Party Assets
1 - Introducing Third Party Assets
Items that fall under third party assets include
  - Non hosted scripts
  - Version dependency for use in development eg "express": "^4.15.2"
    - This is fuzzy as there as multiple possible versions as the ^ signifies from this version up
  - Tracking code eg Google Analytics
    - This maybe the worst of the three
    - The example code is used to generate its own script tag which then pulls in the real code it uses

2 - Challenge 8: Subresource Integrity
  - Add SubResource Integrity (SRI) attributes to the script and some style tags for the material design library
    - This is locally hosted and not from a remote CDN
    - If assets were deployed on a CDN they are at risk of tampering
  - Add some trivial code to either file
  - Observe how the browser will now refuse to fully load the resources

3 - Challenge 8: Solution
  - The file being added to is the main-layout ejs file
  - Adding an integrity field which is set to nothing to to the link and style tags will cause a browser complaint
    - This may not work in some cases, there maybe a need to add a fake integrity attribute eg sha256-xxxxx
    - The console errors should show the hashes that should be used and they can be added to the integrity field
  - The crossorigin attribute is set to anonymous
    - This basically says to send no cookies or authentication credantials in the request just make the request
  - With reject hash fields there will be no CSS or JS



                    Section 6 - Man-in-the-Middle
1 - Introducing Man-in-the-Middle Attacks
  - The scenario is a user connecting over a public wifi hotspot
    - The attacks will take advantage of a couple of things
      - Laptops etc remember what networks they have been connected to unless cleared
      - When the laptop sees a network of the smae name it will attempt to rejoin it
      - This is because these networks will be trusted by default
  - A pineapple is a wifi device used in pen testing
  - Wifi devices broadcast what they are looking for
  - When joining a public wifi network the router is trusted as the first DNS server in-line
    - DNS translates IP addresses into names
  - Some companies that offer Wifi utilise DNS poisoning
    - This is to drive users to pages where terms and conditions are agreed in order to use the service
  -

2 - Hardware
  -

3 - Encrypting Data
  -



                    Section 7 - HTTPS
1 - Introducing HTTPS
  - The percentage of the web using using HTTPS has increased steadly
  - A brief run through of the path to HTTPS 

2 - HTTPS & Cryptography
  - In order to communicate securely there are 2 types of encryption to be dealt with
  - Symmetric Encryption and Public Key Encryption
    - Symmetric Encryption is very fast much faster than Public Key
    - There is also no practical limit on content size
      - This is probably what most people who have locked a file with a password have used
  - If an encryption key was generated on a per-connection basis this would be almost perfect except for a catch on how to shear keys safely
    - Reusing keys is not good in cryptography as randomness is good
  - This is where Public Key cryptography comes in
    - There are 2 different types of keys Public and Private
    - The public key is used to create messages that are encrypted, the private kay decrypts them
    - The algoritms involved are very complex
  - Public Key Encryption, The key Exchange
    - This can be slow but is necessary for a system that is getting encrypted messages without divulging how to send them
    - The server sends it public key and certificate to the client
    - The client and server compare cipher suites
      - Cypher suites are essentially the methodologies used for the faster symmetric encryption used later
    - Finally a seesion key is generated be the client
      - This is encrypted with the servers public key so that only the server can read it
    - The session key is what is used for encrypted data exchange
  -
  -

3 - TLS Handshake
  -

4 - OpenSSL
  -

5 - Challenge 9: Defend Against Man-in-the-Middle Attack
  -

6 - Challenge 9: Solution



