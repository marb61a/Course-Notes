                    Mobile Device Security And Ethical Hacking
                    Course Notes Part 4


                    Section 2 - Mobile Platform Access And Application Access
1 - Unlocking, Rooting And Jailbreaking
This is the start of the second section of the course
All popular mobile devices come with restrictions
  - There are usually permitted application install sources
  - Local device access privileges
  - Code Signing requirements
There are common needs to be able to escape these restrictions
  - Many different users have successfully leveraged these escapes
These become unrestricted devices
There are different motivations for requiring unrestricted access to devices
  - Enterprise administrators should have at least one unrestricted device per platform
  - There is often a need for unrestricted access to the mobile OS, some reasons include
    - Application binary collection for analysis
    - Runtime analysis of software
    - Filesystem Profiling and monitoring
    - Penetration testing targets

2 - Data Storage And File Systems
There is a huge amount of sensitive material stored on mobile devices
  - Passwords for network services such as email accounts
  - Documents such as notes, bookmarks, email messages
  - SMS content such as call records, virtual keystrokes
There are other resources which may not be as obvious as some others
  - Application binaries
  - Public and private digital certificates
This section will examine extracting this data to be used when evaluating threats
  - These will come from both compromised and stolen devices
iOS Filesystem
  - It is very similar to MacOS and other *nix systems
  - The /private directory is of huge interest specifically /private/var/mobile 
  - The Media subdirectory in private will hold the various media types such as images etc
  - The MobileSoftwareUpdate subdirectory is for over the network downloads for files
  - The Downloads subdirectory is for AirDrop files
  - The Containers subdirectory should be looked at carefully as it holds some interesting material
  - The /private/var/mobile/Containers/Shared directory will hold files being shared by applications
    - This is done through Share Extensions where 2 applications will get access to the shared data directory
  - The /private/var/mobile/Containers/Bundle directory is where the applications themselves are
    - When 3rd party applications are installed they are in the Bundle directory
    - Using ls in the /private/var/mobile/Containers/Bundle/Application directory and will show GUID's of installed apps
  - The /private/var/mobile/Containers/Data is where the data for 3rd party applications is stored
  

3 - Network Activity Analysis
There is a lab and solution
  - The lab is to find passwords on a jailbroken iOS device
  - The instructor recommends that you spend as much time as possible as you will learn a lot more about the iOS filesystem
  - This exercise is solved on the Windows platform
  - To search a directory in Windows -> dir /s
  - Having all files available in the one file can help understand what is on the filesystem
  - This can be tuned for different file types
  - This approach will help save time in the long run
  - Using the command line is not compulsory as some people may not be familiar
  - The SQLite Spy tool is used to examine the sms.db file found in the example
    - This tool will examine databases from SQLite database which is used on a lot of mobile devices
Static Application Analysis
  - This is further evaluating an app by examining the executable itself
    - There is no need to execute the file to evaluate it
  - This includes reverse-engineering the code to identify activities
  - This does not require anybody to be a programmer
    - It does however require some good analysis and research skills which will develop over time
  - It will provide more conclusive analysis and results than monitoring activities such as traffic monotoring
Legality of Reverse Engineering
  - Different jurisdictions have different laws on reverse-engineering
  - It is important to seek legal advice prior to proceeding with any reverse-engineering
  - In the US it is covered by DMCA laws
    - Reverse-engineering is permitted when seeking to understand and analyse interoperability
    - This can be to see if software such as firewalls integrates and operates with eg OS infrastructure
  - EU is covered by the Computer Programs Directive
    - This is again permitted as fair practice and does not require authorisation from holder of copyright
  - In some cases End User Legal Agreements (EULA) are deemed more important than fair use access so again check



                    Section 3 - Mobile Application Reverse Engineering
1 - Automating App Analysis
Manual analysis of apps gives the best security details, however there are costs to this
  - It is time consuming to perform an analysis
  - It require a skillset that can only be acquired over time
Automating analysis with 3rd party apps is an alternative
  - Some tools are limited but can be useful in conjunction with manual analysis
Mobile device app analysis tools are still very immature
  - They are probably only in beta level
There are no sophisticated commercial tools available
  - There are free/open source tools
  - These tools are often from enthusiasts so do not expect professional level anything
Both Android and iOS tools can be beneficial but also can be buggy and problematic
There are some times when automated app-analysis tools should be used
  - When evaluating new app requests prior to approval for internal use
    - The instructor recommends using app-analysis tools anytime there is a significant deployment of system or mobile apps
  - Penetration tests of app security
  - When performing evaluations of malware for mobile devices
  - As part of an incident response from a mobile device that has been compromised
Needle 
  - This is an iOS modular framework app assessment tool
    - It works on Linux or MacOS and interacts with a jailbroken devicce over SSH
  - It uses a console and modules like Metasploit 
    - The modules are classified as Binary, Comms, Dynamic, Hooking, Static, Storage, Various
  - You need to connect a jailbroken device with USB
