                    HTML5 Media: Audio, Video & WebRTC
                    Course Notes


                    Section 1 - Introduction
1 - Introduction to HTML5 Media
Quick introduction to the instructor
A very quick run through of the syllabus of the course
  - The course will involve the creation of you own player
  - Most people just use embedded players



                    Section 2 - Audio and Video Basics
1 - Support
Audio & Video support for tags is good for a lot of browsers
  - This includes mobile browsers
CODEC - This stands for code-decode and is just the algorithm which decompresses media
Different browsers used to support different codecs
  - Much of this is down to the openness of the format
  - There is also politics involved in the situation
  - This covers both audio and video

2 - Containers and Implementation
Containers
  - You can have different formats contained in different containers but is usually not done
  - Audio Containers
    - Ogg -> Vorbis
    - MP4 -> AAC
  - Video Containers
    - WebM -> VP8 video + Vorbis Audio
    - Ogg -> Theodora video + Vorbis audio 
    - MP4 -> H264 + AAC

Example Syntax
  // Putting audio on to a webpage
  <audio controls>
    <source >
    <source >
  </audio>

3 - HTML5 Video with Fallback

4 - Assignment 1 - Build a Player

5 - Assignment Media Files

6 - Mark's Projects

7 - Assignment 1 - Solution
  - http://jsbin.com/AdiFeWo/4/



                    Section 3 - Tools and Configuration
1 - Tools and Services
Some tools that will encode media in the format that the user requires
  - All of the tools have their strengths and weaknesses
  - A lot of times there will be a need to use more than 1
  - Audacity -- http://www.audacityteam.org
  - Miro -- http://www.getmiro.com
  - ffmpeg2theora -- http://v2v.cc/~j/ffmpeg2theora/
  - FFmpeg -- http://ffmpeg.org
  - HandBrake -- https://handbrake.fr
  - Libav  -- https://www.libav.org

Firefogg is no longer available as an extension to the Firefov browser
There are also online services available for encoding and hosting media
  - There maybe a fee or adverts with some services so that will have to be factored in
  - YouTube -- https://www.youtube.com
  - Archive.org -- https://archive.org
  - Vid.ly -- http://m.vid.ly
  - Vimeo -- https://vimeo.com
  - Wistia -- https://wistia.com

Some of these maybe flash/html5 combinations which may affect videos

2 - Assignment 2 - Configure and Encode Media



                    Section 4 - Introduction to the Media API
1 - play(), pause(), setMedia() and canPlayType()

2 - Audio and Video API Resources

3 - Creating your first Audio Player

4 - Assignment 3 (with solution) - Create a Custom Video and Audio Player



                    Section 5 - Buffering, Seeking, Preloading, and the User Experience
1 - Preloading and Buffering

2 - Seeking, Seekable and Displaying Time

3 - Anatomy of a Progress Bar

4- Playlists

5 - Assignment 4 - Adding a Functional Progress Bar

6 - Assignment 4 - Solution
  - http://jsbin.com/AqEZAfu/1/



                    Section 6 - Subtitles and Playback Rate
1 - WebVTT

2 - WebVTT Capabilities and Support

3 - Subtitle Resources

4 - Playback Rate

5 - Assignment 5.5 - Add playbackRate Capability to your Player

6 - Assignment 5.5 - Solution
   - http://jsbin.com/omAtEM/1/



                    Section 7 - Canvas and WebGL
1 - Canvas and Video

2 - Creating Simple Effects

3 - More Canvas Examples

4 - Assignment 6 - Manipulating Color

5 - Assignment 6 - Solution
  - http://jsbin.com/ImohifA/2/



                    Section 8 - WebRTC
1 - WebRTC Introduction and Components

2 - MediaStream API

3 - PeerConnection and DataChannel API's

4 - WebRTC Support and Resources

5 - Assignment 7 (and solution) 
  - http://jsbin.com/eQudoCA/1/



                    Section 9 - Advanced Audio
1 - Audio and Video Limitations

2 - Web Audio API

3 - Node-based Approach

4 - Assignment 9 (and solution) - Using the Audio API
  - http://jsbin.com/umldeHE/1/

5 - Web Audio API Examples



                    Section 10 - Wrap-up
1 - Creative Examples

2 - PopcornJS

3 - Audience Question

4 - Wrap-up
