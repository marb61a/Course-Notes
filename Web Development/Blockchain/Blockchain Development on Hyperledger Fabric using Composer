                    Blockchain Development on Hyperledger Fabric using Composer
                    Course Notes


                    Section 1 - Introduction
1 - Introduction to the Course 
Brief introduction to the course and the author
Hyperledger is much more complex than Ethereum or Bitcoin
The course will not cover Architecture as it is for developers
It is recommended that students code as much as possible
  - Experimentation too is very much encouraged

2 - Download PDF Link + Course Information and Updates 
PDF link from the author

3 - What is Hyperledger? 
Hyperledger is an umbrella of Open Source Blockchain and related tools
  - https://www.hyperledger.org
  - It was started in December 2015 by the Linux Foundation
  - It is an incubator for Blockchain Technologies that promote reuse
There are 2 categories
  - DLT Frameworks
    - There are 4 active DLT framework initiatives
      - Hyperledger Sawtooth which is led by Intel
      - Hyperledger Iroha led by Soramitsu
      - Hyperledger Fabric led by IBM is partnership with others
        - Production ready Fabric 1.0 was released on July 21st 2017
        - It is evolving very quickly
        - It is a Blockchain framework for creating business ready blockchain applications
          - It provides a set of infrastructure and application building blocks
          - It provides practices and guidelines for creating Blockchain applications 
      - Hyperledger Burrow led by Monax
  - Tools
    - There are 4 tool initiatives
      - Hyperledger Cello which aims to simplify managment and creation of Blockchain infrastructure
      - Hyperledger Composer is for create business network applications using the high level Composer language
      - Hyperledger Explorer provides visibility into an operational Blockchain system
      - Hyperledger Quilt aims to achieve interoperability between chains
      - The tools should be able to be reused across different frameworks

4 - Distributed Ledger Technology & its Challenges 



                    Section 2 – Hyperledger Fabric & Composer Concepts
1 - Hyperledger Fabric : A DLT for Business Applications 

2 - Assets, Chaincode & Ledger 

3 - Permissioned Network, Members & Membership Service Provider

4 - Nodes and Channels 

5 - Hyperledger Fabric Composer Overview 



                    Section 3 – Pre-Requisites for Fabric development
1 - Frequently Asked Questions | Common Issues 

2 - Development Machine Specifications & IDE

3 - Composer Dev Tools Installation 

4 - Exercise: Validate the Composer Development Environment 

5 - Install Docker or Docker Toolkit 



                    Section 4 – Virtual Machine: Hyperledger Fabric Dev Environment Setup
1 - FAQ: Vagrant Setup 

2 - Native Vs. Virtual Machine Development Environment 

3 - Virtual Machine based Hyperledger Dev Setup 

4 - Setting up the Virtual Machine using VirtualBox+Vagrant 

5 - Exercise: Tryout the Vagrant Commands 

6 - Installation of Fabric Tools 

7 - Post Installation Steps 



                    Section 5 – Native: Hyperledger Fabric Dev Environment Setup
1 - Frequently Asked Questions | Common Issues 

2 - Install CURL and Cygwin (Windows only) 

3 - Linux/Ubuntu & AWS: Setup of Fabric Development on Local & Cloud VM 

4 - Mac OS: Setup of Fabric Development Environment 

5 - Windows : Fabric development environment setup 

6 - How to use the Dev Tools 



                    Section 6  – Dev Environment Setup overview & Tools usage
1 - PLEASE READ: Composer v0.19.0 Breaking changes - Upgrade needed 

2 - Development Environment Topology 

3 - Development Environment Scripts 




                    Section 7 – Fabric Under the Hood (Concepts & Terminology)
1 - Ledger Implementation 

2 - Dev Environment Walkthrough: Peer & CouchDB setup 

3 - Peers Nodes : Anchors and Endorsers 

4 - Clients Node: Endorsement Policies 

5 - Orderer Nodes 

6 - Membership Service Provider & Certification Authority 

7 - Dev Environment Walkthrough: Orderer and CA Server 

8 - Chaincode Development 



                    Section 8 – Using Composer Tools for Application Development & Administration
1 - Fabric Composer Playground 

2 - Yeoman Hyperledger Generators 

3 - Participant Roles and Business Network Cards 

4 - Composer CLI Tool - Deploying a Network Application 

5 - Composer CLI Tool - Network Application Management 

6 - Exercise: Create & Deploy Network Application 

7 - REST Server Overview 

8 - REST Server Security 

9 - Skeleton Angular Application using Yo 

10 - Composer SDKOverview 



                    Section 9 – Business Network Application Modelling
1 - Case Study: ACME Airlines 

2 - Modeling Language Files | Namespace 

3 - Defining the Resources 

4 - Support for Object Orientation 

5 - Modeling Arrays 

6 - Registries & Relationship between Resources

7 - Adding the field Validations 

8 - Resource Registries & Identities +Exercise 

9 - Modeling the Transactions 

10 - Exercise: Fix the code for generating the FlightId 

11 - Queries 

12 - Exercise: Add a set of aircraft queries 

13 - Managing identities for Network Applications

14 - Access Control Language (Part 1 of 2) Simple Rules 

15 - Exercise: Simple Rule for ACMENetworkAdmin 

16 - Access Control Language (Part 2 of 2) Conditional Rules 

17 - Exercise: Conditional Rule for ACMEPersonnel 



                    Section 10 – Composer SDK / API : Coding the Client Apps
1 - API : Frequently Asked Questions | Common Issues 

2 - Business Network Card Management 

3 - Admin Connection Class 

4 - Business Network Connection Class 

5 - Submitting a Transaction 

6 - Registries 

7 - Resources 

8 - Querying the Registries 

9 - Subscribing to Events 



                    Section 11 - Composer SDK / API : Coding the Transaction Processors
1 - Embedded Runtime for Testing 

2 - Crash course in Mocha and Chai 

3 - Writing Unit Test Cases for Network Applications 

4 - Runtime API for Transaction Processing Functions 

5 - Exercise: Define the Aircraft Assignment Transaction

6 - Query invocation in Transaction Processing Functions 

7 - Implementing Programmatic Access Control 

8 - Emitting events and Integrating with external systems 



                    Section 12 - Developing Front End Applications for Network Applications
1 - Application Design Patterns 

2 - Securing the REST server with Authentication Strategy 

3 - Walkthrough: Applying OAuth2.0 Authentication Strategy to REST Server 

4 - Working of Multi User Enabled REST Server 

5 - Walkthrough - REST Server Multi User mode 
