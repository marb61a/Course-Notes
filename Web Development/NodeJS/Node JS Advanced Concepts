                    Node JS: Advanced Concepts
                    Course Notes

There is a complete set of notes for less advanced Node users at
  - https://github.com/marb61a/Course-Notes/blob/master/Web Development/NodeJS/Learn and Understand NodeJS


                    Section 1 - The Internals of Node
1 - How to Get Help
There are a few different ways of getting help from the instructor from the course
  - The recommended method is to use the discussion section on the course board

2 - Starting With Node Internals

3 - Module Implementations

4 - Node Backed by C++!

5 - The Basics of Threads

6 - The Node Event Loop

7 - The Event Loop Implementation

8 - Event Loop Ticks

9 - Is Node Single Threaded?

10 - Testing for Single Threads

11 - The Libuv Thread Pool

12 - Threadpools with Multithreading

13 - Changing Threadpool Size

14 - Common Threadpool Questions

15 - Explaining OS Operations

16 - Libuv OS Delegation

17 - OS/Async Common Questions

18 - Review

19 - Crazy Node Behavior

20 - Unexpected Event Loop Events



                    Section 2 – Enhancing Node Performance
1 - Enhancing Performance

2 - Express Setup

3 - Blocking the Event Loop
07:06
Clustering in Theory
05:11
Forking Children
05:37
Clustering in Action
05:33
Benchmarking Server Performance
05:16
Benchmark Refactor
03:55
Need More Children!
16:42
PM2 Installation
02:53
PM2 Configuration
06:49
Webworker Threads
02:27
Worker Threads in Action
11:33
Benchmarking Workers



                    Section 3 – Project Setup
1 - The Next Phase

2 - Project Walkthrough

3 - Key Customization

4 - MongoDB Creation

5 - Routes Walkthrough



                    Section 4 – Data Caching with Redis
1 - MongoDB Query Performance

2 - Query Caching Layer

3 - Redis Introduction

4 - Installing Redis on MacOS

5 - Redis on Windows

6 - Getting and Setting Basic Values

7 - Redis Hashes
06:57
One Redis Gotcha
02:53
Cache Keys
07:47
Promisifying a Function
08:07
Caching in Action
07:59
Caching Issues
05:26
The Ultimate Caching Solution
20:59
Patching Mongoose's Exec
10:42
Restoring Blog Routes Handler
02:05
Unique Keys
06:00
Key Creation
03:08
Restoring Redis Config
01:27
Cache Implementation
04:27
Resolving Values
05:46
Hydrating Models
06:25
Hydrating Arrays
03:27
Toggleable Cache
08:41
Cache Expiration
02:30
Forced Cache Expiration
05:15
Nested Hashes
06:46
Clearing Nested hashes
04:36
Automated Cache Clearing with Middlware



                    Section 5 – Automated Headless Browser Testing
1 - Testing Flow

2 - Testing Challenges

3 - Commands Around Testing

4 - First Jest Test
04:26
Launching Chromium Instances
09:50
Chromium Navigation
04:31
Extracting Page Content
05:03
Puppeteer - Behind the Scenes
04:44
DRY Tests
03:23
Browser Termination
01:34
Asserting OAuth Flow
07:29
Asserting URL Domain
02:59
Issues with OAuth
05:11
Solving Authentication Issues with Automation Testing
04:36
The Google OAuth Flow
07:16
Inner Workings of Sessions
12:06
Sessions From Another Angle
08:22
Session Signatures
11:33
Generating Sessions and Signatures
09:03
Assembling the Pieces
08:07
WaitFor Statements
09:17
Factory Functions
04:59
The Session Factory
08:48
Assembling the Session Factory
03:03
Code Separation
06:22
Global Jest Setup
07:00
Testing Factory Tests!
03:41
Adding a Login Method
05:01
Extending Page
07:58
Introduction to Proxies
07:46
Proxies in Action
12:10
Combining Object Property Access
08:17
Combining the Page and Browser
08:37
Custom Page Implementation
04:16
Function Lookup Priority
04:26
Gee, I Hope This Works!
05:32
Reusable Functions on Page
05:38
Testing Blog Creation
04:53
Default Navigation
05:30
Asserting Form Display
05:59
Test Timeout
05:23
Common Test Setup
05:07
Nested Describes for Structure
07:00
Asserting Validation Errors
07:39
Asserting Form Confirmation
06:25
Asserting Blog Creation
05:57
Options for Testing Prohibited Actions
03:32
Direct API Requests
11:44
Executed Arbitrary JS in Chromium
03:54
Asserting Page Response
07:24
Get Restrictions
02:44
A Final 'GET' Test
02:56
Super Advanced Test Helpers



                    Section 6 – Wiring Up Continuous Integration
1 - Introduction to CI

2 - CI Providers

3 - The Basics of YAML Files

4 - Travis YAML Setup

More Travis YAML
05:08
Client Builds
06:37
Script Config
06:18
Using Travis Documentation
05:44
More Server Configuration
13:26
Note - Travis Update
00:22
A Touch More Configuration
03:11
Git Repo Setup
04:18
Travis CI Setup
02:15
Triggering CI Builds
02:48
Build Success
01:18
–
Scalable Image/File Upload
02:20:33
Image Upload
02:15
Big Issues Around Image Upload
04:40
Alternate Image Upload
03:33
Chosen Storage Solution
04:17
Upload Constraints
04:26
Image File Transport
06:04
Upload Flow with AWS S3
05:22
Details of the Presigned URL
06:47
Security Issues Solved with Presigned URL's
04:15
Adding an Image Picker
03:30
Handling File Changes
04:39
Recording Image Files
04:38
The SubmitBlog Function
03:07
AWS Credentials with IAM
05:08
Creating S3 Buckets
03:16
Allowing Actions with IAM Policies
08:17
Creating IAM Users
04:41
Upload Routes Files
05:14
Configuring the AWS SDK
03:18
GetSignedURL Arguments
10:06
Calling GetSignedURL
09:35
Viewing the Signed URL
02:17
Attempting Image Upload
07:59
Handling CORS Errors
05:20
Outstanding Issues
01:39
S3 Bucket Policies
05:01
Tying Uploads to Blogs
04:18
Ensuring Images get Tied
02:01
Displaying Images
04:06
Bonus!
00:44
