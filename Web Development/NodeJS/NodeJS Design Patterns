                    NodeJS Design Patterns 
                    Course Notes


                    Section 1 - Introduction
1 - Welcome
A brief welcome to the course and intro to the instructor

2 - What You Should Know
There are some prerequisites for any student taking the course
  - 

3 - Using The Exercise Files
A quick guide on how to use the exercise files that accompany the course



                    Section 2 - Overview
1 - What Are Design Patterns
A Design Pattern is a solution to a problem that works again and again in different problems
  - This can be very beneficial in projects for saving time and money
  - They are named and catalogued solutions to ragulayl face development problems
  - They are also a common language that developers use
  - They also will also make developers better 

2 - Gang Of Four Design Patterns
The Gang of Four are the four people who are commonly thought of as responsible for introducing design patterns
  - https://en.wikipedia.org/wiki/Design_Patterns
  - These patterns were originally designed with OOP in mind
  - There are many patterns not in the Gang of Four book
  - NodeJS and JavaScript have their own patterns

3 - What Are Anti-Patterns
If there are good patterns to use in development then the opposite must be true too
  - These are bad solutions which will cause problems
  - Understanding anti-patterns is as important as understanding patterns
  - Some JS patterns include - Callback hell and Eetending the prototype on an instance



                    Section 3 - Creational Patterns
1 - The Singleton Problem

2 - The Singletons Pattern

3 - Singletons In Node

4 - The Prototype Pattern

5 - The Prototype Clone Method

6 - The Factory Pattern

7 - The Builder Pattern

8 - Implementing A Builder



                    Section 4 - Structural Patterns
1 - The Adapater Pattern

2 - Implementing An Adapter

3 - The Proxy Pattern

4 - Implementing A Proxy

5 - The Composite Pattern

6 - Implementing A Composite

7 - The Decorator Pattern

8 - Implementing Decorators



                    Section 5 - Behavioural Patterns
1 - Chain Of Responsibility

2 - Implementing The Storage Class

3 - The Command Pattern

4 - Implementing Commands

5 - Improving The Conductor

6 - The Iterator Pattern

7 - Implementing Iterators

8 - The Observer Pattern

9 - Implementing Observers

10 - The Strategy Pattern

11 - Implementing Strategies



                    Section 6 - Conclusion
1 - Next Steps
A thank you from the author and some suggested next steps
