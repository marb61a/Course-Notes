                    Securing Applications in Node.js 
                    Course Notes


                    Section 1 - INTRODUCTION
1 - The Course Overview
A quick intro to the course and the instructor
There are some prerquisites for the course
  - A recent version of Node.js should be installed and running
  - The student should have a good understanding JavaScript
  - There should be a basic understanding of the request/response cycle in Node

2 - The Importance of Security in Web Applications
A quick look at some previous high profile breaches 
  - These underline the importance of security
  - There are both moral and business reasons to care about security
  - 2017 security breach at Equifax
    - Millions of confidential financial records were stolen
    - It was caused by unpatched software that was facing the internet
  - 2013 security breach at Adobe
    - 154 million accounts were brerached in Oct 2013
    - Usernames, emails, passwords were all exposed
    - There was poor password storage in place which helped make the breach larger
    - There had to be settlements paid out

3 - Express Is Not Secure by Default
ExpressJS is one of NodeJS's most popular web frameworks
  - https://expressjs.com
  - There are more NodeJS packages than any other
  - Each module is a single job module
  - Code reuse is what made Node very popular
  - There is no default authentication which is an issue
  - Another issue is that there is no default CSRF protection
  - CSRF can be surprisingly easy to exploit
  - Most web apps are vulnerable to CSRF and code is needed to prevent it

4 - Set Up the Demo Project
There is a GitHub repo available to clone for the sample project
  - https://github.com/PacktPublishing/Securing-Applications-in-Node.js-V-
  - You can use the fork to create a copy in your own GitHub account
  - The instructor also uses the GitHub desktop client rather than the cli to clone the repo
  - After cloning cd into the directory and use yarn to install
    - There are many dependencies and they will be explaind during the course.
  - The course will use visual studio code as the ide of the course



                    Section 2 - CROSS-SITE REQUEST FORGERY
1 - How to Break the Security of an Application Thatâ€™s Vulnerable to Cross-Site Request Forgery


2 - Protecting a Site Using CSRF Tokens

3 - Protecting a Site Using Headers

4 - Same-Site Policies on Cookies



                    Section 3 - SQL INJECTION AND CROSS-SITE SCRIPTING
1 - SQL Injection in Action

2 - Preventing SQL Injection with Template Literals

3 - Cross-Site Scripting in Action

4 - Preventing Cross-Site Scripting



                    Section 4 - PASSWORDS AND PASSWORDLESS
1 - Password User Experience

2 - Securely Storing and Verifying Passwords

3 - Password Reset Flows

4 - Passwordless Authentication



                    Section 5 - TWO-FACTOR AUTHENTICATION
1 - Why Is Two-Factor Authentication Important?

2 - SMS-Based Two-Factor Authentication

3 - Google Authenticator

4 - OAUTH

5 - Facebook Login

6 - Google Identity



                    Section 6 - AUTHORIZATION, DEPLOYMENT AND MANAGING SECRET KEYS
1 - Authorization in General

2 - Authorization in REST APIs

3 - Authorization in GraphQL

4 - Deployment and Managing Secret Keys



