                    Webpack: Transpiling and Bundling JavaScript
                    Course Notes


                    Section 1 - Course Overview
1 - Course Overview
A brief introduction to both the course and the instructor



                    Section 2 - What Is Webpack?
1 - Welcome
Webpack can be considered as both a compiled and a bundler
A quick introduction to the section 

2 - Interactive Coding with Hot Module Replacement
Webpack has many benefits, one of these is Hot Module Reload (HMR)
  - This is a much more interactive way of cding instead of code, compile, wait and reload
This example will be making use of the Vue.js framework
  - Sudents can follow along by using the vue-cli tool and following the instructions on the home page

3 - Seamless Compilation

4 - Consistent Tooling

5 - Modularity

6 - Benefit - Bundling for Performance

7 - Sophisticated Bundling

8 - npm Install, Import, Go!

9 - Help with Caching

10 - Source Maps Through Any Number of Transformations

11 - A Compiler Platform

12 - Course Series and Updates



                    Section 3 - Bundling Code
1 - Cloning and Starting the Solitaire App

2 - The Legacy Solitaire App Structure

3 - Performance Problems in the Solitaire App

4 - Bundling app.js

5 - Inspecting and Using the App Bundle

6 - IIFEs Are No Longer Necessary

7 - Migrating a Second Module to the Bundle

8 - Webpack Polyfills Module Loading

9 - Webpack Polyfills Use Strict for Harmony Modules

10 - Learning from Webpack Source Code

11 - Generating an Interactive Graph of Modules

12 - Challenge



                    Section 4 - Accelerating Development
1 - Benefits of Watch and WDS

2 - Watch Mode

3 - Installing webpack-dev-server

npm run-scripts for Documenting Webpack Commands2m 25s
Composing npm Scripts1m 2s
Adding a webpack.config.js File2m 58s
devServer.contentBase - Set Location of Static Content on Disk5m 9s
devServer.publicPath - Set Base URL to Serve Webpack Output3m 18s
devServer.watchContentBase - Reload on Static File Changes2m 25s
Webpack Configuration Documentation0m 42s
Looking Under the Hood of the DevServer3m 32s
Hot Module Replacement Overview1m 31s
devServer.hot and the HotModuleReplacementPlugin1m 47s
Reload Fallback1m 21s
Automatic Restart After Changing webpack.config.js1m 17s
Disable Reload Fallback1m 49s
output.publicPath1m 15s
Identifying Modules by Name with the NamedModulesPlugin1m 29s
Hot Swapping Methods in a Live Application2m 41s
Hot Swapping Can Maintain State1m 34s
Inspecting Hot Updates1m 14s
Recap0m 59s
Dev Isn't Prod28m 37s
Transpiling: Using the Future Now1h 5m
Understanding Loaders20m 42s
What Is a Loader?2m 0s
Designing a tee-loader1m 45s
Creating a tee-loader2m 24s
resolveLoader.alias to Resolve a Custom Loader1m 45s
Logging Request and Source per Module1m 16s
Collapsing Grouped Webpack Console Output with Chrome DevTools1m 35s
Debugging Webpack with Chrome DevTools0m 32s
Adding the Same Loader Twice0m 49s
Passing and Parsing Options in the tee-loader1m 45s
Legacy Option Passing via a Query String0m 32s
Inline Loaders Are Occasionally Useful3m 5s
Learn More by Building Loaders - Try a Pitching Cache Loader3m 14s
Running Build Tasks13m 2s
What About Build Tasks?1m 21s
Cleaning the Output Folder Before Bundling3m 44s
Not Just Build Tasks: npm-install-webpack-plugin4m 57s
Finding Plugins for Common Build Tasks3m 0s
Troubleshooting with Source Maps40m 42s
Bundling and Transpiling Make Troubleshooting Difficult1m 6s
Runtime Errors Aren't as Transparent as Compilation Errors3m 9s
Enabling Source Maps with devtool: "source-map"2m 6s
How devtool: "source-map" Works4m 49s
Fast, Inline, Partial Source Maps - devtool: "eval"5m 2s
High Quality Maps with Fast Incremental Rebuild - devtool: "eval-source-map"5m 21s
devtool: "hidden-source-map"3m 45s
Only Map Location and Filename, Not Source Code - devtool: "nosources-source-map"1m 34s
Resources3m 45s
devtool Is Just an Idiosyncratic, String Based Serialization of Plugin Options6m 53s
Add the SourceMapDevToolPlugin Directly for Flexibility Instead of Using devtool3m 12s
Generating Code19m 51s
Challenge: Building a codegen-loader to Capture Build Information6m 34s
Explanation of the Starting Point to My Solution4m 9s
My Solution8m 9s
The End0m 59s
Course info
