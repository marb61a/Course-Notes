                    Web Performance with Webpack
                    Course Notes


                    Section 1 - Web Performance
1 - Top Performance Issues
The top 3 page load causes are
  - The amount of JavaScript for initial download
    - This is the No 1 factor as JS can be expensive for apps to load
  - The amount of CSS for initial download
  - The amount of initial network requests on initial download
    - Some of the issues can be resolved by using HTTP2
    - Some of this will still be the same size no matter how much optimisation of bundle size is done
In this case the instructor is not referring to the platform
  - It is items like codebase performance

2 - Performance Goals
There are some goals for students 
  - This should not intimidate students
  - These specs are tested in the real world
  - <= 200kb Uncompressed initial JavaScript total
  - <= 100kb Uncompressed initial CSS total
  - HTTP <= 6 initial network calls
  - HTTP2 <= 20 initial network calls
  - 90% code coverage 

3 - Code Coverage

4 - Code Splitting



                    Section 2 - Code Splitting
1 - Types of Code Splitting

2 - Code Splitting Demonstration

3 - Webpack Code Splitting Under the Hood

4 - Load a Heavy Module Asynchronously

5 - Code Splitting in Vue, React, & Frameworks

6 - Code Splitting Named Exports

7 - Vendor Bundles are an Anti Pattern

8 - Dynamic Code Splitting

9 - Dynamic Code Splitting Walkthrough



                    Section 3 - Module Methods & Magic Comments
1 - Introducing Magic Comments

2 - Webpack Modes

3 - Webpack Prefetch & Preload

4 - Wrapping Up Code Splitting

5 - Webpack Config Organization

6 - Building Your Library with Webpack

