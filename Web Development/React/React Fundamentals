                    React Fundamentals
                    Course Notes


1 - Introduction to the React Ecosystem Video 
The 5 biggest benefits of using React are 
  - Composition, by this it refers to composition of components
    - A component is a small piece of an app functionality that has been wrapped up (encapsulated)
    - Some examples include <Router />, <Date />, <Map /> & <Icon />
    - The same thinking that is applied usually to functions can be applied to Components
    - Instagram app is used to demonstrate the boundaries between components
    - Traditionally application state would exist in the DOM
      - In the React Component model state is managed by each component
      - This approach helps manage complexity in an application
    - This means that the best way of building large applications in React is to build many small ones
    Example Syntax
    // Demonstration of component composition
    var ProfilePic = function(){
      return(
        <img src={'https://photo.fb.com' + this.props.username} />
      )
    }
    
    var ProfileLink = function(){
      return (
        <a href={'https://www.fb.com' + this.props.username}>
          {this.props.username}
        </a>
      )
    }
    
    var Avatar = function(){
      return (
        <div>
        <ProfilePic username={this.props.username} />
        <ProfileLink username={this.props.username} />
        </div>
      )
    }
    
    <Avatar username="Joe Bloggs" />
    
    - This is what makes React so powerful, separating complexity into components and composing them together 
  - Unidirectional Dataflow
  - Declarative
    - React uses a declarative style of programming
    - Imperative style of programming tells how to do something.
  - Explicit Mutations
  - Just JavaScript

2 - Video Babel, Webpack, and React 

3 - Solution - Props 

4 - Solution - .map and .filter 

5 - Video Validating Components with PropTypes

6 - Pt1 Intro and Implicit Binding

7 - Pt2 Explicit binding with .call

8 - Pt3 The new and

9 - Managing and Updating Component State

10 - Stateless Functional Components

11 - Making Ajax Requests in React

12 - Adding React Router to our Application

13 - Forms and Encapsulation in React

14 - Dynamic Rendering + Query Params

15 - Axios, Promises, and the Github API

16 - Composition via props.children

17 - Building a Highly Reusable Component

18 - Video Building for Production + Hosting
 

