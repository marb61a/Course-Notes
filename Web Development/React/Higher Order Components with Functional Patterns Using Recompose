                    Higher Order Components with Functional Patterns Using Recompose
                    Course Notes


1 -  Write a Higher Order Component from Scratch
A higher order component typically has the same structure
Example Syntax
  // Sample Higher Order Component
  const hoc = (BaseComponent) => (props) => 
    <BaseComponent {...props}/>

2 - Compose Multiple Higher Order Components Together using Recompose

3 - Add Local State to a Functional Stateless Component using Recompose

4 - Add Local State with Redux-like Reducers using Recompose

5 - Add Lifecycle Hooks to a Functional Stateless Component using Recompose

6 - Transform Props by using the Recompose mapProps Higher Order Component

7 - Lock Props by using the Recompose withProps Higher Order Component

8 - Flatten a Prop using Recompose

9 - Show a Spinner While a Component is Loading using Recompose

10 - Show Error Messages based on Non-Optimal States with Recompose

11 - Render Components Based on Predicates in Recompose

12 - Set the HTML Tag of a Component via a Prop using Recompose

13 - Optimize Expensive Computations in Recompose

14 - Optimize Component Rendering using Recompose

15 - Learn How Recompose Optimizes Higher Order Components
