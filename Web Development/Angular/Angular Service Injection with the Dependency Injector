                    Angular Service Injection with the Dependency Injector (DI)
                    Course Notes


1 - Introducing Angular Service Injection with the Dependency Injector
The goal of the course is
   - Learn the various ways that Angular Services can be created & provided with the Dependency Injector
Dependency Injection is a core part of Angular
  - It is part of Angular since 1.x
  - It can be used in a wide range of ways but the course concentrates on services
  - The course will use simple standalone examples at first

Example Syntax
  // people.service.ts
  export class PeopleService {
    constructor() {}
    
    getPeople() {
      return [
        {
          name: "Bob"  
        },
        {
          name: "Joe"
        }
      ]
    }
  }

2 - Define an Angular Service

3 - Register a Service to Angularâ€™s Dependency Injection Mechanism

4 - Create Multiple Angular Service Instances

5 - Define an Aliased Class Provider in Angular

6 - Simplify an Angular Service using a JavaScript Object as a Value Provider

7 - Instantiate a Service using an Angular Factory Provider

8 - Pass Dependencies to a Factory Provider in Angular

9 - Overwrite a Service in a Component Subtree in Angular

10 - Use an Abstract Class as DI Token for your Services in Angular

11 - Control the dependency lookup with @Host, @SkipSelf and @Optional

12 - Avoid Multiple Service Instances in Lazy Loaded Modules in Angular
