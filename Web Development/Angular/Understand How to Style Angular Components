                    Understand How to Style Angular Components
                    Course Notes


1 - Add styles to a component in Angular
Example Syntax
  // Using an example component which is meant to resemble a panel
  // styled.component.ts
  import { Component } from '@angular/core';
  
  @Component({
    selector: 'styled-component',
    template: `
      <div class="panel">
        <div class="panel-heading">
          <h3 class="panel-title">Hey There</h3>
        </div>
        <div class="panel-body">
          Look at me, I am a styled component
        </div>
      </div>
    `
  })

2 - Use Angular style encapsulation to avoid styles from leaking into other components

3 - Style HTML elements in Angular using the style property

4 - Conditionally add a single CSS class to a DOM element in Angular

5 - Style HTML elements in Angular using ngClass

6 - Style HTML elements in Angular using ngStyle

7 - Use Angular style sanitization to mark dynamic styles as trusted values

8 - Use Angularâ€™s @HostBinding and host(...) to add styling to the component itself

9 - Use host-context and the ng-deep selector to apply context-based styling

10 - Use the Renderer2 to add styles to an element in Angular
