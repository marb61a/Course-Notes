                    Advanced Fine-Grained Control of Vue.js Components
                    Course Notes


1 - Simplify Vue Components with vue-class-component
Example Syntax
  // Create a new file App.vue
  <template>
    <div>
      {{message}}
    </div>
  </template>
  
  <script>
    import Vue from "vue";
    import Component from "vue-class-component";
  
    // Instead of the usual object export this time export a class
    export default class App extends Vue{
      message = "Hello from Class";
    }
  </script>

To make the above work there needs to be a package installed
  - npm i vue-class-component

2 - Define Props on a Vue Class with vue-property-decorator

3 - Place Content in Components with Vue Slots

4 - Create Layouts with Named Vue Slots

5 - Pass Props Between Components with Vue Slot Scope

6 - Pass Props to Vue Functional Templates

7 - Control Template Contents with Vue's Render Function

8 - Avoid Semantic HTML Names for Vue Components

9 - Write Vue Functional Components Inline

10 - Pass Vue Render Functions as Props for Powerful Patterns

11 - Switch Between Vue Components with Dynamic Components

12 - Load Vue Async Components

13 - Handle Errors and Loading with Vue Async Components

