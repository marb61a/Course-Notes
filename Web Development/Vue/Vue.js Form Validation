                          Vue.js Form Validation
                          Course Notes


1 - Do It Yourself Form Validation
Form validation is a feature that every application needs
  - This is true even if there is only a single input, it needs to be validated
Example Syntax
  // Example index.html file
  <!DOCTYPE html>
  <html lang="en">
    <head>
      <meta charset="UTF-8">
      <title>Form Validation</title>
      <script src="https://unpkg.com/vue/dist/vue.js"></script>
      <link rel="stylesheet" href="style.css">
    </head>
    <body>
      <div id="app">
        <h1>Form Validation</h1>
        <form @submit.prevent="submitForm" autocomplete="off">
          <div class="form-group">
            <label for="name">Name: </label>
            <input v-model="form.name" id="name">
          </div>
          <div class="form-group">
            <label for="age">Age: </label>
            <input v-model="form.age" id="age">
          </div>        
          <div>
            <button>Submit</button>
          </div>        
        </form>
      </div>
      
      <script src="app.js"></script>
    </body>
  </html>
  
  // App.js example file
  new Vue({
  
  })

2 - Form Validation with Vuelidate

3 - Display Detailed Errors when Validating a Form

4 - Display Error Messages After User Input

5 - Dynamic Classes Based on Validation Status

6 - Display Form Errors on Submit

7 - Display Errors After Input is Complete

8 - A Validators Responsibility

9 - Form Validation Helpers

10 - Custom Vuelidate Rules

11 - Conditional Validation

12 - Asynchronous Validation
