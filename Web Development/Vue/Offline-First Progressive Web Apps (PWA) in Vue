                    Offline-First Progressive Web Apps (PWA) in Vue.js
                    Course Notes
                    
                    
1 - Intro to Offline-First Progressive Web Apps in Vue.js
Progressive Web Apps are fast and engaging 
  - They can be installed on a mobile device
  - They provide a native like user experience
  - The course will take an existing Single Page App (SPA) and convert to a PWA
  - Although the course uses Vue the lessons to be learned are framework agnostic

2 - Add a Web App Manifest to Create a Progressive Web Application
The first step to creating a PWA is to create an app manifest

Example Syntax
  // manifest.json which is in the root of the app
  // This describes the app using metadata
  {
    "name": "Chatty Images",
    "short_name": "Chatty",
    "start_url": "index.html",
      
  }

3 - Add Meta Tags for Other Browsers on a PWA

4 - Cache Static Assets with Service Workers using sw-precache

5 - Integrate Service Worker Generation into Webpack's Build with SW-Precache

6 - Register a Service Worker in Production

7 - Hot Reload Static Files by Clearing Service Worker Cache while Developing

8 - Use a no-op Service Worker in Development

9 - Show Notifications when a Service Worker is Installed or Updated

10 - Cache External Resources during Runtime with sw-precache

11 - Cache Data from TCPIP Connections with IndexedDB

12 - Lazy load Images using Intersection Observer API

13 - Check Online Status by using the NavigatorOnLine API

14 - Lazy Load a Route by using the Dynamic Import in Vue.js

15 - Audit your App with Chrome Devtools

16 - Optimize Assets Delivery using preload and prefetch                   
                    
