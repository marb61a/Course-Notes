                    OAuth and OpenID Connect
                    Course Notes 


                    Section 1 - Introduction 
1 - Welcome 
A quick introduction to the course and the instructor

2 - What you should know before watching this course 
There are not too many prerequisites
  - When talking about OAuth it is OAuth2 that is being referred to
  - Understanding how HTTP redirects work
  - Securely storing information in the browser
  - Recommended to have Postman along with the Postman Interceptor installed
  - An OAuth server, there are Open Source ones available
  - An alternative is the Google OAuth Playground
    - https://developers.google.com/oauthplayground/
  - There is also the OpenID Connect playground
    - https://openidconnect.net
  - JSON web token inspector
    - https://www.jsonwebtoken.io

3 - Exercise files 
A quick guide to using the exercise files that accompany the course



                    Section 2 - What Is OAuth? 
1 - What is OAuth 2.0, and why does it matter? 

2 - How does OAuth 2.0 work, and what problems does it solve? 

3 - How does it compare and contrast with other technologies? 

4 - What is OpenID Connect, and how is it different from OAuth? 



                    Section 3 - Core Terminology 
1 - Understanding the OAuth endpoints 

2 - OAuth tokens and their usage: Access, ID, and refresh 

3 - JWT token management: Security, validation, and revocation 

4 - The purpose of scopes and claims 



                    Section 4 - Client Credential: Authorization for Microservices 
1- Authorization in microservices 

2 - Lab: Build an example with the command line and Postman 

3 - Common security considerations 



                    Section 5 - Implicit or Hybrid: Authorization for Mobile Devices 
1 - Authorization for mobile apps and SPA 

2 - Lab: Build an example with JavaScript 

3 - Common security considerations 



                    Section 6 - Grant Type: Authorization Code 
1 - Authorization code for web applications 

2 - Lab: Build an example with Postman 

3 - Common Security Considerations 



                    Section 7 - Grant Type: Resource Owner Password Flow 
1 - Authorization in legacy applications 

2 - Lab: Build an example in curl 

3 - Common security considerations 



                    Section 8 - Server-Side Implementations 
1 - Lab: Configuring an OAuth server in PHP 

2 - Lab: Configuring an OAuth server in Node 

3 - OAuth 2.0 as a service using Okta 



                    Section 9 - Conclusion 
1 - Next steps 
