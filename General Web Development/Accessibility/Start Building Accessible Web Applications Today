                    Start Building Accessible Web Applications Today
                    Course Notes
                    
                    
1 - Accessible Icon Buttons
Inaccessible icon buttons are common on the web
Creating more accessible buttons using CSS & HTML
Always test with a keyboard and if possible a screenreader
  - This will ensure your site is accessible to people with disabilities

Example Syntax
  // In the example there are 3 buttons with only the first 2 being accessible
  // HTML Page
  <!DOCTYPE html>
  <html lang-"en">
    <head></head>
    <body>
      <main>
        // Regular button elements are accessible 
        <button>Help!</button>
        
        // The button part is accessible but the i part has no text and is just css so there is no way
        // a screen reader can know what it is for
        <button>
          // One method of fixing this is to add a visually hidden class
          <span class="visuallyhidden">Help!</span>
          
          //The aria hidden attribute is set to true because the element is purely decorative
          <i class="icon icon-help" aria-hidden="true"></i>
        </button>
        
        // Not reachable from the keyboard, if converting it to a button is not an option add a button role
        // Tabindex will make it reachable from a screen reader and keyboard but will be kept in its orginal tab order
        <div class="button role="button" tabindex="0">
          // The aria-labelledby attribute is to get past a bug in Chrome
          <svg width="32" height="32" viewBox="0 0 32 32" class="icon" aria-labelledby="svgtitle">
            // A common best practice when representing artwork in an svg is to use the title element
            <title id="svgtitle">Help!!</title>
            <path d="M14 24h4v-4h-4v4zM16 8c-3 0-6 3-6 6h4c0-1 1-2 2-2s2 1
            2 2c0 2-4 2-4 4h4c2-0.688 4-2 ----> continues
            12-12 12z">
            </path>
          </svg>
        </div>
      <main>
    </body>
  </html>
  
  // CSS File  
  html, body {
    font-family: Helvetica, sans-serif;
    text-align: center;
  }
  
  main {
    padding: 1em;
  }
  
  .icon {
    display: block;
    width: 3em;
    height: 2.6em;
    fill: currentColor;
  }
  
  .icon-help{
    background: url(../icons/icon.svg) no-repeat center center;
    background-size: contain;
  }
  
  button, button{
  }
  
  // Text will render to a screen reader but is hidden from view
  .visuallyhidden{
    border: 0;
    clip: rect(0 0 0 0);
    height: 1px;
    margin -1px;
    overflow: hidden;
    padding: 0;
    position: absolute;
    width: 1px;
  }
  
  
2 - HTML5 Accessible Button Events
The previous video was about button labels, this is about button events
Using the header on CNN.com as an example
  - When in mobile mode in the browser there is a keyboard inaccessible hamburger
  - The element is also not reached by 

3 - Building Forms With Accessibility In Mind

4 - Headings And Semantic Structure For Accessible Web Pages

5 - Focus Management Using CSS & HTML & JS

6 - What Is The Accessibility Tree

7 - Intro To Aria

8 - Visible vs Hidden

9 - Using The Voiceover Screen Reader To Test For Accessibility

10 - Testing for Accessibility With The NVDA Screen Reader

11 - Creating Visual Skip Links In HTML And CSS

12 - Accessible Modal Dialogs

13 - Using The tabindex Attribute For Keyboard Accessibility

14 - Basic Accessibility Testing
