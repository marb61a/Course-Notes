                    Linux Kernel Fundamentals - Course Notes


                    Section 1 - Introduction
1 - Welcome
Brief introduction to both the syllabus of the course and the instructor

2 - Using the exercise files
A quick guide on how to use the provided exercise files

3 - Prerequisites and Takeaways
The student should already be familiar with
  - The Linux Command Line
  - C Programming
  - Know how to edit files on Linux
The student should have
  - A Linux Machine with Root access
  - A virtual machine would be helpful
  - Ensure the safety of your data before doing anything
  - A distro of your choice the instructor is using CentOS 

4 - What is the Linux kernel
The Kernel is a progam
  - It often has a name like vmlinuz-<KERNEL VERSION>
  - It is loaded and run by a bootloader eg GRUB
  - It has command line interface as various commands can be ran against it
The Kernel is an API
  - System calls which are functions that we can call from userspace into the Kernel
  - The Kernel also provides virtual file systems such as  proc, sys and debugfs
  - System Calls such as device files
The Kernel is a Gatekeeper
  - It enforces privileges or capabilities as they are known also
  - Executes Supervisor instructions which are special CPU instructions for Supervisor mode
  - It implements a number of security policies
  - It controls access to hardware and other resources
The Kernel is modular
  - The Kernel image itself is relatively small
  - The Kernel image is sufficient to boot to userspace
  - Optional functionality is added after booting
  - It allows for alternative setups such as only loading drivers for a specific set of hardware

5 - Where`s the kernel
  - cd boot     // change to the boot directory
  - ls          // list fies which will show vmlinuz files
  - uname -r    // will check kernel version being run



                    Section 2 - Surveying The Linux Kernel
1 - Discover and control hardware

2 - Understand system call mechanics

3 - Read messages from the kernel

4 - Use the -proc and -sys filesystems

5 - Challenge - Hardware, system calls, messages, proc, and sysfs

6 - Challenge solution

7 - Challenge solution, part 2



                    Section 3 - Booting
1 - Understand the bootloader GRUB

2 - Configure GRUB

3 - Identify and use the kernel command-line parameters

4 - Configure run levels and targets

5 - Debug initramfs images

6 - Challenge - Configure GRUB and the targets and customize the initramfs

7 - Challenge solution



                    Section 4 - Working With Loadable Kernel Modules
1 - Introduction to the loadable kernel modules (LKMs)

2 - Find the LKMs

3 - Use LKM commands

4 - Identify how LKMs work

5 - Challenge - Work with the LKMs

6 - Challenge solution



                    Section 5 - Examining Kernel Source Code
1 - Get the kernel source

2 - Explore the kernel makefile

3 - Examine and build kernel documentation

4 - Search the kernel source

5 - Examine kernel driver source

6 - Examine additional selected subdirectories

7 - Challenge - Work with the Linux kernel source code

8 - Challenge solution



                    Section 6 - Configuring And Building A Linux Kernel
1 - Configure the kernel using make menuconfig

2 - Configure the kernel using make xconfig

3 - Explore kernel config files

4 - Build and install modules and the Linux kernel

5 - Challenge - Configure, build, and install a new Linux kernel and LKMs

6 - Challenge solution

7 - Goodbye
Final video of the course
