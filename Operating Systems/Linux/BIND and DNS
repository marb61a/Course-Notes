                    BIND and DNS - Course Notes
                    
                    
                    Section 1 - Introduction
1 - Welcome
A very quick welcome and intro to the course
The internet as we know it would not exist without name servers
  
2 - What you should know
If a student wishes to follow along they should have
  - A domain name will full admin access
They should also know
  - DNS
  - Bash Shell


                    Section 2 - Installing BIND
1 - Installing BIND         
You will need elevated privileges to install Bind -- either root or sudo
Different distro will have diiferent packages
Red Hat\CentOS
  - yum install bin bind-utils
Debian\Ubuntu
  - apt-get install bind9 bind9utils bind9doc
Suse
  - Use the inbuilt Software Management tool
  - Install both DNS and DHCP

                    
                    
                    Section 3 - Types Of Name Servers
1 - Caching Name Server
A Caching Name Server is sometimes called a resolver
Its first task is to look things up
It remembers answers to queries 
It then answers them without looking up again
It is of benefit because takes longer to call remote server than a local cache
There maybe significant saving if the entire LAN doesn't have to look up the remote server but the local cache
On some servers this Caching Server is in the etc/resolve.conf file
One of the downsides of using a Caching Name Server is that it may return stale results
  - The TTL may affect how often caches are changed
  - Results may have already changed on the Authoritative Name Server and not made it to the cache
Caching is temporary
  - When a Caching Name Server has its files reloaded or is rebooted then the entire cache is cleared
Although technically a separate area recursive queries are often handled by a Caching Name Server
  - Recursive DNS queries occur often
  - A recursive query is when multiple intermittent queries are needed to provide a final result to a single query

Example named.conf file
  // This is needed to allow Bind to act as a Caching Name Server
  acl internals{172.16.72.0/24; 192.168.1.0/24; }; // Set this to your internal LAN
  
  //..
  // This allows for recursion and caching
  options{
    recursion yes;    // This is the default setting so is optional
    allow-recursion{internals};
  }
  //..
  zone "." IN{
    type hint;
    file "root.servers";
  };

2 - Forwarding Name Server
This is also sometimes called a Proxy Server
They are similar to but should not be confused with Caching Name Servers
  - They both cache results of DNS queries
  - The Forwarding Name Server conducts non-recursive queries
  - The Forwarding Name Server sends a single request a recieves a single reply
A common use case for using Forwarding Name Servers is
  - When you have outsourced your name servers to a this party
  - There are multiple public providers eg OpenDNS which has a free tier available
  - The Forwarding Name Server is setup to provide the benefit of caching while leaving the actual DNS
    querying to the Remote Name Servers provided by the third party
  - This also makes LAN configuration easier
There are both benefits and downside to using Forwarding Name Servers
  Benefits
    - Reduced External Network traffic
    - Adds a layer of abstraction
    - It will lighten the load on the name server
  Downsides
    - It is nearly the same as the Caching Name Server
    - It may return stale results
 Editing named.conf
  - set recursion to no
  - set forwarding only
  - forwarders { dns servers ip address we want to forward to}

3 - Authoritative Only Name Server
This is a name server with a sole purpose
  - To provide an officail answer to a DNS query for a domain
Some characteristics
  - It does not cache
  - It will be either a Zone's master or slave
  - It can be for multiple zones or domains

4 - Mixed Configuration Name Server
This is a name server dedicated to anything other than a single purpose
There is no standard naming convention for anything other than a single purpose naming server
  - You may need to use different name servers configured in many different ways
There are various names used for deploying name servers in various manners
  - Stealth Server
  - Split Server
  - Shared Server
  - Separate Servers
  - DMZ Servers
Single Server - Exposes you to attack from hackers, it is very useful for practicing in a sandbox

                    
                    Section 4 - Zone Configuration File
1 - Zone Config Files
Zone files are plain text files 
They describe what is in a DNS zone
The chapter will be explaining each section of a zone file
  - There is a sample zone file included as part of the course

2 - TTL
The $TTL or Time To Live field is usually the first one in a zone file
It sets the default TTL for the zone
It can be overridden
The values in TTL are in seconds
  - The maximum value allowed works out at about 68 years
  - You should work with more reasonable values eg 2400000 equals about 4 weeks
  - A minimum should be 86400 which is 1 day
When the duration of a TTL has passed it is no longer considered valid
  - If you cannot get an answer after 4 weeks you should assume that the record is inaacurate
Syntax
  $TTL num_of_seconds eg $TTL 2400000
Bind V9 will not load a zone without a valid TTL
An example of when to use smaller values is when planning changes to a network
  - If you change an IP address it may take a long time to propogate with a larger TTL
  - If a change is imminent you may wish to put the change as low as 12 hours or $TTL 43200;
Overiding the values can be done and the specification for dooing so is in RFC2038
  - Bind has its own syntax that makes things much easier
    - It will accept durations other than seconds
      - m for minutes
      - h for hours
      - d for days
      - w for weeks
    - Instead of 86400 you can use 1d, 48h for 48 hours, you can combine 1h 30m for 90 minutes

3 - ORIGIN
$ORIGIN value
  - The value appended to names without a trailing dot
  - It is meant to clean up a zone file and make it easier to read
$ORIGIN example.com.
  - Any records in the lines following this without an ending dot will have example.com. appended to it
  - Therefore ftp IN CNAME server1 becomes
    - ftp.example.com. IN CNAME server1.example.com.
Entries that end in a dot are called Fully Qualified Domain Names (FQDN's)
  - ftp.example.org. is an FQDN but ftp.example.org is not

4 - SOA

5 - NS

6 - MX

7 - A

8 - CNAME

9 - PTR

10 - Other Zone Files

                    
                    
                    Section 5 - Basic Name Server Setup
1 - Get Ready

2 - Create And Verify The Zone File

3 - Load And Test The Zone File

4 - Allow Queries From Localnets

5 - Reverse Zone File

6 - External Zone File

                    
                    
                    Section 6 - Advanced Name Server Setup
1 - Configure a Secondary Name Server  

2 - Register A Name Server

3 - Updating Zones

4 - Serve A Website

5 - Third Party Email Server Setup

6 - MX and SPF Records For Email
                    
                    
                    Section 7 - Security Concerns
1 - TSIG

2 - RNDC

3 - DNSSEC
                    
                    
                    Section 8 - Conclusion
1 - Next Steps
