                    Working With The Sysinternals Toolkit
                    Course Notes
                    
                    
                    Section 1 - Course Overview
1 - Course Overview    
Brief Introduction to the course and the author
Microsoft Ecosystem is getting larger and faults are not going away
Sysinternals are the most used troubleshooting tools in the world
The tools are downloaded 4.5 million times per month
Students should be familiar with the Windows Operating System

                    
                    Section 2 - Introductions to the Sysinternals Tools
1 - Demo About Common Characteristics Of the Tools
A quick demonstration of 2 tools from the set
  - Procmon
    - Will ask for elevation as it needs a device driver
    - Procmon is a 32 bit application
    - Procmon runs as procmon.exe and a child procmon64.exe
    - If a system is 64 bit the 64 bit version will be extracted as well
    - Procmon runs from the user temp folder
    - You may need to whitelist this application
  - Process Explorer
    - You should run Process Explorer as an admin
    - Using Process Explorer to show how pocesses including Procmon run
    - Process Explorer runs as procexp.exe and a chile procexp64.exe
Both of the above are standalone executables, which means that there are no installation files required and are easily
cleaned from the system

Example
  - Run command prompt as administrator
  - fltmc         // This is the filter manager
  - It should show Procmon23 as that is the filter driver required to catch all traffic going to the registry or filesystem



                    Section 3 - Installing And Using The Sysinternals Tools
1 - Acquiring And Installing The Toolkit  
How to install the tools so that you get the biggest benefit
There are no limits to the amount of copies that you can download
You should always download from the official website
You are not allowed to distribute the tools
There is no access to the source code anymore
The only support available is in the sysinternals forum
  - https://forum.sysinternals.com
There are 2 options for downloading the tools
  - The Sysinternals suite which comes as a zip file
  - Via the site which is useful is your computer has issues as you get one tool at a time
    - https://live.sysinternals.com
    - This is also available as a WebDAV path which means that you can map a drive to it if you have the WebClient servie running
      - There is a tutorial available on setting up the WebDav path
        - http://www2.le.ac.uk/offices/itservices/ithelp/my-computer/files-and-security/work-off-campus/webdav/webdav-on-windows-10
The Zip file that contains the tools also contains an Alternate Data Stream (ADS)
  - This means that it will be tagged as being potentially unsafe
  - More information on ADS is available at
    - https://blogs.technet.microsoft.com/askcore/2013/03/24/alternate-data-streams-in-ntfs/
  - If you are getting warnings then you may need to unblock the zip file via its properties 
  - The instructor recommends extracting to C:\Program Files(x86)\Sysint\
    - This makes white listing easier
  - You will need to make some modifications to be able to lauch the apps from other places on the system
    - This can be done by adding this path in the path variable
    - Information on adding path variable is Windows 10 & 8 available at the following address
      - https://www.computerhope.com/issues/ch000549.htm
  - Many of the tools will require that Debugging tools be installed on the computer
    - More infromation on the various options available for getting debugging tools
      - https://msdn.microsoft.com/en-us/library/windows/hardware/ff551063(v=vs.85).aspx
    - Always install the newest version of the tools
    - They are similar to the Sysinternals tools as you don't really have to installs
    - You should add this _NT_SYMBOL_PATH system variable, and set it to the following value.
      - srv*c:\symbols*http://msdl.microsoft.com/download/symbols
      - This value instructs the tools so that they know to use a service from Microsoft called the Public Symbol Server,
        and download required symbols to the C:\symbols folder.
    - An alternate to this would be to acquire the whole symbol package, but whenever you would have a hotfix installation, 
    you would have to download hundreds of megabytes again. 
    - Every tool has an option to set this setting as well but using the variable makes it simple so all the tools know 
    where to look
  

2 - Demo About Installing The Tools
Using the live website is the easiest option if you are doing ad-hoc troubleshooting
The main website for downloading the full package is
  - technet.microsoft.com/sysinternals
After downloading the tools extract them to 
  - C:/Program Files x86 folder -> create a subfolder called SYSINT and put the files in there
At the command prompt enter sysdm.cpl
  - This goes to System Properties and is exactly the same as using the properties menu on MyComputer
Next select the Advanced Tab and select Environmental Variables
  - Windows 10 has a newer look for adding PATH variables
  - Path variables allow for tools to be run from anywhere on the system
Next up is to test to ensure that Process Monitor runs from anywhere on the system
Again the instructor adds the _NT_SYMBOL_PATH system variable
  - Using the symbols will be required later in the course
The End User License Agreement will need to be agreed to
Some of the tools can replace existing tools on the system
  - Process Explorer can replace the existing Task Manager
Autoruns shows us places where applications get automatically started from.  
  - A common place Image Hijacks will tell you that Task Manager has been hijacked
  - Images Hijacks will also show where a lot of malware starts from



                    Section 4 - Core Concepts Of The Windows Operating System
1 - Required Privileges, Windows Modes, Processes, Threads, Jobs, and Handles
This section is to ensure that the base knowledge needed to run sysinternals tools is in place
Many of the tools will require a device driver or access to the operating system
Many of the tools will also require administrative privileges and will work diferently if you have them or not
  - Auto-Runs looks differently for example depending on privilege level
User Account Control (UAC) - You need to right click and run as an administrator
Some of the tools will either need an elevated shell or Powershell
One of the biggest difficulties that people have when troubleshooting Windows systems is knowing the difference
between Processes, Threads and Jobs
Many people blame processes for Windows trouble but that is inaccurate as processes cannot even run code
Windows is a multi-threaded OS and all code is run in threads, this means that task manager will not know 
what is wrong it can merely guide you in the right direction
Process
  - A process is a User Mode concept
  - They are sandboxes that give reources to threads that execute code
  - They are either 32 or 64 bit
  - Every process is a sandbox that has certain resources
    - For example Virtual Memory
  - Every process sees the world the same so no matter the process it has its own virtual memory
  - It starts at 0 and can have a different value depending on the system size
  - Virtual memory is an abstraction between physical memory and the application
    - If there was no Virtual Memory every process builder would have to manually look for empty memory slots
    - Virtual Memory has allowed software developers to think that their application will start at 0
    - The Vrtual Memory Manager will ensure that Virtual Memory pages are mappe correctly to physical memory
    - Different Windows version will have different limits of memory mapping
      - 32 bit allows for a maximum of 4 gb mapping
        - This is divided in 2 with half going to each of the User Mode and the Kernel Mode
        - It can only see the Kernel Memory it cannot write to it
        - There were a couple of schemes available for increasing user mode memory
          - 3gb switch
          - User Enabled VA
          - More information is available at
            - https://support.microsoft.com/en-us/help/316739/how-to-use-the-userva-switch-with-the-3gb-switch-to-tune
                                                                 -the-user-mode-space-to-a-value-between-2-gb-and-3-gb
      - 64 bit 
  - Sandboxing is a term used in many areas but in this section it is used to refer to
Thread
Job

2 - Demo About Windows Modes, Processes, Threads, and Handles

3 - Integrity Levels, AppContainers, and Protected Processes

4 - Demo About Integrity Levels, AppContainers, and Protected Processes

5 - Stacks And Symbols

6 - Demo About Stacks And Symbols

7 - Sessions, WindowStations, and Desktops

8 - Demo About Sessions, WindowStations, and Desktops



                    Section 5 - Support For The Sysinternals Tools
1 - Support For The Sysinternals Tools

2 - Demo About Getting Support For The Sysinternals Tools

3 - Summary Of The Course
Very quick run through of the material covered in the course

