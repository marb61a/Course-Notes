                    Create a Full Ionic App with Material Design - Full Stack
                    Course Notes


                    Section 1 - App Design
1 - Designing the Logo & Project Resources 
This section uses Adobe Illustrator for designing project resources

2 - App Icon Design 

3 - Splash Screen UI 

4 - Main UI Header 

5 - Main Game Listing UI 

6 - Favorites UI 

7 - Game Genres & Search UI 

8 - Game Details UI 



                    Section 2 – API Setup
1 - Installing Prerequisites & Starting the Project
There is a need for Node to be installed
  - Use node -v to see which version is installed
  - If there is none then go to the Node.js site and install for the appropriate platform
To install Ionic on the system (globally)
  - npm install -g ionic@latest
  - To check if Ionic is installed -- ionic
To generate a new project
  -ionic start project-name blank
    - blank is for the template type which there are several different types
You can connect the app to your dashboard at ionic
  - You will need to register
  - This is now -- https://dashboard.ionicjs.com/login
To run the project in Labview using the browser
  - ionic serve -l

2 - Connecting to the API 
Using the Internet Games Database API
  - https://www.igdb.com/api
  - Video Games database
  - Need to register to get free API key
    - You can use GitHub to signup
  - There is a list of endpoints available after registering
  - You will need to generate a new application and then get the keys
You will then need a way to to interact with the IGDB API
  - In Ionic this is done with Providers
    - There is a sample tutorial will an explanation of Providers at the following URL
    - https://www.techiediaries.com/ionic-3-http-module-rxjs/
  - To generate a provider (ensure that you are in the project directory)
    - ionic generate provider 'provider-name'
    - This generates a basic file scaffold
    - This file is automatically imported into the app.module.ts file
      - There is also a providers section under the 
  - To change the name of the app name under the icon launcher
    - Open the config.xml file and edit the value between the name tags
    - Also it is between the description tags that a description of the app is added
  - The instructor uses visual studio code for the course
Example Syntax  
  // Syntax for the generated data provider
  import { Injectable } from '@angular/core';
  import {Http } from '@angular/http';
  import 'rxjs/add/operator/map';
  
  @Injectable()
  export class DataProvider{
    constructor(publine http: Http){
      console.log('Hello DataProvider Provider');
    }  
  }
  


                    Section 3 – Home Page
1 - Generating the Page & Attaching the API

2 - Integrating Storage and a LoadingController

3 - Defining the Navigation Template 

4 - Defining the Games Listing Template 

5 - Styling the Games List 



                    Section 4 – Secondary Pages
1 - Favorites 

2 - Filters Modal 

3 - Filters Template & API 

4 - Search 



                    Section 5 – Details Page
1 - Details Page API 

2 - Details Template 

3 - Details Styling 

4 - Making the Videos and Website Link Work 

5 - Adding Animation 


                    Section 6 – Wrapping it up
1 - Launching the App on your Phone 
