                    Node with React: Fullstack Web Development
                    Course Notes
                    
                    
                    Section 1 – Course Overview - Start Here!
1 - How to Get Help
A brief intro to the course and the run through of the resources used in the course
  - Use Node.js version 8.1.x and above
The course is an advanced course
  - There may be issues so it is recommended to use the various links in the resource documents

2 - Course Resources Document
A text document with a direct link to the resources used in the course

3 - [Optional] Prettier Setup
An instruction guide to using Prettier for code formatting
  - https://github.com/prettier/prettier
  - This is optional but recommended by the course instructor
  - A quick demo of the effect prettier has on code

4 - App Overview
The course will cover the creation of a single app
  - It will be a larger application with a number of features
  - It will have both a front and backend to it

5 - App User Flow Walkthrough
App is essentially a feedback collection application
The application steps are
  - User signs up via Google OAuth
  - They pay for email credits via Stripe
  - User creates a new campaign
  - User enters a list of emails to send surveys to
  - We send the email to the list 
  - Recipients click on link in the email to provide feedback
  - Tabulate the feedback
  - User can see a report of all survey responses

6 - Tech Stack
A discussion on the various types of technology theat will be used in the course
  - React
  - Redux
  - Redux Form
  - PassportJS
  - MongoDB -- The database (no-sql)
  - Stripe -- To handle payments
  - E-mail service

7 - App Mockups



                    Section 2 – Server Side Architecture
1 - Application Architecture
The first discussion on how the various technologies will work together
  - Although there are a lot of educational material available on the individual technologies there is little 
  available on how the various pieces work together
  - This is the aim of the course, at the end you should understand how the pieces work together
In the coure sample application
  - Whenever a user navigates to the application
  - We will send them back a HTML document and some JS files containing a React application
  - The application will use MongoDB for storing data eg surveys etc
  - The React part of the application will never talk directly to the MongoDB database
    - We will instead put an Express API in between
    - The Express API and React will use HTTP requests to communicate

2 - Relationship Between Node and Express
There is a comprehensive set of notes on Node available at
  - https://github.com/marb61a/Course-Notes/blob/master/Javascript/NodeJS/Learning NodeJs
Generating a new npm project
  - mkdir project
  - cd project
  - npm init

3 - Generating Express Apps

4 - Express Route Handlers

5 - Heroku Deployment Checklist

6 - Installing the Heroku CLI

7 - Verifying Heroku Deployment

8 - Followup Deployments



                    Section 3 – Authentication with Google OAuth
1 - Intro to Google OAuth

2 - The OAuth Flow

3 - Overview of Passport JS

4 - Passport Setup

5 - Enabling Google OAuth API

6 - Securing API Keys

7 - Google Strategy Options

8 - Testing OAuth

9 - Authorized Redirect URI's

10 - OAuth Callbacks

11 - Access and Refresh Tokens

12 - Nodemon Setup



                    Section 4 – Adding MongoDB
1 - Server Structure Refactor

2 - The Theory of Authentication

3 - Signing In Users with OAuth

4 - Introduction to MongoDB

5 - MongoDB Setup

6 - Connecting Mongoose to Mongo

7 - Breather and Review

8 - Mongoose Model Classes

9 - Saving Model Instances

10 - Mongoose Queries

11 - Passport Callbacks

12 - Encoding Users

13 - Deserialize User

14 - Enabling Cookies

15 - Testing Authentication

16 - Logging Out Users

17 - [Optional] A Deeper Dive



                    Section 5 – Dev vs Prod Environments
1 - Dev vs Prod Keys

2 - Generating Production Resources

3 - Determining Environment

4 - Version Control Scheme

5 - Heroku Env Variables

6 - Fixing Heroku Proxy Issues



                    Section 6 – Moving to the Client Side
1 - React App Generation

2 - A Separate Front End Server

3 - Running the Client and Server

4 - Routing Stumbling Block

5 - The Beauty of Create React App's Proxy

6 - [Optional] Why This Architecture?


–
Developing the Client Side
03:43:10
Async/Await Syntax
18:49
Refactoring with Async/Await
07:39
Front End Tech
07:23
Client React Setup
07:40
Installing Root Modules
06:44
Troubleshooting NPM
02:25
Redux Review and Setup
10:18
The Auth Reducer
04:51
Finishing Reducer Setup
03:35
Why We Care About Auth
04:45
React Router Setup
05:56
Route Configuration
05:40
Always Visible Components
08:15
Always Visible Components
06:11
Materialize CSS
08:48
Webpack with CSS
07:56
Header Design
04:48
Current User API
05:58
Additional Proxy Rules
11:17
Basics of Redux Thunk
10:12
Refactoring the App
05:17
Testing FetchUser
09:02
Refactoring to Async/Await
08:55
AuthReducer Return Values
10:37
Accessing State in the Header
07:51
Header Content
05:00
Redirecting a User on Auth
07:33
Redirect on Logout
07:37
Landing Component
04:17
Link Tags
07:51
–
Handling Payments
02:34:53
Client Side Billing
03:07
Billing Considerations
11:55
Stripe Billing Process
05:34
Exploring the Stripe API
08:15
Stripe API Keys
10:19
Env Variables with React
13:31
The Payments Component
10:29
Stripe Tokens
09:08
Payment Fixes
06:56
Reusing Action Types
09:16
Positing the Stripe Token
03:11
Post Request Handlers
04:31
Creating Charges
05:19
BodyParser Middleware
06:42
Creating a Charge Object
06:32
Finalizing a Charge
04:40
Adding Credits to a User
07:27
Requiring Authentication
06:46
Route-Specific Middlewares
11:39
Displaying Credit Quantity
04:18
Updating Credits
05:18
–
Back End to Front End Routing in Production
50:36
Express with Create-React-App in Production
12:20
Routing in Production
08:09
Deployment Options
10:08
Adding in a Heroku Build Step
16:10
Testing Deployment
03:49
–
Mongoose for Survey Creation
03:18:40
Survey Overview
08:00
Server Routes
05:24
Survey Model
07:07
Model Deficiencies
05:56
Limitations of Subdocument Collections
07:52
Setting up SubDocs
04:49
Relationship Fields
05:03
Survey Creation Route Handler
07:15
Verifying Minimum Credits
06:24
Creating Surveys
09:06
Creating Subdoc Collections
08:48
Oops! A Little Tweak
00:23
Creating Mailers
07:18
Identifying Unique Users
14:29
Sendgrid Setup
08:21
Mailer Setup
09:39
Mailer in Use
11:01
Mailer Constructor
08:31
Boilerplate for Sending Emails
09:29
More Mailer Properties
05:57
Sending SendGrid Emails
06:16
Testing Email Sending
09:20
Improving the Email Template
08:58
Polish in the Route Handler
09:52
Verifying Sendgrid Click Tracking
02:09
Feedback for User Feedback
11:13
-
Back to the Client!
03:55:01
Client Side Survey Creation
05:01
Material Icons
08:58
Navigation with the Link Tag
02:20
SurveyNew Form
06:55
Purpose of Redux Form
11:16
Redux Form Setup
12:20
The ReduxForm Helper
07:07
Redux Form in Practice
10:22
Custom Field Components
08:56
Wiring up Custom Fields
05:46
DRY'ing Up Fields
05:16
Fields from Config
07:35
Styling the Form
07:19
Form Validation
06:25
Showing Validation Errors
08:31
Generalizing Field Validation
09:09
Validating Emails
08:35
Displaying Invalid Emails
13:07
Toggling Visibility?
11:55
Advancing From SurveyForm
11:28
Retreat to the Form
05:20
Persisting Form Values
11:26
Refactoring Form Fields
09:55
Finalizing Review Fields
05:26
Outstanding Form Work
10:50
Dumping Form Values
07:09
Fixing Property Names
02:53
Posting to Surveys
04:40
Redirect on Submit
09:01
-
Handling Webhook Data
02:18:10
Feedback with Webhooks
02:30
Webhooks in Development
09:08
LocalTunnel Setup
06:27
Testing Webhooks
05:16
LocalTunnel Crash Fix
00:43
Finalizing Webhook Setup
06:47
Encoding Survey Data
07:57
Dirty Data from Webhooks
07:15
Processing Pipeline
08:18
Parsing the Route
07:55
Code Cleanup
05:30
Unique Events
05:14
Lodash Chain Helper
10:50
Bad Mongoose Queries
09:09
Finding the Exact Survey
13:48
Updating Records
09:33
Executing Queries
09:25
Testing the Query
02:18
Odds n' Ends Around Surveys
04:01
Mongoose Tips
06:06
-
The Home Stretch!
57:29
Fetching a List of Surveys
09:09
Whitelisting Model Fields
10:00
Testing Surveys Endpoint
02:11
Wiring Surveys Up to Redux
06:00
Wiring React to Redux
06:52
Rendering a List of Surveys
08:12
Reversing the Survey List
02:21
Expanding the App
12:44
