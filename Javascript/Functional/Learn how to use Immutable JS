                    Learn how to use Immutable.js
                    Course Notes
       
       
1 - Manage Application State With Immutable JS
Immutable.js is a library from Facebook which provides a series of immutable data structures
  - This includes list, stack, map & set
Because they are immutable and don't chang you are able to build reliable and predictable state models on them
Example Syntax
  mocha.setup('bdd');
  const expect = chai.expect;
  
  function mutateValue(iterable, pos, value){
    iterable[pos] = value;
  }
  
  function updateState(immutable, pos, value){
    return immutable.set(pos, value);
  }
  
  describe('Manage Application State with Immutable.js', () => {
    it('should see side effect when mutating original array', () => {
      const state = ["todo1", "todo2"];
      const mutatedState = state;
      
      mutateValue(mutatedState, 0, "newTodo");
      expect(state[0]).to.equal("newTodo");
    })
    
    it('should avoid side affects when mutating original array', () => {
      const immutableState = Immutable.List(["todo1", "todo2"]);
      const immutableState2 = immutableState;
      
      updateValue(immutableState2, 0, "newTodo");
    })
  })

2 - Creating An Immutable Object Graph With Immutable.js
The immutable map is a fundamental structure in immutable.js
Example Syntax
  mocha.setup('bdd');
  const expect = chai.expect;
  
  function createObjTodos(numTodos){
    var obj = {}
    _.each(_.range(numTodos), (index) => {
      const todoSequence = String(index+1);
      obj['todo'+todoSequence] = {
        title: 'Todo'+todoSequence,
        value: `Make ${todoSequence } happen`
      };
    });
    
    return obj;
  }
  
  describe('Creating an Immutable Object Graph with Immutable.js Map()', () => {
  
  })

3 - Modifying An Immutable.js Map

4 - Querying An Immutable.js Map

5 - Iterating Over An Immutable.js Map

6 - Working With Subsets Of An Immutable.js Map

7 - Equality Checking With Is And More

8 - Using Fromjs To Convert Plain Javascript Objects Into Immutable Data

9 - Differences Between The Immutable.js Map And List

10 - Exploring Sequences And Ranges In Immutable.js

11 - Converting Immutable.js Structures To Javascript And Other Immutable Types

12 - Simple Undo-Redo With Immutable.js Data Structures

13 - Maintaining Order In Immutable.js Objects

14 - Transforming Immutable Data With Reduce

15 - Lightning Fast Immutable.js Equality Checks With Hash Codes

16 - Immutable Record As Data Models

