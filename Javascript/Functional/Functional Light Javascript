                    Functional Light Javascript (v2)
                    Course Notes
                    
                    
                    Section 1 - Introduction
1 - Introduction
Brief intro to the course and the instructor


                    Section 2 - Functional Programming Introduction
1 - Functional Programming
An explanation of the title of the course
  - This is a refresh of an existing course
The word light is not meant to convey beginner or introductory
  - Functional Programming is not easy but the course is meant to ease some of the difficulty
The approach of the course will be from the bottom up rather than a lot of courses which are top down
Imperative vs Declaritive
  - Impertive code is code thhat focuses on how to accomplish a task
  - Declaritive code is code that focuses on what should happen
    - Declaritive code is easier to read and understand

2 - Provable and Readable

3 - Pure Functions and Side-Effects

4 - Purifying Functions

5 - Challenge 1: Purify a Function

6 - Challenge 1: Solution

7 - Evolving Understanding of Impurity



                    Section 3 - Managing Function Inputs
1 - Arguments

2 - No Points

3 - Challenge 2: Point-Free Style

4 - Challenge 2: Solution



                    Section 4 - Composing Functions
1 - Composition Introduction

2 - Challenge 3: Compose and Pipe Utility

3 - Challenge 3: Solution



                    Section 5 - Immutability
1 - Immutability Introduction

2 - Challenge 4: Compose and Pipe

3 - Challenge 4: Solution



                    Section 6 - Closure
1 - Closure and Side Effects

2 - Challenge 5: Purifying Closure

3 - Challenge 5: Solution



                    Section 7 - Partial Application
1 - Generalized to Specialized



                    Section 8 - Recursion
1 - Recursion Introduction

2 - Challenge 6: Recursive Operation

3 - Challenge 6: Solution

4 - Proper Tail Calls

5 - Continuation Passing Style

6 - Trampolines



                    Section 9 - Data Structures
1 - List Transformations

2 - Filter: Exclusion

3 - Reduce: Combining

4 - Challenge 7: Culmination Exercise

5 - Challenge 7: Solution

6 - Challenge 7: Solution 2

7 - Challenge 7: Solution 3

8 - Fusion

9 - Transducing



                    Section 10 - Data Structure Operations
1 - Data Structure Operations Introduction

2 - Challenge 8: Culmination Exercise 2

3 - Challenge 8: Solution



                    Section 11 - Functional Programming Utility
1 - FPO.js



                    Section 12 - Async Programming
1 - Lazy Arrays

2 - Challenge 9: Observables

3 - Challenge 9: Solution



                     Section 13 - Wrapping Up Functional JavaScript v2
1 - Wrapping Up
