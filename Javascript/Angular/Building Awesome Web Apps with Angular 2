                    Building Awesome Web Apps with Angular 2
                    Course Notes


                    Section 1 - Build Awesome Apps with Angular
1 - Course Introduction
A brief welcome to the students
This course is an update to a previously run course due to updates to Angular
A brief run through of the authors experience with Angular 


                    Section 2 - Getting Started
1 - Course Agenda
A review of the agenda for Day 1
The main takeaway for Day 1 is to have a strong grasp on how to construct a single feature in Angular
Day 2 will be to compose multiple features together
The complete agenda will be
  - The demo application
  - Angular 2 big picture
  - Angular cli
  - Components
  - Templates
  - Services Routing

2 - Review of Demo Application
The demo application repository
  - https://github.com/onehungrymind/ng2-rest-app
The instructor asks to install the Angular-cli
  - This implicitly shows that the proper environment is working
This is a simple rest-app which is a list of items
  - It provides CRUD functionality
  - It connects to a REST Api
  - Master Detail View -- todo apps are a variation on this
The instructor recommends learning how to do a Master Detail View connecting to a REST Api as this will be the
foundation of learning any new framework
The demo application
  - A simple master-detail app built using Angular 2 and the Angular CLI
  - The course entails building a new widget feature
  - Use the existing items feature as a refernce point
    - Using something that is already working is a good way to learn
  - Explore and do not be afraid to try new things
The challenges are for this module 
  - Simply ensure that the application can run
The pro-tip for the section
 If you need a REST api quickly for proof of concept purposes a JSON server is recommended
The main app runs on port 4200 
  

                    Section 3 - The Angular 2 Big Picture
1 - The Benefits of Angular 2
A big picture view of Angular 2 benefits
Why Angular 2
  - It has distilled all the best practices of Angular 1 into Angular 2
  - With the focus on standards there is twice the power with half the framework
    - DOM event handling has been rewritten
    - Error messages are much better
  - It has dramatically improved changed detection with huge focus onspeed and performance
  - Reactive mechanisms are made into the framework
  - The team behind Angular is working with other teams to improve Angular

2 - Angular 2 Building Blocks 1

3 - Angular 2 Building Blocks 2

4 - Services

5 - Challenge 1

6 - Challenge 1: Solution



                    Section 4 - The Angular CLI
1 - Angular CLI

2 - AOT Support

3 - Extensible Blueprints

4 - Angular CLI Installation

5 - Challenge 2

6 - Challenge 2: Solution



                    Section 5 - Component Fundamentals
1 - Component Classes

2 - Lifecycle Hooks

3 - Component Demonstration

4 - Challenge 3

5 - Challenge 3: Solution



                    Section 6 - Templates
1 - Binding

2 - Hashtag, Asterisk, & Elvis (Safe Navigation) Operators

3 - Challenge 4
  - http://bit.ly/workshop-snippets

4 - Challenge 4: Solution



                    Section 7 - Services
1 - Defining a Service

2 - Challenge 5

3 - Challenge 5: Solution



                    Section 8 - Routing
1 - Router Overview
  - http://onehungrymind.com/named-router-outlets-in-angular-2/
  
  

                    Section 9 - Wrapping Up Day 1
1 - Wrapping Up



                    Section 10 - Build Awesome Apps with Angular Day 2
1 - Course Introduction: Second Half

2 - Review of Angular 2

3 - Challenge 6

4 - Challenge 6: Solution



                    Section 11 - Component Composition
1 - Component Driven Architecture

2 - Component Contracts

3 - @Input and @Output Decorators

4 - Review of Component Contractorts

5 - EventEmitter Demonstration

6 - Challenge 7: Input & Output

7 - Challenge 7: Solution, Part I

8 - Challenge 7: Solution, Part II



                    Section 12 - Forms
1 - Data Binding and Component Review

2 - Template Driven Forms

3 - Form Controls

4 - Validation Styles

5 - State Mutations

6 - Challenge 8

7 - Challenge 8: Solution



                    Section 13 - Server Communiction
1 - The HTTP Module

2 - Observables & Headers

3 - HTTP Demonstration

4 - Challenge 9



                    Section 14 - Wrapping Up
1 - Questions: Observable vs Promise, etc

2 - Wrapping Up the Course

