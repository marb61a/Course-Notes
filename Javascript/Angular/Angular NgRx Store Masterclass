                    Angular NgRx Store Masterclass
                    Course Notes


                    Section 1 – Introduction - The Flux Architecture
1 - Course Helicopter View

2 - Quick Note About Asking Questions In The Help Forums



                    Section 2 – Scaffolding the Chat Application - Gettting The Most Important Part Right
1 - Installing an IDE - Webstorm or Visual Studio Code

2 - IMPORTANT: Using Yarn instead of NPM To Avoid Installation Issues

3 - Scaffolding an Application Using the Angular CLI

4 - Installing The Lodash Utility Library

5 - Using the Angular CLI to Scaffold All Application Components

6 - What Should be put inside the Store ?

7 - A Critical Notion For Any UI We Build - Model vs View Model

8 - Using Typescript Custom Types To Define The Application Model

9 - Implement a Simple In-Memory Database, Learn What Goes Inside a Store

10 - First HTTP Call - What is a Transfer Object ?



                    Section 3 – Introducing A Store Solution - The Ngrx Store, Actions And Reducers
1 - Store Concepts Introduction

2 - How To Switch Git Branches During The Course

Getting a REST API Server Running
04:58
Installing A Store Solution
02:18
Defining The Store Application State - How Many Types Of State Are Th
06:03
The Store as an Observable of Application State
04:40
Dispatching Our First Store Action
06:27
Setting The Store Initial State - Debugging First Action Dispatch
07:36
Writing Our First Reducer Function Step By Step
08:39
Summary Of How a Store, Actions and Reducers Work
04:14
–
Implementing The Thread Section View Using Reactive Programming
49:24
Smart Components and Reactive Programming Techniques - Introduction
03:38
Building the Thread Section Using Reactive Programming
09:18
See How Simple It Is To Implement An Unread Messages Counter Using A Store
06:09
A Simple Way To Debug An Angular Program
01:45
Defining a View Model - Difference Between View Model and Model
04:27
Refactoring the Thread Section Component - Extracting Mapping Functions
01:37
Writing The Thread Summaries Selector
07:38
Implementing our First Presentational Component - The Thread List Component
04:55
Refactoring The Selector Functions of The Thread Section Component
04:54
Best Practices for Writing Selector Functions
05:03
–
Ngrx Effects and the NgRx Dev Tools
31:29
Ngrx Effects and DevTools Introduction
01:48
Simplifying Smart Components - The Ngrx Effects Library
04:18
Understanding the NgRx @Effect Decorator - How to Use It ?
04:33
The Added Value Of Ngrx Effects and How It Simplifies Smart Components
02:59
The Ngrx Store DevTools and the Time Travelling Debugger
05:21
How to Debug RxJs Code ?
05:28
A Simple RxJs Debugging Utility
07:02
–
Implementing the Message Section Smart Component
01:22:57
Selecting A Thread - Initial Implementation
05:49
Understanding Combine Reducers
10:58
Writing The Reducing Logic of Select Thread Action
01:59
Introducing the Message Section Component
04:45
Message Section - Reviewing the Implementation of the Name List Selector
08:46
Review of The Messages List Implementation - View to View Model Mapping
04:52
Implementation of the Highlight Selected Thread Functionality
03:35
Implementation of the Change Selected User Smart Component
06:31
Change User Effect Implementation - An Example of a Chain Of Actions
03:03
Change Current User Implementation - Backend and Frontend
11:47
Implementing the Send New Message Chat Functionality
09:29
Implementation of the Send New Message Reducer
06:55
Scrolling the Message List To the Bottom Automatically Using OnChanges
04:28
–
Getting The Chat Functionality Up and Running !
01:27:26
Solving the Facebook Counter Problem - Section Introduction
05:11
Implementing The Write New Message Effect Using Ngrx Effects
07:37
Send New Message Implementation - Client Part
06:13
New Server Branch - View Send New Message In Action
04:38
Refresh Chat Messages Side Effect Implementation
06:36
Fetch New Messages - Implementing the Reducer Logic
04:55
Finish Implementing the Refresh Messages HTTP Service
10:10
Implementing The unread Messages Counter Reducing Logic
08:02
Unread Message Counter - See The Solution for The Facebook Counter Issue
04:44
Marking Threads With New Messages As Unread
06:40
Implementing the Mark Messages As Read Reducer Logic
10:23
Mark Threads as Read - Demo of The Nearly Completed Chat
01:45
Implementing The Mark Messages As Read Side-Effect
07:28
Chat Wrap Up - Summary Of The Advantages Of Store Architectures
03:04
–
Finishing Up - Error Handling, Router Integration, Ngrx Store Freeze
33:06
Error Handling With Ngrx Store - How To Use The RxJs Catch Operator
06:02
Implementing the Error Handling Reducer Logic
02:27
Displaying Errors On the Screen - Implementing the Messages Smart Component
06:43
Immutability In Reducer Functions - How to Use the Ngrx Store Freeze Library
05:22
Adding the Angular Router to the Chat Application
06:42
Ngrx Store Router Integration - Time-Travelling with the Dev Tools
05:50
–
Performance Tuning - Immutability and OnPush Change Detection
01:23:08
OnPush Change Detection and Immutability - What Are the Advantages ?
07:36
Why Freezing Selector Output Does Not Help Leverage OnPush Change Detection
04:20
Understanding How OnPush Change Detection Works And How To Leverage It
04:19
How To Write Reducers That Leverage OnPush Change Detection
11:36
Refactoring Remaining Reducers - Will This Be Enough To Leverage OnPush ?
09:13
Introducing a New Functional Programming Concept - Memoization
06:41
Introducting The Reselect Library - How To Create a Memoized Selector
02:58
How To Write a Memoized Selector With Reselect - What is The Advantage ?
07:52
Using the Lodash Memoize Utility To Optimize View Rendering
07:47
Preventing Message Re-Renderings Using a Presentational Component
05:41
On Push Change Detection Summary - Smart Vs Presentational Components
02:08
High-Level Overview of The ImmutableJs Library
05:23
Course Summary and Conclusions
07:34
–
Building A Development Server
30:29
Building The Get All User Data REST API From A to Z
19:32
Running And Debugging Our ts-node Development Server
06:00
Calling Our REST API Server From the Client - Configuring the Angular CLI
03:39
Bonus Lecture: Learn More About The Angular University And My YouTube Channel
01:18
