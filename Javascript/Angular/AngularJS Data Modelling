                    AngularJS Data Modelling
                    Course Notes
                    
                    
1 - Using Resource For Data Models
Example Syntax
  // Building a POST model
  angular.module('app')
    .provider('Post', function(){
      this.$get = ['$resource', function($resource){
        var Post = $resource('http://localhost:3000/api/post/:_id', {}, {
          // No uodate method out of the box
          update: {
            method: 'PUT'
          }
        })
        
        // Returns the model
        return Post;
      }];
    });

  // Controller
  angular.module('app')
    .controller('MainCtrl, ['$scope', '$route', 'Post', 
      function('$scope', '$route', 'Post'){
        $scope.post = new Post();
        // Queries the backend for posts
        $scope.posts = Post.query();
      }
    ])

2 - Create A Model Base Class

3 - Model Caching

4 - Add Caching To The Model Base Class

5 - Refactor The Model Base Class With Mixins

6 - Model Validation Design Review

7 - Basic Implementation Of Configurable Validations

8 - Adding Child Validators

9 - Validations Class

10 - Mixing In Validatable

11 - Errorable Mixin

12 - Finishing Validatable

13 - Serializing And Deserializing Data Models In AngularJS
