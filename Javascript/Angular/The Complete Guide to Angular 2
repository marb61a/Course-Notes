                                      Notes from the Udemy course
                                      The Complete Guide to Angular 2
                                      by Maximillian Schwarzmuller

Completed Recipe Book Project - https://github.com/marb61a/Angular-2-Recipe-Book
Course Completely Updated July 12th 2016
   - New section layouts
   - New Project source code
   - Cheat sheets with each section
   - Updating layout and notes

Course Completely Updated March 2017 - Angular V4 Released
                                      
  
                   Section: 1 - Getting Started
1 - Course Introduction
Introduction to both the course and the author

2 - What is Angular?

3 - Angular vs Angular 2 vs Angular 4

4 - Project Setup and First App

5 - CLI Deep Dive & Troubleshooting

6 - Editing the First App

7 - The Course Structure

8 - How to get the Most out of the Course

9 - What is TypeScript?

10 - A Basic Project Setup using Bootstrap for Styling

12 - Where to find the Course Source Code



                    Section: 2 - The Basics
1 - Module Introduction
Introduction to the material covered in the section

2 - How an Angular App gets Loaded and Started

3 - Components are Important!

4 - Creating a New Component

5 - Understanding the Role of AppModule and Component Declaration

6 - Using Custom Components

7 - Creating Components with the CLI & Nesting Components

8 - Working with Component Templates

9 - Working with Component Styles

10 - Fully Understanding the Component Selector

11 - What is Databinding?

12 - String Interpolation

13 - Property Binding

14 - Property Binding vs String Interpolation

15 - Event Binding

16 - Bindable Properties and Events

17 - Passing and Using Data with Event Binding

18 - Two-Way-Databinding

19 - Important: FormsModule is Required for Two-Way-Binding!

20 - Combining all Forms of Databinding

21 - Understanding Directives

22 - Using ngIf to Output Data Conditionally

23 - Enhancing ngIf with an Else Condition

24 - Styling Elements Dynamically with ngStyle

25 - Applying CSS Classes Dynamically with ngClass

26 - Outputting Lists with ngFor

27 - Getting the Index when using ngFor



                    Section: 3 - Course Project - The Basics
1 - Project Introduction
Brief introduction to the project that will be done in the course

2 - Planning the App

3 - Setting up the Application

4 - Creating the Components

5 - Using the Components

6 - Adding a Navigation Bar

7 - Alternative Non-Collapsable Navigation Bar

8 - Creating a "Recipe" Model

9 - Adding Content to the Recipes Components

10 - Outputting a List of Recipes with ngFor

11 - Displaying Recipe Details

12 - Working on the ShoppingListComponent

13 - Creating an "Ingredient" Model

14 - Creating and Outputting the Shopping List

15 - Adding a Shopping List Edit Section

16 - Wrap Up & Next Steps



                    Section: 4 - Debugging
1 - Understanding Angular Error Messages

2 - Debugging Code in the Browser Using Sourcemaps

3 - Using Augury to Dive into Angular Apps



                    Section: 5 - Components & Databinding Deep Dive
1 - Module Introduction
Quick basic introduction to the material that will be covered by the section

2 - Splitting Apps into Components

3 - Property & Event Binding Overview

4 - Binding to Custom Properties

5 - Assigning an Alias to Custom Properties

6 - Binding to Custom Events

7 - Assigning an Alias to Custom Events

8 - Custom Property and Event Binding Summary

9 - Understanding View Encapsulation

10 - More on View Encapsulation

11 - Using Local References in Templates

13 - Getting Access to the Template & DOM with @ViewChild

14 - Projecting Content into Components with ng-content

15 - Understanding the Component Lifecycle

16 - Seeing Lifecycle Hooks in Action

17 - Lifecycle Hooks and Template Access

18 - Getting Access to ng-content with @ContentChild

19 - Wrap Up



                    Section: 6 - Course Project - Components & Databinding
1 - Introduction
Quick basic introduction to the material that will be covered by the section

2 - Adding Navigation with Event Binding and ngIf

3 - Passing Recipe Data with Property Binding

4 - Passing Data with Event and Property Binding (Combined)

5 - Allowing the User to Add Ingredients to the Shopping List



                    Section: 7 - Directives Deep Dive
1 - Module Introduction

2 - ngFor and ngIf Recap

3 - ngClass and ngStyle Recap

4 - Creating a Basic Attribute Directive

5 - Using the Renderer to build a Better Attribute Directive

6 - More about the Renderer

7 - Using HostListener to Listen to Host Events

8 - Using HostBinding to Bind to Host Properties

9 - Binding to Directive Properties

10 - What Happens behind the Scenes on Structural Directives

11 - Building a Structural Directive

12 - Understanding ngSwitch



                    Section: 8 - Course Project - Directives
1 - Building and Using a Dropdown Directive



                    Section: 9 - Using Services & Dependency Injection
1 - Module Introduction
Quick basic introduction to the material that will be covered by the section

2 - Why would you Need Services?

3 - Creating a Logging Service

4 - Injecting the Logging Service into Components

5 - Creating a Data Service

6 - Understanding the Hierarchical Injector

7 - How many Instances of Service Should It Be?

8 - Injecting Services into Services

9 - Using Services for Cross-Component Communication



                    Section: 10 - Course Project - Services & Dependency Injection
1 - Introduction
Quick basic introduction to the material that will be covered by the section

2 - Setting up the Services

3 - Managing Recipes in a Recipe Service

4 - Using a Service for Cross-Component Communication

5 - Adding the Shopping List Service

6 - Using Services for "Push Notifications"

7 - Adding Ingredients to Recipes

8 - Passing Ingredients from Recipes to the Shopping List (via a Service)



                    Section: 11 - Changing Pages with Routing
1 - Module Introduction
Quick basic introduction to the material that will be covered by the section

2 - Why do we need a Router?

3 - Understanding the Example Project

4 - Setting up and Loading Routes

5 - Navigating with Router Links

6 - Understanding Navigation Paths

7 - Styling Active Router Links

8 - Navigating Programmatically

9 - Using Relative Paths in Programmatic Navigation

10 - Passing Parameters to Routes

11 - Fetching Route Parameters

12 - Fetching Route Parameters Reactively

13 - An Important Note about Route Observables

14 - Passing Query Parameters and Fragments

15 - Retrieving Query Parameters and Fragments

16 - Practicing and some Common Gotchas

17 - Setting up Child (Nested) Routes

18 - Using Query Parameters - Practice

19 - Configuring the Handling of Query Parameters

20 - Redirecting and Wildcard Routes

21 - Important: Redirection Path Matching

22 - Outsourcing the Route Configuration

23 - An Introduction to Guards

24 - Protecting Routes with canActivate

25 - Protecting Child (Nested) Routes with canActivateChild

26 - Using a Fake Auth Service

27 - Controlling Navigation with canDeactivate

28 - Passing Static Data to a Route

29 - Resolving Dynamic Data with the resolve Guard

30 - Understanding Location Strategies

31 - Wrap Up



                    Section: 12 - Course Project - Routing
1 - Planning the General Structure

2 - Setting Up Routes

3 - Adding Navigation to the App

4 - Marking Active Routes

5 - Fixing Page Reload Issues

6 - Child Routes: Challenge

7 - Adding Child Routing Together

8 - Configuring Route Parameters

9 - Passing Dynamic Parameters to Links

10 - Styling Active Recipe Items

11 - Adding Editing Routes

12 - Retrieving Route Parameters

13 - Programmatic Navigation to the Edit Page

14 - One Note about Route Observables

15 - Project Cleanup



                    Section: 13 - Understanding Observables
1 - Module Introduction
Quick basic introduction to the material that will be covered by the section

2 - Analyzing a Built-in Angular Observable

3 - Building & Using a First Simple Observable

4 - Building & Using a Custom Observable from Scratch

5 - Unsubscribe!

6 - Where to learn more

7 - Using Subjects to Pass AND Listen to Data

8 - Understanding Observable Operators

9 - Wrap Up



                    Section: 14 - Course Project - Observables
1 - Improving the Reactive Service with Observables (Subjects)



                    Section: 15 - Handling Forms in Angular Apps
1 - Module Introduction
Quick basic introduction to the material that will be covered by the section

168. Why do we Need Angular's Help?

169. Template-Driven (TD) vs Reactive Approach
1:16
170. An Example Form
171. TD: Creating the Form and Registering the Controls
5:42
172. TD: Submitting and Using the Form
6:15
173. TD: Understanding Form State
2:29
174. TD: Accessing the Form with @ViewChild
3:03
175. TD: Adding Validation to check User Input
4:14
176. Built-in Validators & Using HTML5 Validation
0:00
177. TD: Using the Form State
4:27
178. TD: Outputting Validation Error Messages
2:23
179. TD: Set Default Values with ngModel Property Binding
2:15
180. TD: Using ngModel with Two-Way-Binding
2:48
181. TD: Grouping Form Controls
3:30
182. TD: Handling Radio Buttons
3:27
183. TD: Setting and Patching Form Values
4:42
184. TD: Using Form Data
4:44
185. TD: Resetting Forms
1:48
 forms-td-final.zip
Assignment 0: Practicing Template-Driven Forms
0:00
186. Introduction to the Reactive Approach
0:40
187. Reactive: Setup
2:26
 forms-reactive-start.zip
188. Reactive: Creating a Form in Code
4:07
189. Reactive: Syncing HTML and Form
3:58
190. Reactive: Submitting the Form
2:15
191. Reactive: Adding Validation
2:50
192. Reactive: Getting Access to Controls
3:47
193. Reactive: Grouping Controls
3:46
194. Reactive: Arrays of Form Controls (FormArray)
7:31
195. Reactive: Creating Custom Validators
6:11
196. Reactive: Using Error Codes
3:20
197. Reactive: Creating a Custom Async Validator
4:38
198. Reactive: Reacting to Status or Value Changes
2:11
199. Reactive: Setting and Patching Values



                    Section: 16 - Course Project - Forms
1 - Introduction
Quick basic introduction to the material that will be covered by the section

2 - TD: Adding the Shopping List Form

3 - Adding Validation to the Form

4 - Allowing the Selection of Items in the List

5 - Loading the Shopping List Items into the Form

6 - Updating existing Items

206. Resetting the Form

207. Allowing the the User to Clear (Cancel) the Form

208. Allowing the Deletion of Shopping List Items

209. Creating the Template for the (Reactive) Recipe Edit Form

210. Creating the Form For Editing Recipes

211. Syncing HTML with the Form

212. Adding Ingredient Controls to a Form Array

213. Adding new Ingredient Controls

214. Validating User Input

215. Submitting the Recipe Edit Form

216. Adding a Delete and Clear (Cancel) Functionality

217. Redirecting the User (after Deleting a Recipe)

218. Adding an Image Preview

219. Providing the Recipe Service Correctly

220. Deleting Ingredients and Some Finishing Touches



                    Section: 17 - Using Pipes to Transform Output
1 - Introduction & Why Pipes are Useful
Quick basic introduction to the material that will be covered by the section

2 - Using Pipes

3 - Parametrizing Pipes

4 - Where to learn more about Pipes

5 - Chaining Multiple Pipes

6 - Creating a Custom Pipe

7 - Parametrizing a Custom Pipe

8 - Example: Creating a Filter Pipe

9 - Pure and Impure Pipes (or: How to "fix" the Filter Pipe)

10 - Understanding the "async" Pipe



                    Section: 18 - Making Http Requests
1- Introduction & How Http Requests Work in SPAs

2 - Example App & Backend Setup

3 - Sending Requests (Example: POST Request)

4 - Adjusting Request Headers

5 - Sending GET Requests

6 - Sending a PUT Request

7 - Transform Responses Easily with Observable Operators (map())

8 - Using the Returned Data

9 - Catching Http Errors

10 - Using the "async" Pipe with Http Requests



                    Section: 19 - Course Project - Http
1 - Introduction

2 - Setting up Firebase as a Dummy Backend

3 - Sending PUT Requests to Save Data

4 - GETting Back the Recipes

5 - Transforming Response Data to Prevent Errors



                    Section: 20 - Authentication & Route Protection in Angular Apps
1 - Module Introduction
Quick basic introduction to the material that will be covered by the section

2 - How Authentication Works in Single-Page-Applications

3 - More about JWT

4 - Creating a Signup Page and Route

5 - Setting up the Firebase SDK

6 - Signing Users Up

7 - Signin Users In

8 - Requiring a Token (on the Backend)

9 - Sending the Token

10 - Checking and Using Authentication Status

11 - Adding a Logout Button

12 - Route Protection and Redirection Example

13 - Wrap Up

14 - Possible Improvements



                    Section: 21 - Using Angular Modules & Optimizing Apps
1 - Module Introduction
Quick basic introduction to the material that will be covered by the section

2 - The Idea behind Modules

3 - Understanding the App Module

4 - Understanding Feature Modules

5 - Creating a Recipe Feature Module

6 - Registering Routes in a Feature Module

7 - Understanding Shared Modules

8 - Creating a Shared Module

9 - Creating a Shopping List Feature Module

10 - Loading Components via Selectors vs Routing

11 - A Common Gotcha

12 - Creating the Auth Feature Module

13 - Understanding Lazy Loading

14 - Adding Lazy Loading to the Recipes Module

15 - Protecting Lazy Loaded Routes with canLoad

16 - How Modules and Services Work Together

17 - Understanding the Core Module

18 - Creating a Basic Core Module

19 - Restructuring Services to use the Child Injector

20 - Using Ahead-of-Time Compilation

21 - How to use AoT Compilation with the CLI

22 - Preloading Lazy Loaded Routes

23 - Wrap Up



                    Section: 22 - Deploying an Angular App
1 - Module Introduction
Quick basic introduction to the material that will be covered by the section

2 - Deployment Preparations and Important Steps

3 - Example: Deploying to AWS S3



                    Section: 23 - Angular 2 Animations
1 - Making Animations Work with Angular 4

2 - Introduction

3 - Setting up the Starting Project

4 - Animations Triggers and State

5 - Switching between States

6 - Transitions

7 - Advanced Transitions

8 - Transition Phases

9 - The "void" State

10 - Using Keyframes for Animations

11 - Grouping Transitions

12 - Using Animation Callbacks



                    Section: 24 - A Basic Introduction to Unit Testing in Angular 2 Apps
1 - About this Section
Quick basic introduction to the material that will be covered by the section

2 - Introduction

3 - Why Unit Tests?

4 - Analyzing the Testing Setup (as created by the CLI)

5 - Running Tests (with the CLI)

6 - Adding a Component and some fitting Tests

7 - Testing Dependencies: Components and Services

8 - Simulating Async Tasks

9 - Using "fakeAsync" and "tick"

10 - Isolated vs Non-Isolated Tests

11 - Further Resources & Where to Go Next

