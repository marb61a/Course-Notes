                    How To Use NPM Scripts As Your Build Tool
                    Course Notes
                    
                    
1 - Create A Basic Package.json File
To automatically create a package.json file
  - npm init
  - npm init --force                                      // Will generate package.json file with default answers
  - npm init --yes                                        // Will be the same as above
  - npm test                                              // Will run tests and add a tests entry to package.json
  - npm t                                                 // A shorthand version of above
Most of the questions asked have a default answer provided  
  - As the example app is not published the version is set to 0.1.0
  - The default index.js entry point is left
  - The MIT Licence is recommendid due to its few restrictions and permissiveness

2 - Run The Basic NPM Scripts
Example Syntax
  // Replacing the test scripts that npm test command generated
  // Always use the double quotes as it is a JSON file not a JS file
  "scripts": {
    // Babel is required to compile tests as the example uses ES6
    "test": "mocha spec/ --require babel-register",
    // Another script that npm recognises natively
    "start": "node index.js"
  }
  
3 - Create A Custom NPM Script
Example Syntax
  // Creating a custom ESLint script
  "scripts": {
    "test": "mocha spec/ --require babel-register",
    "start": "node index.js",
    // The cache flag is passed to avoid relinting things that have not altered
    // The fix flag will autofix certain items that have simple solutions
    // Many developers do not like to have a globally installed version of eslint and use either paths to 
    // local installtions or use environmental variables
    "eslint": "eslint --cache --fix ./"
  }
  - npm run env                                             // Will list environmental variables
  - npm run eslint                                          // This command runs the eslint script

4 - Run NPM Scripts In Series
Prior to running any tests is is a good idea to run linting on JS and styles
Example Syntax
  "scripts": {
    "start": "node index.js",
    // The double ampersand runs multiple scripts in series
    // If any of the linting fails the rest of the command is aborted
    "test": "npm run eslint && npm run stylelint && mocha spec/ --require babel-register",
    "eslint": "eslint --cache --fix ./",
    "stylelint": "stylelint '***/*.scss' --syntax scss"
  }

5 - Run NPM Scripts In Parallel
Example Syntax
  // Instead of chaining scripts it may be necessary to run them in parallel
  // This is an easy task as it only involves changing double ampersands to single ones
  // Using wait gives the ability to terminate with ctrl + c
   "scripts": {
    "start": "node index.js",
    "test": "npm run eslint  & mocha spec/ --require babel-register --watch & npm run stylelint & wait",
    "eslint": "eslint --cache --fix ./",
    "stylelint": "stylelint '***/*.scss' --syntax scss"
    "stylelint:fix": "stylefmt -R src/"
  }
Be careful that although you may cancel a Mocha test at the cli it may still be running in the background

6 - Use A Shorthand Syntax For Running Multiple NPM Scripts With npm run all
To install the npm run all package
  - npm -i npm-run-all -D
Example Syntax
  // You dont need the ampersands to run the scripts in series
  // Adding the parallel directive enables parallel running of the scripts
"scripts": {
    "start": "node index.js",
    "test": "npm-run-all --parallel eslint mocha stylelint",
    "eslint": "eslint --cache --fix ./",
    "stylelint": "stylelint '***/*.scss' --syntax scss"
    "stylelint:fix": "stylefmt -R src/"
    "mocha": "mocha spec/ --require babel-register"
  }

7 - Run A Set Of Similar Scripts With A Wildcard

8 - Use Pre And Post NPM Script Lifecycle Hooks

9 - Passing Arguments To NPM Scripts

10 - Pipe Data From One NPM Script To Another

11 - Run NPM Scripts When Files Change With onChange

12 - Use package.json Variables In NPM Scripts

13 - Use Custom Config Settings In Your NPM Scripts

14 - Run NPM Scripts With Git Hooks

15 - Change The Level Of Console Output When Running NPM Scripts

16 - Make NPM Scripts Cross Environment Friendly

17 - List Available NPM Scripts And Support Tab Completion

18 - Add Comments To Your NPM Scripts

19 - Pull Out NPM Script Into Another File With PS

20 - Create A Bash Script To Replace A Complex NPM Script 

21 - Create A Node Script To Replace A Complex NPM Script 
