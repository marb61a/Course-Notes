                    The Coding Interview Bootcamp: Algorithms + Data Structures
                    Course Notes
                    
                    
                    Section 1 - Get Started Here!
1 - How to Get Help
The various resources that students can use to get their questions answered
This mainly thequestion and answer section on Udemy but the instructor twitter can be used if needed

2 - The All Important Coding Interview
Interviews and interview questions requires a specific frame of mind
There are 2 different phases to getting development jobs
  - Contact Phase
    - Referrel, Contact recruiter, Submit CV etc
  - Interview Phase
    - Phone Screen, Onsite Interview, Take home assignment
    - The ability to code is the single most important part during this time
    - This is the part of a candidate that the course aims to improve

3 - Getting Better at Coding Questions
There are 3 big tools available
  - Take home assignments
  - Pair Programming at a computer, this tans to be more practical eg tools, frameworks etc 
  - Whiteboarding, which is used by a lot of larger companies
There is no quick solution, practice is the only way to improve



                    Section 2 – A Touch of Setup
1 - Don't Skip Me!

2 - Environment Setup

3 - Repo Test Setup

4 - Link to Github Repo



                    Section 3 – String Reversal
1 - First Question! Reverse String.

2 - String Reversal, Solution #1

3 - String Reversal, Solution #2
05:55
String Reversal, Solution #3
05:45
Debugger Statements
09:27
–
Paldinromes
14:42
Palindromes
02:57
Palindromes, Solution #1
02:51
Palindromes, Alternate Solution
08:54
–
Integer Reversal
13:48
Reversing an Int
06:50
Reversing an Int Solution
06:58
–
MaxChars
17:44
Max Chars Problem
05:33
Max Chars Character Map
05:07
Max Chars Solution
02:46
Max Chars Solution Continued
04:18
–
The Classic FizzBuzz!
12:52
FizzBuzz Problem Statement
05:38
Solving FizzBuzz with Style
07:14
–
Array Chunking
21:12
Array Chunk Problem Statement
03:15
Chunk Solution #1
05:50
More on Chunk
04:12
Chunk Solution #2
04:51
Even More on Chunk!
03:04
–
Anagrams
28:26
What Are Anagrams?
08:23
Solving Anagrams
11:44
Another Way to Tackle Anagrams
08:19
–
Sentence Capitalization
14:22
Understanding Capitalization
04:01
Capitalization Solution #1
03:54
How Else Can We Capitalize?
06:27
-
Printing Steps
39:24
The Steps Question
04:18
Steps Solution #1
06:30
Steps Solution #1 Continued
04:58
Step Up Your Steps Game
07:48
More on Steps
15:50
-
Two Sided Steps - Pyramids
23:22
Pyramids Vs Steps
04:50
Pyramid Solution #1
09:55
Pyramid Solution #2
08:37
-
Find The Vowels
10:53
Get Your Vowels
01:47
Finding Vowels
05:23
Another Way to Find Vowels
03:43
-
Enter the Matrix Spiral
27:59
General Matrix Spirals
03:26
Spiral Solution
05:15
More on Spiral
19:18
-
Runtime Complexity
26:59
What is Runtime Complexity?
05:39
Determining Complexity
09:21
More on Runtime Complexity
11:59
-
Runtime Complexity in Practice - Fibonacci
40:13
The Fibonacci Series
02:36
Fibonacci Series Iterative Solution
05:09
Fibonacci Series Recursive Solution
10:01
Memoi-....Mem-...Memoization!
11:00
I Believe Its Memoization!
11:27
-
The Queue
16:50
What's a Data Structure?
03:41
The Queue Data Structure
06:38
Implementing a Queue
06:31
-
Underwater Queue Weaving
10:10
What's a Weave?
04:45
How to Weave
05:25
-
Stack 'Em Up With Stacks
08:38
Stack Data Structure
04:45
Implementing a Stack
03:53
-
Two Become One
20:49
Queue From Stack Question
03:25
Creating a Queue From Stacks
07:09
More on Queue From Stack
10:15
-
Linked Lists
02:25:01
What's a Linked List?
06:16
Exercise Setup
05:27
Node Implementation
06:34
Linked List's Constructor
04:41
Linked Lists's InsertFirst
05:11
Solving Insert First
07:04
Sizing a List
02:36
Solve for Size
05:14
Get Over Here, GetFirst!
00:55
Building GetFirst
00:56
Find Your Tail with GetLast
01:49
GetLast Implementation
03:19
Clear that List
01:18
Clear Solution
01:56
Where's My Head, RemoveFirst?
01:35
Building RemoveFirst
02:33
Bye-Bye Tail with RemoveLast
05:05
RemoveLast Implementation
06:17
A New Tail to Tell with InsertLast
03:20
Adding InsertLast
03:42
Pick Em Out with GetAt
02:54
GetAt Solution
06:17
Remove Anything with RemoveAt
06:00
RemoveAt Solution
09:46
Insert Anywhere with InsertAt
03:56
InsertAt Solution
08:25
Code Reuse in Linked Lists
04:15
List Traversal Through ForEach
02:26
Note on Generators
00:19
Brushup on Generators
20:14
Linked Lists with Iterators
04:41
-
Find the Midpoint
13:33
Midpoint of a Linked List
10:06
Midpoint Solution
03:27
-
Circular Lists?
11:40
Detecting Linked Lists Loops
07:28
Loop Solution
04:12
-
Step Back From the Tail
08:50
From Last Question
06:15
From Last Solution
02:35
-
Building a Tree
46:30
Trees Overview
08:20
Node Implementation
06:32
More on Nodes
06:05
Tree Implementation
04:14
Traverse By Breadth
08:39
Solving for Breadth-First Traversal
05:24
Depth First Traversal
04:40
Solving for Depth-First Traversal
02:36
-
Tree Width with Level Width
19:10
Level Width Declaration
12:58
Measuring Level Width
06:12
-
My Best Friend, Binary Search Trees
22:14
What's a Binary Search Tree?
07:06
Binary Search Tree Implementation
04:41
BST Insertion
04:40
Do You Contain This?
02:41
Solving Contains
03:06
-
Validating a Binary Search Tree
22:35
How to Validate a Binary Search Tree
05:25
More on Validation
04:19
Solution to Validation
12:51
-
Back to Javascript - Events
14:26
What's an Eventing System?
07:10
A Tip on Events
02:08
Events Solution
05:08
-
Sorting With BubbleSort
09:39
Sorting Algorithm Overview
05:07
BubbleSort Solution
04:32
-
Sort By Selection
09:36
How SelectionSort Works
05:22
Selection Sort Solution
04:14
-
Ack, MergeSort!
28:58
MergeSort Overview
06:20
The Merge Function
06:55
More on MergeSort
05:55
I Don't Like Recursion, But Let's Do This Anyways
09:48
-
Not Done Yet...
00:04
To Be Continued!
00:04

