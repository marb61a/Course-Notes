                    Web UI Architecture
                    Course Notes
                    
                    
                    Section 1 - Javascript Architecture
1 - Architecture Decisions you make about Your Application
An application architecture is not
  - A bunch of JavaScript in an external file 
  - An organized system of external files 
  - Models, Views, and Controllers 
  - State and/or messaging 
  - Routing 
  - Dev processes like Testing and Minifying
A good architecture has 
  - Minimal boilerplate code
  - A curated library of tools
  - Obvious ways of accessing anything
  - Clear implementation and style patterns
  - A balance of performance and maintenance
It should be able to
  - Wire-up a new static page given mostly DOM references and server endpoints
  - Intelligently provide necessary libraries and utilities asneeded
  - Create a single-page app needing only concepts, not scaffolding 
  - Verify its own health 
  - Provide an optimised version of itself

2 - What Time is Architecture Time
- When a page has multiple, well-defined types of objects 
- Messaging needs go beyond interaction events
- If a given page contains multiple states 
- Repeated code for connecting other code 
- Several developers working on the same single-page app (SPA) 
- Where recursion testing involves recreating complex workflows

Architecture begins on the whiteboard!!!
UML can help formalise drawings of architecture
Do design before choosing a framework!!!!!

An application architecture is not
  - Downloading a framework and then stuffing your JS into before it calling it a day

Having an architecture implies that there has been
  - Cataloguing of needed objects, diagramming of application states and lots of planning

3 - Example Shopping Cart

4 - Patterns Overview

5 - Patterns Explained

6 - Write Some Implementation First


                    
                    Section 2 - Abstractions and Frameworks
1 - Messaging, Rendering and Server Interactions

2 - State Management, Validation And Framework Context

3 - Implementing A Framework

4 - Third Party Frameworks - Angular JS

5 - Third Party Frameworks - Backbone

6 - Third Party Frameworks - Ember

7 - Questions And Code


                    
                    Section 3 - Outside Tools
1 - The Reason For Third Party Tools

2 - CSS

3 - Markup

4 - Both CSS And Markup

5 - Dependency Management

6 - Utilities

7 - Plugins And Widgets


                    
                    Section 2 - Outside Tools Continued
1 - Testing

2 - Linting

3 - Documentation

4 - Deployment Process

5 - All-In-One Tools

6 - The Rest

7 - Questions And Wrap Up
                    
