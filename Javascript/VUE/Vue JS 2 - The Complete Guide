                    Vue JS 2 - The Complete Guide
                    
                    
                    
                    Section 1 - Getting Started
1 - Course Introduction 

2 - Let's Create our First VueJS Application 

3 - Extending the VueJS Application 

4 - Course Structure 

5 - Take Advantage of all Course Resources! 

6 - Setup VueJS Locally 

7 - Module Resources & Useful Links



                    Section 2 - Using VueJS to Interact with the DOM
1 - Module Introduction 

2 - Understanding VueJS Templates 

3 - How the VueJS Template Syntax and Instance Work Together 

4 - Accessing Data in the Vue Instance 

5 - Binding to Attributes 

6 - Understanding and Using Directives 

7 - Disable Re-Rendering with v-once 

8 - How to Output Raw HTML 

9 - Listening to Events 

10 - Getting Event Data from the Event Object 

11 - Passing your own Arguments with Events 

12 - Modifying an Event - with Event Modifiers 

13 - Listening to Keyboard Events 

14 - Writing JavaScript Code in the Templates 

15 - Using Two-Way-Binding 

16 - Reacting to Changes with Computed Properties 

17 - An Alternative to Computed Properties: Watching for Changes 

18 - Saving Time with Shorthands 

19 - Dynamic Styling with CSS Classes - Basics 

20 - Dynamic Styling with CSS Classes - Using Objects 

21 - Dynamic Styling with CSS Classes - Using Names 

22 - Setting Styles Dynamically (without CSS Classes) 

23 - Styling Elements with the Array Syntax 

24 - Module Wrap Up 

25 - Module Resources & Useful Links 



                    Section 3 – Using Conditionals and Rendering Lists
1 - Module Introduction 

2 - Conditional Rendering with v-if 

3 - v-else-if in Vue.js 2.1

4 - Using an Alternative v-if Syntax 

5 - Don't Detach it with v-show 

6 - Rendering Lists with v-for 

7 - Getting the Current Index 

8 - Using an Alternative v-for Syntax 

9 - Looping through Objects 

10 - Looping through a List of Numbers 

11 - Keeping Track of Elements when using v-for

12 - Module Wrap Up 

13 - Module Resources & Useful Links 



                    Section 4 – First Course Project - The Monster Slayer
1 - Introduction & Challenge 

2 - Setting up the Course Project 

3 - Creating the Vue Instance and Styling the Healthbars 

4 - Showing the Player Controls Conditionally 

5 - Implementing a "Start Game" Method 

6 - Implementing a "Attack" Method 

7 - Write better Code - Time for Refactoring! 

8 - Implementing a "Special Attack" 

9 - Implementing a "Heal" Method 

10 - Finishing the Action Buttons 

11 - Creating an Action Log 

12 - Printing the Log (v-for) 

13 - Finishing the Log 

14 - Styling the Log Conditionally 

15 - Wrap Up 

16 - Full Application Code



                    Section 5 – Understanding the VueJS Instance
1 - Module Introduction 

2 - Some Basics about the VueJS Instance 

3 - Using Multiple Vue Instances 

4 - Accessing the Vue Instance from Outside 

5 - How VueJS manages your Data and Methods

6 - A Closer Look at $el and $data 

7 - Placing $refs and Using them on your Templates 

8 - Where to learn more about the Vue API 

9 - Mounting a Template 

10 - Using Components 

11 - Limitations of some Templates 

12 - How VueJS Updates the DOM 

13 - The VueJS Instance Lifecycle 

14 - The VueJS Instance Lifecycle in Practice 

15 - Module Wrap Up 

16 - Module Resources & Useful Links



                    Section 6 – Moving to a "Real" Development Workflow with Webpack and Vue CLI
1 - Module Introduction 

2 - Why do we need a Development Server? 

3 - What does "Development Workflow" mean?

4 - Using the Vue CLI to create Projects 

5 - Installing the Vue CLI and Creating a new Project 

6 - An Overview over the Webpack Template Folder Structure 

7 - Understanding ".vue" Files 

8 - Understanding the Object in the Vue File 

9 - How to Build your App for Production 

10 - Module Wrap Up 

11 - More about ".vue" Files and the CLI 

12 - Debugging VueJS Projects 



                    Section 7 – An Introduction to Components
1 - Module Introduction 

2 - An Introduction to Components 

3 - Storing Data in Components with the Data Method 

4 - Registering Components Locally and Globally

5 - The "Root Component" in the App.vue File 

6 - Creating a Component 

7 - Using Components 

8 - Moving to a Better Folder Structure 

9 - Alternative Folder Structures

10 - How to Name your Component Tags (Selectors) 

11 - Scoping Component Styles 

12 - Module Wrap Up 

13 - Module Resources & Useful Links



                    Section 8 – Communicating between Components
1 - Module Introduction 

2 - Communication Problems 

3 - Using Props for Parent => Child Communication 

4 - Naming "props" 

5 - Using "props" in the Child Component 

6 - Validating "props" 

7 - Using Custom Events for Child => Parent Communication 

8 - Understanding Unidirectional Data Flow 

9 - Communicating with Callback Functions 

10 - Communication between Sibling Components 

11 - Using an Event Bus for Communication 

12 - Centralizing Code in an Event Bus 

13 - Wrap Up 

14 - Module Resources & Useful Links



                    Section 9 – Advanced Component Usage
1 - Module Introduction 

2 - Setting up the Module Project 

3 - Passing Content - The Suboptimal Solution

4 - Passing Content with Slots 

5 - How Slot Content gets Compiled and Styled

6 - Using Multiple Slots (Named Slots) 

7 - Default Slots and Slot Defaults 

8 - A Summary on Slots 

9 - Switching Multiple Components with Dynamic Components 

10 - Understanding Dynamic Component Behavior 

11 - Keeping Dynamic Components Alive 

12 - Dynamic Component Lifecycle Hooks 

13 - Wrap Up 

14 - Module Resources & Helpful Links



                    Section 10 – Second Course Project - Wonderful Quotes
1 - Module Introduction 

2 - Setting up the Project 

3 - Initializing the Application 

4 - Creating the Application Components 

5 - Passing Data with Props and Slots 

6 - Allowing Users to Create Quotes with a NewQuote Component 

7 - Adding Quotes with Custom Events 

8 - Adding a Info Box 

9 - Allowing for Quote Deletion 

10 - Controlling Quotes with a Progress Bar 

11 - Finishing Touches and State Management 

12 - Module Resources



                    Section 11 - Handling User Input with Forms
1 - Module Introduction 

2 - A Basic <input> Form Binding 

3 - Grouping Data and Pre-Populating Inputs 

4 - Modifying User Input with Input Modifiers 

5 - Binding <textarea> and Saving Line Breaks 

6 - Using Checkboxes and Saving Data in Arrays 

7 - Using Radio Buttons 

8 - Handling Dropdowns with <select> and <option> 

9 - What v-model does and How to Create a Custom Control 

10 - Creating a Custom Control (Input) 

11 - Submitting a Form 

12 - Wrap Up 

13 - Module Resources & Useful Links



                      Section 12 - Using and Creating Directives
1 - Module Introduction 

2 - Understanding Directives 

3 - How Directives Work - Hook Functions 

4 - Creating a Simple Directive 

5 - Passing Values to Custom Directives 

6 - Passing Arguments to Custom Directives 

7 - Modifying a Custom Directive with Modifiers 

8 - Custom Directives - A Summary 

9 - Registering Directives Locally 

10 - Using Multiple Modifiers 

11 - Passing more Complex Values to Directives 

12 - Wrap Up 

13 - Module Resources & Useful Links



                    Section 13 - Improving your App with Filters and Mixins
1 - Module Introduction 

2 - Creating a Local Filter 

3 - Global Filters and How to Chain Multiple Filters 

An (often-times better) Alternative to Filters: Computed Properties 
05:14
Understanding Mixins 
02:23
Creating and Using Mixins 
02:25
How Mixins get Merged 
02:57
Creating a Global Mixin (Special Case!) 
03:26
Mixins and Scope 
02:33
Time to Practice - Filters & Mixins 
Wrap Up 
01:56
Module Resources & Useful Links
00:06
-
Adding Animations and Transitions
01:31:47
Module Introduction 
01:08
Understanding Transitions 
01:01
Preparing Code to use Transitions 
03:11
Setting Up a Transition 
03:08
Assigning CSS Classes for Transitions 
02:27
Creating a "Fade" Transition with the CSS Transition Property 
03:21
Creating a "Slide" Transition with the CSS Animation Property 
03:58
Mixing Transition and Animation Properties 
03:31
Animating v-if and v-show 
00:33
Setting Up an Initial (on-load) Animation 
01:30
Using Different CSS Class Names 
04:01
Using Dynamic Names and Attributes 
02:32
Transitioning between Multiple Elements (Theory) 
00:34
Transitioning between Multiple Elements (Practice) 
04:42
Listening to Transition Event Hooks 
02:05
Understanding JavaScript Animations 
08:03
Excluding CSS from your Animation 
01:28
Creating an Animation in JavaScript 
06:18
Animating Dynamic Components 
05:57
Animating Lists with <transition-group> 
00:43
Using <transition-group> - Preparations 
04:20
Using <transition-group> to Animate a List 
06:12
Understanding the App 
01:14
Creating the App 
12:04
Adding Animations 
06:38
Wrap Up 
01:03
Module Resources & Useful Links
00:02
The Animated "Monster Slayer" App
00:02
-
Connecting to Servers via Http - Using vue-resource
48:06
Module Introduction 
01:42
Accessing Http via vue-resource - Setup 
04:00
Creating an Application and Setting Up a Server (Firebase) 
05:24
POSTing Data to a Server (Sending a POST Request) 
06:10
GETting and Transforming Data (Sending a GET Request) 
06:54
Configuring vue-resource Globally 
02:48
Intercepting Requests 
03:33
Intercepting Responses 
02:51
Where the "resource" in vue-resource Comes From 
04:42
Creating Custom Resources 
02:38
Resources vs "Normal" Http Requests 
00:27
Understanding Template URLs 
05:05
Wrap Up 
01:42
Module Resources & Useful Links
00:10
-
Routing in a VueJS Application
01:25:05
Module Introduction 
01:37
Setting up the VueJS Router (vue-router) 
02:16
Setting Up and Loading Routes 
06:43
Understanding Routing Modes (Hash vs History) 
04:14
Navigating with Router Links 
03:45
Where am I? - Styling Active Links 
03:20
Navigating from Code (Imperative Navigation) 
02:42
Setting Up Route Parameters 
01:59
Fetching and Using Route Parameters 
02:03
Reacting to Changes in Route Parameters 
03:04
vue-router 2.2: Extract Route Params via "props"
00:17
Setting Up Child Routes (Nested Routes) 
04:39
Navigating to Nested Routes 
03:09
Making Router Links more Dynamic 
02:04
A Better Way of Creating Links - With Named Routes 
03:21
Using Query Parameters 
02:54
Multiple Router Views (Named Router Views) 
03:27
Redirecting 
02:13
Setting Up "Catch All" Routes / Wildcards 
01:05
Animating Route Transitions 
02:34
Passing the Hash Fragment 
03:28
Controlling the Scroll Behavior 
03:21
Protecting Routes with Guards 
01:13
Using the "beforeEnter" Guard 
07:51
Using the "beforeLeave" Guard 
03:31
Loading Routes Lazily 
07:08
Wrap Up 
01:02
Module Resources & Useful Links
00:05
-
Better State Management with Vuex
01:12:19
Module Introduction 
01:12
Why a Different State Management May Be Needed 
02:24
Understanding "Centralized State" 
01:32
Using the Centralized State 
06:49
Why a Centralized State Alone Won't Fix It 
02:41
Understanding Getters 
00:48
Using Getters 
02:40
Mapping Getters to Properties 
06:57
Understanding Mutations 
01:14
Using Mutations 
04:50
Why Mutations have to run Synchronously 
01:34
How Actions improve Mutations 
01:32
Using Actions 
04:59
Mapping Actions to Methods 
04:57
A Summary of Vuex 
04:13
Two-Way-Binding (v-model) and Vuex 
05:56
Improving Folder Structures 
01:01
Modularizing the State Management 
04:56
Using Separate Files 
04:17
Using Namespaces to Avoid Naming Problems 
06:44
Auto-namespacing with Vuex 2.1
00:08
Wrap Up 
00:50
Module Resources & Useful Links
00:05
-
Final Project - The Stock Trader
01:44:12
Project Introduction 
03:11
Project Setup and Planning 
02:45
Creating the First Components 
02:55
Setup Project Routes 
04:42
Adding a Header and Navigation 
06:44
Planning the Next Steps 
01:21
Creating Stocks Components 
06:31
Adding a "Buy" Button 
05:57
Setting up the Vuex State Management 
10:20
Adding a Portfolio Module to Vuex 
10:02
Working on the Portfolio Stocks 
06:51
Connecting the Portfolio with Vuex 
02:21
Time to fix some Errors 
02:00
Displaying the Funds 
03:41
Adding some Order Checks 
05:40
Making Funds Look Nicer with Filters 
01:47
Ending the Day - Randomizing Stocks 
05:30
Animating the Route Transitions 
03:14
Saving & Fetching Data - Adding a Dropdown 
02:17
Setting up vue-resource and Firebase 
02:15
Saving Data (PUT Request) 
02:51
Fetching Data (GET Request) 
05:03
Testing and Bug Fixes 
02:50
Project Wrap Up 
01:21
Bonus: Debugging Vuex with Vue Developer Tools 
01:59
Module Resources & Useful Links
00:04
-
Deploying a VueJS Application
08:54
Module Introduction 
01:12
Preparing for Deployment 
01:45
Deploying the App (Example: AWS S3) 
05:57
-
Course Roundup
00:58
Courses Roundup
00:58
-
All Course Exercises ("Time to Practice")
01:54:31
About this Section (Please Read!)
00:12
Time to Practice (1) - Outputting Data to Templates (Problem) 
01:59
Time to Practice (1) - Outputting Data to Templates (Solution) 
06:12
Time to Practice (1) - Outputting Data to Templates (Code)
00:37
Time to Practice (2) - Events (Problem) 
01:42
Time to Practice (2) - Events (Solution)
04:54
Time to Practice (2) - Events (Code)
00:30
Time to Practice (3) - Reactive Properties (Problem) 
02:28
Time to Practice (3) - Reactive Properties (Solution) 
05:47
Time to Practice (3) - Reactive Properties (Code)
00:37
Time to Practice (4) - Styling (Problem) 
03:49
Time to Practice (4) - Styling (Solution) 
18:17
Time to Practice (4) - Styling (Code)
01:28
Time to Practice (5) - Conditionals and Lists (Problem) 
01:40
Time to Practice (5) - Conditionals and Lists (Solution) 
09:38
Time to Practice (6) - Components (Problem) 
01:44
Time to Practice (6) - Components (Solution) 
02:12
Time to Practice (7) - Component Communication (Problem) 
03:06
Time to Practice (7) - Component Communication (Solution) 
10:17
Time to Practice (8) - Slots and Dynamic Components (Problem) 
01:27
Time to Practice (8) - Slots and Dynamic Components (Solution) 
03:00
Time to Practice (9) - Forms (Problem) 
01:29
Time to Practice (9) - Forms (Solution) 
15:17
Time to Practice (10) - Directives (Problem) 
00:54
Time to Practice (10) - Directives (Solution) 
05:54
Time to Practice (11) - Filters and Mixins (Problem) 
01:08
Time to Practice (11) - Filters and Mixins (Solution)
