                    Vue JS 2 - The Complete Guide
                    
                    
                    
                    Section 1 - Getting Started
1 - Course Introduction 
A quick introduction to the course
VueJS is a frontend Javascript Framework
It allows you to create everything from small widgets which can be dropped into existing applications through to
enterprise Single Page Apps
VueJS is very lean and small in size
It also has great runtime performance, it is very very fast
It despite its size is also very feature rich and is very extendible

2 - Let's Create our First VueJS Application 
Getting started on the official page after clicking the get started button
  - http://vuejs.org/v2/guide/installation.html
You can simply download or use a CDN and import using a script tag
Example Syntax
  html file
    <script src="vue cdn url\ vue local download path"></script>
    <div id="app">
      <p>
        {{ title }}
      </p>
    </div>
  
  js file
  // Creating new Vue instances are the core of all Vue applications
  new Vue({
    // el is a reseved property of Vue
    el: '#app',
    data: {
      title: 'Hello World'
    }
  })

3 - Extending the VueJS Application 

4 - Course Structure 

5 - Take Advantage of all Course Resources! 

6 - Setup VueJS Locally 

7 - Module Resources & Useful Links
Links to recommended Editors and the official documentation
  - http://vuejs.org/v2/guide/installation.html


                    Section 2 - Using VueJS to Interact with the DOM
1 - Module Introduction 

2 - Understanding VueJS Templates 

3 - How the VueJS Template Syntax and Instance Work Together 

4 - Accessing Data in the Vue Instance 

5 - Binding to Attributes 

6 - Understanding and Using Directives 

7 - Disable Re-Rendering with v-once 

8 - How to Output Raw HTML 

9 - Listening to Events 

10 - Getting Event Data from the Event Object 

11 - Passing your own Arguments with Events 

12 - Modifying an Event - with Event Modifiers 

13 - Listening to Keyboard Events 

14 - Writing JavaScript Code in the Templates 

15 - Using Two-Way-Binding 

16 - Reacting to Changes with Computed Properties 

17 - An Alternative to Computed Properties: Watching for Changes 

18 - Saving Time with Shorthands 

19 - Dynamic Styling with CSS Classes - Basics 

20 - Dynamic Styling with CSS Classes - Using Objects 

21 - Dynamic Styling with CSS Classes - Using Names 

22 - Setting Styles Dynamically (without CSS Classes) 

23 - Styling Elements with the Array Syntax 

24 - Module Wrap Up 

25 - Module Resources & Useful Links 



                    Section 3 – Using Conditionals and Rendering Lists
1 - Module Introduction 

2 - Conditional Rendering with v-if 

3 - v-else-if in Vue.js 2.1

4 - Using an Alternative v-if Syntax 

5 - Don't Detach it with v-show 

6 - Rendering Lists with v-for 

7 - Getting the Current Index 

8 - Using an Alternative v-for Syntax 

9 - Looping through Objects 

10 - Looping through a List of Numbers 

11 - Keeping Track of Elements when using v-for

12 - Module Wrap Up 

13 - Module Resources & Useful Links 



                    Section 4 – First Course Project - The Monster Slayer
1 - Introduction & Challenge 

2 - Setting up the Course Project 

3 - Creating the Vue Instance and Styling the Healthbars 

4 - Showing the Player Controls Conditionally 

5 - Implementing a "Start Game" Method 

6 - Implementing a "Attack" Method 

7 - Write better Code - Time for Refactoring! 

8 - Implementing a "Special Attack" 

9 - Implementing a "Heal" Method 

10 - Finishing the Action Buttons 

11 - Creating an Action Log 

12 - Printing the Log (v-for) 

13 - Finishing the Log 

14 - Styling the Log Conditionally 

15 - Wrap Up 

16 - Full Application Code



                    Section 5 – Understanding the VueJS Instance
1 - Module Introduction 

2 - Some Basics about the VueJS Instance 

3 - Using Multiple Vue Instances 

4 - Accessing the Vue Instance from Outside 

5 - How VueJS manages your Data and Methods

6 - A Closer Look at $el and $data 

7 - Placing $refs and Using them on your Templates 

8 - Where to learn more about the Vue API 

9 - Mounting a Template 

10 - Using Components 

11 - Limitations of some Templates 

12 - How VueJS Updates the DOM 

13 - The VueJS Instance Lifecycle 

14 - The VueJS Instance Lifecycle in Practice 

15 - Module Wrap Up 

16 - Module Resources & Useful Links



                    Section 6 – Moving to a "Real" Development Workflow with Webpack and Vue CLI
1 - Module Introduction 

2 - Why do we need a Development Server? 

3 - What does "Development Workflow" mean?

4 - Using the Vue CLI to create Projects 

5 - Installing the Vue CLI and Creating a new Project 

6 - An Overview over the Webpack Template Folder Structure 

7 - Understanding ".vue" Files 

8 - Understanding the Object in the Vue File 

9 - How to Build your App for Production 

10 - Module Wrap Up 

11 - More about ".vue" Files and the CLI 

12 - Debugging VueJS Projects 



                    Section 7 – An Introduction to Components
1 - Module Introduction 

2 - An Introduction to Components 

3 - Storing Data in Components with the Data Method 

4 - Registering Components Locally and Globally

5 - The "Root Component" in the App.vue File 

6 - Creating a Component 

7 - Using Components 

8 - Moving to a Better Folder Structure 

9 - Alternative Folder Structures

10 - How to Name your Component Tags (Selectors) 

11 - Scoping Component Styles 

12 - Module Wrap Up 

13 - Module Resources & Useful Links



                    Section 8 – Communicating between Components
1 - Module Introduction 

2 - Communication Problems 

3 - Using Props for Parent => Child Communication 

4 - Naming "props" 

5 - Using "props" in the Child Component 

6 - Validating "props" 

7 - Using Custom Events for Child => Parent Communication 

8 - Understanding Unidirectional Data Flow 

9 - Communicating with Callback Functions 

10 - Communication between Sibling Components 

11 - Using an Event Bus for Communication 

12 - Centralizing Code in an Event Bus 

13 - Wrap Up 

14 - Module Resources & Useful Links



                    Section 9 – Advanced Component Usage
1 - Module Introduction 

2 - Setting up the Module Project 

3 - Passing Content - The Suboptimal Solution

4 - Passing Content with Slots 

5 - How Slot Content gets Compiled and Styled

6 - Using Multiple Slots (Named Slots) 

7 - Default Slots and Slot Defaults 

8 - A Summary on Slots 

9 - Switching Multiple Components with Dynamic Components 

10 - Understanding Dynamic Component Behavior 

11 - Keeping Dynamic Components Alive 

12 - Dynamic Component Lifecycle Hooks 

13 - Wrap Up 

14 - Module Resources & Helpful Links



                    Section 10 – Second Course Project - Wonderful Quotes
1 - Module Introduction 

2 - Setting up the Project 

3 - Initializing the Application 

4 - Creating the Application Components 

5 - Passing Data with Props and Slots 

6 - Allowing Users to Create Quotes with a NewQuote Component 

7 - Adding Quotes with Custom Events 

8 - Adding a Info Box 

9 - Allowing for Quote Deletion 

10 - Controlling Quotes with a Progress Bar 

11 - Finishing Touches and State Management 

12 - Module Resources



                    Section 11 - Handling User Input with Forms
1 - Module Introduction 

2 - A Basic <input> Form Binding 

3 - Grouping Data and Pre-Populating Inputs 

4 - Modifying User Input with Input Modifiers 

5 - Binding <textarea> and Saving Line Breaks 

6 - Using Checkboxes and Saving Data in Arrays 

7 - Using Radio Buttons 

8 - Handling Dropdowns with <select> and <option> 

9 - What v-model does and How to Create a Custom Control 

10 - Creating a Custom Control (Input) 

11 - Submitting a Form 

12 - Wrap Up 

13 - Module Resources & Useful Links



                      Section 12 - Using and Creating Directives
1 - Module Introduction 

2 - Understanding Directives 

3 - How Directives Work - Hook Functions 

4 - Creating a Simple Directive 

5 - Passing Values to Custom Directives 

6 - Passing Arguments to Custom Directives 

7 - Modifying a Custom Directive with Modifiers 

8 - Custom Directives - A Summary 

9 - Registering Directives Locally 

10 - Using Multiple Modifiers 

11 - Passing more Complex Values to Directives 

12 - Wrap Up 

13 - Module Resources & Useful Links



                    Section 13 - Improving your App with Filters and Mixins
1 - Module Introduction 

2 - Creating a Local Filter 

3 - Global Filters and How to Chain Multiple Filters 

4 - An (often-times better) Alternative to Filters: Computed Properties 

5 - Understanding Mixins 

6 - Creating and Using Mixins 

7 - How Mixins get Merged 

8 - Creating a Global Mixin (Special Case!) 

9 - Mixins and Scope 

10 - Wrap Up 

11 - Module Resources & Useful Links



                    Section 14 - Adding Animations and Transitions
1 - Module Introduction 

2 - Understanding Transitions 

3 - Preparing Code to use Transitions 

4 - Setting Up a Transition 

5 - Assigning CSS Classes for Transitions 

6 - Creating a "Fade" Transition with the CSS Transition Property 

7 - Creating a "Slide" Transition with the CSS Animation Property 

8- Mixing Transition and Animation Properties 

9 - Animating v-if and v-show 

10 - Setting Up an Initial (on-load) Animation 

11 - Using Different CSS Class Names 

12 - Using Dynamic Names and Attributes 

13 - Transitioning between Multiple Elements (Theory) 

14 - Transitioning between Multiple Elements (Practice) 

15 - Listening to Transition Event Hooks 

16 - Understanding JavaScript Animations 

17 - Excluding CSS from your Animation 

18 - Creating an Animation in JavaScript 

19 - Animating Dynamic Components 

20 - Animating Lists with <transition-group> 

21 - Using <transition-group> - Preparations 

22 - Using <transition-group> to Animate a List 

23 - Understanding the App 

24 - Creating the App 

25 - Adding Animations 

26 - Wrap Up 

27 - Module Resources & Useful Links

28 - The Animated "Monster Slayer" App



                    Section 15 - Connecting to Servers via Http - Using vue-resource
1 - Module Introduction 

2 - Accessing Http via vue-resource - Setup 

3 - Creating an Application and Setting Up a Server (Firebase) 

4 - POSTing Data to a Server (Sending a POST Request) 

5 - GETting and Transforming Data (Sending a GET Request) 

6 - Configuring vue-resource Globally 

7 - Intercepting Requests 

8 - Intercepting Responses 

9 - Where the "resource" in vue-resource Comes From 

10 - Creating Custom Resources 

11 - Resources vs "Normal" Http Requests 

12 - Understanding Template URLs 

13 - Wrap Up 

14 - Module Resources & Useful Links



                    Section 16 - Routing in a VueJS Application
1 - Module Introduction 

2 - Setting up the VueJS Router (vue-router) 

3 - Setting Up and Loading Routes 

4 - Understanding Routing Modes (Hash vs History) 

5 - Navigating with Router Links 

6 - Where am I? - Styling Active Links 

7 - Navigating from Code (Imperative Navigation) 

8 - Setting Up Route Parameters 

9 - Fetching and Using Route Parameters 

10 - Reacting to Changes in Route Parameters 

11 - vue-router 2.2: Extract Route Params via "props"

12 - Setting Up Child Routes (Nested Routes) 

13 - Navigating to Nested Routes 

14 - Making Router Links more Dynamic 

15 - A Better Way of Creating Links - With Named Routes 

16 - Using Query Parameters 

17 - Multiple Router Views (Named Router Views) 

18 - Redirecting 

19 - Setting Up "Catch All" Routes / Wildcards 

20 - Animating Route Transitions 

21 - Passing the Hash Fragment 

22 - Controlling the Scroll Behavior 

23 - Protecting Routes with Guards 

24 - Using the "beforeEnter" Guard 

25 - Using the "beforeLeave" Guard 

26 - Loading Routes Lazily 

27 - Wrap Up 

28 - Module Resources & Useful Links



                    Section 17 - Better State Management with Vuex
1 - Module Introduction 

2 - Why a Different State Management May Be Needed 

3 - Understanding "Centralized State" 

4 - Using the Centralized State 

5 - Why a Centralized State Alone Won't Fix It 

6 - Understanding Getters 

7 - Using Getters 

8 - Mapping Getters to Properties 

9 - Understanding Mutations 

10 - Using Mutations 

11 - Why Mutations have to run Synchronously 

12 - How Actions improve Mutations 

13 - Using Actions 

14 - Mapping Actions to Methods 

15 - A Summary of Vuex 

16 - Two-Way-Binding (v-model) and Vuex 

17 - Improving Folder Structures 

18 - Modularizing the State Management 

19 - Using Separate Files 

20 - Using Namespaces to Avoid Naming Problems 

21 - Auto-namespacing with Vuex 2.1

22 - Wrap Up 

23 - Module Resources & Useful Links



                    Section 18 - Final Project - The Stock Trader
1 - Project Introduction 

2 - Project Setup and Planning 

3 - Creating the First Components 

4 - Setup Project Routes 

5 - Adding a Header and Navigation 

6 - Planning the Next Steps 

7 - Creating Stocks Components 

8- Adding a "Buy" Button 

9 - Setting up the Vuex State Management 

10 - Adding a Portfolio Module to Vuex 

11 - Working on the Portfolio Stocks 

12 - Connecting the Portfolio with Vuex 

13 - Time to fix some Errors 

14 - Displaying the Funds 

15 - Adding some Order Checks 

16 - Making Funds Look Nicer with Filters 

17 - Ending the Day - Randomizing Stocks 

18 - Animating the Route Transitions 

19 - Saving & Fetching Data - Adding a Dropdown 

20 - Setting up vue-resource and Firebase 

21 - Saving Data (PUT Request) 

22 - Fetching Data (GET Request) 

23 - Testing and Bug Fixes 

24 - Project Wrap Up 

25 - Bonus: Debugging Vuex with Vue Developer Tools 

26 - Module Resources & Useful Links



                    Section 19 - Deploying a VueJS Application
1 - Module Introduction 

2 - Preparing for Deployment 

3 - Deploying the App (Example: AWS S3) 



                    Section 20 - Course Roundup
1 - Courses Roundup



                    Section 21 - All Course Exercises ("Time to Practice")
1 - About this Section (Please Read!)

2 - Time to Practice (1) - Outputting Data to Templates (Problem) 

3 - Time to Practice (1) - Outputting Data to Templates (Solution) 

4 - Time to Practice (1) - Outputting Data to Templates (Code)

5 - Time to Practice (2) - Events (Problem) 

6 - Time to Practice (2) - Events (Solution)

7 - Time to Practice (2) - Events (Code)

8 - Time to Practice (3) - Reactive Properties (Problem) 

9 - Time to Practice (3) - Reactive Properties (Solution) 

10 - Time to Practice (3) - Reactive Properties (Code)

11 - Time to Practice (4) - Styling (Problem) 

12 - Time to Practice (4) - Styling (Solution) 

13 - Time to Practice (4) - Styling (Code)

14 - Time to Practice (5) - Conditionals and Lists (Problem) 

15 - Time to Practice (5) - Conditionals and Lists (Solution) 

16 - Time to Practice (6) - Components (Problem) 

17 - Time to Practice (6) - Components (Solution) 

18 - Time to Practice (7) - Component Communication (Problem) 

19 - Time to Practice (7) - Component Communication (Solution) 

20 - Time to Practice (8) - Slots and Dynamic Components (Problem) 

21 - Time to Practice (8) - Slots and Dynamic Components (Solution) 

22 - Time to Practice (9) - Forms (Problem) 

23 - Time to Practice (9) - Forms (Solution) 

24 - Time to Practice (10) - Directives (Problem) 

25 - Time to Practice (10) - Directives (Solution) 

26 - Time to Practice (11) - Filters and Mixins (Problem) 

27 - Time to Practice (11) - Filters and Mixins (Solution)
