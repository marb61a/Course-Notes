                    Modern Asynchronous Javascript
                    Course Notes


                    Section 1 - Callbacks
1 -Callback Nesting Nightmare

What You Will Get out of This Course 2m 10s
What You Need to Know 6m 39s
How to Use This Course 0m 46s
Callbacks 4m 39s
Double-edged Sword: Explicit Async Seams 1m 15s
Con: Seams Rip Across Program 4m 7s
Con: Another Error Mechanism 3m 6s
Con: Hard to Reuse Error-handling Logic 1m 25s
Con: Difficult to Understand 2m 40s
Challenge: Synchronize Multiple Callbacks 4m 49s
Solution 6m 7s
Parallelism: Wouldn't This Be Nice? 2m 41s
One-shot Events 3m 0s
Takeaways 4m 26s

Lab Setup
26m 7s
Cloning the Starting Point from GitHub 1m 46s
Operation Examples 7m 32s
Running the Tests 1m 59s
WebStorm Settings 2m 42s
Auto Running Tests 1m 49s
A Few Pointers About Using Mocha 3m 58s
Callback Examples 3m 47s
Debugging 2m 31s

Building a Promise Framework
50m 54s
Why Build a Promise Framework? 2m 19s
Challenge - Split Success and Error Callbacks 2m 15s
Solution - Split Success and Error Callbacks 3m 51s
Add an Operations Suite 1m 25s
Using Done to Assert 2m 55s
Challenge - Pass the Callback Later 2m 24s
Solution - Pass the Callback Later 5m 36s
Question - Why Might This Separation Be Helpful? 0m 34s
Timing Safety without Coupling and Nesting 4m 0s
Challenge - Register Multiple Callbacks 5m 7s
Solution 3m 0s
Splitting Registration of Success and Error Callbacks 6m 31s
Convert getWeather to fetchWeather 2m 48s
Extracting the Operation Type 4m 57s
Operation Type Benefits 3m 5s

Chaining Operations (Promises)
50m 46s
Get Me a Cup of Coffee 6m 53s
Challenge - Register a Callback Asynchronously 3m 12s
Solution - Register a Callback Asynchronously 4m 0s
Challenge - Parallelism 1m 38s
Solution - Parallelism 4m 37s
Challenge - Unnesting 1m 13s
Solution - Unnesting 4m 0s
Forwarding Completion 2m 9s
Waiting for the Completion of the Completion 1m 42s
Operation Does the Forwarding 6m 23s
Where Did the Nesting Go? 1m 45s
And Then 2m 35s
Chaining Recap 10m 33s

Cushioning Callbacks
54m 5s
Shifting Perspective 2m 21s
Challenge - Error Recovery 1m 51s
Solution - Error Recovery 5m 42s
Async Error Recovery and Challenge - Forwarding Success 4m 36s
Forwarding Success and Challenge 2m 53s
Solution - Forwarding Errors 5m 58s
Reusing Error Handlers 1m 54s
Synchronous Result Transformation 5m 53s
Recover from Thrown Errors Too 4m 13s
Recover from Error Errors 1m 27s
Operations Should Only Complete One Time 2m 52s
Block Multiple Failures 0m 47s
Surrepticious Synchronicity 7m 6s
Ensuring Asynchronicity 2m 51s
Summary of Protections 3m 33s

ES6 Promises and Beyond
1h 11m
Promises are Not New 4m 44s
Terminology 2m 19s
Why Is it Called Resolve? 6m 34s
Reworking Resolve 5m 18s
Challenge - Fixing Resolve 4m 41s
Defining Resolved 4m 57s
Executor - the Revealing Module Pattern 7m 49s
Deferred Versus Thenable 1m 31s
Executor with Callbacks 2m 34s
Static Resolve and Reject Functions 1m 50s
Testing with Promises and ES6 Promise Backward Compatibility 4m 15s
Why Third Party Promise Libraries Are Still Useful 2m 34s
Finally 1m 15s
Promisifying Existing Librarires You Love 3m 55s
Promise Collection Ops 1m 50s
Unhandled Rejection 6m 42s
Quizzary 8m 48s

Building a Generator-based Control Flow Function
1h 7m
Promises Aren't Perfect 3m 45s
Iterators 7m 38s
Generators 3m 4s
Generators Are Suspendable and Resumable Functions 5m 35s
When Resuming a Generator We Can Pass Errors 2m 20s
Calendars 3m 41s
Debugging Generators 5m 16s
I Would Like to Yield Promises 2m 20s
Yielding a Promise to My Assistant 4m 10s
Assisting with Infinite Promises 7m 9s
Four Async Ops in Four Lines of Code 2m 5s
Safety with Promise.resolve 1m 46s
Throwing Errors Back into the Generator 5m 40s
Catching Exceptions Throw from Generators 2m 56s
Catching Unhandled Errors in Our Assistant 3m 39s
Knowing When the Assistant Is Done 3m 30s
Wow 2m 22s

ES2018 Async/Await and Other Generator Control Flow Libraries
20m 30s
co and Bluebird's Promise.coroutine 2m 39s
Server Side Web Apps 1m 25s
Async and Await 4m 19s
Challenge - Parallel Requests with Async Await 0m 48s
Parallel Solutions and Catching Async Function Errors 3m 51s
Awaiting Promise.all 1m 51s
Challenge - Promises A+ and ES6 Spec Tests 1m 49s
The End - Value Proposition Revisited 3m 44s
