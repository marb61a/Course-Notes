                    Step-by-Step Async JavaScript with RxJS
                    Course Notes
                    
                    
1 - Starting a Stream with SwitchMap
Example Syntax
  // Index.html
    <button id="start">
      Start
    </button>
  
  // app.ts
    import {Observable} from 'rxjs/Rx';
    const startButton = document.querySelector('#start');

    // Will generate mouse events
    Observable.fromeEvent(startButton, 'click')
      .subscribe((event) => console.log(event));
    
    // Setting up a timer
    Observable.interval(1000)
      .subscribe((x) => console.log(x));

2 - Stopping a Stream with TakeUntil


3 - Updating Data with Scan


4 - Displaying Initial Data with StartWith


5 - Changing Behavior with MapTo


6 - Handling Multiple Streams with Merge


7 - Refactoring Composable Streams in RxJS


8 - Getting Input Text with Map


9 - Combining Streams with CombineLatest


10 - Adding Conditional Logic with Filter


11 - Completing a Stream with TakeWhile


12 - Handling a Complete Stream with Reduce


13 - Logging a Stream with Do


14 - Timer and Input Recap


15 - Refactoring CombineLatest to WithLatestFrom


16 - Resubscribing to a Stream with Repeat


17 - Basic DOM Rendering with Subscribe


18 - Sharing Streams with Share

