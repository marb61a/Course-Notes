                    Advanced Asynchronous JavaScript
                    Course Notes


                    Section 1 - Introducing Advanced Asynchronous JavaScript
1 - Introducing Advanced Asynchronous JavaScript
Introduction to the course 
  - Also a quick run through of the syllabus
This is the advanced course, it is recommended that the previous course has been completed
Notes from the previous course are available here
  - https://github.com/marb61a/Course-Notes/blob/master/Javascript/Async/Asynchronous Programming in JS
Some of the course will be more difficult than usual workday problems
Rx will be implemented from the ground up
Observable was a niche topic but has become more mainstream since Angular 2 was released



                    Section 2 - Minimal Observable Implemetation
1 - Observable Interface Changes
The course uses ES6 syntax
Example Syntax
  class Observable{
    subscribe(observer){
    
    }
  }

2 - Multiple Subscribes to One Observable

2 - Q&A: Hot Observables

3 - Data Stream into Hot Observable

4 - Events into the Observer

5 - Challenge 1: Map() for Observables

6 - Challenge 1: Solution

7 - Passing Subscriptions

8 - Filter() for Observables



                    Section 3 - "Animations Allowed" Problem
1 - Introducing the "Animations Allowed" Problem

2 - Taking Stock of Resources

3 - observables.shift() and Recursion

4 - Helper Functions

5 - Q&A: Multi-dimensional Observables

6 - Challenge 2: AnimationsAllowed

7 - Challenge 2: Solution

8 - Challenge 2: Solution II

9 - Error Handling

10 - Cancellation and Promises

11 - Catching Specific Errors



                    Section 4 - Reddit Image Viewer App
1- Challenge 3: Reddit Image Viewer App
The repository being used in the example is located at
  - https://github.com/jhusain/reddit-image-viewer
  
2 - Challenge 3: Solution

3 - Image Viewer Streams

4 - Getting Images

5 - Picking an Image

6 - Debugging Observables

7 - Challenge 4: Preloading Images

8 - Challenge 4: Solution

9 - Indices and Switching Subs



                    Section 5 - Q&A
1 - Q&A: Preloading with Callback

2 - Q&A: Unsubscribe Methods, onError

3 - Q&A: Subjects and Replays

4 - Q&A: Async Iterators

5 - Redux

6 - Q&A: Time Travel in Redux and Scheduler Class

7 - Q&A: JavaScript Standardization

8 - Q&A: Testing Observables and Wrapping Up
