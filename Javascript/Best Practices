										Javascript Best Practices - Course Notes
										
										
										Section 1 - Introduction
1 - Welcome To The Course 
A quick introduction to JS and what the course will cover
An overview of the syllabus of the course
 
2 - About The Author 
An introduction to the course author and a brief biography
 
3 - How To Access Your Working Files 
How to make use of the files that accompany the course
 
 
 
										Section 2 - Syntax
1 - Automatic Semicolon Insertion 
ASI - Automatic Semicolon Insertion
ASI is fairly self-explanatory as it inserts semi-colons in to source code
It inserts these semi-colons when it encounters certain grammatical errors
There is a certain grammar involved in creating variables for example
	- var x = 10; or let x = 10;
Javascript has 3 rules to determine if it will insert a semi-colon
	- If as the code is being read from left to right it encounters a line terminator eg carriage return/ closing brace which
	can both be thought of as terminator tokens. When it encounters one of these it looks at the code after the token and if it 
	does not make grammatical sense it will insert a semi-colon before the terminating token
	- At the end of code, if there are no error such as syntax problems etc and the program does not end with a semi-colon then
	it is going to insert one
	- There are certain types of statements that if they are followed by a carriage return then it does not matter what comes after
	them a semi-colon will be inserted, they are primarily keywords eg continue and also arrow functions where parameter list and 
	the arrow must be on the same line
Best Practice - Author recommends using semi-colons for 3 reasons
	- Style
	- Easier to find bugs from missing semi-colons
	- Less to think about as its easier to use semi-colons

2 - Curly Braces 
 
3 - Equality 
 
4 - Variables
 
5 - Functions 
 
6 - Avoiding Globals 
 
7 - Strict Mode 
 
 
 
										Section 3 - Creating Objects
1 - Object Literals
 
2 - Factory Pattern 
 
3 - Using Prototypes 
 
4 - Constructor Pattern 
 
5 - Classes 
 
6 - Privacy
 
7 - Immutability 
 
8 - How This Works 
 
 
 
										Section 4 - Modules
1 - The Basic Module Pattern 
 
2 - The Revealing Module Pattern
 
3 - ES2015 Modules 
 
 
 
										Section 5 - Javascript And The DOM
1 - Decoupling Javascript And HTML
 
2 - Decoupling Javascript And CSS 
 
3 - Avoiding Excessive DOM Changes 
 
 
 
										Section 6 - NPM And Node
Extensive notes covering Node ar available at
	- https://github.com/marb61a/Course-Notes/blob/master/Javascript/NodeJS/Learn%20and%20Understand%20NodeJS
1 - Intro To NPM 
2 - Acquiring And Using ESLINT
3 - Webpack For Client Code
4 - Webpack For Server Code 
5 - Using Environment Variables 
 
 
 
										Section 7 - Conclusion
1 - Conclusion 
 
