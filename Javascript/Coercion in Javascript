                    Coercion In Javascript Course Notes
                    
                    
                    Section 1 - Primitive Types
1 - Introduction
Brief introduction to the instructor & course
The author feels that coercion could be a very useful feature of Javascript

2 - Additonal Resources
There are some additional resources recommended by the instructor
  - High Performance Javascript By Nicholas Zekas (some parts maybe outdated)
  - Javascript Patterns By Stoyan Stefanov
The Mozilla Developer Network
  - https://developer.mozilla.org/en-US/docs/Web/JavaScript
Idiomatic Javascript
  - https://github.com/rwaldron/idiomatic.js/
ECMA Standard
  - https://www.ecma-international.org/ecma-262/5.1/
There is a lot more to coercion than == (double equals) and it occurs much more often than thought
Null and undefined are coercively equal to each other
ES6 is almost a new language

3 - Primitive Types
Javascript is said to be a no-type language like a lot of other scripting languages
  - This is a false assumption in the main
The type that are listed in the JS specifications are
  - Undefined
  - String
  - Number 
  - Boolean 
  - Object
  - function
  - null
There are different intrinsic behaviours in each of these
There are two many types of conversion implicit and explicit
Not everything in JS are objects
In ES6 null will function differently than undefined especially as function parameters

4 - TypeOf
TypeOf indicates that there are types in the language
  Example Syntax
  typeof foo;                       // undefined
  typeof "foo";                     // string
  typeof 123;                       // number
  typeof true;                      // boolean
  typeof {a: 1};                    // object
  typeof function() { alert(e);};   // function
These are the return value type upto ES5 and there has been one more added in ES6
The undefined and undelared are not the same thing
Javascript has value types rather than variable types unlike some other languages
typeof null returns object

5 - Special Values NaN
NaN - Not A Number
  - Is basically an invalid number
There are 2 inifinities positive and negative
The null type has a null value
The undefined tpye has one and only value
  - Undefined is not a ketword it is an identifier
There is both a positive and negative zero
Example Syntax
  var a = "a"/2;
  
  a;            // Nan
  

6 - Special Values Negative Zero
Negative Zero examples
  var foo = 0 / -3;
  var foo === -0;       // True
  // This may not be accurate
  // For example to stringify negative zero comes out as zero
  var foo === 0;        // True
  0 === -0;             // True
  (0 / -3) === (0 / 3); // True
  foo;                  // True

Negative zero is recognised in Javascript
Negative zero is not the same as zero
Developer consoles do not behave the same as the Javascript specification
Node is also not specification compliant in this regards
Example Syntax
  // To see if something is actually negative zero
  function isNeg0(x){
    // If there is a division into 1 and there is a negative infinity then you will get a negative zero 
    return x === 0 && (1 / X) === -Infinity;
  }
  
  isNeg0(0 / -3);     // True
  isNeg0(0 / 3);      // False
There are some places where negative zero could be useful
Sometimes more information is coded than just the value eg direction movement in video games -3 to the left for example
There is a new ES6 feature Object.is()
  - This is similar to triple equals but the Object.is() may be better for testing NaN and Negative Zero
Object.is() Examples
  Object.is("foo", NaN);      // False
  Object.is(NaN, NaN);        // True
  Object.is(0, -0);           // False
  Object.is(-0, -0);          // True

7 - Special Values Quiz

8 - Natives



                    Section 2 - Coercion
1 - ToString

2 - ToNumber

3 - ToBoolean


                    Section 3 - Implicit vs Explicit Coercion
1 - Explicit Coercion Strings & Numbers

2 - Explicit Coercion Booleans

3 - Implicit Coercion Strings & Numbers 

4 - Implicit Coercion Booleans 

5 - Double Equals Issues

6 - Implicit Coercion The Bad Parts

7 - Implicit Coercion The Safe Parts

8 - Double Vs Triple Equals

9 - Helpful Implicit Coercion

10 - Coercion Resources And Surprises
                    
                    
