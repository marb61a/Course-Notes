                    Vue JS 2: From Beginner to Professional (includes Vuex)
                    Course Notes


                    Section 1 – Getting Started
1 - Hello World 
We will start writing code straight away
  - This will be in the form of the usual Hello World example
The getting started guide to Vue.js is available at 
  - https://vuejs.org/v2/guide/
  - Click the installation link oon the left hand menu
    - There are multipl options, download, cdn etc available
    - At first is is recommended to stick to the easy way
Example Syntax
  // In order to use vue.js in the example use the cdn with script tags
  <script scr="https://unpkg.com/vue@2.4.2"></script>
  
  // At the heart of Vue.js is what is called a view instance, this is responsible for controlling a piece of HTML
  // code, it is also referred to as a template
  // Javascript file
  new Vue({
    // el is short for element
    el
  });

2 - Introduction to Vue.js 
Vue is a reactive framework for building reactive applications
  - It differs from other Javascript frameworks
  - It is a lot less intrusive than other frameworks
  - Besides the core library it consists of a set of optional libraries
  - This means that there can be a gradual adoption of the framework
  - You are able to have parts of your applciation powered by Vue and others not
  - This means that there can be a phased rewrite of legacy applications
  - Although it is quite simple it is very powerful
  - It can be used to build single page applications
  - Optional libraries include, routing, validator, forms UI components and more
  - There are also many 3rd party libraries
  - Vue supports components
  - Vue is very easy to get started with compared to other frameworks

3 - Setting up a local development environment (the easy way) 

4 - Course structure 
The course is structured to include both practical and theory
  - Exercises and projects are included
  - Recommended to go through the exercises and the solutions from the instructor contain tips & tricks



                    Section 2 – Fundamentals of Vue.js
1 - Introduction to this section 
A brief introduction to the material covered in the section

2 - Working with templates 

3 - Methods 

4 - A word about ES6 arrow functions 

5 - Introduction to directives 

6 - Exercises: String interpolation, methods and directives 

7 - Using expressions with directives 

8 - Introduction to events 

9 - Passing arguments to event listeners 

10 - Directive & event modifiers 

11 - Key modifiers 

12 - Modifier keys 

13 - Exercises: Events & modifiers 

14 - Two-way data binding 

15 - Security: Outputting and escaping HTML 

16 - Rendering elements only once 

17 - Conditionally rendering elements 

18 - Showing and hiding elements 

19 - Hiding elements until the Vue instance is ready 

20 - Looping through arrays 

21 - Accessing the loop index 

22 - Looping through object properties 

23 - Looping through number ranges 

24 - Understanding the v-for update strategy 

25 - Array change detection 

26 - Exercises: Two-way data binding, conditionals, and loops 

27 - Optimizing performance with computed properties 

28 - Adding getters & setters to computed properties 

29 - Watchers 

30 - Exercises: Computed properties & watchers

31 - Filters 

32 - Exercises: Filters 

33 - Styling with inline CSS styles 

34 - Styling with CSS classes 

35 - Exercises: Styling with inline styles and classes 

36 - Shorthands for events and bindings 



                    Section 3 – Example application #1: E-commerce
1 - Introduction to the application 

2 - Full source code available within GitHub repository 

3 - Displaying products 

4 - Adding products to the cart 

5 - Displaying the cart info in the menu 

6 - Switching between views 

7 - Displaying the cart 

8 - Handling adding products already in cart 

9 - Increasing and decreasing product quantities

10 - Checking out 

11 - Wrap up 



                    Section 4 – Deep dive: The Vue Instance
1 - Introduction to this section 
A brief introduction to the material covered in the section

2 - Accessing a Vue instance outside of its declaration 

3 - Using multiple Vue instances on the same page 

4 - Proxying 

5 - Understanding reactivity 

6 - Asynchronous update queue 

7 - Understanding the Virtual DOM 

8 - Adding watchers dynamically 

9 - Accessing the DOM with $refs 

10 - Mounting templates dynamically 

11 - Using inline templates 

12 - Destroying a Vue instance 

13 - Vue instance lifecycle & hooks 

14 - Using lifecycle hooks 



                    Section 5 – Setting up a Development Environment with Webpack & Vue CLI
1 - Introduction to this section 

2 - Installing Chrome developer tools extension

3 - Introduction to Vue CLI 

4 - Creating a project with Vue CLI 

5 - Understanding the project structure 

6 - Single file components 

7 - Building for production 


–
Components
01:22:34
Introduction to components 
06:16
Why the data property must be a function 
03:39
Global & Local Components 
03:44
Component naming conventions 
02:07
Creating a component in the project 
04:21
Exercises: Global, local and child components
08:54
Organizing components 
02:04
Global & scoped styles 
04:41
Passing data to components 
04:46
Validating passed data 
03:13
Working with events 
07:08
Communicating through an event bus 
04:43
Exercises: Passing data & events 
09:05
Slots 
03:44
Named slots 
03:16
Dynamic components 
04:49
Keeping dynamic components alive 
01:41
Dynamic components lifecycle hooks 
02:19
Vue developer tool in action 
02:04
–
Example application #2: Mail application
01:21:26
Introduction to the application 
Preview
03:30
Full source code available within GitHub repository 
00:11
Creating components for the views 
03:21
Adding the sidebar markup 
02:26
Switching between views 
13:50
Loading messages from file 
01:50
Adding numbers to navigation menu 
05:41
Displaying the inbox 
11:32
Marking messages as important 
03:02
Displaying sent, important and trashed messages 
03:09
Displaying a message 
06:40
Automatically marking messages as read 
01:39
Navigating back to previous views 
05:21
Deleting messages 
02:37
Marking messages as read or unread 
03:54
Refreshing the inbox 
04:49
Sending messages 
06:53
Wrap up 
01:01
–
Mixins & Filters
17:32
Introduction to mixins 
02:17
Using mixins 
02:51
How mixins are merged in 
07:07
Global mixins 
02:43
Global filters 
02:34
–
Forms
27:17
Full source code available within GitHub repository 
00:12
Text inputs & textareas 
04:58
Checkboxes 
06:23
Radio buttons 
02:01
Selects (dropdowns) 
02:05
Modifiers 
02:59
How the v-model directive works 
01:47
Adding default values 
04:04
Submitting forms 
02:48
–
Animations & Transitions
01:04:21
Introduction to transitions and animations
Preview
03:29
Understanding single element transitions 
01:52
Transitioning with CSS classes 
04:20
Implementing our first transition 
07:58
Specifying transition names 
02:37
Specifying custom transition classes 
Preview
05:48
Implementing a custom CSS animation 
04:27
Mixing transitions and animations 
04:05
Transitioning between elements 
03:01
Transition modes 
02:08
Transitioning elements initially (on page load) 
01:51
Transitioning with JavaScript hooks 
06:12
Ignoring CSS classes 
02:38
Transitioning dynamic components 
02:58
Transitioning multiple elements 
05:21
Transitioning moving elements 
Preview
05:36
-
Routing (SPA)
02:11:54
Full source code available within GitHub repository 
00:12
Introduction to Single Page Applications (SPA) 
Preview
03:31
Installing vue-router 
01:00
Enabling the router 
01:13
Registering routes 
03:44
Rendering routed components 
02:04
Changing the router mode 
Preview
04:53
Catch-all route 
02:06
Moving routes to file 
02:17
Adding navigation links 
Preview
03:52
Styling the active link 
Preview
06:23
Dynamic route matching 
03:52
Linking to dynamic routes 
03:16
Named routes 
03:03
Retrieving route parameters 
02:44
Using route props 
03:07
Reacting to parameter changes 
03:51
Navigating programmatically 
05:32
Navigating in the browser’s history stack 
03:14
Redirecting 
03:59
Aliases 
02:10
Nested routes 
13:09
Query parameters 
08:22
Hash fragment 
03:06
Controlling the scroll behavior 
06:05
Named views 
06:41
Route transitions 
03:39
Route guards 
07:43
Component guards 
08:49
Global guards & meta fields 
06:27
Reacting to navigations 
01:50
-
Connecting to Servers through HTTP
45:58
Full source code available within GitHub repository 
00:12
Introduction to using HTTP in Vue 
01:55
Setting up vue-resource 
03:10
Fetching data with GET requests 
07:03
URI templates 
06:23
POST requests 
02:46
Using resources 
06:29
Custom resource actions 
04:15
Global configuration 
05:53
Configuration within components 
01:59
Interceptors 
05:02
Wrap up 
00:51
-
Vuex
02:13:10
Introduction to Vuex 
01:56
Why Vuex is needed 
04:22
Installing Vuex 
01:43
Setting up a simple store 
01:59
Accessing a store’s state 
02:23
Changing state 
09:04
Introduction to getters 
02:26
Implementing a getter 
04:08
Accessing other getters 
02:42
Passing arguments to getters 
03:03
Mapping getters to computed properties 
05:48
Introduction to mutations 
02:16
Implementing a mutation 
03:32
Committing mutations with payloads 
08:04
Mapping mutations to methods 
02:20
Using constants for mutation types 
05:47
Mutations must be synchronous 
02:16
Introduction to actions 
02:17
Implementing an action 
05:12
Destructuring the context argument 
01:28
Accessing getters within actions 
09:55
Using promises with actions 
03:37
Mapping actions to methods 
04:10
Two-way data binding 
04:38
Introduction to modules 
03:15
Implementing modules 
05:52
Accessing root state from getters 
03:19
Accessing root state from actions 
02:43
Adding mutations to modules 
03:12
Introduction to namespaces 
01:56
Adding namespaces 
01:08
Accessing namespaced types with helpers 
03:53
Accessing root getters from namespaced modules 
04:45
Dispatching root actions and committing root mutations 
03:24
Integration with developer tools 
03:26
Should you use Vuex? 
01:11
-
Conclusion
01:14
Wrap up 
01:14
