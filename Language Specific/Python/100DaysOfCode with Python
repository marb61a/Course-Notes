                    100DaysOfCode with Python
                    Course Notes


                    Section 1 - Welcome to the course
Introduction to the course and the authors
  - There are 3 instructors involved in this course
  - There are different favoured setups from each instructor
  - The editors and tech they use includes
    - Python shell
    - Jupyter/Anaconda
    - PyCharm

In the official 100Days chellenge there are 2 main rules
  - Code at least 1 hour a day for the next 100 days
  - Tweet progress with the 100DaysOfCode hash tag

There are a few reasons to use Python for the challenge rather than some other language
  - The major reason is that Python is growing at a huge rate
  - Usage of other languages such as PHP are trending downward which may not be good for the future

The workflow students should follow is
  - Day N -- Watch videos
  - Day N +1 -- Write code (use Github)
  - Day N +2 -- Finalize code
  - Students not fully up to speed with Python should consider taking a primer


                    Section 2 - Playing with Datetimes


                    Section 3 - Collections module


                    Section 4 - Python Data Structures


                    Section 5 - Testing your code with pytest


                    Section 6 - Text-based games (and classes)


                    Section 7 - List comprehensions and generators


                    Section 8 - Iteration with itertools


                    Section 9 - Decorators


                    Section 10 - Error handling


                    Section 11 - Regular Expressions


                    Section 12 - Logging


                    Section 13  - Refactoring / Pythonic code


                    Section 14 - Using CSV data


                    Section 15 - JSON in Python


                    Section 16 - Consuming HTTP services


                    Section 17 - Web Scraping with BeautifulSoup4


                    Section 18 - Measuring performance


                    Section 19 - Parsing RSS feeds with Feedparser


                    Section 20 - Structured API clients with uplink


                    Section 21 - Twitter data analysis with Python


                    Section 22 - Using the Github API with Python


                    Section 23 - Sending emails with smtplib


                    Section 24 - Copy and Paste with Pyperclip



                    Section 25  - Excel automation with openpyxl



                    Section 26 - Automate tasks with Selenium



                    Section 27 - Getting Started with Python Flask



                    Section 28 - Basic Database Access with SQLite3



                    Section 29 - Data visualization with Plotly



                    Section 30 - Fullstack web apps made easy



                    Section 31 - Home Inventory App



                    Section 32 - Database access with SQLAlchemy



                    Section 33 - Rich GUI apps in Python



                    Section 34 - Building JSON APIs

