Write Pythonic Code Like a Seasoned Developer
Course Notes


                    Section 1 -  Welcome to the course
1 - Welcome and thanks for coming

2 - Topics covered

3 - Get the source code

4 - Do you need to learn Python too?

5 - Python 3 or Python 2?

6 - Recommended editor

7 - Video player: A quick feature tour



                    Section 2 -Style guidance from PEP 8
1 - Who decides what is Pythonic?

2 - Import statements

3 - Code layout and structure

4 - Documentation strings

5 - Naming conventions



                    Section 3  Foundational Concepts
1 - Truthiness and boolean statements

2 - Testing for None

3 - Multiple tests against a single variable

4 - Choosing an item at random

5 - String formatting

6 - Care enough to send an exit code

7 - Flat is better than nested



                    Section 4 - Dictionaries
1 - Why dictionaries

2 - Stop using lists for everything

3 - Merging dictionaries

4 - Hacking Python's memory

5 - Safer dictionary item access

6 - Dictionaries as switch statements

7 - To and from JSON



                    Section 5 - Generators and Collections
1 - Custom iteration and your types

2 - Testing for containment

3 - Slicing collections all the way to the database

4 - On-demand computation with yield and generators

5 - Recursive generators with yield from

6 - Inline generators via expressions

7 - Counting generators



                    Section 6 - Methods and Functions
1 - Introduction to Pythonic functions

2 - Leverage inline methods with lambda expressions

3 - I'm going to ignore your return value

4 - There is no method overloading in Python

5 - Default values for overloads

6 - Variable argument counts for overloads

7 - Unpacking dictionaries as named arguments

8 - Beware: The danger of mutable default arguments



                    Section 7 - Modules and Packages
1 - Introduction to packaging and module idioms

2 - Pythonic import statements

3 - What is __main__ and when do you use it?

4 - Isolation with virtual environments

5 - State your requirements



                    Section 8 - Classes and Objects
1 - Defining fields on classes

2 - Encapsulation and data hiding

3 - Do not write get_thing() set_thing()

4 - Pythonic Loops

5 - There is no numerical for loop

6 - Wait, is there a numerical for loop (v1)?

7 - Wait, is there a numerical for loop (v2)?

8 - Loops have an else block, don't use it



                    Section 9 - Tuples
1 - Tuple assignment and unpacking

2 - Swapping values

3 - Multiple return values from a function

4 - Prefer named tuples



                    Section 10 - Python for Humans
1 - Human Python as a stand in for packages in general

2 - Requests: HTTP for Humans

3 - Records: SQL for Humans



                    Section 11 - Course Conclusion
1 - You've done it!

2 - Lightning review

3 - Source code

4 - Thanks and bye
