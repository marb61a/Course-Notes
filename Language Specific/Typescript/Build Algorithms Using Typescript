                    Build Algorithms Using Typescript
                    Course Notes


1 -  Understand the FizzBuzz coding problem and its solution
The FizzBuzz problem is a favourite of interview challenges
  - Write a program that prints integers from 1 - 100 inclusive
  - For multiples of 3 print Fizz instead of the number
  - For multiples of 3 print Buzz instead of the number
  - For multiples of 3 & 5 print FizzBuzz instead of the number
Example Syntax
  // Solution 
  for(let index = 0; index < 101; index ++){
    // Using if-else solutions the FizzBuzz part must come first
    // This is because if it is last any matches will already have been removed
    // This is intentionally see out to catch out thought processes
    
    // There is sometimes a requirement to use the multiplications only once
    // This can be resolved by assigning them to variables
    const isFizz = index % 3 === 0;
    const isBuzz = index % 5 === 0;
    let result;
    
    // There maybe a request for no mutation of the result where each for loop would
    // use result variable for the result of the operations. There is a more functional 
    // approach that can be used. Most solutions use if-else chains which can be converted to ternary chains
    const result =
      isFizz && isBuzz
        ? 'FizzBuzz'
        : isFizz
          ? 'Fizz'
          :isBuzz
            'Buzz'
            : index
    
    console.log(result);
  }
  
2 - Sort arrays in TypeScript

3 - Case insensitive sorting for string arrays

4 - Determine if two strings are an anagram

5 - Determine if a string is a palindrome

6 - Bubble sort using TypeScript

7 - Quicksort algorithm using TypeScript

8 - Insertion sort algorithm using TypeScript

9 - Merge sort algorithm using TypeScript

10 - Find the repeated item in an array using TypeScript

11 - Binary Search Algorithm using TypeScript

12 - Create random integers in a given range

13 - Stack implementation using TypeScript

14 - Queue implementation using TypeScript

15 - Implement a singly linked list in TypeScript

16 - Implement a doubly linked list in TypeScript

17 - Parse a string to an integer

18 - Shuffle an array

19 - Implement the heap data structure using JavaScript

20 - Find Max Items and Max Height of a Completely Balanced Binary Tree

21 - Implement the Heapsort algorithm using TypeScript  JavaScript

22 - Minimum  Maximum Maintenance algorithm implementation using JavaScript  TypeScript

23 - Median Maintenance algorithm implementation using TypeScript  JavaScript

