                    RxJS Operators
                    Course Notes


1. Introduction - What You Will Learn - About the Course Files (Watch this First!)
A quick intro to the instructor
The course is meant as a companion to an Observable course by the same author
All of the RxJS operators will be covered
  - The course has enough material to become an RxJS expert
  - The course will improve JS coding levels
    - There are some useful NodeJS techniques used which will be good to pick up
  - The course is heavily practical orientated
    - Students should code along where possible
  - The use cases are mostly non trivial examples
  - Students will learn how to implement common data structures eg Redux
  - If you get stuck use the GitHub repo
    - https://github.com/danielstern/rxjs-operators
  - Certain version numbers of Node are important so again any problems use the repo  

2 - Setting Up The Project!

3 - Range

4 - Of

5 - From

6 - Interval - Timer

7 -  Empty

8 - Map - MapTo

9 - Filter

10 - Do

11 - Pluck

12 - First

13 - StartWith

14 - Create

15 - Every

16 - DistinctUntilChanged

17 - DefaultIfEmpty

18 - Delay - DelayWhen

Урок 19. Take - TakeWhile - TakeUntil
Урок 20. Throw
Урок 21. Interlude - Creating an Observable Wrapper for Standard Keyboard Input
Урок 22. Skip - SkipWhile - SkipUntil
Урок 23. Last
Урок 24. Concat
Урок 25. ConcatAll
Урок 26. ConcatMap - ConcatMapTo
Урок 27. Single
Урок 28. IgnoreElements
Урок 29. Sample
Урок 30. Reduce - Scan
Урок 31. GroupBy
Урок 32. Timeout
Урок 33. Adding Webpack
Урок 34. FromEvent (In the Browser!)
Урок 35. Merge - MergeAll - MergeMap
Урок 36. Buffer - BufferCount - BufferTime - BufferToggle - BufferWhen
Урок 37. Partition
Урок 38. Throttle - ThrottleTime
Урок 39. Zip
Урок 40. CombineLatest
Урок 41. forkJoin
Урок 42. Publish - Share - Multicast
Урок 43. Race
Урок 44. Retry - RetryWhen

45 - WithLatestFrom

46 - Window - WindowCount - WindowTime - WindowWhen - WindowToggle

47 - Let

48 - Debounce - DebounceTime

49 - Implementing Redux using RxJS

50 - Key Takeaways
