                    Code Transformation and Linting with ASTs
                    Course Notes


                    Section 1 - Code Transformation and Linting with Abstract Syntax Trees
1 - Introduction
Introduction to the course & the author
A quick overview of the syllabus for the course
The course covers
  - An introduction to Abstract Syntax Trees (AST's)
  - An introduction to traversing and insecting AST's with ESLint & Babel
There is no shortcuts to learning how to work with AST's
There is a GitHub repo which needs to be cloned and installed
  - This is done using the Yarn package manager


                    Section 2 - Abstract Syntax Trees
1 - Examples of Abstract Syntax Trees Syntax
Why should you care about AST's
  - 

2 - Introducing Abstract Syntax Trees

3 - Exploring ASTs



                    Section 3 - ESLint Plugin and AST
1 - Challenge 1: Making a Plugin

2 - Challenge 1: Solution

3 - Challenge 2: Adding New Methods

4 - Challenge 2: Solution

5 - Challenge 3: Schema Property
  - http://json-schema.org/example1.html

6 - Challenge 3: Solution

7 - Challenge 4: Edge Cases

8 - Challenge 4: Solution

9 - Challenge 5: Applying Fixes

10 - Challenge 5: Solution



                    Section 4 - Babel Plugin and AST
1 - Introducing Babel and AST

2 - Challenge 6: Captains Log

3 - Challenge 6: Solution

4 - Challenge 7: Prefixing

5 - Challenge 7: Solution

6 - Challenge 8: Arrow Function

7 - Challenge 8: Solution

8 - Challenge 9: Divide Function

9 - Challenge 9: Solution



                    Section 5 - Codemods and AST
1 - Introducing Codemods and AST

2 - Challenge 10: Upgrade Patterns

3 - Challenge 10: Solution

4 - Challenge 11: Swap Out Utilities

5 - Challenge 11: Solution



                    Section 6 - Wrapping Up Code Transformation and Linting with Abstract Syntax Trees
1 - Wrapping Up

