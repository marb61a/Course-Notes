                    Progressive Web Application Development
                    Course Notes


                    Section 1 - INTRODUCTION TO PWA
1 - The Course Overview
Quick intro to the course and the instructor
The course app is a simple notes app which will use all the features of a PWA

2 - What Really is a PWA?
Progressive Web Application (PWA) means
  - Progressively enhancing web apps to get them to behave like native apps

3 - PWA Core Concepts

4 - What is PRPL Pattern?
A PWA should have 3 main characteristics
  - Fast
  - Reliable
  - Engaging
PRPL was introduced by the Polymer team 
  - It is a pattern for structuring and serving PWA apps
  - It has a focus on the performance of app delivery and launch
  - The acronym stands for
    - Push critical resources for the initial URL route
    - Render the initial route
    - Pre-cache remaining routes
    - Lazy-load and create remaining routes on demand
  - Beyond the fundamental goals of PWA's PRPL optimises for
    - Minimum time to interactive
      - This is especially for first use and also real world devices
    - Maximum caching efficiency
      - This should continue over time as updates are released
    - Simplicity of development and deployment
  
5 - Demo of Final Course Project

6 - Responsive UI

7 - Tools Overview and Setup



                    Section 2 - UNDERSTANDING WEB APP MANIFEST
1 - Understanding App Manifest Properties

2 - Add Properties to manifest.json

3 - Prerequisites for Installing Web App

4 - Run Android Emulator and Leverage Chrome Dev Tools for Debugging

5 - Add Properties for Safari

6 - Add Properties for Internet Explorer



                    Section 3 - SERVICE WORKER
1 - Promise API

2 - Fetch API

3 - What Is a Service Worker and How it Works?

4 - Events in Service Worker

5 - Service Worker Lifecycle

6 - Scope Working for a Service Worker

7 - Register, Update, Activate SW

8 - Debug Our Service Worker

9 - Install App Banner and Control Over it

10 - Debug and Test on Android Emulated Device

11 - Practice with Our Final App Project



                    Section 4 - CACHE AND OFFLINE SUPPORT
1 - Storage Options

2 - Cache API

3 - Pre-Caching/Static Caching

4 - ES6 Overview

5 - Add, Update Cache

6 - Respond with Cache

7 - Dynamic Caching Upon Fetch

8 - Offline Respond Placeholders

9 - Remove/Cleanup Caches

10 - Caching Strategies

11 - Practice with Our Final App Project



                    Section 5 - DYNAMIC CONTENT CACHE
1 - IndexedDB / Write Data

2 - IndexedDB / Retrieve and Delete

3 - Tools to Help Create Cache and Service Worker

4 - Practice with Our Final App Project



DEPLOYMENT TO FIREBASE
Setup Firebase CLI
Make Our App Ready to Deploy
Deploy to Firebase


BACKGROUND SYNC
How Background Sync Helps
Register a Synchronization Task
Storing Our Data in IndexedDB and Firebase
Syncing Data in Server Worker with Server
Periodic Sync


PUSH NOTIFICATION
Push Notification Fundamentals
Request Permission, Subscription, and Display Notification
Store Client Subscription and Secure It in Backend
Send Notification from Server and Listen from Service Worker
Clean Up Subscriptions


PWA WITH SPA
PWA in an Angular App
PWA in a React App
PWA in a Vue App
PWA in an Ember App
  
