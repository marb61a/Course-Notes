                    Predict Movie Box Office Revenue with Linear Regression
                    Notes


Regression is the workhorse of Data Science
The scenario is 
  - Money has been put into the future success of a movie

Data Scientist
  - They will approach this on learning what question needs to be asked
  - Data in the read world is messy
  - Often data exploration include visualisation which is much more helpful
  - The algorithm will be Linear Regression
  - After the regression has been applied, how accurate has it been
 
 Questions
  - How much money will the movie make
    - This is not a good question as it is much too vague
  - A more specific question is how much revenue will the movie make
  - This is a much more specific case and is used in the business world
    - Overall budget will be the best thing to look at
    - There are examples of big budget movies that have been successful
  - A more specific version again is can we use movie budgets to predict our movie revenue
    - Again this is a better question because it is testable
    - This is becuase we can check if there is a link between budgets and revenue
    - This can be measure using data and linear regression
  - In the revenue vs budget example the revenue is called by data scientists the dependent variable
    - In ML it would be called the target
  - The budget would be called the independent variable by data scientists
    - In ML it would be called the feature

Gathering Data
  - There are a couple of items that will need to be looked at when gathering data
  - Data on the feature which is movie budgets in USD
  - Data on the target which is movie revenue in USD
  - There is a website which collects data on movies
    - https://www.the-numbers.com/movie/budgets

Cleaning Data
  - There maybe value which skew predictions
  - In this case unreleased movie which are due for release or planned release and never were
    - This is not always the case aas the site says that there are gaps or disputed figures
  - The best practice is to eliminate non-useful information, in this case movie name and release date
    - Currency symbols may also cause a problem, stick with using decimal data for the example
    - Also avoid whitespace in the headings and use descriptive names

Explore and Visualise Data
  - Visualising and cleaning may need to be done side by side
  - Jupyter Notebook
    - Can be installed locally or in the browser
    - https://jupyter.org/try
  - If using the browser then data files will need to be uploaded
    - If using locally then simply add to the proper folder
  - Modules are libraries that need to be imported to be used in python
  - In this case it will be Pandas being used
    - https://pandas.pydata.org/
    - This module knows how to handle csv files
  - CSV files can be read in using the read_csv() method
    - This can then be assigned to variable which can then be ran to see if the import is working
  - Some basic statistics can be gotten from the csv file after being read in
    - If the file was read in and assigned to an objetc variable called data
    - This would be done by using data.describe()
    - These statistics would be displayed using scientific notation
  - DataFrames can be thought of as similar to very powerful spreadsheets
    - They need to be imported separately using the from syntax
    - !!!!!! Remember to run the cell again to load dataframes into memory and avoid errors
    - Use the tab button for help autocompleting and avoiding typo errors
    - When separating into columns there are conventions
    - Uppercase X for features and lowercase y for targets
  - Visualisations can be done using the matplotlib module
    - https://matplotlib.org/
    - This uses the pyplot part of the module
    - To minimise or tidy up code aliasing is used when importing using the as syntax
  - Scatter Plots can be enhanced using labels and a title
    - To add a title use the .title() method
    - Labels can be added to both the x and y axis using xlabel and ylabel
    - The plot can be enlarged using the .figure() method
    - This will have a figsize parameter
    - Limits can be set on each axis ie ylim and xlim
    - This will take 2 parameters for minimum and maximum values
    - The dots in the plot can be made transparent using an alpha value
    - This can be added in the scatter declaration as a third parameter
 
 Linear Regression
  - This will attempt to show the relationship between the target and the feature as a straight line
    - In this case it will be revenue and budget
  - This will be a straight line, the equation for a line would be something like
    - y = mx + c
    - M is the slope and c is the constant
    - y will tell how much the slope will change when x changes
    - The larger the value of the slope the steeper the line becomes
    - Where there is no relationship then the slope is 0
    - ML differs from pure maths as the true relationship is unknown
    - This changes the equation as in ML the slope and intercept are called parameters
    - These parameters must be estimated for linear regression
    - The equation changes form too as the c for constant is replace by Theta0 
    - The slope coefficient will be Theta1
    - The order also changes as the coefficient will be first followed by the slope
    - hθ(x) = θ0 + θ1x
    - The y is replaced and h theta x is used where h stands for hypothesis
    - This type of notation can be intimidating
  - Which line has the best possible theta 0 and 1
    - A point on the line is called the fitted value or predicted value
    - The gaps between points and the line can be shown with smaller lines to the main line
    - These smaller lines are known as residuals
    - The residuals will give us an idea of how good our main line is
    - The residuals will be the difference between the predicted value and the actual value
    - Residual values that are below the line will hold an negative value
    - This is no use so when using a series of actual values minus residuals the values must be squared to avoid negative numbers
    - The best line will be one which has a slope that minimised the sum of the squared residuals
    - This is also known as the residual sum of squares

Analyse and Implement Results
  - Running and evaluating the results
  - Regressions will be done using Scikit-learn
    - https://scikit-learn.org/stable/
    - In this case only linear model/LinearRegression is needed so can be imported using the from syntax
  - Again this will need to be imported and the import cell ran again
  - We will need to use the LinearRegression method to run the regressions
    - Then on the regression use the fit method which takes in the feature and target variable (X, y in this case)
  - To see the slope coefficient use the following method where the underscore is part of the name
    - regression.coef_
  - To see the intercept use the following method where the underscore is part of the name
    - regression.intercept_
  - To see the linear regression line use the following method where the underscore is part of the name
    - Use matplotlib which has a plot() function
    - This takes 2 parameters, the first is X, the second is the predicted values of X
    - This will be done using the regression.predict() method
    - The line can be made thicker using the linewidth parameter and coloured using the color parameter
  - The regression coefficient returned a positive number 
    - In this example this was 3.111
    - This means that for every dollar spent on cost there was 3.1 dollars made in revenue
  - The intercept value is negative in this example
    - This is -7236192 which says that a movie with 0 budget will lose 7 million dollars
    - This is not that realistic as it is a very simplified version
  - To see what the example movie with the 50 million dollar budget would do
    - 7236192 + 3.1115 X 50,000,000 = 148,338,807 or about 3 times what we spend
  - To see how well the prediction of fit will do use the Goodness of Fit measurement or R2 (Squared)
    - Use the regression.score() method to check which takes X and y
    - This will return about 55% variation in film revenue that is explained by budget
  
