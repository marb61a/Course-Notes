                        Notes File

Text Version of the tutorial is available at the following URL
  - https://pyimagesearch.mykajabi.com/products/pyimagesearch-university-full-access-plan/categories/2148033423/posts/2149441368
  
Optical character recognition, or OCR for short, is used to describe algorithms and techniques (both electronic and mechanical)
  - Which convert images of text to machine-encoded text.

When talking about OCR it is usually software that is being talked about
  - There are however hardware versions available which can be mechanical or physical
  - One example is electronic pencils/pens that automatically scan your handwriting as you write.
    - Once writing is finished connect the pen to a computer 
    - The OCR software then analyzes the movements and images recorded by your smartpen, resulting in machine-readable text

The OCR software systems operate by
  - Accepting an input image (scanned, photographed, or computer-generated) 
  - Automatically detecting the text and “read” it as a human would 
  - Convert the text to a machine-readable format so that it can be searched, indexed, and processed within the scope of a larger computer vision system 

Some software examples of OCR are 
  - Tesseract OCR
  - Cloud API's which a lot of vendors offer
  - Custom trained models

OCR is very challenging because of factors including the following
  - There are a lot of nuances in how people communicate via writing
    - This includes multiple spellings of the same word 
  - There are different styles as well as multiple different types of fonts
  - Documents can contain a lot of noise and dirt and distortion etc.
    - This can included aging, yellowing etc
  - OCR compounds the problems of NLP with the less than 100% accuracy of computer vision
    - 100% accuracy is not going to happen all the time
  - The OCR problem has not been solved
    - Things are getting better though
  - OCR requires a lot of skill to apply to projects

Early OCR
  - This dates back to 1914 and was purely mechanical
  - It was developed by Emmanuel Goldberg

There are multiple applications of OCR
  - Automatic licence plate detection
  - Analysing and defeating CAPTCHA's on websites
  - Understanding text captured in images
  - Extracting text from business cards, passports etc

OSD - Orientation and Script detection
  - OCR is the process of taking an image and returning both machine and human readable text
  - OSD is the process of analysing the image for text meta data or more specifically the orientation and writing style
  - The text orientation is the angle of text in the image
  - To get higher OCR accuracy then apply OSD to get the orientation and then use OCR
  - Script and writing syle refers to the characters that are used for the written and typed communication
  - There are multiple types of characters, in the US, UK etc the Latin characters are mostly used
    - There are others such as Arabic, Russian, Hebrew and Chinese
  - Any rules or assumptions that an OCR system can make regarding the script or writing style will make it more accurate when applied to a document
  - OSD can be used as a precursor to OCR

Post-Processing and Pre-Processing
  - Most OCR systems will be more accurate if computer vision and image processing tecnhiques can be used to clean up images
  - These can include thresholding, transforms and morphological operations to gain better images
  - These should lead to improvements in accuracy
  - OCR engines are not capable of cleaning images which is a mistake that some practitioners make
  - Some (Especially Tesseract) OCR systems can perform automatic page analysis and segmentation.
    - This does not make them intelligent like humans who can perform near-instantaneous text parsing
  - OCR engines are like younger children who can read text but still need guidance in a direction
 
