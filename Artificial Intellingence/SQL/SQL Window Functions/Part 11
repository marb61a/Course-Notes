Exercise
Find the name, genre and size of the smallest game in our studio.
Remember the steps:

    Create the ranking query so that the smallest game gets rank 1.
    Use WITH to select rows with rank 1.

Solution
WITH ranking AS (
  SELECT
    name,
  	genre,
  	size,
    RANK() OVER(ORDER BY size asc) AS rank
  FROM game
)

SELECT
  name,
  genre,
  size
FROM ranking
WHERE rank = 1;


Exercise
Show the name, platform and update date of the second most recently updated game.

Solution
with ranking as (
  select
    name,
  	platform,
  	updated,
    rank() OVER(ORDER BY updated desc) AS rank
  from game
)

select
  name,
  platform,
  updated
from ranking
where rank = 2;



Instruction
That was another correct answer! Okay, let's review what we've learned in this part:

    The most basic usage of ranking functions is: RANK() OVER(ORDER BY column1, column2...).
    The ranking functions we have learned:
        RANK() – returns the rank (a number) of each row with respect to the sorting specified within parentheses.
        DENSE_RANK() – returns a 'dense' rank, i.e. there are no gaps in numbering.
        ROW_NUMBER() – returns a unique rank number, so even rows with the same value get consecutive numbers.
    NTILE(x) – distributes the rows into a specific number of groups, provided as x.
    To get col1 of the row with rank place1 in a ranking sorted by col2, write:

    WITH ranking AS
      (SELECT
        RANK() OVER (ORDER BY col2) AS RANK,
        col1
      FROM table_name)

    SELECT col1
    FROM ranking
    WHERE RANK = place1;

Execise
Press Next Exercise to continue

Solution
No solution needed


Exercise
Select all information from the application table.
Each application has an id and a name, is intended for a specific platform and has a certain type. 
We also have the average_rating from users, the numbers of downloads and the overall income it generated.

Solution
select * from application


Exercise
For each application, show its name, average_rating and its rank, with best rated apps coming first.

Solution
select
    name,
  	average_rating,
    rank() OVER(ORDER BY average_rating desc) AS rank
from application


Exercise
Find the application that ranked 3rd in terms of the greatest number of downloads. Show its name and the number of downloads.

Solution
with ranking as (
  select
    name,
  	downloads,
    rank() over(ORDER BY downloads desc) AS rank
  from application
)

select
  name,
  downloads
from ranking
where rank = 3;
