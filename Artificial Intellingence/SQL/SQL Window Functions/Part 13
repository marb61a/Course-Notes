Exercise
For each order, show its id, the placed date, and the third column which will count the number of orders up to the current order when sorted by the placed date.

Solution
select
	id,
    placed,
    count(id) over(
      order by placed
      rows between unbounded preceding and current row
    )
from single_order


Exercise
Warehouse workers always need to pick the products for orders by hand and one by one. 
For positions with order_id = 5, calculate the remaining sum of all the products to pick. 
For each position from that order, show its id, the id of the product, 
the quantity and the quantity of the remaining items (including the current row) when sorted by the id in the ascending order.

Solution
select
    id,
    product_id,
    quantity,
    sum(quantity) over(
      order by id
      rows between current row and unbounded following 
    )
from order_position
where order_id = 5


Exercise
For each product, show its id, name, introduced date and the count of products introduced up to that point.

Solution
select
    id,
    name, 
    introduced,
    count(introduced) over(
      order by introduced
      rows between unbounded preceding and current row
    )
from product


Exercise
Now, for each single_order, show its placed date, total_price, the average price calculated by taking 2 previous orders,
the current order and 2 following orders (in terms of the placed date) and the ratio of the total_price to the average price calculated as before.

Solution
select
    placed,
    total_price,
    avg(total_price) over(
      order by placed
      rows between 2 preceding and 2 following
    ),
    total_price / avg(total_price)
    over(
      order by placed
      rows between 2 preceding and 2 following
    )
from single_order



Instruction
Fine! If our window frame has CURRENT ROW as one of the boundaries, we can also use some abbreviated syntax to make things easier:

    ROWS UNBOUNDED PRECEDING means BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW
    ROWS n PRECEDING means BETWEEN n PRECEDING AND CURRENT ROW
    ROWS CURRENT ROW means BETWEEN CURRENT ROW AND CURRENT ROW

Note: these rules don't apply for FOLLOWING, only for PRECEDING and CURRENT ROW. As a way of example, the query:

SELECT
  id,
  name,
  introduced,
  COUNT(id) OVER(ORDER BY introduced ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW)
FROM product;

Can be rewritten to:

SELECT
  id,
  name,
  introduced,
  COUNT(id) OVER(ORDER BY introduced ROWS UNBOUNDED PRECEDING)
FROM product;

Exercise
You will now have a chance to practice abbreviations. Pick those stock changes which refer to product_id = 3. 
For each of them, show the id, changed date, quantity, and the running total, indicating the current stock status. 

Solution
select 
    id, 
    changed, 
    quantity,
    sum(quantity)
    over(
      order by quantity
      rows unbounded preceding
    )
from stock_change
where product_id = 3
Sort the rows by the changed date in the ascending order.
