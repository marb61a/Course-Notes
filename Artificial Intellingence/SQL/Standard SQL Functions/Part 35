Exercise
Show the number of students who scored at least 60 in both math and language (as versatile_candidates) 
and the number of students who scored below 40 in both of these tests (as poor_candidates).
Don't include students with NULL preferred_contact.

Solution
select
	count(
      case
        when score_language >= 60 and score_math >= 60 then c.id
      end
    ) as versatile_candidates,
    count(
      case
        when score_language <= 40 and score_math <= 40 then c.id
      end
    ) as poor_candidates
from candidate c
where c.preferred_contact is not null


Exercise
Show each degree course name and a second column called popularity. If at least 5 distinct candidates applied, show 'high', otherwise show 'low'

Solution
select co.name,
	case
      when count(distinct a.candidate_id) >= 5 then 'high'
      else 'low'
    end as popularity
from course co
join application a
on co.id = a.course_id
group by co.name


Exercise
For each degree course, show its name, the place_limit, the number of people who applied for that degree course (as candidates_no) 
and yet another column popularity: if more people applied than place_limit, show 'overcrowded'. Otherwise, show 'within limit'.

Solution
select co.name,
	co.place_limit,
    count(distinct a.candidate_id) as candidates_no,
    case
      when (count(distinct(candidate_id))> place_limit) then 'overcrowded'
      else 'within limit'
    end as popularity
from course co
join application a
on co.id = a.course_id
group by co.name, co.place_limit



Instruction
You've made it to the last part of our course. It's time for our ultimate quiz! Do you remember string functions? Numerical functions? Dates? Aggregates? 
It's time to check up on all of that! We've prepared nine questions for you!
As always, we'll start with the introduction of our tables. 
Today, we'll work with Mensa, the oldest IQ society in the world! Of course, don't take it too seriously â€“ these data are purely fictional.

Exercise
Select all the information from the table branch.
Nothing extraordinary: id, country and city of the branch.

Solution
select * from branch


Exercise
Select all the information from the table person.
Each person has an id, first_name, middle_name, last_name and registration_date.
Then, there is the iq.
Finally, you have the branch_id the person belongs to (only one is possible), precise weight in kilograms and the height in centimeters.

Solution
select * from person


Exercise
Show the first, middle and last name of each person together, as one column, in the following way:

Firstname Middlename LASTNAME

Firstname is the first name and Middlename is the middle name - first letter in uppercase, rest in lowercase. 
LASTNAME is the last name in uppercase. Name the column full_name. 
Show this information only for those people whose last_name is at least 7 characters long. 

Solution
select
	concat(initcap(first_name),' ',
    coalesce(initcap(middle_name), ''), ' ',
    upper(last_name)) as full_name
from person
where length(last_name) > 6


Exercise
Mensa created a dating website for its members. We need to anonymize the user data before they go on their first date.
For each person, show the following sentence:

XYZ lives in A and weighs B kilograms.

XYZ are the initials, A is the city and B is the weight rounded to integer numbers. 
If a given person doesn't have a middle name, replace it with nothing (''). Name the column sentence.

Don't forget about the period at the end of the sentence!
Make sure to handle properly the people who have no middle name. Show an empty string instead of a NULL middle name

Solution
select
    substring(p.first_name,1,1)||
    substring(coalesce(p.middle_name, ''),1,1)||
    substring(p.last_name,1,1)||' lives in '
    ||b.city|| ' and weighs '||round(p.weight)||
    ' kilograms.' as sentence 
from person p
join branch b
on p.branch_id = b.id
