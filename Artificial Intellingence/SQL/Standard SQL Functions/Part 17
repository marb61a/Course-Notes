Instruction
See? The query returned nothing. You must use IS (NOT) NULL to check for NULL and NOT NULL values. If you don't use it, the query will return nothing.
It's easy to remember that x = NULL is wrong, but this phenomenon is much more difficult to notice with non-equality. 
Take a look at the column production_area. If you want to get all the products which have been produced outside EU, you could write:

SELECT *
FROM product
WHERE production_area != 'EU';

... but this query will not return those rows which have NULL in the column production_area.

Is this correct? It depends. If you want to find all the products which have a set value which is other than 'EU', then the condition is OK. 
If you want to find all the rows with anything other than 'EU' (including NULLs), then we need to use the following construction:

SELECT *
FROM product
WHERE production_area != 'EU'
  OR production_area IS NULL;

Exercise
Select the name for all the products with a price different than 299.99. Include NULLs!

Solution
select name 
from product
where price != '299.99'
or price is null


Exercise
Select the name for all products together with their categories and types. Exclude rows with category 'kitchen' and those rows which have no category set.

Solution
select name, category, type
from product
where category != 'kitchen'
and category is not null



Instruction
Excellent! NULL is also tricky when it comes to comparisons. If you write a query like this:

SELECT *
FROM product
WHERE price > 0.99;

the rows with a NULL price will not be displayed at all. 
This is because the database doesn't know whether NULL > 0.99 is true or false, so it just skips such rows and doesn't bother.

Exercise
Mr Amund released a certain series of products on April 30, 2014. 
Now, he would like to get all the names, categories and types of those products which were introduced any time later 
or which will be introduced in the future (i.e., they don't have a launch_date yet). Write the proper query

Solution
select name, category, type
from product
where launch_date > '2014-05-01'
or launch_date is null
