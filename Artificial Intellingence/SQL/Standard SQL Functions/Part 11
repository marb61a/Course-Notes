Instruction
That's right. You can also use BETWEEN with time:

SELECT
  code,
  departure
FROM route
WHERE arrival BETWEEN '12:00:00' AND '15:00:00';

Just like with dates, remember that BETWEEN is inclusive – routes which depart at 12:00 Noon or 3:00 PM sharp will be included in the results.

Exercise
Show the code of all the routes which depart between 11:00 AM and 5:00 PM.

Solution
select code 
from route
where departure 
between '11:00:00' and '17:00:00'



Instruction
Good! And the last thing, you can also sort by time.

SELECT
  code,
  departure
FROM route
ORDER BY arrival DESC;

Just like with dates again.

Exercise
Show the code and arrival time of all the routes with arrival before 4:00 PM and order them by arrival with the earliest time coming first.

Solution
select code, arrival
from route
where arrival < '16:00:00'
order by arrival asc


Exercise
Show the average distance of all routes which depart after 8:00 AM. Name the column average.

Solution
select avg(distance) as average
from route
where departure > '08:00:00'



Instruction
Apart from the date or time itself, our database can also store dates with exact time. We call them timestamps. Let's see what they look like.

Exercise
Select the column launched from the table aircraft and note how timestamps are displayed.

Solution
select launched from aircraft



Instruction
Did you take a look at the format? Let's analyze it:

'2014-06-10 07:55:00+02'

The first part is, of course, the date, and the second part is time. 
The final '+02' refers to the timezone - in this case it means that we are two hours ahead of UTC. The timestamp format depends on database configuration.
You can compare two timestamp columns, just like this:

SELECT id
FROM aircraft
WHERE withdrawn < launched;

The above query could be used to check for typos in our table – this way, 
we can make sure there is no aircraft which was withdrawn from service before it was even launched.

Exercise
Run the template query and find out for yourself whether there are erroneous entries in the table aircraft

Solution
SELECT id
FROM aircraft
WHERE withdrawn < launched;


Instruction
We detected a mistake in the table, thank you for your help.
Timestamps are a very precise way to define a point in time. This is why using the equality sign (=) with them isn't a good idea.
Two timestamps may differ by a single second and the condition on equality will not be satisfied. 
Still, you can use comparisons with >, <, != etc. to compare two columns (just as you did) or a column compared to a constant value. 
Do we have to be very precise when providing the constant value? Not really. Take a look:

SELECT
  id,
  launched
FROM flight
WHERE launched > '2015-01-01';

As you can see, we compared a timestamp with a date. How is this possible? 
Well, our database converts the date we provided to a timestamp by adding as many zeroes as necessary. For instance:

    '2015-01-01' will become '2015-01-01 00:00:00',
    '2014-02-12 12:00' will become '2014-02-12 12:00:00'.

Convenient, isn't it?

Exercise
Identify the id and withdrawn date for all the aircraft withdrawn after October 15, 2015. The column names should be id and withdrawn.

Solution
select id, withdrawn
from aircraft
where withdrawn > '2015-10-15'
