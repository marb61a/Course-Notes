Instruction
Now we'll show you a common mistake: it's most often wrong to use LEFT JOIN with COUNT(*).
Let's analyze the following problem: we want to show each client's name together with the number of projects they have commissioned. 
You may be tempted to write the following:

SELECT
  name,
  COUNT(*)
FROM client
LEFT JOIN project
  ON client.client_id = project.client_id
GROUP BY name;

... but this query can produce incorrect results! If a client has no projects, COUNT(*) will give the result of 1 
(because the row with the client name itself is one row indeed) instead of 0. In such queries, you need to use count with a column name:

SELECT
  name,
  COUNT(project_id)
FROM client
LEFT JOIN project
  ON client.client_id = project.client_id
GROUP BY name;

Now, the query will return 0 if there are no projects commissioned by a given client.

Exercise
Show the first and last name of each translator together with the number of projects they have completed (0 if there are no such projects).
Name the last column projects_no.

Select
select t.first_name, t.last_name,
count(p.project_id) as projects_no
from translator t
left join project p
on p.translator_id = t.translator_id
group by t.first_name,
t.last_name, p.translator_id


Exercise
For each client, show their name, the number of projects they have commissioned and the number of translators that have worked for that client. 
Do not count projects with a deadline within the last 3 months. The column names should be: name, projects_no, and translators_no.

Solution
select c.name,
count(p.project_id) as projects_no,
count(distinct p.translator_id) as translators_no
from client c
left join project p 
on c.client_id = p.client_id
where deadline 
< current_timestamp - interval '3' month
group by 1


Exercise
For each language combination (e.g. EN to ES, ES to EN, DE to PL etc.) show lang_from, lang_to and two more columns:

    the number of projects completed in this combination (as projects_no).
    the number of translators that have completed at least one project in that language combination (as translators_no).

All completed projects are present in the project table.

Solution
select lang_from, lang_to,
count(project_id) as projects_no,
count(distinct translator_id) as translators_no
from project
group by lang_from, lang_to



Instruction
Ok, time to move on. Another function we're going to take a closer look at is AVG, which computes the average value. Let's start with AVG(column):

SELECT AVG(price)
FROM project;

The above query will find the average price for all projects.

Exercise
select avg(words) as average
from project
where lang_to = 'ES'



Instruction
Correct! Of course, we can use AVG with GROUP BY, just as we used COUNT:

SELECT
  client_id,
  AVG(price)
FROM project
GROUP BY client_id;

The above query will find the average price each customer paid for their projects.

Exercise
Show each translator's ID together with the average number of words they had to translate in all their projects (as average).
Exclude project with ID 6 â€“ it was cancelled.

Solution
select translator_id,
avg(words) as average
from project
where project_id != 6
group by translator_id
