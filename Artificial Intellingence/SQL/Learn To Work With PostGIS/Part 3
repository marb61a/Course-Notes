Instruction
Before we call it a day, we'd like to present you with a couple theoretical questions to answer in a short quiz. Let's get started!

    Spatial databases are optimized to store and query geometric data.
    Points, linestrings, and polygons are basic geometric objects that can be found in spatial databases.
    Spatial database also goes under the following names: geodatabase, geospatial database, geographical database.
    PostGIS is the spatial extension for PostgresSQL that enables spatial data management.
    Even though there are a few spatial databases other than PostGIS, all the popular ones follow the standard set out by Open Geospatial Consortium.
    There are two main types of spatial columns: geometry and geography. The first one is quicker, the latter is more accurate.
    The data in geometry columns are stored in the internal PostGIS format. We can convert this data to a few text output formats: 
    Well-Known Text (WKT), Well-Known Binary (WKB), Geographic Mark-up Language (GML), etc.

Exercise
Answer following questions â€“ fill the template with trues and falses.

    PostGIS is a spatial extension for PostgreSQL. True or false?
    PostgreSQL stores points as Well-Known Text. True or false?
    The function ST_AsText is used to convert a numerical column into a column with text. True or false?

Solution
SELECT
  -- first question (type true or false)
  TRUE AS first_question,
  -- second question (type true or false)
  FALSE AS second_question,
  -- third question (type true or false)
  FALSE AS third_question;
  

Instruction
If you have already taken some of our courses, you may have noticed that we usually introduce two or three simple tables in each part of a given course.
In this PostGIS course, things will be a bit different. We'll use the same set of roughly ten tables throughout all parts. 
Most of the tables will have something to do with the beautiful city of San Francisco, California, 
as Mark decided to settle there after his little trip around the world. You'll be tasked with helping him get to know the city through and through!
We'll be analyzing various hotels, bicycle routes, tram stops and other things that you'll typically find in any bigger city. 
The geographic data will all be real information for San Francisco.

    The geographic data in the tables sf_atms, sf_selected_railways, sf_tram_stops, sf_hotels, sf_bicycle_routes, sf_restaurants,
    sf_sights, usa_states, sf_chains were taken from OpenStreetMap.
    The geographic data in the table sf_planning_districts was taken from data.sfgov.org.
    The geographic data in the table sf_household_types were retrieved by the Census Bureau Data API.

You can download the dataset used in this course here.
If you know San Francisco, you'll also see other kinds of things you may not recognize, like hotel names and bicycle route conditions. 
We have to admit, those are totally made up!
Does all of that sound complex to you? Don't worry! We'll introduce the new tables gradually so you can get familiar and comfortable with our data as we progress.

Exercise
Press next exercise to continue

Solution
No solution needed


Instruction
Okay. In the previous part, we mentioned that there are two spatial column types: geometry and geography. 
We also said that geometry is quicker than geography. Let's quickly explain why.
As we all remember from school, the Earth is round. On the other hand, maps are flat. 
It is impossible to transfer a 3D sphere (Earth) onto a 2D surface (map) without certain distortions.
No map projection is therefore ideal. What seems like a straight line on the map is bent in reality, and vice versa.
The greater the area we consider, the greater the error we get. 
If you take a ruler, measure the distance from San Francisco to Tokyo in a straight line and multiply the result by the map scale, 
there will be significant error in your measurement (as compared to the real distance). 
On the other hand, if you repeated the same procedure to calculate a distance within a single city, the error will be negligible.
Calculating exact distances and areas on the Earth is possible but much more complicated.
Those exact calculations, which take into account the fact that the Earth is round, can be performed using the geography type.
We'll take a look at this at the end of the course. Most of the time, however, we'll use the geometry type, which focuses on 2D calculations.
It's less accurate, but much, much quicker and more frequently used.

Exercise
Press next exercise to continue

Solution
No solution needed


Exercise
First, select all the information from the sf_sights table.
As you can tell from the results shown below the code editor, this table contains names and coordinates of selected attractions 
and interesting places that Mark could see in San Francisco. It has three columns:

    id - the unique identifier of each attraction,
    name - the name of a given attraction,
    coordinates - the location of each attraction given as a geometry column.

Right now, the coordinates column doesn't tell you much. However, if you click on the MAP tab, 
you'll see the visualized results of the query on the San Francisco map. These little points, polygons, and lines denote our attractions!
You can always visualize the results of your queries on the MAP tab. 
However, when you install PostgreSQL and PostGIS on your computer, you will need an external tool to visualize your results.
One recommended application is QGIS, which has built-in support for PostGIS connections and allows you to easily visualize your maps in a convenient way.
You can find out more at QGIS.

Solution
SELECT * FROM sf_sights


Instruction
As you've already seen, the coordinates column from the sf_sights table contains a long series of characters that are hardly understandable to humans.
As you may remember from Part 2 this is an internal format understood by PostGIS. 
Luckily, we can make it understandable with the ST_AsText function, which allows us to change the format to Well-Known Text:

SELECT
  name,
  ST_AsText(coordinates)
FROM sf_sights;

The result is quite different than before. Now, in each cell of the coordinates column we have one of three words: point, linestring, or polygon, 
followed by the list of coordinates in parentheses. Each word signifies a different subtype or simple type of the geometry in question. 
In this part of the course we will focus on explaining the purpose and usage of each of these subtypes. 

Exercise
Press next exercise to continue

Solution
No solution needed
