Instruction
Before we can start querying, we first have to get to know our newest set of tables. Let's start with the smallest one, the orchestras table. 
Note that the data in these tables are imaginary and any resemblance to real names of musicians and orchestras is purely coincidental! 

Exercise
Select all data from the orchestras table. As you can see, it consists of the following columns:

    id – the id of the orchestra,
    name – the name of the orchestra,
    rating – the rating of the orchestra over the last ten years,
    city_origin – the city from which the orchestra originates.
    country_origin – the country of origin of the orchestra,
    year – year in which the orchestra was created.

Solution
SELECT * FROM orchestras


Exercise
Select all data from the concerts table. It has the following six columns:

    id – the id of the concert,
    city – the name of the city where the concert took place,
    country – the name of the country where the concert took place,
    year – the year in which the concert was performed,
    rating – the rating (by critics) of the concert,
    orchestra_id – the id of the orchestra that performed at the concert.


Solution
SELECT * FROM concerts



Instruction
Here's the last table we'll be working with – members. This table contains information about a few selected members of orchestras, 
and consists of the following columns:

    id – the id of a given member,
    name – the name of a given member,
    position – the position of a given member in an orchestra,
    wage – the fixed monthly payment a given musician receives,
    experience – the number of years of experience a given musician has,
    orchestra_id – the id of the orchestra in which a given musician works.

Exercise
For each orchestra select its name and the number of members in this orchestra (name the column members_count).

Solution
SELECT 
	o.name,
    COUNT(m.name) as members_count
FROM members m
JOIN orchestras o
ON o.id = m.orchestra_id
GROUP BY o.name


Exercise
Show the names of orchestras that were created after the 'Chamber Orchestra' and have a rating greater than 7.5.

Solution
SELECT
	o.name
FROM orchestras o
WHERE o.year > (
	SELECT o.year
    FROM orchestras o
    WHERE o.name = 'Chamber Orchestra'
)
AND o.rating > 7.5


Exercise
Select the names of all orchestras that have the same city of origin as any city in which any orchestra performed in 2013.

Solution
SELECT
	o.name
FROM orchestras o
WHERE o.city_origin = ANY (
	SELECT c.city 
  	FROM concerts c
  	JOIN orchestras o
  	ON c.orchestra_id = o.id
  	WHERE c.year = 2013
)


Exercise
Show the name of the orchestras that have the same number of members as the 'Musical Orchestra'. 
Show the number of members in the second column. Name the second column members_count.

Solution
SELECT
	o.name,
    COUNT(m.name) as members_count
FROM orchestras o
JOIN members m
ON m.orchestra_id = o.id
GROUP BY o.name
HAVING COUNT(m.name) = (
	SELECT 
  	COUNT(m.name)
  	FROM orchestras o
  	JOIN members m
	ON m.orchestra_id = o.id
  	WHERE o.name = 'Musical Orchestra'
)
