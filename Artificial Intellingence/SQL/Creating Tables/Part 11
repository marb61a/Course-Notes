Exercise
Create a table called cinema with the following columns:

    cinema_id - integer with consecutive numbers automatically generated, it's also the primary key,
    name - up to 30 characters,
    city - up to 30 characters.

Solution
CREATE TABLE cinema(
	cinema_id IDENTITY,
  	name VARCHAR(30),
  	city VARCHAR(30),
  	PRIMARY KEY (cinema_id) 
)


Instruction
There is actually one more thing about IDENTITY that you need to know. You can change its behavior! 
You do not need to start counting from 1, nor do you need to add 1 to every new value. Take a look:

CREATE TABLE movie (
    id IDENTITY(3,5),
    title varchar(64),
    year int,
    genre varchar(20)
);

After the keyword IDENTITY, we put two values in the parentheses. The first one informs about the starting point value. 
In this case, the first row will obtain the number 3. The second value informs the database how it should calculate further values. 
In this case we're asking to add 5 each time. So, after 3, there come 8, 13, 18, ...

Exercise
We want to create a similar table cinema, with one exception: we want to start with cinema_id 1 and only have odd numbers as ids.

Create a table called cinema with the following columns:

    cinema_id - integer with odd numbers automatically generated, it's also the primary key,
    name - up to 30 characters,
    city - up to 30 characters.

Solution
CREATE TABLE cinema(
	cinema_id IDENTITY(1, 2) PRIMARY KEY,
  	name VARCHAR(30),
  	city VARCHAR(30)
)


Exercise
Add a few rows to our table cinema and see how the column cinema_id is generated.

Solution
INSERT INTO cinema (name, city) VALUES ( 'Romantica', 'Kielce' );
INSERT INTO cinema (name, city) VALUES ( 'Moskwa', 'Kielce' );
INSERT INTO cinema (name, city) VALUES ( ...);


Instruction
Okay. Note that in some databases, you will encounter the keyword AUTO_INCREMENT instead of IDENTITY. The AUTO_INCREMENT is not used as a data type. 
It is an additional keyword that you put after the name of the type. The table movie from an earlier exercise could be created like this:

CREATE TABLE movie (
    id INTEGER AUTO_INCREMENT (3,5),
    title varchar(64),
    year int,
    genre varchar(20)
);

If you omit the AUTO_INCREMENT parameters, then the auto incremening numbers start with 1 and increment by 1. Like here:

CREATE TABLE movie (
    id INTEGER AUTO_INCREMENT,
    title varchar(64),
    year int,
    genre varchar(20)
);

Exercise
Create the table cinema again, but use the keyword AUTO_INCREMENT this time.
Include the following columns:

    cinema_id - integer with consecutive numbers automatically generated, it's also the primary key,
    name - up to 30 characters,
    city - up to 30 characters.

Solution
CREATE TABLE cinema (
	cinema_id INT AUTO_INCREMENT PRIMARY KEY,
  	name VARCHAR(30),
  	city VARCHAR(30)
)


Instruction
You should know that there are also some databases which do not have the AUTO_INCREMENT or IDENTITY columns. 
Instead, they use special objects called sequences. They are able to generate new numbers in a sequence, as the name suggests. Take a look:

CREATE SEQUENCE first_seq 
START WITH 1 INCREMENT BY 1;

You've probably guessed right what this code means. It will create a sequence named first_seq, with the initial value 1, increased by 1 each time.

Exercise
Let's do a quick exercise on creating sequences. Create a sequence with the name my_sequence which starts from 100 and increases the number by 10 each time.

Solution
CREATE SEQUENCE my_sequence 
START WITH 100 INCREMENT BY 10
