Instruction
You should also know that we can use other columns in the CHECK constraint as well. Take a look at the example below:

CREATE TABLE video_game (
     id IDENTITY PRIMARY KEY,
     name varchar(32) UNIQUE NOT NULL,
     genre varchar(32) NOT NULL,
     studio varchar(32),
     multiplayer boolean,
     hours int,
     price decimal(5,2),
     CHECK (price/hours < 1.00)
);

In the example above, the database will only allow you to enter relatively cheap video games, where the cost of the game divided by the hours of playing is low.

Exercise
We inserted the constraint from our example into the database. Let's try to insert a new game which meets the criteria. 
Insert a game called 'Disciples II' into the table video_game:

    genre is strategy,
    studio dat,
    multiplayer TRUE,
    hours 150 and
    price 29.99.

Solution
INSERT INTO video_game(
	name, genre, studio, multiplayer, hours, price
) VALUES (
	'Disciples II',
  	'strategy',
  	'dat',
  	True,
  	150,
  	29.99
)


Exercise
Try to update the price in the table video_game where the name of the game is 'Disciples II'. Set the price to 250.00.

Solution
// Causes error but not solution needed
UPDATE video_game 
SET price = 250.00 
WHERE name = 'Disciples II


Exercise
Let's leave the game community for a while and do a little practice. Create a table salary with the following columns:

    employee_id - a unique integer number,
    monthly - a decimal of up to 10 digits with 2 digits after the decimal point,
    annual - a decimal of up to 10 digits with 2 digits after the decimal point.

Add the following CHECK constraint: the annual field must equal the monthly field times 12. 

Solution
CREATE TABLE salary (
	employee_id INT UNIQUE,
  	monthly DECIMAL(10, 2),
  	annual DECIMAL(10, 2),
  	CHECK (monthly * 12 = annual)
)


Instruction
Excellent, it's time for the last constraint - and for the last type of game on our website - card games! The constraint, in turn, is called DEFAULT. 
Take a look at the example:

CREATE TABLE card_game (
  id IDENTITY PRIMARY KEY,
  name varchar(32) UNIQUE NOT NULL,
  genre varchar(32),
  min_players int DEFAULT 2,
  min_time int DEFAULT 60,
  cooperation boolean DEFAULT FALSE
);

In the example above, there are a few instances of DEFAULT. Let's take a look at one of them:

min_players DEFAULT 2

As you might expect, the constraint tells the database what the default value should be. 
In other words, if the user does not provide any value for the given column, it will take the default value instead.

Exercise
Run the template from the example. We're going to work with the new table card_game.

Solution
CREATE TABLE card_game (
  id IDENTITY PRIMARY KEY,
  name varchar(32) UNIQUE NOT NULL,
  genre varchar(32),
  min_players int DEFAULT 2,
  min_time int DEFAULT 60,
  cooperation boolean DEFAULT FALSE
)
