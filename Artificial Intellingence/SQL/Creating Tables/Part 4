Instruction
Just as you could expect, it's not possible to enter a longer value into a char(x) column.
We're now going to introduce another text data type. Depending on the database, it's called TEXT or CLOB. In our database, both names refer to the same data type.
This data type is used to store text information of any length. You can store one word and a thousand words in such a column.

Exercise
Peter decided that the old table user_account was not enough and that the 10-character-long nicknames didn't really work. 
What's more, he wants users to describe themselves! Let's create a new table user_account with the following columns:

    first_name of type varchar(32),
    nickname of type varchar(32),
    description of type clob.

Solution
CREATE TABLE user_account(
	first_name VARCHAR(32),
  	nickname VARCHAR(32),
  	description CLOB
)


Exercise
Peter developed a slightly more sophisticated version of the table user_account and provided us with a simple ERD. Based on the diagram below, create the proper table

Solution
CREATE TABLE user_account(
	first_name VARCHAR(32),
  	last_name VARCHAR(32),
  	nickname VARCHAR(24),
  	color_eyes VARCHAR(10),
  	color_hair VARCHAR(10),
  	description CLOB
)


Instruction
Let's start off with a data type you already know - int, which is short for integer. As you can expect, this data type stores integer numbers (like 3, 7 or -4).
We use it to count things like chairs, books, legs etc. In our database, INTEGER stores numbers from -217483648 to 217483647.
Our database, and any other database for that matter, has various number types of different ranges. 
INT is the most popular one, but if you need any other range, just check the documentation of your database.

Exercise
Peter wants to have a list of users who paid some money to get a premium account on his dating website. 
Create a simple table premium_account with a single integer column user_id.

Solution
CREATE TABLE premium_account(
	user_id INT
)


Exercise
The first user (with user_id 3) bought the premium account! Add that person to the table premium_account.

Solution
INSERT INTO premium_account VALUES(
	3
)


Exercise
Check if you can put a text value like 'Rose' or '5a7' into the column user_id of the table premium_account.

Solution
INSERT INTO premium_account VALUES ('Rose')


Instruction
You can't insert a number out of range for the same reason you can't insert a text value - it simply won't fit!
You can use mathematical operators like + or * and you can also use logical operators like <= with your SQL statements. Take a look at the example below:

SELECT *
FROM premium_account
WHERE user_id = 5;

This will select all the information for the user with id 5. Piece of cake!

Exercise
Premium accounts start to sell like hot cakes! Provided that user with the user_id 1 is Peter, 
select all information from table premium_account where user_id is greater than 1 to see how many premium accounts have been purchased.

Solution
SELECT * FROM premium_account 
WHERE user_id > 1


Instruction
Apart from integer numbers, there are also fractions. In our database, we can use DOUBLE and REAL to store them. 
Just like with integer types, each database has its own types for the so-called floating point numbers.
Their ranges and precision is always given in the documentation.

Exercise
Peter wants to experiment with new column types. He wants to introduce weight in the user profiles 
so that people could quickly browse the site based on their preference for slim or chubby people.
For now, let's just create a simple table called body with an integer column user_id and a DOUBLE column weight.

Solution
CREATE TABLE body(
	user_id INT,
  	weight DOUBLE
)
