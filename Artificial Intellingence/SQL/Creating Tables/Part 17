Exercise
Insert a new game into the table card_game and specify only the following information: name 'Citadels', genre 'historical'. 
What do you think will happen? Take a look at the resulting row.

Solution
INSERT INTO card_game (name, genre)
VALUES(
	'Citadels',
  	'historical'
)


Exercise
Let's try to insert another card_game. The name is 'Three Dragon Ante', genre 'fantasy'. As for the columns min_players, min_time and cooperation, 
force a NULL value by providing it in the INSERT statement. Take a look at the inserted row. What happened?

Solution
INSERT INTO card_game (name, genre, min_players, min_time, cooperation)
VALUES(
	'Three Dragon Ante',
  	'fantasy',
  	NULL,
  	NULL,
  	NULL
)


Instruction
Well, the values have been set to NULL because this is what the user wanted. As you can see, the DEFAULT constraint does not forbid NULL values in the given column. 
It only provides a value on its own when the user forgets to mention the specific column in the instruction.

Exercise
Again, try to create the table card_game on your own. The template is ready. All you need to do is add DEFAULT constraints:

    the value 2 for min_players,
    the value 60 for min_time and
    FALSE for cooperation.

Have a go! 

Solution
CREATE TABLE card_game (
  id IDENTITY PRIMARY KEY,
  name varchar(32) UNIQUE NOT NULL,
  genre varchar(32),
  min_players int DEFAULT 2,
  min_time int DEFAULT 60,
  cooperation boolean DEFAULT False
)


Instruction
Now we have a small surprise for you. Do you remember sequences from the previous part of our course? 
We promised we would tell you how to link them to columns - and here we go! We use the DEFAULT constraint:

CREATE TABLE board_game (
  id DEFAULT nextval('my_sequence') PRIMARY KEY
);

Not very complicated, right?

Exercise
Ok, first of all we need a sequence. Just to remind you: a sequence with the name my_sequence which starts at 10 and adds 2 each time would look like this:

CREATE SEQUENCE my_sequence
 START WITH 10
 INCREMENT BY 2;

Now, create a sequence called id_seq which starts at 1 and increments by 1.

Solution
CREATE SEQUENCE id_seq
START WITH 1
INCREMENT BY 1


Exercise
Just to remind you: in order to get the next value of the sequence my_sequence, we use the expression:

nextval('my_sequence')

Now, change the template we provided. We don't want the DEFAULT value of id to be 1. Replace it with the next value of the sequence id_seq.

Solution
CREATE TABLE card_game (
  id int DEFAULT NEXTVAL('id_seq'),
  name varchar(32) UNIQUE NOT NULL,
  genre varchar(32),
  min_players int,
  min_time int,
  cooperation boolean
)


Exercise
Take your time and add a few rows without specifying the id column. Observe how the id value is generated by our sequence.

Solution
No solution needed -> A test assignment
