Exercise
Show the name and price of each product in the 'fruits' and 'vegetables' departments. Consider only those products that are not produced by 'GoodFoods'.
  - Remember that if you place the condition for the producer's name in the WHERE clause, you won't get rows for products without a producer.
  
Instruction
SELECT 
	p.name,
    p.price 
FROM product p
LEFT JOIN producer pr 
ON pr.id = p.producer_id
AND pr.name != 'GoodFoods'
JOIN department d 
ON d.id = p.department_id
WHERE d.name = 'fruits' OR
d.name = 'vegetables'


Instruction
This part of the course focuses on join a table with itself
  - When you join a table with itself, you must alias both occurrences of the table name. 
  - Moreover, the column names you refer to must be preceded by the alias of the table you want. 
  - This way, the database can distinguish which copy of the table you want to select a particular column from.
  
Exercise
Press next exercise to continue

Solution
No solution needed


Instruction
As this is a new exercise set there are new tables being introduced
  - In this case, the workshop_workers table
  
Exercise
The workshop_workers table consists of a few columns:

    id – the ID of a given worker,
    name – the first and last name of a given worker,
    specialization – a given worker's specialization,
    master_id – the ID of a given worker's supervisor,
    experience – number indicating a given worker's years of experience, and
    project_id – the ID of the project a given worker is currently assigned.

Show all workers' names together with the names of their direct supervisors. 
  - Rename columns to apprentice_name and master_name, respectively.

Solution
SELECT
    w2.name apprentice_name,
    w1.name as master_name
FROM workshop_workers w1
JOIN workshop_workers w2
ON w1.id = w2.master_id


Instruction
When self-joining tables, we can still filter the results with the WHERE clause
	- This is just the same as we can when JOINing two different tables.
	- We always have to specify the table name (an alias) before a given column when self-joining
	- This is to avoid problems with abiguity due to the same table names being used

Exercise
Show only worker's name, and specialization. Alias column with the name as apprentice. 
	- Consider only those workers whose supervisors have more than 14 years of experience.

Solution
SELECT
  w1.name apprentice,
  w1.specialization
FROM workshop_workers w1
JOIN workshop_workers w2
  ON w1.master_id = w2.id
WHERE w2.experience > 14


Exercise
Show the name of the apprentice, their specialization and the ID of the project if the project they are working on is not directly supervised by their master, 
	- i.e. the master currently works on another project.
	
Solution
SELECT
  w1.name,
  w1.specialization,
  w1.project_id
FROM workshop_workers w1
JOIN workshop_workers w2
  ON w1.master_id = w2.id
WHERE w1.project_id !=
w2.project_id


Instruction
Another table is introduced
	- This time it is the dictionary table and contains hypernyms
	- A hypernym is a term with a broad meaning, that "contains" other terms
	
Exercise
Select all data from the dictionary table. It contains the following columns:

    entry_id - the ID of an entry in the dictionary,
    word - the word associated with a particular entry,
    hypernym_id - the ID of an entry that is a hypernym for a particular word.

Solution
SELECT * FROM dictionary
