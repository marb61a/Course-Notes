Instruction
Start by getting to know the tables we'll be working with.
	- The example will use the fictitios Bookworm Bookshop. It has lots of books in stock from various authors. 
	- Start by taking a look at their database, Firstly, the author table.
You can view table in the Database tab on the right. 
	- Throughout the course, you can always consult the Database tab to check the names of tables and the data they contain. 

Exercise
The author table consists of four columns:
    id – the ID of a given author,
    name – the name of a given author,
    birth_year – the year in which a given author was born, and
    death_year – the year in which a given author died (the field is empty if they are still alive).
Select all data from the author table.
Type the appropriate SQL query in the Code editor panel and press the Run and check code button.

Solution
SELECT * FROM Author


Instruction
The author table would not really be any good without a table to store the names of books they wrote. 
	- So take a glance at the book table.

Exercise
The book table consists of six columns:

    id – the ID of a given book,
    author_id – the ID of the author who wrote a given book,
    title – the title of a given book,
    publish_year – the year in which a given book was published,
    publishing_house – the name of the publishing house that printed a given book,
    rating – the average rating of a given book.

Select all data from the book table. 

Solution
SELECT * FROM book


Exercise
The adaptation table consists of five columns:

    book_id – the ID of a given book,
    type – the type of adaptation (movie, game, play, musical),
    title – the name of a given adaptation,
    release_year – the year in which a given adaptation was created,
    rating – the average rating of a given adaptation.

Select all data from the adaptation table. 

Solution
SELECT * FROM ADAPTATION


Instruction
The easiest and most basic way to join two tables is to use the JOIN clause. Take a look:

SELECT
  full_name,
  name
FROM position
JOIN employee
ON position.id = employee.position_id

Simply list the name of the first table after the FROM clause as usual. 
	- Then, put the keyword JOIN, after that we specify the name of the second table.
The ON keyword allows us to specify the condition upon which we should join two tables. 
	- In the example, the database joins only those rows from both tables for which the value under the ID column 
	- Of the table position is equal to the value under the position_id column of the employee table.
    employee 		                position 	
    full_name 	position_id 	id 	name
    Mark Zucchero 	1 	         1 	Java Developer
    Sara Darling 	2 	         2 	Marketing Specialist
    Joe Doe 	    3 	         3 	Java Developer

Exercise
Join the author table with the book table.
Select the title of each book and the name of its author.

Solution
SELECT
	title,
    name
FROM author
JOIN book
ON author.id = book.author_id


Instruction
Of course, in JOIN queries we can use WHERE to filter results as in other queries.

SELECT
  full_name,
  name
FROM position
JOIN employee
  ON position.id = employee.position_id
WHERE employee.start_year > 2016

Select the full name and position name of employees who were hired after 2016.

Exercise
Show the name of each author together with the title of the book they wrote and the year in which that book was published.
Show only books published after 2005.

Solution
SELECT 
	name,
    title,
    publish_year
FROM Author
JOIN book
ON author.id = book.author_id
WHERE publish_year > 2005
