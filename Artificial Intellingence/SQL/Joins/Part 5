Instruction
There is another table that needs to be looked at, the nutrition_data table
  - The information about the calorie count of a product is stored in the nutrition_data table.
This means that there has been 3 tables introduced as part of the exercise
  - They can all be viewed at the same time using joins as below in the example
SELECT
  *
FROM product
JOIN department
  ON product.department_id = department.id
JOIN nutrition_data
  ON nutrition_data.product_id = product.id
WHERE department.name = 'bakery'

Exercise
The nutrition_data table has 5 columns
    product_id – the ID of a given product,
    carbohydrate – the amount of carbohydrates in a given product,
    protein – the amount of protein in a given product,
    fat – the amount of fat in a given product,
    calories – the calorific value of a given product.

For the exercise
  - Show the name of each product and its calorific value for all products that are in the 'dairy' department.

Solution
SELECT 
	p.name,
    n.calories
FROM product p
JOIN department d ON
d.id = p.department_id
JOIN nutrition_data n
ON n.product_id = p.id
WHERE d.name = 'dairy'


Exercise
List all products that have fewer than 150 calories.
For each product show its name (rename the column to product) and the department in which it can be found (name the column department).

Solution
SELECT 
	p.name as product,
    d.name as department
FROM product p
JOIN department d ON
d.id = p.department_id
JOIN nutrition_data n
ON n.product_id = p.id
WHERE n.calories < 150


Exercise
For each fruit (found in the fruits department) show the product's shelf id, name, price, and number of calories.

Solution
SELECT 
	p.shelf_id,
	p.name,
    p.price,
    n.calories
FROM product p
JOIN department d ON
d.id = p.department_id
JOIN nutrition_data n
ON n.product_id = p.id
WHERE d.name = 'fruits'


Instruction
There will be a fourth table introduced at this point
	- This time the table will be the producer table

Exercise
The producer table consists of two columns, similar to the department table:

    id – the ID of a given food producer, and
    name – the name of the producer.

For each product show its name, price, department name, and producer name.
The columns will also need to be aliased
	- product_name, product_price, department_name, and producer_name

Solution
SELECT 
	p.name as product_name,
    p.price as product_price,
    d.name as department_name,
    pr.name as producer_name
FROM product p
JOIN department d ON
d.id = p.department_id
JOIN producer pr ON
pr.id = p.producer_id

