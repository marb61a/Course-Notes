Instruction
Now, sometimes we may not remember just one letter of a specific name. Imagine we want to find a girl whose name is... Catherine? Katherine?

SELECT *
FROM user
WHERE name LIKE '_atherine';

The underscore sign (_) matches exactly one character. Whether it's Catherine or Katherine â€“ the expression will return a row.

Exercise
Select all columns for cars which brand matches 'Volk_wagen'.

Solution
SELECT
  *
FROM Car 
WHERE Brand LIKE 'Volk_wagen';


Instruction
In every row, there can be NULL values, i.e. fields with unknown, missing values. Remember the Opel from our table with its missing price? 
This is exactly a NULL value. We simply don't know the price.
To check whether a column has a value, we use a special instruction IS NOT NULL.

SELECT id
FROM user
WHERE middle_name IS NOT NULL;

This code selects only those users who have a middle name, i.e., their column middle_name is known.

Exercise
Select all columns for each car whose price column isn't a NULL value.

Solution
SELECT * FROM  Car
WHERE Price IS NOT null


Instruction
Remember, NULL is a special value. You can't use the equal sign to check whether something is NULL. It simply won't work. The opposite of IS NOT NULL is IS NULL.

SELECT id
FROM user
WHERE middle_name IS NULL;

This query will return only those users who don't have a middle name, i.e. their middle_name is unknown.

Exercise
Select all columns for each car whose price is unknown (NULL).

Solution
SELECT * FROM Car 
WHERE Price IS NULL
