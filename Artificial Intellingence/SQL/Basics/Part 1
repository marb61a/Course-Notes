Instruction
It's time to run your first SQL query! As you remember, the data in a database are stored in tables.

You can see all data in the user table with this query:

SELECT *
FROM user;

SELECT tells your database that you want to select data. FROM user tells the database to select data from the table user.
Finally, the asterisk (*) tells the database that you want to see all columns in this table.
Remember that it is a good practice to always end your SQL command with a semicolon (;). A semicolon is like a period at the end of the sentence. 
It tells the database that you're done with your command.

Exercise
In our example database there is a car table, which contains information about a few cars.
Select all data from the car table and click Run and check code.

Solution
SELECT * FROM CAR



Introduction
As you can see, the table car has 5 columns:

    vin – short for vehicle identification number
    brand
    model
    price
    production_year.

The names of the columns are at the top of the result.
There are 8 cars in our table: two Ford cars, one Toyota, three Volkswagens, one Fiat and one Opel. 
You can see that the price of a Toyota is $11,300 and the prices for Fords are $8,000 and $12,500.
Note that the price for Opel is not specified – we'll explain that later.

Exercise
Examine the result.
When you're done, click Next exercise to continue.

Solution
select * from car


Instruction
What if you don't want to select all columns from a table? No problem. Just type the column name instead of the asterisk. 
If you want to get names of all users, type:
    SELECT name
    FROM user;

Exercise
Select brand names from the car table.

Solution
SELECT BRAND FROM CAR


Instruction
If you want to get a couple of columns, give the names of the desired columns before FROM. So to get names and ages of all users, type:

SELECT
  name,
  age
FROM user;

Note that you separate the names of the columns with a comma (,).

Exercise
Select model and price from table car.

Solution
SELECT 
	MODEL, 
    PRICE 
FROM CAR


Instruction
Our table is quite small, so if we wanted to get some information about Volkswagens, we could select all rows and just ignore the extra few which contain other brands
But what if our table consisted of thousands of rows?

SELECT *
FROM user
WHERE id = 100;

Look what happened. We've added WHERE and a condition. The simplest condition looks like the one in our example – 
we want to retrieve information about a user with a specific ID (100), so we use the appropriate condition: id = 100.

Exercise
Select all columns for those cars which were produced (column production_year) in 1999.

Solution
SELECT
  * 
FROM CAR
WHERE PRODUCTION_YEAR = 1999;


Instruction
Now, besides the equality sign (=), there are also some other conditional operators which you can use. Look at the next example.

SELECT *
FROM user
WHERE age < 20;

Instead of the equality sign (=), we used the less than sign (<). Now our instruction selects only those users who are below 20. 
We can apply several operators in the same way:
    < (less than),
    > (greater than),
    <= (less than or equal),
    >= (greater than or equal).

Exercise
Select all columns for all cars with price higher than $10,000.

Solution
SELECT
  * 
FROM CAR
WHERE PRICE > 10000 ;
