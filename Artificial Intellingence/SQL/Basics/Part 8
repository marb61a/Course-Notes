Instruction
As you can see, the lowest salary was shown first and the highest salary last. This ascending order of results is performed in SQL by default. 
If you want to be precise and make things clear, however, you can use the keyword ASC (short for the ascending order) after the column name:

SELECT *
FROM orders
ORDER BY total_sum ASC;

Adding the keyword ASC will change nothing, but it will show your intention in a very clear way.
We can also reverse the order and make the greatest values appear first.

SELECT *
FROM orders
ORDER BY total_sum DESC;

As you can see, we've added the word DESC after the column name, which is short for the descending order. 
As a result, the highest values in the column total_sum will be shown first.

Exercise
Select all rows from the table employees and sort them in the descending order by the column last_name.

Solution
SELECT * FROM EMPLOYEES
ORDER BY LAST_NAME DESC


Instruction
All right, one more thing before we move on: you can sort your results by more than one column and each of them can be sorted in a different order:

SELECT *
FROM order
ORDER BY customer_id ASC, total_sum DESC;

As you can see, the results will first be sorted by customer_id in the ascending order (lowest values first) and then, for each customer_id, 
the orders will be sorted by the total_sum in the descending order (greatest values first).

Example
Select all rows from the table employees and sort them in the ascending order by the department and then in the descending order by the salary. 

Solution
SELECT * FROM EMPLOYEES
ORDER BY DEPARTMENT ASC, SALARY DESC
