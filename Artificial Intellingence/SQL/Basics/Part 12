Exercise
Get all the data from the table student.

Solution
SELECT * FROM STUDENT


Instruction
There are only three columns in the table student: id, name, and room_id. 
The column id is the identification number of each student in our table, name is the full name of the student. 
room_id is the id of the room which the student lives in. The room id is, of course, taken from the table room.
If you examine the table student close enough, you'll find out that some students don't have a room assigned to them. 
Remember this detail – we'll make use of this information later on.

Exercise
Click Next exercise to continue.

Solution
SELECT * FROM student;


Exercise
Get all the data from the table equipment

Solution
SELECT * FROM EQUIPMENT


Instruction
The table equipment is very much similar to the table student. It has three columns:

    id – the id of the equipment piece.
    name – which tells us what it is.
    room_id – the room where we can find the piece of equipment.

Note that some pieces aren't assigned to any room – they are simply stored in the warehouse, in case you're curious.

Exercise
Click Next exercise to continue.

Solution
SELECT * FROM EQUIPMENT


Instruction
Do you still remember how we joined two tables in Part 2 of our SQL course? Let's revise the example we gave for people and their cars:

SELECT *
FROM person
JOIN car
  ON person.id = car.owner_id;

That's right, we put the keyword JOIN between the names of two tables and then, after another keyword ON, we provided the condition.
In this particular example, we joined the rows where value of the column owner_id (table car) was identical with the value of the column id (table person). 
In this way, we joined cars with their owners.

Exercise
Try it yourself. Join the two tables: student and room so that each student is shown together with the room they live in. Select all columns.

Solution
SELECT
  * 
FROM student 
JOIN room 
  ON STUDENT.ROOM_ID =  ROOM.ID;
  

Instruction
You can select some columns in a JOIN query. Take a look at the example:

SELECT
  person.name,
  car.brand,
  car.model
FROM person
JOIN car
  ON person.id = car.owner_id;

Instead of all columns (selected with the asterisk *) here we select only three columns: name from table person, brand from table car and model from table car.
We first put the name of the table, then a dot (.), and then the name of the column we want to select.

Exercise
Join the student and room tables so that each student is shown together with the room they live in.
Select the name of the student and room number.

Solution
SELECT
  NAME, 
  ROOM_NUMBER
FROM student 
JOIN room 
  ON STUDENT.ROOM_ID =  ROOM.ID;


Instruction
Now, you should be made aware that JOIN is actually just one, of a few joining methods. 
It's the most common one so it's always applied by default when you write the keyword JOIN in your SQL statement. 
Technically speaking, though, its full name is INNER JOIN.
The example from the previous exercise can be just as well written in the following way:

SELECT *
FROM person
INNER JOIN car
  ON person.id = car.owner_id;

Exercise
Now, use the full name INNER JOIN to join the room and equipment tables, so that each piece of equipment is shown together with its room and other relevant columns.
The result should have the following columns:
    room_id – ID of the room.
    room_number.
    beds.
    floor.
    equipment_id – ID of the equipment.
    name (of the equipment).

Solution
SELECT 
  room.id AS ROOM_ID, 
  ROOM_NUMBER, 
  BEDS, 
  FLOOR, 
  equipment.id AS EQUIPMENT_ID, NAME
FROM room
INNER JOIN equipment
  ON EQUIPMENT.ROOM_ID = ROOM.ID ;
