Instruction
There is one more very important conditional operator, the inequality sign (!= or sometimes <>). Look at the example:

SELECT *
FROM user
WHERE age != 18;

See how easy it is? We've used the inequality sign (!=) to select all users who aren't 18.

Exercise
Select all columns for those cars which weren't produced in 1999.

Solution
SELECT * 
FROM CAR
WHERE PRODUCTION_YEAR != 1999 ;


Exercise
Select brand, model and production year of all cars cheaper than or equal to $11,300.

Solution
SELECT 
  BRAND, 
  MODEL, 
  PRODUCTION_YEAR
FROM CAR
WHERE PRICE <= 11300;


Instruction
Up until now, we were able to filter the rows in the previous examples using conditional operators (=, !=, <, >, <=, >=). 
But what about situations when we want to be really picky and join a few conditions?

SELECT id, name
FROM user
WHERE age > 50
  OR height < 185;

We've added a new OR clause which allows us to join more conditions.

In this case, we only select those users who are above 50 years old or under 185 cm of height. 
In other words, a row is displayed when the first condition or the second condition is true. Note that if both conditions are true, the row is also displayed.

Exercise
Select vins of all cars which were produced before 2005 or whose price is below $10,000

Solution
SELECT  
	Vin 
FROM Car
WHERE Production_Year < 2005 OR Price < 10000;


Instruction
Of course, OR isn't the only logical operator out there. Take a look at the next example:

SELECT
  id,
  name
FROM user
WHERE age <= 70
  AND age >= 13;

AND is another logical operator.
In this case, only those users will be selected whose age is 13 or above and 70 or below. 
In other words, both conditions must be fulfilled to retrieve a particular row.

Exercise
Select vins of all cars which were produced after 1999 and are cheaper than $7,000.

Solution
SELECT Vin 
FROM Car
WHERE Production_Year > 1999 
  AND Price < 7000;
  


Instruction
Now, if you want to find users whose age is between 13 and 70, you can of course use the previous example:

SELECT id, name
FROM user
WHERE age <= 70
  AND age >= 13;

But there is also another way of writing the example above. Take a look:

SELECT
  id,
  name
FROM user
WHERE age BETWEEN 13 AND 70;

We introduced a new keyword BETWEEN which simply means that we look for rows with the age column set to be anything between 13 and 70, including these values.
Note, however, that some database systems can produce different results â€“ in some of them, the values 13 and 70 are not included in the results. 
Always check how BETWEEN works in your database.

Exercise
Select vin, brand, and model of all cars which were produced between 1995 and 2005.

Solution
SELECT 
    Vin, 
    Brand, 
    Model
FROM Car
WHERE Production_Year BETWEEN 1995  AND 2005;
