                    TensorFlow Developer Certification 
                    Course Notes Part 1


Introduction
  - Brief course outline and introduction to community as well as resources
  - Goal of the course is to get certified
  - Certification marks a person out as expert
  - Course is not only to pass exam but will be project orientated
  - Students will work alongside instructors


Deep Learning and TensorFlow Fundamentals
What is Deep Learning
  - Deep Learning is a type of Machine Learning based on Artificial Neural networkd
  - Multiple layers of processing are used to progressively extract higher level features from data
  - Machine Learning is turning data into numbers and finding patterns
  - Code and math find the patterns
  - ML coding differs as ideal outputs are before rules whereas the opposite is true of traditional programming

Why use Deep Learning
  - For a complex problem can you think of all the rules that could be needed
  - Google's rules of machine learning at the following url
    - https://developers.google.com/machine-learning/guides/rules-of-ml
  - Deep Learning is good for
    - Problems with long lists of rules
      - ML/DL may help where traditional approaches have failed
    - Continually changing environments
      - ML/DL can adapt to changing scenarios
    - Discovering insights within large data collections
  - Deep Learning is not usually good for
    - This can be circumvented
    - When there is explainability needed, ML patterns are hard to humanly describe
    - Where a traditional simpler system is needed
    - Where errors are unacceptable, DL model outputs are not always predictable
    - When there is not much data
  - ML algorithms work best on structured data
    - Columns are called features
  - DL algorithms work best on unstructured data
  - ML algorithms from prior to DL advent are called shallow algorithms
  - Many algorithms can be used on both ML and DL depending on how problems are represented
  
What are Neural Networks
  - Turning data into numbers is called numerical encoding
  - https://en.wikipedia.org/wiki/Artificial_neural_network
  - Numerical code block is referred to as a Tensor
  - After encoding data is passed to the neural network
  - It learns a lot about the data, features, weights etc
  - The neural network will then output its representation patterns
  - We must take the neural network outputs and translate them into human understandable outputs
  - Neural Networks have different layers
    - The first layer is called the input layer
    - The second layer (Usually layers) are usually hidden like a black box and learn data patterns
    - The third layer is the output layer and outputs representatons or prediction probabilities
  - There are different types of learning
    - Supervised, Un-supervised, semi-supervised and transfer learning

What is Deep Learning already being used for
  - Common DL use cases
    - Recommendation systems eg Youtube
    - Translation such as Google Translate
    - Speech Recognition
    - Natural Language Processing such as detecting what are spam emails
    - Computer Vision systems can find faces, licence plates etc
    - Sequence to sequence or seq2seq is taking a sequence of for example words and making it another sequence of words

What is and why use TensorFlow?
  - It is an end to end platform for ML
  - You can write fast deep learning code in various languages and can run them on GPU/TPU
    - TPU --> Tensor Processing Unit
  - Developers are able to access pre-built models on sites such as Tensorflow hub
  - There is a whole stack available to preprocess data, model data and deploy model
  - It was originally designed in-house by Google but is now open source
  - Models can be built fairly easily
  - It provides powerful experimentation when doing research
  - https://www.tensorflow.org/
  - Keras can be considered a part of Tensorflow
    - https://keras.io/

What is a Tensor
  - 

What we're going to cover throughout the course
  - 

How to approach this course
  - 

Need A Refresher
  -

Creating your first tensors with TensorFlow and tf.constant()
  - 

Creating tensors with TensorFlow and tf.Variable()
  - 

16. Creating random tensors with TensorFlow
10min
17. Shuffling the order of tensors
10min
18. Creating tensors from NumPy arrays
12min
19. Getting information from your tensors (tensor
attributes)
12min
20. Indexing and expanding tensors
13min
21. Manipulating tensors with basic operations
6min
22. Matrix multiplication with tensors part 1
12min
23. Matrix multiplication with tensors part 2
13min
24. Matrix multiplication with tensors part 3
10min
25. Changing the datatype of tensors
7min
26. Tensor aggregation (finding the min, max, mean &
more)
10min
27. Tensor troubleshooting example (updating tensor
datatypes)
6min
28. Finding the positional minimum and maximum of a
tensor (argmin and argmax)
10min
29. Squeezing a tensor (removing all 1-dimension
axes)
3min
30. One-hot encoding tensors
6min
31. Trying out more tensor math operations
5min
32. Exploring TensorFlow and NumPy's compatibility
6min
Making sure our tensor operations run really fast on GPUs
  - 

TensorFlow Fundamentals challenge, exercises & extra-curriculum
  -

Python + Machine Learning Monthly
  -

LinkedIn Endorsements
  - There is a private Linkedin group available fro students to join
