                    Webpack 2: The Complete Developer's Guide
                    Course Notes


                    Section 1 – How to Use This Course
1 - Start Here!
Quick intro to the course

2 - Links to Github Repos
There are a couple of different repos to link to 
  - Sample Project Code At -- https://github.com/StephenGrider/WebpackProject
  - Complete Code -- https://github.com/StephenGrider/WebpackCasts
Do not get the two confused


                    Section 2 – What Does Webpack Do?
1 - Why Do We Use Build Tools?
Why is Webpack becoming so popular?
Rich Web Applications - Web apps that have a lot of dynamic features
To understand Webpack popularity and why it is used it's necessary to understand the ecosystem
  - Server Side Templating
    - More of a legacy technology for creating web apps and showing HTML documents to users
    - In this world a backend server creates a HTML document and sends it to a user
    - The process is
      - User Visits Page -> HTTP Request To Server -> New HTML Doc -> User Clicks A Link -> HTTP Request To Server -> New HTML Doc
  - Single Page Application
    - This contrasts with the Server Side Templating world
    - The server in this case sends a bare boned HTML document to the user
    - Javasript runs on the users machine to assemble a webpage
    - The process here is
      - User Visits Page -> HTTP Req To Server -> New HTML Doc -> React\Angular Shows Page -> User Clicks A Link -> React\Angular shows new content
 Over the last couple of years Single Page Applications have become very popular
 The reason for Webpack is that in an SPA world there is a huge amount of JS being assembled in the users browser

2 - Javascript Modules

3 - The Purpose of Webpack

4 - Webpack in Action

5 - Javascript Module Syntax

6 - Linking Files with CommonJS

7 - Webpack Installation and Configuration

8 - More on Webpack Configuration

9 - Running Webpack

10 - The Bundle.js File

11 - Running the App



                    Section 3 – Handling Project Assets
1 - Introduction to Loaders

2 - Babel Setup for ES2015

3 - Babel Configuration

4 - Refactor to ES2015 Modules

5 - Handling CSS with Webpack
07:04
The Style and CSS Loaders
06:13
Loaders are Tricky!
05:37
The Extract Text Plugin
06:26
Handling Images with Webpack
07:18
Automatic Image Compression
08:48
Public Paths



                    Section 4 – Building for Performance with Webpack
1 - Introduction to Code Splitting

2 - Codesplitting in Practice

3 - On Demand Code Loading
05:15
System Import Calls
06:37
–
Applying Webpack to a Real Project
01:04:04
A Real World Project
02:42
Setting Up Babel
04:27
Minimum Webpack Config
06:26
Vendor Asset Caching
04:34
More on Vendor Caching
05:10
Refactoring for Vendor Splitting
09:01
Effect of Code Splitting
06:27
Troubleshooting Vendor Bundles
09:37
Chunk Hashing for Cache Busting
06:03
Cache Busting Wrapup
05:22
Cleaning Project Files
04:15
–
Webpack Dev Server
16:12
Introduction to Webpack Dev Server
06:04
Gotchas with Webpack Dev Server
10:08
–
React-Specific Topics
18:28
React Router with Codesplitting
07:44
Plain Routes with React Router Codesplitting
10:44
–
Webpack-Based Deployment for Static Sites
35:20
Deployment Options
04:22
Getting Production Ready
07:44
Deployment with Surge (Easiest!)
03:55
Deployment with Github Pages
09:02
Deployment with AWS S3
10:17
–
Webpack-Based Deployment for Dynamic Sites
49:57
Deployment of Servers
05:02
Node and Webpack Integration
05:45
Webpack Middleware in Development
07:28
Webpack Middleware in Production
10:29
Deployment to Heroku
08:03
Deployment to AWS
07:16
More on AWS Deployment
05:54
