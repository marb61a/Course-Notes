                    AZ900 Microsoft Azure Cloud Fundamentals 2021
                    Course Notes Part 46


Azure Policies and Initiatives
  - We can assign policies using a specific scope, which could include a specific resource group
    - If we assign a policy to a resource group, then it applies to child items within that resource group
    - Remember that policies apply not only to the creation of new resources but to existing ones
    - So for example, if we've got a virtual machine type that's been deployed in a resource group 
    - With a policy assigned to it that specifies only another virtual machine size that was allowed, then we'll see this show up as being non-compliant
  - We can also assign policies to a management group. A management group essentially allows us to work with policies across more than one Azure subscription
    - We can also, of course, assign a policy to an entire Azure subscription, and that will flow down through the hierarchy
    - Under the subscription, of course, we would have resource groups under which, we would then have resources themselves
    - This could include the likes of virtual machines, storage accounts, and so on.
  - Bear in mind also that the permissions get inherited by the child objects throughout this hierarchy
    - There are exclusions that are permitted
    - You might specify at the subscription-level that there are only specific Azure regions to which virtual machines of a certain kind can be deployed
    - But you might make an exclusion on a specific resource group
    - Then we have to think about policy effects, where we can deny, for example, the creation of something that doesn't fall into the scope of the policy
  - We can append data, we can deploy only if something doesn't exist
    - We can audit if it doesn't exist. So in the case of deny, for example, as a policy effect
    - Which we specify within the policy document itself
    - What we're talking about doing is notifying or making a note of items that are non-compliant
    - So imagine, if the policy only allows a specific virtual machine size
    - Yet there are existing virtual machines that do not use that same sizing, and so that's a violation of our policy
    - Non-compliant items are then marked as non-compliant, but they wouldn't be deleted


Assign Built-In RBAC Roles
  - The purpose of Role-Based Access Control, or RBAC, in Microsoft Azure is to control permission's assignment to Azure resources
    - In the Azure Portal, we've signed in not as a global administrative type of account, but as a regular user, jgold
    - In this case, we are looking at the virtual machine's view, and despite the fact that we might try to refresh the view, nothing shows up.
  - Now, what is being demonstrated here is that user jgold does not have access in this particular example to virtual machines. The same thing could be said about going to the storage accounts view where nothing shows up at all, at least for this particular user, jgold.
However, in the Azure portal, when I'm signed in using an administrative account, in this case, stefan.samms, we can see indeed there are virtual machines, and there are storage accounts. So one way that you can work with role-based access control is on a per individual resource basis.
So for example, I could go into the Properties of a storage account, I could choose access control, IAM, and then I could choose Roles. And over here, I can see role definitions related to this particular type of item. In this case, the storage accounts. So we've got some Backup options, some Monitoring, Reader, and Data Access options, and so on.
Now, what I could do is click the Add button to add a role assignment where I could chose a role and a specific principle that should have that privilege. So for example, why don't we do this for virtual machines? Although, it doesn't really matter, other than what your needs are.
So I'm going to go into a particular virtual machine, let's say East Windows VM1. And I'm going to go into Access control, IAM. I'll click on Roles. And really, what I want to look at is adding a role, so I'll click the Add button and I'll choose Add role assignment.
Now, from this list, I have roles here that are specific, in this case, to this class of resource, in this case, a virtual machine, so whether I want to set as a virtual machine contributor. If you click the little informational icon, it will describe what permissions are allowed if you set the user or group as an occupant of this role.
  - Here, it says virtual machine contributor lets you manage virtual machines but not access them, and not the virtual network or storage account that they might be connected to. Okay, well, if that's what I want here, in this case, I'm going to go ahead and select it. And then, down below, I can choose from users and groups. I'm going to use my HQ_AzureIT group.
  - We are making sure that this group is assigned the virtual machine contributor role
    - In this case for a specific virtual machine called eastwindowsvm1, now, user jgold is a member of this group.
    - Go ahead and click Save to save that role assignment and then it says the role assignment succeeded
  - After signing out and signing back in with that same user account
    - Notice that in the virtual machines view, we see that single virtual machine to which the role grants me access
    - In this case, for virtual machine contributor purposes
  - If we go to other views like Storage accounts and so on
    - We don't even see the storage account associated with that virtual machine
    - If we go to things like virtual networks, we also don't see anything
    - This is although, we know that those are also required for a virtual machine to function properly
  - Back inn the Azure Portal as the global administrator account
    - So not the regular user jgold to which we have assigned a role through a group membership
    - Go in to the Resource groups view and pop-into the Properties blade for our resource group, it too has an Access Control, IAM, option
    - Click on that, we can also add a role assignment from here.
  - Except, when you look at the list of roles, it's going to be much longer
    - Because it accounts for the different types of Azure resources
    - Including virtual machines that might be deployed into this resource group
    - By setting these permissions on a resource group, you are then applying this to the resources deployed within the resource group
    - You can see then how role-based access control can facilitate permissions management to Azure resources


Create a Custom RBAC Role Using the CLI
  - In Microsoft WordPad, we've created a custom role file using JSON syntax
    - Where we've got an open curly brace and a closing curly brace
    - Then we've got things like the name of this custom role that we are going to build
    - It's going to be called The Overseer and the IsCustom flag is set to true, because it is a custom RBAC role that we am creating
  - We've got a description here, and importantly, here we've got the Actions
    - What can anyone that might be assigned to this role do? Well, they have access to read all items
    - So */read, to be able to see if it will have read only access to everything within a subscription because down below for the AssignableScope
    - We have set the specific subscription ID for our Azure subscription
  - In the Azure portal if you're wondering how do I find out what my subscription ID is, one way is simply to go into your search box at the top. I've searched for sub so that I can choose Subscriptions and all my subscriptions will be listed here along with the subscription ID.
  - Using the Azure CLI that we've downloaded and installed locally on the on-premises station, I've already run the az space login command. So I've authenticated to my Azure subscription.
So the next thing I'm going to do is create a role using the az role definition create command. So --role-definition, I simply refer to the path and name of the json file that we looked at that defines the role, assignable scope, and the actions that are either allowed or not allowed.
So I'm going to go ahead and press Enter to create the role. And after a moment, we can see that we've got some returned JSON which indicates that the custom role was created.
  - In WordPad, you can even clean it up a little bit so things are on one line instead of wrapped across multiple lines, if it's easier to read this way. So we've got our new custom role called The Overseer, that will have been created. It's a custom role and as we described earlier, it will provide read-only access to resources within the listed Azure subscription.
  - Back in the CLI, we can use the az role definition list command, -- custom-role-only true, so only show custom roles
    - We are going to pipe that to the Windows find command
    - Because all we want to see is the roleName attribute, or lines that display that, notice here we can see our custom role, The Overseer


Managing Custom RBAC Roles Using the Portal
Once you've created a custom role, and I've already done this using the Azure CLI in another demo called Create a Custom RBAC Role Using the CLI. Well, now it's time to assign it, and to put it into effect, and I'm going to do that here in the Azure portal. Now I can apply custom roles or built-in roles at the Azure subscription level, or to be a little more specific, in the hierarchy below that.
I can assign roles to specific scopes like resource groups, or even individual resources, like storage accounts, and virtual machines, and so on. In this case, I'm going to do it for the subscription level. So in the search box at the top, I'm going to search for sub, and I'm going to choose Subscriptions, and I'm going to click on my subscription,
and I'm going to choose Access Control (IAM). Now here, I'll see any roles that are available here, whether they're built in, or as I scroll further, and further down, such as into the T's, I'll also see our custom role called The Overseer. Now I can also click the Add button up here if I actually want to add a role assignment, which I do.
So I'll choose Add role assignment, and the role here is going to be the custom RBAC role that was created called The Overseer. If I actually hover over the little information I, it even shows the description, in this case it says Subscription-level viewing, so I'll select that. And I want to assign this custom role to a group in Azure Active Directory Called HQ_AzureIT, and so I'll go ahead and click Save.
And so at this point the role has been applied to the entire Azure subscription, so if I go look at Azure Active Directory groups. And if we take a look at that group, HQ_AzureIT, and specifically the members, the members of the group. In this case only one, Jonathon Gold, will assume the privileges of that custom role which is read-only access to all items, in this case, for the entire subscription.
And I've just jumped in to Wordpad here so that we could quickly look at the definition that was used to create that custom role in the CLI. And notice here, it is read access tied to a subscription, so the AssignableScope is set to the subscription level.


Azure Resource Tagging
You can add tags to Azure resources for descriptive purposes. Tagging an item such as a storage account, or a web app, or even a virtual machine, for instance, allows you to add metadata, more detailed information. Perhaps a project that something is assigned to, or a department that something falls under for billing purposes. So to get started here in the Azure Portal, I'm going to go to my Virtual machines view, for no purpose other than to select some kind of an individual Azure resource.
And I'm going to select one of my virtual machines, to open up its Properties blade. And you'll notice that whenever you look at the Properties blade for, really, any type of Azure resource, you're going to see a Tags item. And when you click Tags, you'll see any existing tags that might have been set already. For example, this virtual machine is already flagged as Project. That's the name of the tag, with a value of ProjectB.
Now, we can also add multiple tags to an item. So for example, I could build a new tag here called Department. And over here, I might put in Sales. So now I've got two tags. Now I have to click Save in this case, for that to apply to that particular item.
Now, we can also select multiple items if we want to tag them all at once. So let's say, in this case, that I want to select a couple of virtual machines. So I can select them here. And then I can click the Assign tags button up at the top. And from here, I can choose from existing tag names that were created. For example, there's Department.
And if I want to assign them to Sales, then I can go ahead and do that. And then once I'm done, I can click Save to apply those tags. You can also work with tags programmatically, and through the CLI, and through PowerShell.
Now, one of the reasons that that works well is because you can filter resources, for example here in the GUI, by tags. Notice here when you go to the All resources view, I see, well, all resources. But from here, I can choose the All tags drop-down. And I can select something such as Department, Sales. And when I do that, it filters the list. And now I see only Sales Department-tagged items. Which in this case, happens to be those three virtual machines.
But this can also be helpful for billing. So let's say up in my search bar, I search for subscriptions, so sub. And let's say, I go to my subscription. So here's my subscription. I'll click on it to open it up. What I can do within here is go to Cost analysis.
And then towards the top here, I can also start to look at this in a variety of different ways. So instead of just viewing what's presented in front of me, which is a great way to break down costs, I can also click Add filter. And here I might choose Tag. So from here, I can then start to select the appropriate tag information I want to view.
Now, sometimes, newly added tags won't show up here. For example, I don't see Department quite yet. But I could choose some existing tags that existed previously, such as project. And from here, I can start to select exactly what it is that I'm looking for in terms of filtering by, in this case, the project tag.
So to do that down below, I'll open the next drop-down list. And let's say, I want to see items flagged as projectb. And I can also choose, for example, to view perhaps this quarter or this year. So I'm filtering out by the projectb tag, that's the value. And then I can now see that the numbers are changing based on my filtered selection.


Azure Resource Locking in the Portal
Sometimes, IT technicians make mistakes. It happens, we're human too. And so one option in Azure is to lock resources. You can lock resources from either being deleted or being modified. And you can do this at various levels such as doing it at the subscription level, a resource group level, or a specific resource. It's kind of like a safeguard. So to get started here in Azure, in the portal, I'm going to go to my Virtual machines view to lock a particular virtual machine.
Let's say my first VM here, eastlinuxvm1. So I'm going to click on it to open up it's Properties blade. And what you'll notice when you're working in the Azure portal is that if you scroll down of the Properties blade, you're always going to see this Locks item. And when you select it you'll see the current state of locking on that resource.
Now, this one states that this resource has no locks. So I'm going to go ahead and click Add to add a lock. And I have to give a name to the lock. So how about PreventChanges. And the Lock type can either be Read-only, which is what I want here to prevent changes, or Delete. In other words, prevent from being deleted. So in this case, I'm going to choose Read-only. And I could add additional Notes, which I won't. And I'm going to click OK.
And now, notice that we see our current resource locked to prevent changes, it's Read-only for this resource. And of course, we can go ahead and Delete that lock at any point in time.
So let's try to make a change here. So I don't know, let's say we try to resize the VM. I'm going to go to the Size part of the Properties blade. And I'll click Resize. And immediately, it says Failed to resize the virtual machine and something about resources being locked.
So we know that it's working already. So of course, if I go and remove that lock, okay, let's just refresh to make sure it's good and it is. If I were to go ahead now and decide that I want to resize something, then it will let me resize it. It's in the midst of happening. So we have the option then of doing this at pretty much any level in the hierarchy.
So for example, let's say I go into Resource groups. And if I go into resource group RG1 there it is, again, Locks. As you might expect, it would apply to the child items within the resource group.
And if I start going into Subscriptions, then in the same way, we'll also have the option of setting Resource locks down here by choosing Resource locks and clicking Add and, basically, filling out the same type of thing again. So this is a great way then to essentially, protect yourself from yourself if you're the only Azure IT technician.


Azure Resource Locking Using the CLI
You can lock Azure resources to prevent deletion or modifications at the subscription, resource group, and individual resource level. You can do that in the portal or, as we're going to see here, we can also do that using the CLI using the az lock create command. So I'm going to name my lock Rg1Lock because I'm going to lock a resource group, which will also apply to the child items deployed within that resource group.
So then I'm going to use --lock-type. And I'm going to use CanNotDelete, so preventing deletion. And then I'm going to specify the resource group by name here of course, using --resource-group. And the resource group in question here I want to apply the locking to is Rg1. So I'm going to go ahead and press Enter. Now after a moment, we can see that it appears we have some output from that command that tells us that the lock is in place.
Let's clear the screen and let's verify this, by typing az space lock space list, this will show us any locks that we currently have in place. And here, we can see that it's called Rg1Lock. It's set to CannotDelete, and it's set for a particular resource group in this case, Rg1.
Here in the Azure portal, if I were to open up that resource group and view its properties blade and then click Locks. I would see here that we've got our lock here, Rg1Lock that we just created through the Azure CLI. So indeed, it is in effect.
I can also use the az lock show command, so I can view the id related to that lock. Which we see up here, we see the id. All I'm doing here is telling it I want to show something specific about a lock called Rg1Lock for a resource-group called Rg1.
And I'm going to control the output and view the id. So I'm going to query for the id, in other words only show me the id. And that's really essentially what we see up here at the top. So I'm going to go ahead and copy that, because what we can then do is use that id to remove the lock using az lock delete. And of course I can just use --ids and paste in or we can use a variable if we really wanted to.
But if I go ahead and remove the lock that way after that's completed, let's just clear the screen. If I run az lock list, if we spell that correctly that would be superb, so az space lock space list, there we are. Then we're going to get a whole lot of nothing returned because we no longer have a resource lock, we have removed it.


Azure Resource Locking Using PowerShell
In this demonstration, I'm going to use Microsoft PowerShell to manage Azure resource locks. Resource locking is helpful if you want to prevent unwanted modifications or the deletion of Azure resources. And we can set locking at the subscription resource group or at the resource level. So here in the PowerShell ISE, I've already got a script here, where in line 1 I'm creating or locking a resource using the New-AzResourceLock PowerShell commandlet.
So I have to provide a name for this lock. So I'm calling this Rg1, for resource group 1, NoDelete. And the LockLevel here will be CannotDelete, but I can also specify that I want to prevent modifications as opposed to deletions. And here the resource group name to which I want this applied is called rg1.
So let's go ahead and execute that one line by putting our cursor on the line somewhere here in the ISE and then clicking the Run Selection button. I get a prompt, are you sure you want to create that lock? Yes, so I'll click Yes. And after a moment it appears that it's done. Why don't we check our work in the portal?
Here in the portal, I'm in the resource groups view. There's Rg1, so I'll click on it. And in the Properties blade, I'll click Locks. Here we could see we've got the Rg1NoDelete lock name that we just specified and applied from PowerShell.
Now, of course, here in PowerShell, we can view any current lock configuration using the Get-AzResourceLock commandlet. So I'm going to clear the screen down below, then I'm going to click on line 3 here to run Get-AzResourceLock. And, again, we can see here it is. We've only got one here, it's called Rg1NoDelete. And we know that it will be applied specifically to our resource group called rg1.
Now, the next thing I want to do is remove that lock. So the first thing I can do here is create a variable. Creating a variable here called lockId. And I'm going to run Get-AzResourceLock and going to specify the ResourceGroupName. And then I'm going to refer to the .LockID property. Now, the reason that I've got the open and closed parentheses here is because I need some way to tell Powershell that what is within the parentheses is part of one expression, one statement in PowerShell.
Then after that, I want to refer to a property. Because if I don't have the parentheses around it, it's going to think that rg1.LockId is a parameter value, when really the only parameter value here for ResourceGroupName is rg1. So the result of that, the ID, the LockId, will be put in the LockId variable. And so after that in line 7, we can simply remove it using Remove-AzResourceLock. Just tell up a LockId based on the variable that we've created back up here in line 5. So I'm going to select those lines of code in my script here and I'm going to click the Run Selection button.
Then I get a prompt. Are you sure you want to delete that? Sure, yes, I am.
And it looks like it's good. Why don't we verify our work by running Get-AzResourceLock? We get a whole lot of nothing. And why don't we just check it just for fun in the Azure portal. Why not? So here in the portal, I'm just going to open up that resource group and look at Locks, and we now see it says, this resource has no locks.


Common Data Privacy Frameworks
  - Data privacy has a big impact on organizational security policies especially as related to cloud computing. We have to consider the types of data that we need to safeguard using data privacy frameworks. Data such as Personally Identifiable Information otherwise called P-I-I or PII, Protected Health Information, PHI.
  - Data that resides within specific national boundaries might be subject to specific laws and regulations. But then we need to consider data that's being transmitted into a country from elsewhere, and also data being transmitted out of a country. With data privacy frameworks, the first consideration is Personally Identifiable Information or PII, which would include things like a person's phone number, their credit history, their mother's maiden name, their social security number, their credit card number, and so on.
So essentially, whatever can uniquely identify an individual in some way is called Personally Identifiable Information. Then on the right, we've got Protected Health Information which is more medically related. It would include things such as a patient's name, medical discharge dates, medical payments, past procedures, drugs that had been administered, and so on.
And so in relation to this type of information, we have to consider data privacy frameworks which outline how the data will be collected, how the data will be used. And whether or not the data will be shared with third parties. And often users must supply consent to some or all of these activities. And, there are also maybe laws and regulations that stipulate that this data collection use and sharing must be related directly to business practices. One example of data privacy is the General Data Protection Regulation
otherwise called GDPR. This applies to European Union countries. It's all about data privacy within the European Union. But also it deals with data that will be exported outside of the European Union. Microsoft Azure is GDPR compliant. Now if an organization is found to be in breach of GDPR standards, then they could possibly be fined up to 4% of their annual global amount of profit or 20 million pounds.
So whichever one is greater. So there's definitely an incentive then for European Union organizations that will work with data to make sure that they adhere with the GDPR. Then we've got the National Institute of Standards and Technology, otherwise called NIST. This is a set of international standards, some of which are related to IT security, so the cybersecurity framework, which focuses on things like critical infrastructure.
Now critical infrastructure would be things like the power grid, water supplies, dams, that type of thing. And also, sensitive data related to that hosted by cloud providers. Now there are many different types of publications such as NIST Special Publication or SP 800-122. This specifically is the guide to protecting the confidentiality of Personally Identifiable Information or PII, P-I-I.
And it relates to things like strong access control and protection of data at rest. But in order for us to implement these types of security controls in accordance with these types of data privacy frameworks, we need to first identify things like Personally Identifiable Information within the organization and the systems that will process and store that type of information.
And then, we have to think about minimizing the collection and use of Personally Identifiable Information so that it only is used strictly for business-related purposes. There are many other bodies of frameworks related to data privacy, including the International Standards Organization, ISO. This is international, and one of the many standards is ISO/IEC 27017:2015. And this deals with cloud computing security controls, related to things like access control. So being authenticated and then authorized to use specific cloud services or resources.
Cloud tenant isolation or separation from one another. And also the secure removal of cloud tenant data so that there are no artifacts that can be retrieved by unauthorized parties after the fact. So with data privacy frameworks, the first thing we have to consider is which data privacy laws and regulations affect the organization.
And then, we need to think about our cloud solution, in this case, Azure, to ensure that we are adhering to those respective laws or regulations. We then need to incorporate data privacy into organizational security policies. And then within the organization, assign responsibility for compliance to laws and regulations. This normally comes in the form of an organizational role called a compliance officer.


The Azure Security Center
The Microsoft Azure Security Center gives you a central place where you can view security related items to be in a better position to enhance your security posture with the use of Azure Cloud Computing Services.
And so here in the Azure Portal, in the navigator on the left at the very bottom, I'm going to click Security Center. But notice everything is gray in the properties blade, and
that's because we need to make sure that we're using a security center plan, and it's not enabled by default. But we're going to go ahead and start a trial, a 30 day free trial to be specific, so if I scroll down here on the far right, I can click Start trial.
So I'm going to go ahead and do that.
And one of the things that it wants to do is install agents within my virtual machines in my Azure subscription, so it knows how secure they are or are not.
So I've got my subscription selected here, I'm going to go ahead and click Install agents. Once that's been done, we can see things become available in the properties blade. And I'm still in the Overview area where we can get a great list of overall suggestions related to security, or rather any security shortcomings related to our Azure environment.
So we can see we've got an overall secure score here of 348 out of 480. Well, that's not 480 out of 480, so let me go ahead and click on that to pull up some details related to that.
So down below, we can see our subscription, and we can see that we have a View recommendations link up above. You can also click on specific categories like Compute & apps versus Identity & access. Down below, I'm just going to click on View recommendations, so we can see all of them.
Well, red naturally might be a problem, so let's see. We've got a problem here with our subscription, it says that we need to enable MFA multi-factor authentication. For accounts that have owner permissions on our subscription, apparently, that's not been done. That's a great point actually. Because with multi-factor authentication, instead of having knowledge of the username and password with overall access to our subscription.
We could add another factor such as requiring a smartphone that has a constantly changing numeric value, that is only good for a few seconds. So, when we have to authenticate, we'd have to specify the numeric code which is only good for a short period of time, in addition to having knowledge of the username and the password. That's a good way to secure our accounts through multi-factor authentication.
And we'll focus more on that in another demo where we focus on identity and access management. It says here we should also enable network security groups on subnets. So remember, you can click on each of these to get more further detail about what that description is for that recommendation.
So it'll go ahead and tell us the culprit, so to speak here, which in this case, happens to be Subnet1.
And when I actually click on that, I can actually see details related to that, such as, the network security group, which is set to none for that specific subnet. So we can drill down and actually solve problems. We can also see here that we don't have endpoint protection installed on virtual machines, for things like anti-malware at least, in this case, for one of two virtual machines.
And if I click on that to drill down, we can see here the severity level is high and the culprit here apparently is a virtual machine called eastwindowsvm1.
So, notice that we've got a link here to install on 1 VM, we can just click it and choose to install Microsoft anti-malware, we can go through and get that done.
So not only does it point out any security deficiencies but it gives us a very convenient and easy way to solve the problem. Now, of course, if you have that problem on hundreds of virtual machines, that's probably not the best way to deal with it, however, it does work.
Now here, we've got Install on 1 VMs because that is what happens to be selected here. So if we select a bunch of them, for example, hundreds of them, then we can have the ability to install that endpoint protection agent on hundreds of VMs at once, so it's very convenient. 
As we go further down the list in the Azure Security Center, we can also see it suggests that we don't have disk encryption applied on virtual machines for protection of data at rest, so we can go ahead and do that. So the security center that is designed to give us details on any security shortcomings in our Azure environment, along with the convenient way to address those concerns.


Azure Service Trust Portal
  - The Microsoft Azure Service Trust Portal allows us to track compliance, to run audit reports on that compliance. And also to focus on data protection in line with laws and regulations. The Azure Service Trust Portal allows us to work with the Compliance Manager. This allows us to be compliant with different data protection regulations including HIPAA, GDPR, ISO 27001, to name just a few.
We can also track our compliance with specific rules that need to be followed, and we can also even assign compliance responsibility. In the Azure Service Trust Portal, another aspect is auditing. Where we can run audit reports for compliance with standards related to ISO, PCI DSS for cardholder data protection, FedRAMP, SOC, otherwise called SOC.
So for example, SOC3 allows organizations to adhere to rules for internal controls within an organization for things like business processes and the integrity of those business processes. Finally, the Azure Service Trust Portal also deals with data protection, where documentation is made available. There is also mappings made between data privacy frameworks, a variety of them, to the Azure security controls will allow organizations to be compliant in those specific regards. There are also frequently asked question documents and white papers that are available for Azure IT technicians.


Block Public SSH and RDP Traffic
When you deploy Linux and Windows virtual machines into Azure, you probably want to remotely manage them from on-premises. And so you might use SSH to get into Linux hosts or the remote desktop protocol client to get into Windows hosts. The problem is we don't want that type of accessibility through a public IP address on each VM.
Instead ideally, we would use a point to site VPN connection from our administration on-premises to Azure, and then SSH or RDP to the private IP address of those VMs. So here in the Azure Portal, why don't we start by going into the Virtual machines view on the left?
Let's start with our eastlinuxvm1 virtual machine that's running Linux.
Now, the first thing I notice is it does have a public IP address. Well, if that's only for the purpose of allowing inbound administration, that's a problem. So what we're going to do is click on Networking over on the left as well.
And I can see here that if we look at the effective security rules, I'll click on Effective security rules. And the virtual machine has to be running for effective rules to display here. We'll then see that we've got access that would be allowed here into the virtual machine over a specific port.
So for example, we've got a port 22 rule from any source that's allowed to get to any destination on TCP port 22, which is SSH. However, do we really want to allow that coming in? The answer is no. And at the same time, we really don't need a public IP address if that's the sole purpose of it for this Linux virtual machine.

So let's clean this up a little bit. We're going to go ahead and close out some of these things. I'm going to go back to Networking, where notice we've got the public IP listed here for this Linux virtual machine.

[Video description begins] He returns to the Networking page and clicks the link under the Public IP field . A page titled pubIP1 opens. The page has buttons titled Associate, Dissociate, Move, Delete, and Refresh. [Video description ends]

And when I click the link, it takes me into that because it's a separate Azure resource, the public IP. I'm going to click Dissociate. Now I'm going to do that so

[Video description begins] When he clicks Dissociate, a confirmation window pops up and he clicks Yes in it. [Video description ends]

that it's not associated any longer with the Linux virtual machine.

[Video description begins] A window with the text: Saving network interface- pops up in the top-right corner of the page. [Video description ends]

And if this public IP address resource isn't needed for anything else, I can even go ahead and delete the resource. It's always a good idea to delete Azure resources that you are certain you no longer need. Because then you're not incurring any additional charges, plus it just makes management of your Azure resources a little bit more streamlined.

[Video description begins] A window with the text: Saved network interface- displays. [Video description ends]

Now, at the same time, I'm going to close out of that and go back to the Networking part of the properties blade for my Linux virtual machine. Because I'm interested in looking at the network security groups here. So I've got a couple of network security groups.

Remember, if we click on Effective security rules, if the VM's running, we'll see all effective security rules that apply to this particular virtual machine at this point in time. And here, I've got a network security group for the VM itself and then another one for a subnet. And if I click on these links, notice I can see where the rules comes from. And so the Port_22 item is from the eastlinuxvm1-nsg, or network security group. I'm going to go ahead and click on that so we can look at the inbound rules.

[Video description begins] The eastlinuxvm1 -nsg page opens and he clicks the Inbound security rules menu in the Settings menu group in the navigator. On the right, the rules display in a table containing columns titled PRIORITY, NAME, PORT, PROTOCOL, SOURCE, DESTINATION, and ACTION. 4 rules display in the table. [Video description ends]

Here is the Port_22 rule, so I'm going to go ahead and select that and delete the rule, why?

[Video description begins] The Port_ 22 pane displays on the extreme right. It has 4 buttons titled Save, Discard, Basic, and Delete. When he clicks Delete, a confirmation window displays and he clicks Yes in it. [Video description ends]

Because we don't need it. What we're going to be doing, as we've seen in another demo, is connecting our on-premises station through a VPN to Azure, that's called a point to site VPN. After which, we can then connect to the private IP of the virtual machine.

[Video description begins] He clicks Overview in the navigator. [Video description ends]

So let's just go ahead and close out of this network security group, we can see the rule's been removed. And back here, let's just close the network interface actually. We've got all kinds of levels of resources we're into. Now let's go back to the overview for the VM itself. So what we're going to be interested in then is noting that we no longer have a public IP address. But if I go ahead and click on Networking on the left, we can see the private IP for this host.

[Video description begins] He highlights the value in the Private IP field. [Video description ends]

And so the private IP then is going to go ahead and allow us to make a connection to that host once we have VPNed into the network environment. And just bear in mind that the default rule here, AllowVnetInbound will allow connectivity for resources on the VNET to resources in that same VNET, like our Linux virtual machine.

[Video description begins] He hovers over the AllowVnetInBound port rule in the displayed table. [Video description ends]

So we could go ahead and follow this practice and apply it to all the virtual machines that we don't want publicly accessible for remote management purposes.
