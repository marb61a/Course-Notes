                    AZ900 Microsoft Azure Cloud Fundamentals 2021
                    Course Notes Part 22


IaaS
  - Infrastructure as a Service or IaaS is a cloud computing service model that allows for self service
    - That is actually a cloud computing characteristic, self service or self provisioning of cloud based resources
    - This also includes not only the provisioning, but the monitoring of deployed resources
    - And also having access to them, such as being able to use SSH to remotely administer a Linux deployed virtual machine in the cloud. 
  - Networking would include things like virtual network definitions in the cloud into which virtual machines are deployed
    - And also the configuring of cloud-based storage. All of these items are configured compute infrastructure
    - At the end of the day in the data center, these are all based on underlying physical hardware
    - The underlying physical hardware is the responsibility of the cloud service provider.
  - The software deployment of those items as we see here, is the responsibility in terms of management and patching of the cloud service customer
    - Some characteristics of infrastructure as a service include the fact that the resources, the virtual machines, the storage
    - Can be provisioned as a service, and as a service means that there's an easy to use interface, whether it's command line based or graphically based.
  - Costs are based on consumption, for instance, for every minute that a virtual machine runs, you incur a charge. 
    - When you don't need that virtual machine running therefore, you should shut it down to save on costs
    - Many cloud providers will give you a way to automate and schedule the shut down of virtual machine instances
    - The other thing about infrastructure as a service in the cloud is that it's highly scalable.
  - Because there are so many pooled underlying resources made available by the cloud service provider
    - It's very quick and easy to all of a sudden, ask for a more powerful virtual machine
    - In other words, to resize it, or to group virtual machines together to support a busy application or to increase the amount of storage that's available
    - We have control of the infrastructure at the software level as cloud customers with infrastructure as a service.
  - Virtualization technology then would apply to servers and operating systems
    - In a matter of seconds, potentially you could deploy a Linux or a Windows based virtual machine
    - Once you select the appropriate operating system image version. You can also virtualize networks
    - You can define a virtual network with one or more subnets and you can specify the IPv4 or the IPv6 address ranges that you want to use
    - Networking also includes things like network ACLs, access control lists, essentially firewalls where you can control inbound and outbound network flow.
  - Then there's the storage side, such as provisioning additional storage space that will be used for users to upload content to the cloud. 
    - Infrastructure as a service has many different possible use cases for many different types of organizations 
    - Such as companies that want to avoid high hardware and software costs
    - Because you weren't paying the upfront cost for the entire hardware infrastructure with cloud computing, you're only paying for what you are using
    - For companies that are experiencing rapid growth
    - Because of rapid elasticity in the cloud in just a matter of seconds, we can spin up new virtual machines or new storage space 
    - That's available or configure a new virtual network into which we deploy virtual machines
    - All of this can happen very quickly. So for companies experiencing rapid growth, this lends itself to it nicely.


SaaS
  - Software as a service, or SaaS, otherwise called SaaS, is another form of cloud computing
    - It's another cloud service model that's often referred to as cloud application services
    - Arguably, it's the most common way that cloud computing gets used by a vast number of users
    - Such as those using cloud-based email or even personal cloud storage and of course, at the enterprise level as well
    - What happens with software as a service is we have prepackaged software that's ready to use that's made available over a network, such as the Internet.
  - The vendor, in this context, the cloud service provider, is responsible for managing the underlying infrastructure that supports the SaaS solution
    - So the underlying data storage, the underlying servers that run the software
    - One of the great advantages about software as a service is rapid elasticity
    - In the example of cloud-based email, if your organization hires ten new employees
    - You can very quickly provision new cloud-based email accounts, and not have to worry about licensing, and so on, in the cloud
    - They do have to be licensed, but it's already available immediately and conveniently with the cloud provider solution, scalability is another advantage.
  - As things get busy, scaling adds more underlying compute horsepower to handle the increased workload
    - That, in this context, with software as a service would be the responsibility of the cloud service provider
    - There would be a service level agreement, or an SLA for the specific service such as cloud-based email, a guaranteed level of performance and uptime
    - Another advantage of software as a service is integration
    - For example, you might be able to integrate previous used software like email on premises and import messages or archives into the cloud
    - But it really depends on the specific SaaS solution.
  - Upgrades are not the responsibility of the cloud customer when it comes to upgrading the underlying software that supports the specific solution 
    - Such as cloud-based email, that's the responsibility of the cloud service provider
    - From the cloud customer's perspective, that definitely works out to be an advantage
    - Cloud service providers also strive to make these solutions very very easy to use for the average user
    - Some characteristics of software as a service  are it is centrally managed by the cloud service provider
    - It's also accessible over a network such as the Internet when it comes to public cloud computing.
  - Vendors are responsible for managing updates to the underlying software, and it's hosted remotely on cloud service provider equipment
    - Organizations that use software as a service will benefit in many ways, for example startup companies
    - It's a very inexpensive way to provision cloud resources at the software level very quickly and easily
    - It can be used for short-term projects because you're only paying for what you're using and when you remove access then you no longer are charged
    - It can also be used for web and mobile applications.
  - There are some limitations, with software as a service, one being potential vendor lock-in. 
    - If you're using a specific cloud service provider's software as a service solution, it might be specific to that provider
    - So it could be difficult for you to get your data out of it or to integrate it with other components
    - It really depends on the specific solution question, at least it's a consideration.
  - Integration support falls under that, it might only be limited abilities
    - You might have very limited customization capabilities because you don't control the actual underlying servers, that house that software
    - Then there's the issue of data security, data security isn't solely the responsibility of the cloud service provider, especially in this context
    - So users might opt, for example, to encrypt documents they create with a cloud-based word processor
  - Some of that responsibility then for data security will certainly fall on users and also cloud users determining
    - Which physical geographical location data is stored in, which means that the data could be subject to laws of that area
    - Remember that software as a service runs centrally on cloud provider equipment.
  - It's controlled by that third party, the cloud service provider
    - Because we don't control as customers, the underlying network and storage and servers that run software as a service solutions
    - Performance could be an issue but also at the same time on the other side of the coin
    - Remember that performance details are specified in the service level agreement and if the cloud service provider does not abide by those terms
    - Then the consequence would be service credits for you the cloud customer against your next cloud computing bill.


PaaS
  - Platform-as-a-Service, or PaaS, is yet another cloud service model. It's also called cloud platform services
    - This one serves as a great framework for software developers and testers, which we'll explore in further detail soon
    - The infrastructure that supports platform as a service is managed by a third party
    - In this context, that third party is the cloud service provider
  - Developers then can leverage, platform as a service solutions in the cloud to create and test software and also deliver it to users of that software. 
    - A lot of this can be automated
    - For example, when a developer checks in a new code change that can trigger a series of tests to automatically be run against that for quality assurance
    - And upon successful testing, then the software could be packaged up and through a push notification sent out to mobile devices 
    - Or automatically published on a website for download and a lot of that can be automated too
  - Some advantages of platform as a service, it's scalable because it's running on cloud provider equipment
    - And cloud providers pool resources together for use by cloud customers
    - It's highly available, that's especially true when you start configuring replication of your cloud based data to alternate locations
    - It's highly customizable, and that comes at many different levels
    - Such as customizing the code that you actually host in the cloud, customizing testing and Automation and customizing the packaging and delivery of the software
