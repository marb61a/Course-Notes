                    AZ900 Microsoft Azure Cloud Fundamentals 2021
                    Course Notes Part 26


Configure Azure Load Balancing
In this exercise, you're going to start by using the Azure portal, so the web graphical interface, to create a storage account. Then, after the account is created, upload a file to it using the portal. Then you will create an Azure file share, which is essentially a cloud-based shared folder. Next, you will create a key vault and then store a secret within the vault. Think about how you might approach each of these items by pausing the video.

And then after you've thought about it, come back to view the solutions. Here in the portal, I can create a storage account by going to the Create a resource link over in the upper left. Then I can choose the Storage category, and choose Storage account.

[Video description begins] The Microsoft Azure portal home page displays in a browser window. He clicks the Create a resource menu from the navigation page and then Storage category in the Azure Marketplace column displayed in the New window. Then he clicks Storage accounts in the Featured column. [Video description ends]

So I have to specify things like a resource group into which to deploy this new Storage account.

[Video description begins] Create storage account window displays. He selects Rg1 in the Resource group field. [Video description ends]

Storage account name, not using uppercase letters. So let's say we call this stor1990. Then I have to specify the Azure location to deploy this to.

[Video description begins] He selects Canada east in the Location field. [Video description ends]

And I have to determine whether I want it to be Standard or Premium, and the account kind. So if I want BlobStorage, I would choose that.

[Video description begins] He leaves the default value of Standard in the Performance field and selects Blob Storage in the Account kind field. [Video description ends]

Let's say I want the Cool access tier. And assuming that's all I want to do, I would just review my settings, let the validation succeed, and then create the storage account.

[Video description begins] A window with a progress bar and text- Submitting deployment- displays in the top-right corner of the screen. [Video description ends]

Once that's done, I can go to the Storage accounts view on the left, and I will see my newly created storage account. I may have to refresh. And here I'll see my newly created storage account, stor1990. If I click it, from within here, I can upload content.

[Video description begins] He clicks Storage accounts in the main navigation panel and stor1990 displays in the list of items on the right. When he clicks its name, its properties window displays. [Video description ends]

For example, by going to Blobs, where I could create a container, which I will call pics.

[Video description begins] He clicks Blobs in the Blob service group in the navigation pane. A New container window opens on the right. [Video description ends]

I'll leave it as Private, no anonymous access to the content.

[Video description begins] He types pics in the Name field and leaves the default value of Private in the Public access level field. [Video description ends]

And within pics, I can then select to upload content.

[Video description begins] He clicks the OK button and pics blob displays in the content list. He clicks its name and pics window opens. He clicks the Upload button on the top and an Upload blob window appears on the far-right. [Video description ends]

From here, I can then click the Select a file icon over on the far right.

[Video description begins] He clicks the folder icon next to the Files field. [Video description ends]

And once I've specified a file, I can click Upload to upload that file.

[Video description begins] He selects the file CustomerTransactions.xlsx and clicks the Upload button. The file name displays in the Current uploads section of the Upload a blob window. A window with the text : upload completed for CustomerTransactions.xlsx appears in the top-right corner of the screen. [Video description ends]

Now, the next thing I need to do is create an Azure file share. Now, what we can do is within the Properties blade for a storage account, we can work with files. Now, notice here as I look through the Properties blade of this, we're looking at the Blobs within the storage account. So if I back up one level, let's go back into that, as you scroll down through, sometimes in a storage account, depending on how it was created, you'll see the Files option. Other times, as in this one, you will not. That's because of the way that this was created for Blob storage.

[Video description begins] He closes the cross on all the 3 open windows and reaches the Storage accounts window. He clicks stor1990 in the list and scrolls through its navigation pane, looking for the Files menu. [Video description ends]

So if I were to open up a different storage account, like stor1989, and scroll down. Notice here that the Files service is available.

[Video description begins] He closes this window and goes back to the Storage account window. He clicks stor1989 and its properties page displays. He locates the Files menu in the File service group in the navigation pane. [Video description ends]

So I'm going to go ahead and click Files. I'll click File share and call it something.

[Video description begins] He clicks File and its window opens on the right. He clicks the File share button with a large plus icon and a File share window opens on the far right. There are 2 fields -Name and Quota, and 2 buttons- Create and Discard. [Video description ends]

So for example, if this is going to be for budgets, then I would call it budgets. And for the Quota, maybe I'll set a size of 4 gigabytes, and I'll click Create.

[Video description begins] A window with the text - Successfully created storage file share- appears in the top-right corner of the screen. Budgets file share displays in the properties window now. [Video description ends]

Now, when I go into budgets, I then have to bear in mind that if I click Connect, here I can see the commands that could be used to connect to it from either an on-premises machine or even a virtual machine deployed in the Azure cloud.

[Video description begins] A budgets window opens. It has buttons- Connect, Upload, Add directory, Refresh, Delete share, and Quota. Location is budgets and no files are listed below. [Video description ends]

[Video description begins] A Connect window opens in the far right. It has 3 tabs- Windows, Linux, and MacOS. Windows tab is active now. Drive Letter is Z and 2 commands displays with a copy icon beside them. [Video description ends]

For instance, using the net use command on a Windows host to map drive letter Z to this specific shared folder. The last thing I need to do here is create a key vault and create a secret within it. I'm going to choose Create a resource, and I'm going to type in key vault, and I'm going to click Create.

[Video description begins] He clicks Create a resource in the main navigation pane and types key vault in the Name field. Then, he selects Key vault from the drop-down results and a Key Vault window opens. [Video description ends]

So I have to give it a name, I'm going to call this kv1991. And I'm going to deploy this into an existing resource group, and I'll accept all of the other defaults, and I'll click Create.

[Video description begins] In the Create key vault window, he types kv1991 in the Name field and selects Rg1 in the Resource group field. [Video description ends]

Now, a key vault needs to have secrets in it that are accessed by code. Which the code might need in turn to authenticate to other services elsewhere. So if I go to All resources, my view, and I filter, let's say by kv, we'll see our new vault, kv1991.

[Video description begins] When the key vault kv1991 is created, he closes the window and clicks All resources in the main navigation pane. He types kv in the Name field to filter by name. kv1991 displays in the results below. He clicks kv1991. [Video description ends]

Within it, I can click Secrets if all I want to do is to find, for example, a secret password as opposed to security keys, cryptographic keys, or PKI certificates.

[Video description begins] He clicks Secrets in the Setting group in the kv1991 navigation pane. No secrets display on the right. [Video description ends]

So I'm going to choose Generate/Import, and I'm going to manually create a secret here called secret2. And I'll put in a secret value here, and then I'll click Create.

[Video description begins] A window with the text - Deployment succeeded- displays in the top-right corner of the window. He closes it and clicks the Generate/Import button at the top of the window. [Video description ends]

[Video description begins] A Create a secret window opens. The Upload options contains Manual. He types secret2 in the Name field and types a value in the Value field. A window with the text- Creating the secret 'secret2' - appears at the top of the screen. Secret2 displays in the list of secrets in the kv1991 storage vault. [Video description ends]

Now, here within the portal, I can actually click on secret2 and follow down through that to the point where I can click the Show Secret Value button to actually expose that key vault secret item.

[Video description begins] When he clicks on secret2, its properties window displays. It shows 1 item in the CURRENT VERSION section with a status of Enabled. [Video description ends]

[Video description begins] When he clicks the item, its window opens. He scrolls down to the Secret section and clicks the Show Secret Value button. The field below displays the text testing, and this is the value he typed while creating secret2. [Video description ends]


Azure Serverless Computing
Microsoft Azure has a number of service offerings that are under the classification of serverless computing, but what does this mean? Because in the end, there's always an underlying server that's used, for example, to support a database application and code that's running. However, we're talking here about automated server deployment and management, what this means is a managed service. So that we don't have to worry about actually deploying a virtual machine and the operating system and the tools within it that will run our code.

So, really we're talking about focusing more on code and applications that result from that. So, really this is of primary interest to developers. An example of this would be working with what are called Azure functions, which we'll talk about in more detail later. Azure functions allow you to create and run code on-demand in the cloud without having to worry about provisioning a server that has the appropriate engine that can run that code. It's taken care of for you.

Now we can implement Azure functions in a number of different ways. It could be used for a web application, it could be a mobile device app that we're developing, that is configured to talk to Azure resources through our functions. We could look at Internet of Things, or IoT, received data, such as through the Azure IoT Hub. In Azure, that could trigger a function that we've created as an Azure function.

And so the key is here, we've got a container, so to speak, in which we can run our code without having to define the underlying server operating system details to support the running of that code. You might even have an Azure function through serverless computing that takes a look at files that people might upload to an Azure storage account. And when that file is uploaded, that is a trigger that fires off the Azure function that maybe categorizes or adds metadata to that file or does something specific with it.


Deploy an HTML Azure App Service
So here in the Azure portal, I'm going to start in the upper left by clicking Create a resource. And then under the Web category, I'm going to choose Web App.

[Video description begins] In the navigation pane, he clicks Create a resource and the New window displays. He clicks Web in the Azure Marketplace column, and a list of apps with their logos display in the Featured column. He clicks Web App from here. [Video description ends]

I'm going to call this web app webapptest172. And notice it that's going to be part of the url, because it's going to add .azurewebsites.net as a DNS domain name suffix. Although I can configure custom DNS domain names if I wish.

[Video description begins] The Web App window displays. He types webapptest172 in the App name field. The same text gets displayed in the Resource Group below too. [Video description ends]

I'm going to stick with that one, and I'm going to put this in an existing resource group. Although you could build a brand new resource group into which you deploy all of the items that will be related to this web application.

[Video description begins] He clicks Use existing in the Resource group field, and selects Rg1 from the drop-down menu. [Video description ends]

I can choose either Windows or Linux for the backend operating system hosting my application, my web app. I'm going to leave it as just code, as opposed to using a darker image to run the app.

[Video description begins] He leaves the default value of Windows in the OS field and Code in the Publish field. [Video description ends]

And then I have to deal with the service plan. And I'm going to click on Service plan and we're going to create a new one.

[Video description begins] He clicks the arrow in the App Service plan/Location field. The App Service plan window appears on the right. He clicks the Create new button there. [Video description ends]

Going to call this testwebapp172_ or dash rather, serviceplan.

[Video description begins] A New App Service Plan window appears on the far-right side. He types testwebapp172-serviceplan in the App Service plan field. [Video description ends]

The next thing I'm going to do is specify the location, which in this case will be Canada East. And notice that in this service plan for the app, this is where I can specify the pricing tier or the sizing for the underlying virtual machine or machines that will support my app.

[Video description begins] He clicks the arrow in the Pricing tier field. A new window with Recommended pricing tiers displays. There are 3 tabs in the window, namely Dev/Test, Production, and Isolated. He clicks the first tab. [Video description ends]

So I'm going to go ahead and choose the Dev / Test category. And I'm going to choose this F1 pricing tier, where I've got 1 gigabyte of memory and I'm going to go ahead and click Apply, and then I'll click OK.

[Video description begins] 3 Recommended pricing tiers display. He selects the first one named F1, and clicks the Apply button. F1 Free displays in the Pricing tier field now. testwebapp172-serviceplan displays in the App Service plan field now. [Video description ends]

So we can now see that that app service plan is now tied to this web application. And then I'm going to go ahead and click Create to build the web app. After a moment, over on the left, if I go to App Services, I will see that my application now exists and that its status is listed as Running.

[Video description begins] He clicks App Services in the main navigation pane and all the available app services are listed on the right. webapptest172 displays there. [Video description ends]

Otherwise I can keep clicking Refresh up at the top until I see it. Of course, I can always look up my alerts until I see that the deployment succeeded for this specific resource.

[Video description begins] He clicks the bell icon located next to the Search field in the Azure window. All the notifications display. Deployment succeeded displays there. [Video description ends]

So I'm going to go ahead and click on my web app, and in the overview panel, what I'm interested in to start with is the URL.

[Video description begins] He closes the notifications window and clicks webapptest172. Its properties window displays. [Video description ends]

So notice the URL here is comprised of the name of the resource with .azurewebsites.net which we saw while we were creating it. I'm going to go ahead and copy that.

[Video description begins] The URL is https: //webapptest172.azurewebsites.net. A copy button is present next to it. When he clicks the button, the text Copied displays as a tip. [Video description ends]

And we're going to open up that website in a new web browser window. And this is what I can expect to see by default, an Azure page that says, Your App Service app is up and running.

[Video description begins] He pastes the copied URL in a new browser window and a Microsoft Azure page displays. [Video description ends]

And if I go back to the Azure portal, indeed, we can see that is the URL, and indeed everything is working. Now, if I scroll down, we also have a lot of configuration settings for our web applications. So if I go to Application settings, we can determine the language support in the back end. For example, the version of PHP, which can matter, depending on what kind of functionality you're writing into your PHP scripts.

[Video description begins] He clicks Application settings in the Settings group in the navigation pane. Its window displays on the right. v4.7 displays in the .NET Framework version field. He clicks the drop-down arrow in the PHP version field. 5 options display, namely Off, 5.6, 7.0, 7.1, and 7.2. [Video description ends]

Also, we can see the .NET Framework version, Python and Java, if we're going to be using those. So we have a number of options here that we can configure for our specific application. As I go further down on the application settings page, I can also see the default documents. So these are the documents that will be pulled up when the URL is connected to.

Such as Default.htm or, what we're going to be interested in in a moment, index.php. As I scroll further and further down, we can also specify custom domain names. Now, in this particular case, we'd have to upgrade the app service plan type in order to do that, but we can do it.

[Video description begins] He clicks the Custom domains menu in the navigation pane and a page opens on the right. It is titled Custom Hostnames and it is used to configure and manage custom hostnames assigned to your app. There is a button with a caption- Click here to upgrade your App service plan to assign custom hostnames to your app. [Video description ends]

So what I'm going to do then is I'm going to take an existing on-premises PHP file I've created. And we're going to upload it here to our web app and make sure that it takes effect. So here's my sample PHP file on-premises. It really just comes back and says, sample PHP page hosted in Azure. And sets the title in the browser to My Azure Web App.

[Video description begins] He opens a document in MS-Word. It has HTML code for the main page of his web app. Between the title tags is the text - My Azure Web App. [Video description ends]

What I want to do is save this file locally on-premises and then upload it to the site, and I'm going to do that through FTP. So back here in the portal, I'm still looking at the properties blade for my web application. I'm going to scroll back up and choose Overview. And then from here, I can see I've got the FTP hostname, which is important, but what I want to do is get the publishing profile.

[Video description begins] He goes back to the web app window and clicks Overview in the navigation page. He clicks the Get publish profile button denoted by a download symbol. [Video description ends]

This is going to provide me with the credentials, not just the FTP username, but also the FTP password. So I'm going to go ahead and download the publishing profile. Once that's been downloaded, I'm going to go ahead and click to open it up.

[Video description begins] The downloaded publish profile displays in the start bar of Windows and he clicks it. A Notepad file displays. [Video description ends]

What I'm interested in primarily is the username here listed and also the user password for FTP.

[Video description begins] He highlights userName and userPWD in the file. [Video description ends]

I've downloaded and installed the free FileZilla FTP GUI tool. So the first thing you need here is the host.

[Video description begins] He opens FileZilla. It has a menu bar and a tool bar at the top. Next, are 4 fields, namely Host, Username, Password, and Port. Then there is a Quickconnect button. All the files and folders in the network display below in a hierarchial format. [Video description ends]

So back here in the portal, I'm on the Overview part of the Properties blade. So I'm going to go ahead and copy the FTP hostname and paste that into FileZilla.

[Video description begins] He goes back to the Azure window. He clicks the copy button next to FTP hostname and pastes it in the Host field in FileZilla. [Video description ends]

Next, I'm going to go to the publishing profile I downloaded and copy the FTP username and password and then paste them into the appropriate fields here in FileZilla. And once I've done that, I'll then click, Quickconnect. And after a moment, we can see on the right, under the Remote site section, we have access to our web application, but in the underlying file system through FTP. So if I go to wwwroot, the root of the website, we've got the default Azure placed hostingstart.html file.

[Video description begins] Below the fields and Quickconnect button, the screen is divided into left and right sides. The left side shows files and folders in the Local site, and the right side shows the Remote side. In the Remote side section, he clicks site located in the root. [Video description ends]

[Video description begins] 3 folders display under site. One of them is wwwroot. When he clicks it, hostingstart.html file displays below, on the right side. [Video description ends]

But what I want to put there is my index.php. So that is available on my local machine under samplefiles, which I'll choose on the left.

[Video description begins] He goes to the Local site section in the left, and clicks samplefiles folder there. [Video description ends]

There's index.php, so I'm just going to drag that over and drop it so that it shows up into the wwwroot folder for my site.

[Video description begins] index.php file appears on the left side below. [Video description ends]

And here in a browser, I've still got the URL for my site, but if I refresh, I'm now going to see it's picking up my Sample PHP page that I've uploaded.

[Video description begins] He closes FileZilla and goes to the new Azure window there. A line of text displays there. It says: Sample PHP page hosted in Azure. [Video description ends]

So you can use other tools to manage the content and the code for your website, such as Visual Studio. You might run that on-premises, so that you can work with your code and then push it up into the cloud into your Azure web application.


Azure Functions
Azure Functions fall under the classification of serverless computing. These allow developers in the cloud to create and run code. And so the fees that are charged are based only on when that code is actually running. With Azure Functions, developers don't have to worry about deploying virtual machines and virtual networks, and taking care of all of that underlying infrastructure. Because this is a managed service, developers can focus more on the code and the applications that they need to think about and work on, instead of the supporting infrastructure.

So this is really for software developers. And as a software developer, you would be interested in knowing whether or not you can use the language of your choosing, that you're familiar with, with Azure Functions. There are a wide variety of languages that can be used, including PHP, Java, Node.js, C#, and F#. Now, what happens is we have to think about what will trigger the functions to execute.

[Video description begins] Screen title: Azure Function Usage. [Video description ends]

There are plenty of different types of triggers that can be defined for an Azure Function, such as a CosmosDBTrigger. This means that when data is either modified or placed into a Cosmos DB database, then the code can be triggered at that point in time. If users upload content to a storage account container, then the BlobTrigger would kick in, and we could have it execute an Azure Function of our choosing.

You might do that to further organize uploaded files, or to do something specific to them. Such as maybe adding a watermark to a video image that's uploaded or to a graphic file image. The HTTPTrigger, as the name implies, gets triggered based on a specific type of HTTP request. And so when that is triggered, we can define which Azure Function runs. There's also a QueueTrigger, which is based on messages coming into an Azure storage queue that developers could query. And then when that occurs, an Azure Function could run.

Azure Functions, because we're talking about development here, can be defined in a number of different places, such as through the Azure portal. Or you might use a tool that you're familiar with, such as Visual Studio. You might use the Azure CLI to work with functions. And of course, you might use specific language tools related to languages such as Java and Python.

[Video description begins] An infographic displays. It has a cloud with a hammer and screw driver in the center. 4 branches emerge from the symbol. Each ends in a caption.- Azure Portal, Visual Studio, Java and Python, and Azure CLI, respectively. [Video description ends]


Azure App Event Grid
  - The purpose of Event Grid is it lets developers configure certain triggers by events such as making a change to an Azure resource. That can then connect to some kind of endpoint or hook into some other aspect of an application for notifications. And in our particular case, we're simply going to set it up such that when a change is written to an Azure virtual machine, we want to be notified via email.
  - The first thing we'll do here, to get started is we will create a Logic App. Here in the Azure portal, I'm going to click Create a resource over on the left, and I'm going to type in the word logic and then from the results, I'll choose Logic App.
[Video description begins] He clicks Create a resource in the navigation pane, and types logic in the Search field. He selects Logic App from the drop-down results. A Logic App window displays. It has a brief explanation about logic apps and a Create button. [Video description ends]

Then I'm going to go ahead and click on Create so we can get to the point where we start configuring this resource. So after specifying a name, here I'm going to call it vmchange_logicapp, and in this case, I'm going to put it into an existing resource group and I've specified the location. After having done that I'm simply going to click on Create.

[Video description begins] The Logic App window displays. He types vmchange_ logicapp in the Name field. He leaves the default value of Pay-As-You-Go in the Subscription field. He leaves the default option- Use existing- in the Resource group field, and selects Rg1 in the field below. He selects Canada east in the Location field, and leaves the default value Off in the Log Analytics field. [Video description ends]

And after a moment, if I go to my All Resources view and if I type in logic, then we could see our Logic App listed.

[Video description begins] He clicks All resources in the navigation pane and types logic in the Name field on the right. vmchange_ logicappdisplays in the list below. He clicks it and its properties page displays. [Video description ends]

If I click on it, it starts the Logic App's designer where we can get some help on how to work with this and we can also choose from some basic templates.

[Video description begins] The Logic Apps Designer window opens. Basic templates are listed there. [Video description ends]

So like when a message is received in a queue, or when an http request is received, and so on. And if I scroll down a little bit beyond all that, I can choose to build a blank Logic App which I'm going to do here.

[Video description begins] He scrolls down and clicks the tile with a large plus symbol and caption Blank Logic App. A new page opens It has buttons, Save, Discard, Run, Designer, Code View, Templates, Connections, and Help. A Search field is also present to search connections and triggers. Below are 6 tabs- For You, All, Built-ins, Connections, Enterprise, and Custom. The For You tab is active now and there are no recent connections to show. [Video description ends]

And I'm going to search for event grid.

[Video description begins] He types event grid in the Search field and clicks the All tab. Many event grids with their logos display below. [Video description ends]

So I'm going to choose Azure Event Grid. And then when a resource event occurs for Azure Event Grid.

[Video description begins] He clicks the Azure Event Grid and a new tile appears. It has a field, Tenant, with the text Default Directory written in it. There is a Sign in button below the field. [Video description ends]

And then I'm going to click Sign in to authenticate to my Azure subscription And then I'm asked to confirm that I want to allow the provisioning to provide access to Azure Event Grid.

[Video description begins] A confirmation dialog box appears. He clicks Allow access. [Video description ends]

And I'm going to choose Allow Access. And then I have to fill in this detail related to the subscription and also the resource type that I'm interested in in this particular case. So I'm going to choose Microsoft.Resources.ResourceGroups for the resource type and I'm going to set the resource name to a resource group that I already have Rg1 that I know virtual machines have been deployed into. And then I'm going to go ahead and save this Logic App.

[Video description begins] A new tile appears titled When a resource event occurs. He selects Pay-As-You-Go in the Subscription field. [Video description ends]

[Video description begins] He clicks the Save button in the Logic Apps Designer window. [Video description ends]

Now, I'm going to go back into the Logic app designer here in my Logic app.

[Video description begins] In the vmchange_ logicapp window, he clicks Logic app designer in the Development Tools group in the navigation pane. [Video description ends]

And underneath, when a resource event occurs, I'm going to click New step, and then I'm going to choose Built-in and I need some kind of conditional way to determine what's going to happen next. But to do that I'm going to scroll down and choose Condition. That's a control.

[Video description begins] A Choose an action window opens. He selects the Built-ins tab. [Video description ends]

[Video description begins] He scrolls down to the section with 2 tabs- Triggers and Actions. All the actions are listed in the Action tab and he selects Condition. [Video description ends]

And I'm going to specify data.operationName is equal to and what we're looking for is any right activity for our Azure virtual machines related to the resource group.

[Video description begins] A tile titled Condition opens. It has boxes with text and drop-down arrows. At the top is a box with text And. It branches down into 2- one a check box with 3 boxes captioned data.operationName, is equal to, and Microsoft Compute. The second branch has text +Add and a drop-down arrow. [Video description ends]

So that's my condition. Now, down below, for true, and also, of course, if that turns out to be true versus false, we can add an action. So if it's true, if a change has been made to write to a virtual machine, I'm going to click Add an action.

[Video description begins] Below the tile, are 2 more tiles titled if true and if false. He clicks Add an action in the if true tile, and a Choose an action box window appears again. [Video description ends]

And from here I can choose what it is exactly that I want to do. So for example I could search for email if I want to send off an email notification. And lets say I choose Gmail.

[Video description begins] He types email in the search field and clicks Gmail icon in the search results. A new window with actions related to Gmail pops up. [Video description ends]

And then what do you want to do in Gmail? Well what I want to do is send an email message. And from here what I would have to specify are the details related to working with Gmail. If it's the first time I've ever done this, I'm going to have to sign into my Gmail account. Because I've already done that I can specify who I want to send the message to. So a list of email addresses, and I can also add other additional items such as the subject and body here of the message.

[Video description begins] He clicks the action Send email and a new window pops up. It is titled Send email and has fields such as To, Body, and Subject. He checks the elements he wants in his email. [Video description ends]

So maybe in the body, what I want to do is add, let's say, the specific type of event and if I scroll over maybe for the subject, I want to list the subject of the event. And again up here, I can specify some email addresses. So I'm going to go ahead and do that. Email addresses should receive this notification and then I'll click the save button.

[Video description begins] He clicks the Body field and a panel pops up in the right side. It has 2 tabs- Dynamic content and Expression. There is a Search field on the top and various events listed below. Some of them are Event Time, Event Type, and ID. He clicks all the events he wants. [Video description ends]

[Video description begins] He types an email address in the To field. [Video description ends]

After that's done, if I were to go for example to a virtual machine and open up its properties blade and make a change to it such as let's say go to sizing and just choose a different size and click on resize.

[Video description begins] He goes back to the Virtual machines page and clicks Size in the Settings group in the navigation pane. [Video description ends]

I'm writing to that virtual machine, and so our Logic app should capture that event.

[Video description begins] He clicks 81s in the VM SIZE column. A window with the text- Resizing virtual machine- pops up at the top of the machine. [Video description ends]

And so if I go back, let's say to all resources, the view filter for logic, and there's our Logic app. Under the overview part of that if I scroll down I can see for example the status is succeeded down under the run history for our current configuration.


SQL Overview
  - Structured Query Language, or SQL, is the language that's used to access relational database objects and their data. So with a SQL-compliant type of database system, data tables are related via common fields. This is called normalization, and it's a technique that's used to reduce the amount of repeated data. We'll see that in a moment when we see an example of how we might link tables together.

SQL objects include the server that hosts one or more databases. Within a database, we can have one or more tables that actually store the data. Within the table, we have it broken down by fields or columns. So, for example, we might have a table called Customers, and one of the fields might be Customer ID. When we actually populate a table with data, we end up with a record otherwise called a row.

In our example with the Customers table, the record or row would include everything about a customer. So a customer ID, the first and last name, mailing information, and so on. Databases can also contain stored procedures, essentially which are scripts that can be run against items within the database.

We can also create views within a SQL-compliant database that can bring together columns from different tables so we can view it all in one place. And, of course, we can construct a multitude of different types of queries, essentially asking questions about the data stored in tables, such as show me all customers that have spent more than $10,000 in the last quarter.

[Video description begins] Screen title: SQL Table Relationship. [Video description ends]

Pictured on the screen, we've got two tables, and this is used to demonstrate the relationship between tables.

[Video description begins] Two tables are displayed on the screen. The first table is titled Customers table. It has the following three columns: CustID, Lname, and Fname. It contains two rows of data for customer IDs 001 and 002, respectively. The second table is titled Purchases table. It has the following three columns: CustID, Date, and Amount. It has two rows of data for customer ID 001. [Video description ends]

At the top, we've got a Customers table, where we have three columns: Customer ID, Lname for last name, and Fname for first name. Then, we have a second table called Purchases table. It's got three columns, but notice what it has in common with the Customers table, the Customer ID. So Customer ID 001 exists only once in the Customers table.

However, that customer, hopefully, will have more than one purchase with us, and so we can expect to have repeating entries for that Customer ID in the Purchases table. But we don't want to repeat the last name and the first name and everything else about a customer. All we need is one unique item, in this case, the Customer ID to be repeated to link all the purchases in the Purchases table to the customer in the Customers table.

Common SQL-compliant database products would include Microsoft SQL Server, MySQL, Oracle Database, and Sybase to name just a few. In other demonstrations, we're going to take a look at how we would deploy Microsoft Azure SQL Database in the cloud, which is a managed service where we don't have to worry about the underlying virtual machine deployment and the SQL software; it's already built in.


Azure SQL Database
  - One characteristic of cloud computing is rapid provisioning of resources and rapid elasticity, and that's definitely true with Microsoft Azure SQL Database. With SQL Database, we're talking about database as a service, called DBaaS, which is also platform as a service in the cloud.

[Video description begins] Platform as a Service is abbreviated to PaaS. [Video description ends]

It's a managed service, and that's where the rapid elasticity comes in because we don't have to worry about deploying virtual machines and then installing the Microsoft SQL Server software. All of that is taken care of for us when we deploy Azure SQL Database. So, it's very quick to get up and running. We can also bring our own license. BYOL, bring your own license, will let you reuse any existing SQL Server additional licenses that you want to reuse in the cloud when you deploy Azure SQL Database.

You also have the option of migrating your on-premises SQL data into Azure, so you can reuse your data instead of having to recreate it in the cloud. Azure SQL Database supports scaling in the form of horizontal scaling. This means scaling out, by adding database replicas and also database sharding, which allows us to have more information split up horizontally. What this really means is taking large datasets and breaking them into smaller pieces to improve performance, that's where sharding comes from.

But also, Azure SQL Database allows us to scale vertically, increasing or decreasing the underlying horsepower for each SQL Server instance. And we can do that by configuring virtual machine instance sizing. We can manage Azure SQL Database using the GUI, through the Azure portal, or through the Azure CLI. For example, we could use the az sql db create command to create a database. The equivalent in PowerShell would be New-AzSqlDatabase.

And if you're using ARM templates to deploy and manage Azure resources, you would be looking at a resource type of Microsoft.Sql/Servers. With Azure SQL Database, there is a specific database server firewall enabled, and that's on by default for SQL. So if you want to make a connection into Azure SQL Database from externally, you are going to have make sure you create a firewall rule to allow inbound port 1433 traffic.

Port 1433 is what's used by SQL Server by default. There is even an option where you can add your client IP. So when you are using the portal and you are viewing the firewall information for this, for SQL Database, then what you'll notice is that it'll show your current client IP address that you are connected from, your public IP address if you are behind a NAT router.

And so you can conveniently simply add that as the IP you want to allow through the firewall. And then I would allow you, for example, to use tools like SQL Server Management Studio on-premises to reach into the Azure cloud to your SQL Database instance to manage it.

[Video description begins] Screen title: Azure SQL Database Details. [Video description ends]

When you deploy Azure SQL Database, whether it's through the GUI or through command line tools, there are a number of things you have to take into account, one of which is whether you want to deploy a new SQL Server instance or use an existing one that you might have already deployed. SQL Server instances have the DNS domain suffix of .database.windows.net by default.

You need to specify a unique server and a database name when you are deploying Azure SQL. You have to determine which location, or Azure region, into which you want to deploy Azure SQL Database. From a performance standpoint, you also have an option of selecting database transaction units, or DTUs.

This is a culmination of factors that control the performance when it comes to reading and writing to and from databases. It includes things like the amount of virtual CPU, the amount of memory, and how fast disk I/O is.

The last consideration is that if you're deploying Azure SQL Database for testing purposes or any other temporary reason, make sure that you remove any unused databases and server instances as soon as you are finished. You don't want to leave these things running in the background because you are charged for all of the time that it's left running. So make sure to delete it when you are finished with it.


Azure SQL Database GUI Deployment
  - Azure SQL database is a managed service, and in the cloud, what this really means is that we have an easy way to quickly provision something, in this case, an Azure SQL database, without worrying about the underlying complexities, like virtual machines, and the operating systems, and installing the database software, in this case, Microsoft SQL Server.

[Video description begins] A Microsoft Azure webpage is displayed on the screen. It has a menu bar with a search bar and the following options: Filter, Notifications, Settings, etc. A navigation pane is also present with the following options: Create a resource, Home, Dashboard, All services, and Favorites. The main body of the page has a section titled Azure services. Some of the options here are: Virtual machines, Storage accounts, App Services, etc. [Video description ends]

So here in the portal, let's see how this works by starting with clicking on Create a resource in the upper left.

[Video description begins] He clicks on Create a resource from the navigation pane. A screen titled New appears. It has a search bar and a column titled Azure Marketplace. Some of the items here are: Get started, Recently created, Compute, Networking, Databases, etc. A column titled Featured is also present on this screen. Some of the items here are: Azure SQL Managed Instance, SQL Database, SQL Data Warehouse, etc. [Video description ends]

And in the Databases category, on the right, I will then choose SQL database.

[Video description begins] From the Azure Marketplace column, he selects Databases. From the Featured column, he selects SQL Database. A page titled Create SQL Database appears. It has four tabs: Basics, Additional settings, Tags, and Review +Create. The Basics tab is currently open. It has drop-down menus for Subscription and Resource Group. The default value for Subscription is Pay-As-You-Go. The default value for Resource Group is cloud-shell-storage-eastus. [Video description ends]

Now the first thing I have to do is tie this to a resource group. I've already got one, so I'm going to put it in that resource group, and I have to give this a Database name.

[Video description begins] He clicks the drop-down menu for Resource Group. A list of options appears. He selects Rg1 from the list. He then scrolls down the page. A section titled Database Details appears. It has an input box for Database name and a drop-down menu for Server. There is a question that reads: Want to use SQL elastic pool? It has two options with radio buttons: Yes and No. No is currently selected. For Compute+storage, there is a link for Configure database. At the bottom, there are two buttons: Review+Create and Next: Additional settings. [Video description ends]

So I'm going to start by calling this sqldb172. Now, this name needs to be checked for uniqueness. And once it is okay, and it's been typed in correctly, and there are no invalid characters, we'll get this little green check mark over on the right.

[Video description begins] In the input box for Database name, he types sqldb172. [Video description ends]

Now, down below, I can either tie this to an existing SQL server instance hosted in Azure or I can click Create new, which I'm going to do here.

[Video description begins] There is a link titled Create new below the drop-down menu for Server. He clicks the link. A screen titled New server slides onto the screen. It has input boxes for Server name, Server admin login, Password, and Confirm password. A drop-down menu for Location is also present. The default location is Canada East. Below it, there is a check box for Allow Azure services to access server, which is currently checked. At the bottom there is a Select button. [Video description ends]

And I'm going to call this sqlsvr, for SQL Server, 172. Again, it has to wait for the name to be checked, and it looks good. Then I'm going to specify some server admin login info, so user name, and I will confirm the password.

[Video description begins] In the input box for Server name, he types sqlsvr172. [Video description ends]

[Video description begins] In the input box for Server admin login, he types cirving. He types the password and confirms the password. [Video description ends]

And after that, I'm going to go ahead and click on Select.

[Video description begins] He clicks the Select button. The New Server screen disappears. The value for Server is (new)sqlsvr172 (Canada East). [Video description ends]

So we're creating a new SQL server instance, which is good. I'm just going to scroll down here, I'm going to leave it on the default Compute and storage configuration.

[Video description begins] The value for Compute+storage is Standard S0 10DTUs, 250 GB. [Video description ends]

So 10 DTUs, that's database transaction units, and 250 gigabytes. Although we could click on Configure database and depending on our workload, we could choose the amount of data that we want to be able to accommodate and the database transaction units using these two sliders. So it's always dependent upon your specific workload.

[Video description begins] He clicks the Configure database link. A page titled Configure appears. It has three options: Basic, Standard, and Premium. Basic is currently selected. It has two sliders for DTUs and Data max size. The current DTU is 0 and Data max size is 250 GB. At the bottom, there is an Apply button. He clicks it and the screen shifts to the previous page. [Video description ends]

In this case, I'm going to click Next: Additional settings.

[Video description begins] He clicks the Next: Additional settings button. The screen shifts to the next tab: Additional settings. It has three options for Use existing data: None, Backup, and Sample. None is currently selected. For Collation, there is an input box with the following default value: SQL_Latin1_General_CP1_ CI_AS. At the bottom, there are three buttons: Review + Create, Previous, and Next: Tags. [Video description ends]

Then, I can determine whether I want to have a blank database or use some kind of existing data from a sample data set or a backup. I'm going to leave it blank by leaving it on None. Then I'll click Next.

[Video description begins] He clicks the Next: Tags button. The screen shifts to the next tab, Tags. It has drop-down menus for Name, Value, and Resource. The Resource is Database. At the bottom, there are three buttons: Review + Create, Previous, and Next: Review + Create. [Video description ends]

I can tag this, perhaps to tie it to a project or department, but I'm going to leave that as it is. And finally, on the Review page, I can see the estimated cost per month.

[Video description begins] He click the Next: Review + Create button. The screen shifts to the next tab, Review + Create . It contains Product Details, Terms, Basics, etc. At the bottom, there are two buttons: Create and Previous. [Video description ends]

So we wana be careful with this. This is one of those types of resources in Azure you wanna make sure you shut down or even delete the moment you no longer need it, so you don't incur charges.

[Video description begins] He highlights the estimated cost per month, which is 16.50 USD, listed under Product Details. [Video description ends]

So I'm going to go ahead and click Create.

[Video description begins] He clicks the Create button. An overview page appears. It reads: Your deployment is complete. It has a button labelled Go to resource. It has a navigation pane with the following options: Overview, Inputs, Outputs, and Template. The Overview page is currently open. There is a table on this page. It has following columns: Resource, Type, Status, and, Operation Details. The table has three rows of data. [Video description ends]

And after a moment, we have a message that says our deployment is complete. See it's created a firewall rule here to allow inbound port 1433 traffic to SQL. Then we've got the database and the server.

[Video description begins] The presenter points to the data in the table. He then closes the Overview page and shifts to the home screen of Microsoft Azure. [Video description ends]

Of course, we're going to see all those items here if we go to the All resources view and start to filter the view.

[Video description begins] From the navigation pane, he clicks on All resources present under Favorites. A page titled All resources appears. It has the following buttons on the top: Add, Edit columns, Refresh, etc. Below the buttons, there is an input box for name and drop-down menus for resource groups, types, location, tags, and grouping. Below these, there is a table with the following columns: Name, Type, Resource Group, Location, Subscription, and Tags. A few rows of data are present in this table. [Video description ends]

So if I just type in sql, here we can see our SQL server deployed in the cloud.

[Video description begins] He types sql in the input box for Name. Two rows of data can now be seen in the table. [Video description ends]

But we didn't have to worry about all the complexities that would normally be involved with that if we had deployed a SQL server on premises ourselves. So let's click on the SQL server here in Azure to pop up its Properties blade.

[Video description begins] He clicks on sqlsvr172 present in the table. A screen titled sqlsvr172 appears. It has a navigation pane. The main body contains details about the server. At the bottom, there are two tabs: Notifications and Features. The Features tab is currently selected. It has four tabs: All, Security, Performance, and Recovery. [Video description ends]

And from within here, for example, if I go to the SQL databases view, I can see it is hosting one of our SQL databases, sqldb172, which currently has a status of Online.

[Video description begins] From the navigation pane, he selects SQL databases. A page titled sqlsvr172-SQL databases appears. It has a table with the following three columns: Database, Status, and Pricing Tier. It has one row of data. The Database is sqldb172, Status is Online, and Pricing Tier is Standard S0: 10DTUs. [Video description ends]

And I'll just close out of this.

[Video description begins] He closes the current screen. [Video description ends]

If we go into our SQL database instance, so I'll click on it to pull up its Properties blade, then we have options we can configure, such as Geo-Replication, if we want it replicated to other locations in different Azure regions.

[Video description begins] On the All resources page, from the list of resources present in the table, he clicks sqldb172(sqlsvr172/sqldb172). A page titled sqldb172(sqlsvr172/sqldb172) opens. It has a navigation pane and the following buttons: Copy, Restore, Export, Set server firewall, etc. A list of information about the server is also displayed here. [Video description ends]

[Video description begins] He selects Geo-Replication under Settings from the navigation pane. A world map is displayed on the screen. [Video description ends]

And as we go further down, we'll see that we have a number of options related to things like security. So we've got some Advanced Data Security options available for the database, so vulnerability assessments, also, Dynamic Data Masking to mask some kind of important information, such as the entering of credit card numbers, and so on. And this is configured by configuring what are called masking rules.

[Video description begins] In the navigation pane, there is a section titled Security. It has the following options: Advanced Data Security, Auditing, Dynamic Data Masking, and Transparent data encryption. He clicks on Advanced Data Security. A page for Advanced Data Security opens up. It has a button labelled Enable Advanced Data Security on the server. [Video description ends]

[Video description begins] He clicks on Dynamic Data Masking, and the page for Dynamic Data Masking opens. It has a section titled Masking rules, where there is a table with two columns: Mask Name and Mask Function. The table is currently empty. Below it, there is a section titled Recommended fields to mask, where there is a table with three columns: Schema, Table, and Column. The table is currently empty. [Video description ends]

And if I go back to the Overview here for our database, I can see the SQL server name. This is what you need if you want to make a connection to this, for example, from on-premises. Now, at the same time, even from here within the database Properties blade, I could click the Set server firewall button, and, I can see my current Client IP address as seen on the Internet.

[Video description begins] He shifts to the page titled sqldb172(sqlsvr172/sqldb172). From the list of information, he points to the Server name, which is sqlsvr172.database.windows.net. [Video description ends]

[Video description begins] He clicks the Set server firewall button. A page titled Firewall settings appears. It has three buttons: Save, Discard, and Add client IP. For Allow access to Azure service, there are two buttons: On and OFF. On is currently selected. Client IP address is 71.7.176.108. There is a table with input boxes for Rule Name, Start IP, and End IP. [Video description ends]

[Video description begins] He highlights the Client IP address. [Video description ends]

And so from here, we have the option of making sure that we add a rule that could, for example, contain that IP address or other address ranges that we want to allow access from. Notice we've got an Add client IP button at the top that fills all that stuff in for me to allow connectivity.

So I'm going to go ahead and save that firewall rule because the machine I'm sitting at right now that does have this public IP address I do want to allow in through the firewall for SQL purposes.

[Video description begins] He clicks the Add client IP button. A new row gets added in the table. The Rule Name is ClientIPAddress_2019-3-13. Start IP is 71.7.176.108 and End IP is 71.7.176.108. He clicks the Save button. [Video description ends]

[Video description begins] A pop-up message appears. It reads: Successfully updated server firewall rules. The presenter clicks the OK button. The pop-up message closes. He then closes the Firewall settings page. [Video description ends]


Azure SQL Database CLI Deployment
The first thing I'll do is run az sql --help. This is a great way to get a sense of what the syntax will be as you begin working with this.

[Video description begins] In the command prompt window, he types az sql -- help. The group name and its function appear. This is followed by a list of subgroups and their definitions and a list of commands and their definitions. [Video description ends]

So notice, I can work with Azure SQL databases as well as servers, and so on.

[Video description begins] From the list of subgroups, he highlights db and server. The definition of db is Manage databases. The definition of server is Manage SQL servers. [Video description ends]

So I'm going to clear this screen, and I'm going to start by running az sql server create --name. Let's say, I call it sqlsvr456. And then, I'm going to put that in a --resource-group that I've already got called rg1. And --location. I'll put canadaeast, and then --admin-user for the SQL server, specify a value for that.

And then --admin-password. Now make sure you have the two dashes in front of these parameters, otherwise you get some kind of an error related to that. And I'm gonna go ahead and specify the password here that I want to use for that deployment. I'm going to go ahead and press Enter to build our Azure SQL Server instance.

[Video description begins] He types cls and presses Enter. The screen is now clear. He then types az sql server create -- name sqlsvr456 -- resource-group rg1 -- location canadaeast -- admin - user cirving -- admin - password Pa$$w0rdABC123. He presses Enter. A result is being generated. [Video description ends]

Now that that's successfully completed, I'm going to go ahead and build a SQL database tied to that server.

[Video description begins] A list of information is generated in the result. It includes details of administrator login, administrator login password, fully qualified domain name, id, identity, kind, location, name, resource group, state, tags, type, and version. [Video description ends]

So az sql db create, so I've got to deploy this into a resource group. So --resource-group rg1 in this case and --server. I've got to tie it to a server, so in this case, sqlsvr456. And I want to call this database --name, let's say, db456.

[Video description begins] He types cls and presses Enter. The screen is now clear. He then types az sql db create --resource-group rg1 -- server sqlsvr456 -- name db456. He presses Enter. A list of information is generated in the result. Some of these are: longTermRetentionBackupResourceID, maxLogSizeBytes, recoverableDatabaseID, sampleName, etc. [Video description ends]

Now that, that's done, the next consideration is that if you're gotta be using any kind of code or tools on-premises to reach into Azure to work with that SQL database, then you're going to need to have a firewall exception created in Azure. So let's go ahead and deal with that under that assumption. So I'm going to clear the screen with CLS, and I'm going to run az sql server firewall-rule create.

We're creating a firewall rule for SQL server, --resource-group rg1, and the server, --server sqlsvr456, and -n. What do you want to call this rule? How about AllowInboundSQL? And then --start-ip-address. Now because I'm behind a NAT firewall, I need to specify the public IP address as known out on the Internet for my connection here for this to work properly. So I'm going to go ahead and specify that address.

And after I've done that, I can then begin to specify the ending IP address. In this case, it's going to be the same thing because it's one IP. So once I've verified that that is correct, and it looks correct, I'm going to use --end-ip-address. And in this case, I'm going to use the exact same thing because it's only one IP I want to allow in, and that's my public IP address. So I'm going to make sure I don't have any typos here. And I'm going to press Enter to create that, and it looks like it's created. Let's go ahead and check our work in the Azure portal.

[Video description begins] He types cls and presses Enter. The screen is now clear. He then types az sql server firewall -rule create --resource-group rg1 -- server sqlsvr456 - n AllowInboundSQL --start -ip-address 71.7.176.108 --end -ip-address 71.7.176.108. He presses Enter. The following details are generated in the result: endIpAddress, id, kind, location, name, resourceGroup, startIpAddress, and type. [Video description ends]

[Video description begins] A Microsoft Azure webpage opens. It has a menu bar with a search bar and the following options: Filter, Notifications, Settings, etc. A navigation pane is also present on this screen. The options here are: Create a resource, Home, Dashboard, All services, and Favorites. The main body of the page has a section titled Azure services. Some of the options here are: Virtual machines, Storage accounts, App Services, etc. [Video description ends]

Here in the portal in the left-hand navigator, I'm going to click SQL databases. Here's db456. We can see it's tied to our server.

[Video description begins] He clicks on SQL databases from the navigation pane. A page titled SQL databases appears. It has the following buttons on the top: Add, Reservations, Edit columns, Refresh, etc. It has a table with the following columns: Name, Status, Replication, Server, Pricing Tier, Location, and Subscription. The table has one row of data. The SQL database name is db456 (sqlsvr456/db456). He clicks on this name. A page titled db456 (sqlsvr456/db456)appears. It has a navigation pane. The main body of the page has details about the following options: Resource Group, Status, Location, Server name, Elastic pool, etc. [Video description ends]

So if I go take a look at it, it look like it's online and ready to go.

[Video description begins] He points to the Status. It reads Online. [Video description ends]

I'm going to go to All resources, and I'll filter the list of Azure resources with things that start with SQL.

[Video description begins] From the navigation pane, he clicks on All resources present under Favorites. A page titled All resources appears. It has the following buttons on the top: Add, Edit columns, Refresh, etc. Below the buttons, there is an input box for name and drop-down menus for resource groups, types, location, tags, and grouping. Below these, there is a table with the following columns: Name, Type, Resource Group, Location, Subscription, and Tags. A few rows of data are present in this table. [Video description ends]

[Video description begins] He types sql in the input box for name. Two rows of data are now present in the table. [Video description ends]

There's our SQL server, sqlsvr456, and in the Properties blade, I'm going to scroll down under the Security section until I see firewalls and virtual networks, and notice here on the right, sure enough, we've got our AllowInboundSQL rule for our public IP address.

[Video description begins] He clicks on sqlsvr456 in the table. A screen titled sqlsvr456 appears. It has a navigation pane. The main body has details about the server. Some of these are: Status, Location, Subscription, etc. At the bottom, there are two tabs: Notifications and Features. The Features tab is currently selected. It has four tabs: All, Security, Performance, and Recovery. [Video description ends]

[Video description begins] In the navigation pane, there is a section titled Security. It has the following options: Advanced Data Security, Auditing, Firewalls and virtual networks, and Transparent data encryption. He clicks on Firewalls and virtual networks. A page for Firewalls and virtual networks opens up. For Allow access to Azure services, there are two buttons: On and OFF. OFF is currently selected. Client IP address is 71.7.176.108. There is a table with input boxes for Rule Name, Start IP, and End IP. One row of data is present in this table. The Rule Name is AllowInboundSQL, Start IP is 71.7.176.108, End IP is 71.7.176.108. [Video description ends]

Azure SQL Database PowerShell Deployment

[Video description begins] Topic Title: Azure SQL Database PowerShell Deployment. Your host for this session is Dan Lachance. [Video description ends]

In this demonstration, I'm going to use PowerShell to deploy an Azure SQL database. Here in this PowerShell ISE, I've got this in a script. I've commented out the first line, that's what the hashtag or pound symbol means because I've already connected to my Azure account and authenticated it.

[Video description begins] A window titled Windows Powershell ISE opens up. It has a tool bar and a menu bar. A tab titled Create_SQL_Server_DB.ps1 is open. It has 8 code lines. A Console pane is also present on this window. [Video description ends]

[Video description begins] He highlights code line 1. It reads: # Connect-AzAccount. [Video description ends]

So the first thing we're doing here is building a new Azure SQL server using that cmdlet. We are tying it or deploying it into a resource group. I am specifying a SQL server name. We are specifying the Azure location or region, and then we are specifying -SqlAdministratorCredentials. Now I've got the back tick symbol here that's not just a single quote, it's a back tick, and that allows me to continue the expression on the next line here in PowerShell.

[Video description begins] He points to code line 3. It reads: New-AzSqlServer -ResourceGroupName rg1 -ServerName sqlsrv3362 -Location canadaeast -SqlAdministratorCredentials `. [Video description ends]

And what I'm doing is then running new object of type System.Management.Automation.PowerShell or PSCredential. And the argument list is going to have the username, in this case cirving. And then I'm going to convert to a secure string, a password that I'm specifying here, within double quotes.

[Video description begins] He points to code line 4. It reads: $ (New-Object -TypeName System.Management.Automation.PSCredential -ArgumentList "cirving" , $ (ConvertTo-SecureString - String "Pa$$w0rdABC123" -AsPlainText -Force)). [Video description ends]

Then what's happening is we're building our new Azure SQL database and tying it to our SQL server instance that we've created above. And I'm calling this database db112.

[Video description begins] He points to code line 6. It reads: New-AzSqldatabase -ResourceGroupName rg1 -ServerName sqlsrv3362 -DatabaseName db112. [Video description ends]

And then I'm adding a new Azure SQL Server firewall rule to allow incoming SQL traffic from the appropriate IP address, which happens to be my public IP address for my on-premises environment.

[Video description begins] He points to code line 8. It reads: New-AzSqlServer FirewallRule -ResourceGroupName rg1 -ServerName sqlsrv3362 -FirewallRuleName "AllowIncoming SQL" - StartIpAddress 71.7.176.108 -EndIpAddress 71.7.176.108. [Video description ends]

So I'm going to go ahead and run this script by clicking the Run Script button up at the top.

[Video description begins] He clicks the Run Script button present in the tool bar. A list of details is displayed in the Console pane. [Video description ends]

And after a moment or two, we can see it looks like the script has completed running. So let's go check our work in the portal. Let's take a look for sqlsrv3362 and db112.

[Video description begins] He highlights sqlsrv3362 in code line 3, and db112 in code line 6. [Video description ends]

Here in the portal, I've gone to the All resources view and filtered for anything that starts with SQL, S-Q-L, and we can see indeed, we've got sqlsrv3362.

[Video description begins] A Microsoft Azure webpage opens up. It has a menu bar with a search bar and the following options: Filter, Notifications, Settings, etc. A navigation pane is also present on this screen. It has the following options: Create a resource, Home, Dashboard, All services, and Favorites. The All resources page is currently open. It has the following buttons on the top: Add, Edit columns, Refresh, etc. Below the buttons, there is an input box for name and drop-down menus for resource groups, types, location, tags, and grouping. Below these, there is a table with the following columns: Name, Type, Resource Group, Location, Subscription, and Tags. In the name input box, sql is entered. A list of sql resources is displayed in the table. [Video description ends]

And, if I open that Properties blade up, and go down under Firewalls and virtual networks, we can see our Allow incoming SQL firewall rule that was created.

[Video description begins] He clicks the 1st sql resource listed in the table: sqlsrv3362. A page titled sqlsrv3362 appears. It has a navigation pane. The main body has details about the server. Some of these are: Status, Location, Subscription, etc. At the bottom, there are two tabs: Notifications and Features. The Features tab is currently selected. It has four tabs: All, Security, Performance, and Recovery. [Video description ends]

[Video description begins] In the navigation pane, there is a section titled Security. It has the following options: Advanced Data Security, Auditing, Firewalls and virtual networks, and Transparent data encryption. He clicks on Firewalls and virtual networks. A page for Firewalls and virtual networks opens. For Allow access to Azure services, there are two buttons: On and OFF. OFF is currently selected. Client IP address is 71.7.176.108. There is a table with input boxes for Rule Name, Start IP, and End IP. One row of data is present in this table. The Rule Name is AllowIncoming SQL, Start IP is 71.7.176.108, and End IP is 71.7.176.108. The presenter closes this page and shifts to the All resources page. [Video description ends]

And we can also see that we've got DB or database 112 that was created as the result of our PowerShell script.

[Video description begins] He points to the 2nd sql resource listed in the table: db112 (sqlsrv3362/db112). [Video description ends]

Now the only other thing to bear in mind is don't leave these database resources running in Azure if you're not using them. Because you will pay for using them even if they're running, and you're not actually using them. So remove these resources when you no longer need them immediately.

Connect to Azure SQL Database

[Video description begins] Topic Title: Connect to Azure SQL Database. Your host for this session is Dan Lachance. [Video description ends]

Once you've deployed Azure SQL database in the Azure cloud, how do you connect to it? That's going to be the focus of this demonstration.

[Video description begins] A Microsoft Azure webpage opens. It has a menu bar with a search bar and the following options: Filter, Notifications, Settings, etc. A navigation pane is also present on this screen. The options here are: Create a resource, Home, Dashboard, All services, and Favorites. The All resources page is currently open. It has the following buttons on the top: Add, Edit columns, Refresh, etc. Below the buttons, there is an input box for name and drop-down menus for resource groups, types, location, tags, and grouping. Below these, there is a table with the following columns: Name, Type, Resource Group, Location, Subscription, and Tags. In the input box for name, sql is entered. A list of sql resources is displayed in the table. [Video description ends]

Here in the Azure portal, I've already deployed Azure SQL database. So I've got a SQL server instance and a database already up and running.

[Video description begins] He points to the two sql resources listed in the table: sqlsrv3362and db112 (sqlsrv3362/db112). [Video description ends]

So I'm going to go ahead and click on the link to open up the Properties blade for my SQL server instance.

[Video description begins] He clicks on sqlsrv3362. A page titled sqlsrv3362 appears. It has a navigation pane. The main body contains details about the server. Some of these are: Status, Location, Subscription, etc. At the bottom, there are two tabs: Notifications and Features. The Features tab is currently selected, which has four tabs: All, Security, Performance, and Recovery. [Video description ends]

And the first thing I'll do is scroll all the way down under Security and look at Firewalls and virtual networks.

[Video description begins] In the navigation pane, there is a section titled Security. It has the following options: Advanced Data Security, Auditing, Firewalls and virtual networks, and Transparent data encryption. He clicks on Firewalls and virtual networks. A page for Firewalls and virtual networks opens up. For Allow access to Azure services, there are two buttons: ON and OFF. OFF is currently selected. The Client IP address is 71.7.176.108. There is a table with input boxes for Rule Name, Start IP, and End IP. One row of data is present in this table. The Rule Name is AllowIncoming SQL, Start IP is 71.7.176.108, and End IP is 71.7.176.108. [Video description ends]

I've already added a firewall exception to allow my current client IP address, my public IP.

[Video description begins] He highlights the client IP address. [Video description ends]

I've made a firewall rule to allow traffic from this address. This is my on-premises public IP as it's known out on the Internet.

[Video description begins] He highlights the Start IP and End IP in the table. [Video description ends]

The other thing that we can do here, let me just close this out, is open up the Properties blade for our deployed SQL database in the cloud.

[Video description begins] He closes the current page and shifts to the All resources page. [Video description ends]

And from here, we can see the server name that we can simply copy.

[Video description begins] He clicks on db112 (sqlsrv3362/db112). A page titled db112 (sqlsrv3362/db112)appears. It has a navigation pane. The main body has details about the server. Some of these are: Status, Location, Subscription, Server name, etc. He copies the Server name. The Server name is: sqlsrv3362.database.windows.net. [Video description ends]

So what I'm going to do now is go to my on-premises environment and launch the SQL Server Management Studio tool.

[Video description begins] A window titled Microsoft SQL Server Management Studio appears. It has a menu bar and a tool bar. It has a section titled Object Explorer. It has a Connect button with a drop-down arrow. A few more buttons are present here. [Video description ends]

Specifically, this is the Microsoft SQL Server Management Studio tool for SQL Server 2014. What I'm going to do here is click Connect over on the left.

[Video description begins] He clicks the Connect button. A list of options appears. These are: Database Engine, Analysis Services, Integration Services, Reporting Services, and Azure Storage. [Video description ends]

What I want to do is connect to a database engine.

[Video description begins] He selects Database Engine. A window titled Microsoft SQL Server 2014 appears. It has drop-down menus for Server type, Server name, Authentication, and Login. An input box for Password is also present. The default value for Server type is Database Engine. The default value for Server name is sqlsrv3362.database.windows.net. The default value for Authentication is SQL Server Authentication. The default value for Login is cirving. At the bottom, there are four buttons: Connect, Cancel, Help, and Options. [Video description ends]

And I want to make sure that I've got the SQL Server name that I copied from Azure listed here, and I do.

[Video description begins] He highlights the Server name. [Video description ends]

Now when I deployed that SQL Server, I specified an admin name of cirving, so I've got that there. Now, I just have to supply the password that I specified when I deployed that SQL server instance. Once I've done that, I can go ahead and click on the Connect button.

[Video description begins] He enters the password. He clicks the Connect button. In the Object Explorer section, a server named sqlsrv3362.database.windows.net opens. It has two folders: Databases and Security. [Video description ends]

Because the firewall allows connectivity from this host behind a NAT firewall, we can see now that we are indeed connected to our Azure SQL database instance. And if I start going down under Databases to take a peek, here's db112 or database 112, where if we flip back to the portal, we can see indeed that is the name of our Azure deployed SQL database.

[Video description begins] He expands the Databases folder. It has two folders: System Databases and db112. He then expands the db112 folder. It has a list of folders. Some of these are: Tables, Views, Synonyms, etc. He shifts to the Microsoft Azure webpage. The page titled db112 (sqlsrv3362/db112) is currently open. [Video description ends]

[Video description begins] He highlights the title of the page. [Video description ends]

Azure Database Migration Service

[Video description begins] Topic title: Azure Database Migration Service. Your host for this session is Dan Lachance. [Video description ends]

The Azure Database Migration Service allows you to keep your existing data and simply move it into the cloud. So we're talking about moving database workloads from an on-premises IT environment into Microsoft Azure. Now, the movement of that data can happen through a site-to-site VPN tunnel that you would've first defined between your on-premises network and an Azure virtual network or you might do that movement of data through an ExpressRoute circuit.

ExpressRoute does not go through the Internet. Instead, it is a dedicated network circuit from your on-premises network directly into the Azure cloud. And depending on where you are in the world, this may not be an option. But generally, it is conceptually a choice that we at least have to examine when we're going to be moving or migrating data from on-premises into Azure.

The Azure database migration process begins with discovery. What we're talking about discovering are database items available on-premises. The next thing is assessing the workloads that use those databases to determine whether or not they can be migrated into Azure.

[Video description begins] Screen title: Azure Database Migration Process. [Video description ends]

The convert part of the process means that we want to take a look at the database schema on-premises. The schema is the blueprint of what type of data is allowed to be stored, and we want to make sure that, that schema will function correctly in the Azure environment. This is normally not an issue unless, on-premises, you've customized your database schema to support non-standard data types, for example.

Now, that's all considered pre-migration in terms of tasks. The next thing that we have is to actually migrate the schema and data objects. Depending on the amount of data you're talking about and the speed of your network link to the Azure cloud, we'll determine how long it will take to bring across very large data sets.

Next, we've got data synchronization, so the data that's migrated into Azure is kept in sync with on-premises data during this transitory process. Finally, at the cutover stage, we actually cut ties with the on-premises data source. And so there is no longer synchronization between on-premises and Azure cloud hosted data.

[Video description begins] An illustration appears. There are two boxes titled: Pre-migration and Migration. The Pre-migration box has Discover, Assess, and Convert. The Migration box has Migrate schema & data object, Data sync, and Cutover . Discover is connected to Assess which is then connected to Convert. Convert is connected to Migrate schema & data object, which is then connected to Data sync. Data sync is connected to Cutover. [Video description ends]

As we'll see in a different demonstration, we start the process of working with Azure Database Migration by actually creating a database migration instance. And we can do that, for example, through the Azure portal. From there, it will take us through all of these steps in the database migration process.

SQL Server Migration Assessment

[Video description begins] Topic Title: SQL Server Migration Assessment. Your host for this session is Dan Lachance. [Video description ends]

The SQL Server Migration Assessment tool allows you to run this on-premises, so you can assess what you currently have running and which are likely candidates for being migrated into the Azure cloud.

[Video description begins] The Microsoft webpage is open on the screen. The Download Center page is currently open. It has a list of options at the top. Some of these are: Windows, Office, Web browsers, etc. The page has a section titled Microsoft Data Migration Assistant v4.2. A Download button is present in this section. [Video description ends]

So here, I've gone to the Microsoft.com website, and I've searched the downloads for the Migration Assistant. So we can see here, Data Migration Assistant v4.2, at least at the time of this recording. So I have to go ahead and download that tool.

[Video description begins] He clicks the Download button. A File explorer opens up. The Downloads folder is currently open. It has a file named DataMigrationAssistant.msi. [Video description ends]

Once it's downloaded, I'm going to go ahead and run the installer, so it's called the DataMigrationAssistant.msi. So I'm just going to right-click on that and choose Install.

[Video description begins] He right-clicks on the file. A list of options appears. He selects Install from the list. A window titled Microsoft Data Migration Assistant Setup is launched. It has three buttons at the bottom: Back, Next, and Cancel. [Video description ends]

I'll choose Next, I will accept the terms of the license agreement, I'll click Next again, and it'll just go ahead and run the installation.

[Video description begins] He clicks the Next button. The End-User License Agreement appears on the next screen. It has a check box for accepting the terms of the License Agreement. He checks the box. At the bottom there are four buttons: Print, Back, Next, and Cancel. He clicks the Next button. A Privacy Statement appears on the next screen. It has three buttons at the bottom: Back, Install, and Cancel. He clicks the Install button. A progress bar displaying the installation status appears on the next screen. At the bottom, there are three buttons: Back, Next, and Cancel. Once the installation is complete, the screen reads: Completed the Microsoft Data Migration Assistant Setup Wizard. This screen has a check box for Launch Microsoft Data Migration Assistant. At the bottom, there is a Finish button. [Video description ends]

Before you know it, it's done. So, there's a check box here on the installation screen to launch the Microsoft Data Migration Assistant. Of course, I could launch it after through my Start menu, but I'm going to go ahead and turn that check mark on, and I'm going to click Finish.

[Video description begins] He checks the box for Launch Microsoft Data Migration Assistant and clicks the Finish button. [Video description ends]

Now it's loading the Microsoft Data Migration Assistant.

[Video description begins] A window titled Data Migration Assistant opens up. On one side of the window, there is a toolbar. [Video description ends]

So the first thing I'll do here is click the new button, the plus sign, to create a new migration project.

[Video description begins] He clicks the + sign in the toolbar. A window titled New appears. It has two options for Project type: Assessment and Migration. Assessment is selected by default. There is an input box for Project name. Drop-down menus for Source server type and Target server type are also present. The default value for Source server type is SQL Server. The default value for Target server type is Azure SQL Database. At the bottom, there is a Create button. [Video description ends]

Notice, we can build in assessment project, which is what we're going to do, to assess our on-premises SQL databases to test their suitability to be migrated to Azure. However, we can also actually perform a migration. However, we're not going to build a migration project here, just assessment. So the project name here is going to be HfxProj1 because my city, where this is happening on-premises, is Halifax.

[Video description begins] In the input box for Project name, he types HfxProj1. [Video description ends]

And the source server will be SQL, the target will be Azure SQL database. I'll click create, then I'm going to click Next.

[Video description begins] He clicks the Create button. A page titled HfxProj1 appears. It has three steps of creation. The first step called Options is currently displayed. Three options for report type are present here. These are: Check database compatibility, Check feature parity, and Benefit from new features. The first two are selected by default. At the bottom, there is a Next button. [Video description ends]

I'm going to give it some details, such as the name of the on-premises server that I want to use.

[Video description begins] He clicks the Next button. The screen shifts to the next step, which is Select sources. It has two buttons: Add sources and Remove sources. A window titled Connect to a server slides onto the screen. It has drop-down menus for Server name and Authentication type. The default value for Authentication type is Windows Authentication. For Connection properties, there are two options with check boxes. These are: Encrypt connection and Trust server certificate. Both the options are checked by default. At the bottom, there is a Connect button. In the drop-down menu for Server name, he selects srv2016-1. He retains the default value for Authentication type. [Video description ends]

So I'll fill that in, that's my on-premises SQL server. It uses Windows Authentication, but I could choose the appropriate authentication type. If you're not sure what to choose here, talk to your on-prem SQL people and I'm going to click Connect. We're not going to change anything else here.

[Video description begins] He clicks the Connect button. The window titled Connect to a server disappears. A new window titled Add sources appears. It has a check box for srv2016-1. Below it, there are four options with check boxes for sources. These are: CM_S01, ReportServer, ReportServerTempDB, and XTrans. At the bottom, there is an Add button. [Video description ends]

So I know it's made a good connection because I have a list of valid databases that are being hosted on that SQL server instance. So I'm just going to choose one of the databases in question that I'm thinking about migrating to Azure, and I'm going to click Add.

[Video description begins] He selects CM_S01. srv2016-1 gets automatically selected. He clicks the Add button. The window titled Add sources disappears. On the screen for the second step, which is Select sources, CM_S01 is added. At the bottom of this screen, there are two buttons: Back and Start Assessment. [Video description ends]

So we can see it's been added here. And we can add and remove sources at will here to determine what we want our assessment to be run against. So I'm going to go ahead and click Start Assessment in the bottom right.

[Video description begins] He clicks the Start Assessment button. The screen shifts to the third step, which is Review results. On one side of this screen, there are two options with radio buttons. These are SQL Server feature parity and Compatibility issues. SQL Server feature parity is selected by default. Below these options, there is a search box and below this box, srv2016-1 is present. In the main body of the screen, a tab titled Feature parity appears. It has a list of Unsupported features, and a section titled Cross-database references not supported in Azure SQL Database. This section has two sub-parts: Details and Databases. At the bottom, there is an Export report button. [Video description ends]

Once the assessment is complete, we can see that we are in step 3, where we're reviewing the results. And so we can see our SQL server on-premises listed over here on the left. And then we can see our listed items of unsupported features.

So the service broker feature not being supported in the Azure cloud and when we select that unsupported feature, we get some details listed over here on the right.

[Video description begins] From the list of Unsupported features, the presenter selects Service Broker feature is not supported. Its details appear in the Details section of the page. He scrolls down the Details section. A section titled Recommendation appears. [Video description ends]

Then we also get some recommendations about what we might be able to do to resolve this issue once the database has actually been migrated into the Azure Cloud.

[Video description begins] He highlights the following lines from the Recommendation section: Once the database has been migrated to Azure, you can look into Azure Service Bus functionality to implement a generic, cloud-based messaging system instead of Service Broker. [Video description ends]

Now, also remember that once you're happy with this, you can actually add an actual migration project,

[Video description begins] He clicks the + sign in the toolbar. The window titled New appears. He selects Migration for Project type. [Video description ends]

where you can actually start moving data into the cloud. So this migration assistant is a great tool then for you to evaluate your on-premises SQL databases and how likely they are as candidates for running in the Azure cloud.

[Video description begins] He closes the window titled New. [Video description ends]

Azure SQL Geo-Replication

[Video description begins] Topic Title: Azure SQL Geo-Replication. Your host for this session is Dan Lachance. [Video description ends]

To increase fault tolerance and availability for Azure SQL, we have the option of enabling Geo-Replication.

[Video description begins] A Microsoft Azure webpage displays on the screen. It has a menu bar with a search bar and the following options: Filter, Notifications, Settings, etc. A navigation pane is also present here with the following options: Create a resource, Home, Dashboard, All services, and Favorites. The main body of the page has a section titled Azure services. Some of the options here are: Virtual machines, Storage accounts, App Services, etc. [Video description ends]

Here in the portal, I've already got Azure SQL deployed. So if I go to the All resources view, and if I filter that view for anything that has a prefix of SQL, we can see both.

[Video description begins] From the navigation pane, he clicks on All resources present under Favorites. A page titled All resources appears. It has the following buttons on the top: Add, Edit columns, Refresh, etc. Below the buttons, there is an input box for name and drop-down menus for resource groups, types, location, tags, and grouping. Below these, there is a table with the following columns: Name, Type, Resource Group, Location, Subscription, and Tags. A few rows of data are present in this table. [Video description ends]

We've got a SQL Server and a single SQL database instance hosted on that server.

[Video description begins] He types sql in the input box for name. Two rows of data can be seen in the table. [Video description ends]

If I click on the server to open up its Properties blade, you'll notice that we don't have any options related to Geo-Replication, at least not at the server level.

[Video description begins] He clicks on sqlsvr172 in the table. A screen titled sqlsvr172 appears. It has a navigation pane. The main body contains details about the server. At the bottom, there are two tabs: Notifications and Features. The Features tab is currently selected. It has four tabs: All, Security, Performance, and Recovery. [Video description ends]

However, if I get back out of that, if I go into my database property sheet, notice that Geo-Replication is an option.

[Video description begins] He closes the sqlsvr172 page and shifts to the All resources page. He clicks on the 2nd sql resource listed in the table. A page titled sqldb172(sqlsvr172 /sqldb172) opens up. It has a navigation pane. The main body contains details about the server. Some of these are: Status, Location, Subscription, Server name, etc. He selects Geo-Replication from the navigation pane. A world map is displayed on the screen. [Video description ends]

Now currently, we can see that we've got an area on the map here in Eastern Canada where we've currently got our current SQL database deployed. That's the Azure region or location.

[Video description begins] The East Canada region has a blue tick mark on the map. [Video description ends]

Now if you're not so great with your geography, don't worry if you don't know what you're looking at on the map. Because when I scroll down a little bit, I can see indeed Canada East is that current region.

[Video description begins] He scrolls down the page. Below the map, there is a table with three columns: Server/Database, Failover Policy, and Status. In the table, there are two sections: Primary and Secondaries. Under Primary, Canada East is listed. Its Server/Database is sqlsvr172 /sqldb172, Failover Policy is None and Status is Online. [Video description ends]

And I can see the status of that replica is that it's online. Down below, it says for secondaries, Geo-Replication is not configured, and we can see here the list of target regions.

[Video description begins] He scrolls down the page. A section titled Target Regions appears. Some of the regions listed here are: West US, Canada Central, Brazil South, North Europe, etc. [Video description ends]

So let's say, for example, I want this to be replicated to Canada Central as a different region.

[Video description begins] He clicks on Canada Central from the list. A page titled Create secondary appears. It has the following criteria: Region, Database name, Secondary type, Target server, Elastic pool, and Pricing tier. The Region is Canada Central, Database name is sqldb172, Secondary type is Readable, Target server is Configure required settings, Elastic pool is None, and Pricing tier is Configure required settings. Lock icons are present next to Region, Secondary type, Elastic pool, and Pricing tier. At the bottom, there is an OK button. [Video description ends]

Now the secondary type is by default set to a readable replica of our Azure SQL database. Then for the target server, I have to configure settings. Now, what that means is I need another Azure SQL server instance.

[Video description begins] He clicks on Target server. A page titled Server appears. It has a button titled Create a new Server. No servers are listed on this page. Next to it, another page opens up. It is titled New Server. It has input boxes for Server name, Server admin login, Password, Confirm password, and a drop-down menu for Location. Below these fields, there is a check box that reads: Allow Azure services to access server. This check box as a tick mark. At the bottom, there is a Select button. [Video description ends]

Now if I don't have one, I have to create one here. So I'm going to call this sqlsvr172_central. You'll notice that it's going to tell me over here if it likes underscores, upper case letters, lower case letters. So notice here, it doesn't like a lot of the items that are specified here in the name.

[Video description begins] In the input box for Server name, he types sqlsvr172 _central. An error message pops up. It reads: Your server name can contain only lowercase letters, numbers, and '-', but can't start or end with '-' or have more than 63 characters. He then types sqlsvr172 central. [Video description ends]

So I'm just going to call it sqlsvr172central. And I'm going to specify the credentials and password here which do not have to be the same as they are for the primary server holding the master writable replica.

[Video description begins] The credentials for Server admin login, Password, and Confirm password appear. The login id is cirving. [Video description ends]

Once that's been filled in, I'm just going to go ahead and click Select.

[Video description begins] He clicks the Select button. The pages titled Server and New Server close. [Video description ends]

So really we're creating a new SQL Server instance to accommodate our Geo-Replication to a different Azure region. I'm going to leave the standard pricing tier as it is, and I'm going to click OK.

[Video description begins] In the page titled Create secondary, Target server changes to sqlsvr172 central (Canada Central) and Pricing tier changes to Standard S0: 10 DTUs, 250 GB. He clicks the OK button. The Create secondary page closes. [Video description ends]

Now currently, we have a message about the deployment being in progress up here in the upper right in the Azure portal.

[Video description begins] He points to the pop-up box titled Deployment in progress. [Video description ends]

And if I kind of scroll up here, and take a look here, after a moment, we'll see that it will reflect that we've got Geo-Replication from the Canada East region to the Canada Central region.

[Video description begins] On the map, a green dot with a check mark appears in the Canada Central region. [Video description ends]

And before you know it, you'll have this little check mark in these regions that are filled in with the solid color. You can see the other regions that are not filled in, and they do not have a check mark. So therefore, we don't have a replica of this SQL database in those locations.

And if we scroll down, we can see that represented in textual form. So, not only do we have our original online master replica in Canada East listed here at the top, but we can also see we've got a secondary now in the Canada Central region, and it's currently listed as being readable.

[Video description begins] He scrolls down to the table. Under Secondaries, Canada Central is listed. Its Server/Database is sqlsvr172 central/sqldb172. The Status is Readable.... [Video description ends]

Now if you click the ellipsis button, the three dots with the context menu next to the word readable, you'll have the option to force a failover which essentially promotes this to be the primary replica, and the other current primary would then become a secondary. It does say that this can cause some data loss while you're doing this.

[Video description begins] The presenter clicks the three dots next to Readable. Three options appear: Pin to dashboard, Forced Failover, and Stop Replication. He clicks on Forced Failover. A pop-up box titled Failover appears. It has two buttons: Yes and No. [Video description ends]

Also notice that we do have the option also of stopping replication, so, for instance, if there's a failure or a disaster in our primary region.

[Video description begins] He again clicks on the three dots next to Readable. He then points to Stop Replication from the list of options. [Video description ends]

NoSQL Overview

[Video description begins] Topic title: NoSQL Overview. Your host for this session is Dan Lachance. Screen title: NoSQL Databases. [Video description ends]

In the Microsoft Azure Environment, you can choose to deploy a SQL compliant type of database or a NoSQL database, so it's important to know the difference between the two. With NoSQL databases, we have a less rigid schema than with a traditional, relational database, such as MySQL or Microsoft SQL Server.

The schema, remember, is the blueprint of what type of data is allowed to be stored. And, so, with NoSQL, it's really designed to be much less structured to allow or accommodate for the storage of many different types of data. NoSQL is also designed for high scalability because it's really what is often used to work with very large data sets.

[Video description begins] Screen title : NoSQL Database Characteristics. [Video description ends]

So high performance and availability are a big part of NoSQL. Essentially, the manipulation and analysis of big data. With NoSQL, each stored row can actually store different types of data. That's unlike a relational database structure that has a blueprint or schema that defines exactly what can be stored in each row within a table.

We don't have that kind of structured limitation with a NoSQL database. There are a number of different types of storage configurations for NoSQL databases, such as key and value pairs, or NoSQL document stores, or graph database stores, but in the end, a NoSQL database is not relational.

[Video description begins] Screen title: NoSQL Horizontal Scaling. [Video description ends]

NoSQL uses horizontal scaling extensively as a traditional relational database system can as well.

[Video description begins] A diagram appears on the screen. It has a box with four blocks placed side by side. Below the box, there is a forward arrow. [Video description ends]

What this means is scaling out, as we see pictured in the diagram by adding database servers to handle the workload. Now this can be done for clustering purposes, for load balancing, and for replication of data.

[Video description begins] Screen title: Common NoSQL Database Products. [Video description ends]

Common NoSQL products include Azure CosmosDB, Azure Redis memory caching, which allows us to take data and cache it in memory. Data that is accessed frequently, so that subsequent requests are a service from the cache, which is much quicker than reading it from disk.

There are also numerous database options, including for NoSQL available to the Azure marketplace. So you can choose to deploy a new Virtual Machine instance that has a variety of different NoSQL products installed and configured for you already.


CosmosDB
  - Azure CosmosDB is a NoSQL database option available in Microsoft Azure. So it's a NoSQL solution that is globally distributed across Azure regions. 
    - This global distribution means that users can contact the nearest replica of CosmosDB to work with the data. 
    - That way, there's a better user experience instead of accessing it across multiple Azure regions.
  - Azure CosmosDB supports default encryption of data at rest, and it's used by a lot of popular services that you've probably heard of, like Xbox, Office 365, and Skype. When you start to deploy Azure CosmosDB, you begin by creating an Azure CosmosDB account, as we'll see in another demonstration. You also get to select the appropriate API for the account type.

Now, we might choose, for example, a certain type of account type like Gremlin if we want to use graph databases, or MongoDB if we're using a document type of database, and so on. So we'll see that as well when we configure Azure CosmosDB in a demonstration.

We can import data into CosmosDB from a number of different sources, including SQL databases. Now, even though CosmosDB is generally considered NoSQL, we still have the option of bringing in SQL data to store it in here. We also can specify CSV or comma separated value files as a data source or JSON files, and even standard NoSQL compliant databases like MongoDB.


Deploy CosmosDB
  - Microsoft Azure CosmosDB is a great choice when you have vast amounts of unstructured data that you want to store and manage in the cloud. I'm going to start here in the left-hand navigator in the Azure Portal by clicking Create a resource, and I'll search for cosmos.

[Video description begins] A Microsoft Azure webpage displays on the screen. It has a menu bar with a search bar and the following options: Filter, Notifications, Settings, etc. A navigation pane is also present here with the following options: Create a resource, Home, Dashboard, All services, and Favorites. The main body of the page has a section titled Azure services. Some of the options here are: Virtual machines, Storage accounts, App Services, etc. [Video description ends]
  - From here, I'll choose Azure Cosmos DB, and then I'll click Create.

[Video description begins] He selects Azure Cosmos DB from the list of options. Some information about Azure Cosmos DB is displayed on the screen. Below it there is a Save for later button. A drop-down menu for Select a software plan is present on the screen, in which Azure Cosmos DB is selected by default. At the bottom, there is a Create button. He clicks the Create button. A page titled Create Azure Cosmos DB Account opens up. It has four tabs: Basics, Network, Tags, and Review + create. The Basics tab is currently open. It has two sections: Project details and Instance details. The Project details section has drop-down menus for Subscription and Resource Group. The Instance Details section has an input box for Account Name and drop-down menu for API. The default value for Subscription is Pay-As-You-Go. The default value for Resource Group is cloud-shell-storage-eastus. The default value for API is Core (SQL). At the bottom, there are three buttons: Review + create, Previous, and Next: Network. [Video description ends]

The first thing I'll do is place this into a resource group, and then, down below I need to create a Cosmos DB account name.

[Video description begins] He clicks the drop-down menu for Resource Group. A list of options appears. He selects Rg1 from the list. [Video description ends]

[Video description begins] He scrolls down the page. A drop-down menu for Location is also present on this page. Its default value is Australia East. For Geo-Redundancy, there are two options: Enable and Disable. Enable is selected by default. For Multi-region Writes, there are two options: Enable and Disable. Disable is selected by default. [Video description ends]

So I'm going to call this cosmosdb-acct172. Now, be careful because in some cases in Azure if you start to use weird symbols like underscores, it'll tell you. So luckily we have this kind of easy notification that there's something wrong with the name, so, just be aware of that.

[Video description begins] In the input box for Account Name, he types cosmosdb_acct172. An error message pops up. It reads: The name can contain only lowercase letters, numbers, and the '-' character, and must be between 3 and 31 characters. Name is invalid. He then types cosmosdb-acct172. [Video description ends]

Now for the API, I can determine exactly what it is I want to configure Cosmos DB as because really it's kind of like a multi-model type of solution. So, do we want to treat it as a core SQL solution?

Or do we want it to adhere to the MongoDB API standard, or Cassandra, or is it a table type of data store or a graph type of NoSQL data store? So in this example, I'll choose Azure Cosmos DB for Mongo DB API.

[Video description begins] He clicks the drop-down menu for API. A list of options appears. He selects Azure Cosmos DB for MongoDB API. [Video description ends]

Now, I would do that if I knew that I had perhaps an application or some code that was already written that needs to talk to the MongoDB API to access data. I'm going to specify an appropriate location.

[Video description begins] He clicks the drop-down menu for Location. A list of options appears. He selects Canada East from the list. [Video description ends]

I'm going to disable geo-redundancy. Notice, that was enabled by default for Cosmos DB. I also, of course, want to leave multi-region writes disabled since I've disabled geo-redundancy. When I click Next, I then have to place this into an Azure Vnet. So I'll choose a Vnet and a subnet.

[Video description begins] He clicks the Next: Network button. The screen shifts to the next tab titled Network. It has drop-down menus for Virtual Network and Subnet. He clicks the drop-down menu for Virtual Network. A list of options appears. He selects EastVnet1 from the list. A section titled Configure Firewall appears. For Allow access from Azure Portal, there are two options: Allow and Deny. Allow is selected by default. For Allow access from my IP (71.7.176.108), there are two options: Allow and Deny. Deny is selected by default. He clicks the drop-down menu for Subnet. A list of options appears. He selects EastSubnet1 from the list. At the bottom, there are three buttons: Review + create, Previous, and Next: Tags. [Video description ends]

And right now it's set to allow access from the Azure Portal, which is great. So I can use this portal GUI interface to make a connection to my Cosmos DB and also to connect to it and look at performance metrics and things of that nature.

And conveniently, it also has my current public IP address listed here, and I can click Allow to add, essentially, a firewall exception for CosmosDB, so that if I need to get in from on-premises, maybe I'm using a MongoDB GUI management tool, for example, that I will be able to get in, or maybe I've got some code segments running on-premises on a server that need to talk in Azure to my Cosmos DB to work with that. So I'm going to turn on Allow for that, and I'm going to click Next for tagging.

[Video description begins] He clicks on the Allow button for Allow access from my IP (71.7.176.108). [Video description ends]

Well, there's no tags in here to assign here so I'll just go to Review and create, and once the validation says it succeeded, I will create my Cosmos DB deployment.

[Video description begins] He clicks the Next: Tags button. The screen shifts to the next tab titled Tags. It has input boxes for Key, Value, and Resource Type. The default value for Resource Type is Azure cosmos DB account. At the bottom, there are three buttons: Review + create, Previous, and Next: Review + create. [Video description ends]

[Video description begins] He clicks the Next: Review + create button. The screen shifts to the next tab titled Review + create. A list of information is displayed on the screen. It has three sections: Basics, Virtual Network, and Firewall. At the bottom, there are two buttons: Create and Previous. [Video description ends]

[Video description begins] A pop-up message appears at the top of the screen. It reads: Validation Success. The presenter clicks the Create button. A page titled Microsoft.Azure.CosmosDB-20190313130002-Overview appears. It has a navigation pane with the following options: Overview, Inputs, Outputs, and Template. The Overview tab is currently selected. The main body of the screen has the following heading: Your deployment is complete. Above the heading, the following buttons are present: Delete, Cancel, Redeploy, and Refresh. It has a Go to resource button. At the bottom there is a table with the following four columns: Resource, Type, Status, and Operation Details. The table has one row of data. [Video description ends]

And after a moment we can see our deployment is complete, and we've even got a view over on the left here called Azure Cosmos DB, and I can see my deployed instance listed here.

[Video description begins] From the navigation pane of the home page, the presenter clicks on Azure Cosmos DB. A page titled Azure Cosmos DB appears. It has the following buttons: Add, Reservations, Edit columns, and Refresh. It has a table with the following columns: Name, Status, Location, and Subscription. One row of data is present in the table where the Name is cosmosdb-acct172, Status is Online, Location is Canada East, and Subscription is Pay-As-You-Go. [Video description ends]

I'm going to click it, and here we can see a number of interesting items.

[Video description begins] He clicks on cosmosdb-acct172. A page titled cosmosdb-acct172 appears. It has a navigation pane. The following buttons are present on this page: Add Collection, Refresh, Move, Delete Account, etc. Below the buttons, there is a list of details. These include: Status, Resource group, Read Location, Write Location, etc. [Video description ends]

For example, as I scroll down in the Overview part of the Properties blade, I can see the region into which it was deployed. This looks like Eastern Canada.

[Video description begins] He scrolls down the page. A section titled Regions appears. It has a world map. The East Canada region has a blue tick mark. [Video description ends]

And as I scroll down, I've also got this Data Explorer option, where I have buttons to create a new database or a new collection to begin working with data.

[Video description begins] From the navigation pane, he clicks on Data Explorer. A Data explorer page opens up. The following buttons are present here: New Database, New Collection, and Open Full Screen. [Video description ends]

Of course, you can do this programatically or using command line tools or even GUI tools that you might even run on-premises. You would just need to make sure you have a way to access Cosmos DB, and we're talking really here about adding a firewall exception, so here in the Properties blade, if I go to Firewall and virtual networks, notice here that my client IP, my public IP on the Internet, has been added here as being allowed in.

[Video description begins] He clicks on Firewall and virtual networks from the navigation pane. A page for Firewall and virtual networks opens up. For the field, Allow access from, there are two options with radio buttons: All networks and Selected networks. The Selected networks option is selected by default. A section titled Virtual networks is also present. It has a table with the following columns: Virtual Network, Subnet, Address Range, Endpoint Status, Resource Group, and Subscription. One row of data is present here. Virtual Network is eastvnet1, Subnet is 1, Address Range is 10.1.0.0/16, Resource Group is rg1, and Subscription is Pay-As-You-Go. Below it, there is a section titled Firewall. The following IP address is listed here. 71.7.176.108. [Video description ends]

[Video description begins] He highlights the following IP address: 71.7.176.108. [Video description ends]

But you would also need to go to Connection String because you would have to have the correct Cosmos DB host name, the port number to connect to, as well as the Cosmos DB user name, and either the primary or secondary password.

[Video description begins] From the navigation pane, he clicks on Connection String. A page for Connection String opens up. It has two tabs: Read-write Keys and Read-only Keys. Read-write Keys is currently open. It has the following criteria listed: Host, Port, Username, Primary Password, Secondary Password, Primary Connection String , Secondary Connection String, etc. The presenter highlights the values for Host, Port, and Username. The Host is cosmosdb-acct172.documents.azure.com. Port is 10255, and Username is cosmosdb-acct172. [Video description ends]

So you would do that, for example, if you were using some kind of MongoDB type of GUI tool on-premises that you wanted to reach into the cloud to this instance to make changes to.


Big Data Overview
  - Microsoft Azure provides numerous offerings related to working with Big Data. With Big Data, as the name implies, we're talking about vast datasets, large quantities of data that need to be processed and analyzed. Now, this has become more and more of a thing in recent years due to the Internet revolution and how much data is being produced on a daily basis.
  - Well, we might be getting this data from Internet of Things or IoT devices like baby monitors or surveillance cameras. Big Data sources can also include financial information, financial transactions for customers in a banking institution for instance or through medical research or even through cookies.

Cookies are preference files used on web browsers to track user preferences on websites, and also sometimes to track security authentication tokens used by users on websites. And so that can be a valuable source of data for things like marketing companies to know people's web browsing habits and their preferences, and that could be derived from cookies.

But all of this data needs to somehow be collected in a location that makes sense that can accommodate that amount of data, so a NoSQL database. And then it needs to be processed so we can draw meaningful insights from that data. Big Data has a number of characteristics that we need to consider, such as the amount of data that needs to be transmitted over a network. And then stored in some kind of a storage location, whether it's a data lake or a specific single database.

We have to think about the rate at which data is produced. How much data do we expect will be produced per day? Because when we have incoming data into our Azure solution for Big Data, we are paying a fee depending on how much data is coming in or going out in addition to being stored and being computed through a cluster.

We have to think about the wide variety of data types that we might be interested in working with such as financial transactions or customer web surfing habits through the collection of cookie data. And then we have to think about the accuracy of that data. One of the things we can do with Big Data is transform it to a different format that would be acceptable for our processing engine, at the same time, we can weed out irrelevant data.


Azure SQL Data Warehouse
The analysis of big data involves both the storage of vast datasets along with the processing of that raw data to result in meaningful insights. So part of Azure SQL data warehouse is certainly the Data storage component, but we've also got Parallel processing. This is done by having a cluster of compute nodes that work together to analyze big data stores.
So it can execute complex queries using what's called PolyBase. PolyBase differs a little bit from standard structured query language because it's designed to run against large datasets that get read from Apache Hadoop. And Apache Hadoop is a clustering solution designed for Big data analytics. Pictured on the screen, we have a sense of what the architecture looks like for Azure SQL data warehouse. Beginning on the left, we've got an application or an application component, that issues transact SQL or T-SQL commands.
Now, this gets sent to what's called the control node. The control node, like the name implies, controls the underlying cluster of compute nodes that actually perform the work. And so we can send a transact SQL command to the control node. The control node is then responsible for allocating that to compute nodes. And because we've got more than one compute node, plural nodes, it means that we can run some of these tasks at the same time or in parallel. Now, this is using underlying Azure storage to store, not only the data that we run the queries against but also any transformations that might result from the execution of those queries.
[Video description begins] An illustration appears. An icon titled App T-SQL commands is connected to a Control node. The Control node is further connected to Compute nodes on two sides. The Compute nodes then connect to an Underlying Azure storage. [Video description ends]

When you configure Azure SQL data warehouse, one setting you will specify is the data warehouse units or DWUs, which is a combination of performance factors related to things like CPU computing power, the amount of memory, and database input and output. All that together forms a data warehouse unit.

And the more data warehouse units you have, then the better performance you'll have when processing big datasets using the compute nodes within the cluster. Just like when deploying Azure SQL database, Azure SQL data warehouse also uses firewall rules to control inbound traffic.

So for example, you would have to add a rule for the appropriate IP address, or addresses, to allow inbound traffic to SQL over port 1433. To save on costs, you can also pause processing of data by the compute nodes. So therefore, you're only being billed for the storage related to Azure SQL data warehouse. And when you have sporadic testing that might be taking place, this is an important strategy to reduce costs.


Create an Azure SQL Data Warehouse
Azure SQL Data Warehouse is different than a standard Azure SQL database deployment, in that it's designed for parallel processing, so that we can quickly get results when we wanna run complex queries against large amounts of data.

[Video description begins] A Microsoft Azure web page opens up. It has a menu bar with a search bar and the following options: Filter, Notifications, Settings, etc. A navigation pane is also present on this screen. It contains the following options: Create a resource, Home, Dashboard, All Services, and Favorites. The main body of the page has a section titled Azure services. It contains the following options: Virtual Machine, Storage Account, App Services, etc. [Video description ends]

To get started with deploying an Azure SQL data warehouse here in the portal, I'll click Create a resource in the upper left.

[Video description begins] In the navigation pane, he clicks on Create a resource option. A section titled New opens. It has two columns: Azure Marketplace and Popular. The Azure Marketplace column contains the following options: Get started, Recently created, Compute, etc. The Popular column contains the following options : Windows Server 2016 Datacenter, Ubuntu Server 18.04 LTS, Web App, etc. [Video description ends]

And from the categories, I'm going to choose Databases and then on the right, I'm going to choose SQL data warehouse.

[Video description begins] From the Azure Marketplace column, he selects Databases. A column titled Featured appears. It contains the following options: Azure SQL Managed Instance, SQL Database, SQL Data Warehouse, etc. [Video description ends]

[Video description begins] He selects SQL Data Warehouse. A new window titled SQL Data Warehouse appears. It has input boxes for Database name and Collation. Drop-down menus are present for Subscription, Resource group, and Select Source. The default value for Subscription is Pay-As-You-Go. The default value for Select source is Blank database. The default value for Collation is SQL_Latin1_General_CP1_CI_AS. Selection fields for Server and Performance level are also present. The default value for Performance level is Gen2:DW1000c. At the bottom, a Create button is present. [Video description ends]

Now, you're going to need to use an Azure SQL server instance here. And if you don't already have one, you'll be able to create one throughout this process. So let's start by giving a database name here. I'm going to call this sqldatawarehousedb172, and I'm going to put this in an existing resource group.

[Video description begins] In the input box for Database name, he types sqldatawarehousedb172. [Video description ends]

[Video description begins] He clicks the Resource Group drop-down menu. A list of options appears. He selects Rg1. [Video description ends]

And for a data source I can have a Blank database, I could choose a Sample such as AdventureWorksDW, or I could simply take the source from a Backup of a database. In this case, why don't we go with some sample data from AdventureWorksDW.

[Video description begins] He clicks the Select source drop-down menu. A list of options appears. He selects Sample. He clicks the Select sample drop-down menu. A list of options appears. He selects AdventureWorksDW. [Video description ends]

Then I've got to specify the SQL server instance here. I'm going to click on that. And on the right, any existing SQL servers that I might want to tie this Data Warehouse to, I could. But in this case, we don't have any, so I'm creating a new one. We're going to call this sqlsvr172, and I'm going to specify the server admin for SQL server and I'll confirm the passwords.

[Video description begins] He clicks the Server field. A page titled Server opens. It has a Create a new server button. The presenter clicks the button. A page titled New Server opens. It has input boxes for: Server name, Server admin login, Password, and Confirm password. A drop-down menu for Location is also present. The default value for Location is Canada East. Below it there is a check box for Allow Azure services to access server. It has a tick mark. A Select button is present at the bottom. [Video description ends]

[Video description begins] In the input box for Server name, he types sqlsrv172. In the input box for Server admin login, he types cirving . He enters a password in the input boxes for Password and Confirm password. [Video description ends]

I'm going to deploy this SQL server instance in the Canada East Azure location or region and then I'll click Select. So we got the server taken care of, but the problem is I have a little notification symbol here that says, SQL Data Warehouse Generation 2 is not supported in this region, okay.

[Video description begins] He clicks the Select button. The Server and New Server pages disappear. The Server is: sqlsrv172 (Canada East). [Video description ends]

[Video description begins] He points to a red notification icon present next to the Server field. [Video description ends]

Well, that's set automatically as a default down below the performance level.

[Video description begins] He clicks on the field for Performance level. A page titled Configure performance opens. It contains two tabs: Gen2 and Gen1. Gen2 is selected by default. It has a scale with a pointer for Scale your system. The pointer is currently at DW1000c. At the bottom there is an Apply button. [Video description ends]

So if I choose Generation 1, Gen1, then the error message goes away.

[Video description begins] He shifts to the Gen1 tab. It has a scale with a pointer for Scale your system. The pointer is currently at DW400. The price of the system mentioned here is 5.32 USD/hour. [Video description ends]

At least for the region that I've selected it in. And this ties into the fact that some specific Azure service configurations are only available in some regions. Now, I can also determine which data warehouse unit selection or DWU that I want. And as I kind of scale my system up, notice of course the price per hour, US dollars goes up the more data warehouse units or DWUs that you allocate to your data warehouse.

[Video description begins] He moves the pointer and places it at DW1500. The price changes to 19.96 USD/hour. [Video description ends]

Remember that a data warehouse unit, or DWU, is a collection of performance factors like CPUs and memory. And so the best way to work with this, before you've got experience running your workloads in data warehouse is to start at a reasonably small DWU value and then gauge the performance as you run queries against the data. And if you need to, you can scale this up later or scale up back down.

[Video description begins] He moves the pointer again and places it at its original position DW400. The price again goes down to 5.32 USD/hour. [Video description ends]

So at this point, I'm going to click Apply, and down below, I'm going to click Create.

[Video description begins] He clicks the Apply button. The Configure performance window closes. [Video description ends]

[Video description begins] He clicks the Create button on the SQL Data Warehouse page. [Video description ends]

And we can now see the deployment is in progress.

[Video description begins] The Microsoft Azure home page is open. The presenter points to a notification at the top right corner. It reads: Deployment in progress. [Video description ends]

So SQL data warehouse is similar to when you deploy Azure SQL database in that you've got to determine how you need to make a connection into the database, such as from a non-premises environment perhaps where you're running SQL Server Management Studio. And, again, it's gonna make a connection over standard SQL ports like 1433 and so you'd have to add a firewall exception to allow that to happen. So now, on the left, I'm going to go to the SQL data warehouses view where we can see, we've got our SQL data warehouse database.

[Video description begins] In the navigation pane, under Favorites, he clicks on SQL data warehouses. A page titledSQL data warehouses opens. It has three buttons: Add, Edit columns, and Refresh. This page has a table with the following columns: Name, Status, Replication, Pricing Tier, Location, and Subscription. The table contains one row of data. The name is sqldatawarehousedb172. [Video description ends]

And if I click on it and open it up, then we can see if we scroll down, in the properties blade, for example, if I go to Quick start.

[Video description begins] He clicks on sqldatawarehousedb172. A page titled sqldatawarehousedb172 opens. It has a navigation pane with the following options: Overview, Activity log, Tags, etc. In the main body, the following buttons are present: Pause, Scale, Restore, New Restore Point, and Delete. Below the buttons, a list of information is present. It includes details about: Resource Group, Status, Server name, etc. [Video description ends]

I can see that we have a number of tools that we can use so that we can work with data in SQL data warehouse.

[Video description begins] In the navigation pane, under Settings, he clicks on Quick start. In the main body, a new page titled sqldatawarehousedb172 - Quick start opens. It has three sections: Get the tools, Integrate with your app, and Learn more. [Video description ends]

And that is available through the Microsoft Azure SDK, Azure PowerShell and also the Azure SQL Data Warehouse Migration Tool.

[Video description begins] He points to the options present under Get the tools section. [Video description ends]

And we also have information about Integration with our application, because the idea is that we'll have some kind of an application that is going to be interested in running these types of complex queries and gaining insights from data that is stored and managed by SQL data warehouse. Now, I do have a Geo-backup policy which takes a snapshot on a daily basis. However, this is kind of unlike the standard Azure SQL database geo-replication, because that same type of geo-replication option is simply not available with Azure SQL data warehouse.

[Video description begins] In the navigation pane, under Settings, he clicks on Geo-backup policy. A new page for Geo-backup policy opens. It has two buttons for Geo-backup policy: Enabled and Disabled. Currently, enabled is selected. [Video description ends]

The other thing to watch out for is if I scroll down as we were talking about, if I go to Firewalls and virtual networks. We can add allowances for which IPs are allowed to make a connection into SQL data warehouse.

[Video description begins] In the navigation pane, under Security, he clicks on Firewalls and virtual networks. A page for Firewalls and virtual networks opens. At the top, the following buttons are present: Save, Discard, and Add clientIP. For Allow access to Azure services, there are two buttons: ON and OFF. Currently, ON is selected. The Client IP address is: 71.7.176.108. A table is displayed with three columns: RULE NAME, START IP, and END IP. [Video description ends]

Again, over port 1433, the standard SQL port, and we can even add our current client's IP address in and I'll just go ahead and save that if we really wanted to.

[Video description begins] He clicks the Add client IP button. A row is displayed in the table. The RULE NAME is: ClientIPAddress_ 2019-3-14, the START IP is: 71.7.176.108, and the END IP is: 71.7.176.108. He clicks the Save button. [Video description ends]

[Video description begins] He clicks the Save button. [Video description ends]

Also, as we scroll down, notice here that we've got a preview feature here called Query editor.

[Video description begins] In the navigation pane, under Common Tasks, he clicks on Query editor (preview). A page for Query editor (preview) opens. It has a drop-down menu for Authorization type. There are input boxes for Login and Password. The Authorization type is: SQL server authentication. The Login is: cirving. At the bottom, there is an OK button. [Video description ends]

And so if I put in the credentials that I specified when I configured the SQL server.

[Video description begins] He enters the password and clicks the OK button. [Video description ends]

Then we can go ahead and actually start to peruse and work with some of the data in a very simple way, at least here directly in the portal.

[Video description begins] The Query editor (preview) is open. It has four buttons: Login, New Query, Open query, and Feedback. The window has two sections: sqldatawarehousedb172 (cirving) and Query 1. Below Query 1, there is a section with two tabs: Results and Messages. The Results tab is currently open. Under the heading sqldatawarehousedb172 (cirving), three pointers are displayed: Tables, Views, and Stored Procedures. [Video description ends]

So if I expand tables, let's say, I see that we've got, for example, a dbo.DimCustomer as a table, and I can even start working with queries.

[Video description begins] He clicks on Tables. It expands. The following options appear: dbo.DatabaseLog, dbo.DimCurrency, dbo.DimCustomer, etc. He clicks ondbo.DimCustomer. [Video description ends]

So maybe select all of the columns from dbo.dimcustomer, and then I can run that query, and we'll start to get the results listed here.

[Video description begins] In the Query 1 section, in line 1, he types: select * from dbo.dimcustomer. He clicks the Run button. [Video description ends]

Now, this is just a quick way to look at this, of course, you're going to have an application or some kind of a way to hook into this using other tools to actually work with this data properly for analysis.

[Video description begins] In the Results tab, a table appears. It has the following columns: Customer Key, Geography Key, Customer Alternate Key, and Title. [Video description ends]

Bear in mind, one of the reasons you might use Azure SQL data warehouse over just standard Azure SQL database is because when you run queries, now this is not a complex query, so imagine a much more in depth, detailed complex query. But when you do run queries here, what's going to be happening is that the query is going to be handled by a specific back end node that's got its own compute resources, like CPU and memory, as opposed to standard Azure SQL database, which does not support multiple parallel processing.

[Video description begins] He clicks the Close button at the top right corner of the Query editor (preview). A message box appears with the text: Your unsaved edits will be discarded. He clicks the OK button. [Video description ends]

The other thing to keep in mind is, you actually have the option of pausing your Azure SQL database warehouse if you're not actually going to use it.

[Video description begins] The SQL data warehouses page is open. He clicks onsqldatawarehousedb172 in the table. The sqldatawarehousedb172 page opens. [Video description ends]

So for the storage portion, you would still be paying, but not for the compute portion. And you can see up at the top here that we do have in the overview part of the properties blade, a pause button, which we could use to do just that and then we could resume it when we want to continue processing.

[Video description begins] He points to the Pause button. [Video description ends]

Azure HDInsight

[Video description begins] Topic title: Azure HDInsight. Your host for this session is Dan Lachance. [Video description ends]

Azure HDInsight is a Big data analytics solution that's hosted in the cloud, and so it's considered a Managed service, and with managed services in the cloud we're talking about something that's easy to provision and configure compared to if you had to set it up yourself manually on-premises. Azure HDInsight uses a number of underlying open source frameworks but it does allow for Node clusters working together to process large amounts of data, whether that data is like a real time feed through a data pipeline or whether that data is coming from some kind of massive data storage warehouse.

HDInsight Underlying Technologies includes but it is not limited to Apache Hadoop. Apache Hadoop is an open source framework that's used for distributed processing clusters. Apache Spark is similar in that, it is distributed in parallel processing, but what makes it a little bit different is it uses in-memory caching to speed things up.

Apache Kafka is another open source component that allows for real time streaming data pipelines to feed HDInsight. Another aspect of working with HDInsight is Extract, Transform, and Load or ETL, you might be familiar with this term with other database solutions. It's not exclusive to HDInsight, it's more of a standard methodology more than anything else, where we can start by copying a data from source, whether it's a data store of some kind in the database or whether it's real time streamed data.

In the next step, for transform, we can convert the data to a different format so it can easily be consumed by the target that might expect things in a different format, such as dates. Finally, we can load the data into some kind of a storage facility, whether it's a data warehouse or whether it's going to be treated as a real time data feed that's gonna be fed into some other component.

[Video description begins] Screen title: HDInsight Usage. [Video description ends]

So what do we use HDInsight for? Well, we know it's about big data analytics, but can we be a bit more specific than that? While using HDInsight, it can be related to Machine learning or ML, where we can gain insights from vast amounts of data that are fed into it. You can run very large petabyte-scale types of queries against this type of information, or it can be automated so the insights are gained based on code that's written, which can result in predictive analysis for future trends.

On the IoT side of things, the Internet of Things, we can have a large amount of IoT device telemetry that is fed into the HDInsight solutions. So we can draw conclusion from large datasets, whether those are related to the security of IoT devices or due to the nature of those IoT devices. We can draw conclusions, such as those related to monitoring industrial control networks and so on.

Deploy an Azure Hadoop Cluster

[Video description begins] Topic Title: Deploy an Azure Hadoop Cluster. Your host for this session is Dan Lachance. [Video description ends]

In this demonstration, I'm going to use the Azure portal to deploy an Apache Hadoop cluster. This is useful when you need to have multiple parallel processing for big data analytics.

[Video description begins] He opens a Microsoft Azure web page. It has a menu bar on the top. A search bar is also present. On one side is a navigation pane. It contains several options: Create a resource, Home, Dashboard, All Services, etc. Currently Dashboard is displayed. A list of Azure services is also present: Virtual machines, Storage accounts, App Services, etc. [Video description ends]

To get started here in the portal, I'm going to click Create a resource in the upper left, and then I'm going to choose Analytics because what I'm really talking about doing here is using the HDInsight as your offering.

[Video description begins] He clicks on Create a resource. A page titled New appears. It contains a search bar at the top. The page has two columns. The first column is named Azure Marketplace. It has the following options: Get Started, Recently created, Compute, Networking, Analytics, etc. The second column is named Popular. It has the following options: Windows Server 2016 VM, Ubuntu Server 18.04 VM, Web App, SQL Database, etc. [Video description ends]

Now, when I select HDInsight, I've got to give a name for the clusters.

[Video description begins] In the first column, he clicks the Analytics option. A column titled Featured appears. It has the following options: Azure Data Explorer, HDInsight, Data Lake Analytics job, etc. He selects HDInsight. A new page titled HDInsight opens up. The page has the following two tabs: Quick create and Custom. Currently, the Quick create tab is selected, which has the following three steps: 1. Basics, 2. Storage, and 3. Summary. At present, step 1: Basics is selected. A page titled Basics is open. It has an input box for Cluster name, Cluster login username, Cluster login password, and Secure Shell (SSH) username. There are drop-down menus for Subscription, Resource group, and Location. There is a field for Cluster type. At the bottom, a Next button is present. The default value for Subscription is Pay-As-You-Go. The Cluster login username is admin. [Video description ends]

So I'll call it hdinsightcluster172. And it's going to use the .azurehdinsight.net DNS suffix by default.

[Video description begins] In the Cluster name input box, he types hdinsightcluster172. Below the input box, he highlights the following text: .azurehdinsight.net. [Video description ends]

and after a moment we'll have a check mark here that indicates that, that name is valid and unique, then I have to specify the cluster type. And this is where from the Cluster type drop-down list, I can specify I want to use a specific framework, in this case, Hadoop. It's going to use the Linux operating system.

[Video description begins] He clicks on Cluster type. A new page titled Cluster configuration appears. It has drop-down menus for Cluster type and Version. There are two options for Operating system: Linux and Windows. He clicks the drop-down menu for Cluster type. A list of options appears. He selects Hadoop from the list. The Version changes to Hadoop 2.7.3 (HDI 3.6). For Operating system, Linux gets selected. A section titled Features appears. [Video description ends]

And then I can choose from variations of the version of Hadoop, depending on how I'm going to interface with the cluster and what exactly I'm going to do with that. So I'm going to go ahead and just leave the default selection.

[Video description begins] He clicks the Select button at the bottom. The Cluster configuration page closes. [Video description ends]

I have to specify a Cluster login username, which I'm going to do here, and password. This is what I can use, for instance, if I log into the website to view overall metrics and details related to my Apache Hadoop Cluster.

[Video description begins] He types cirving in the Cluster login username input box. He types a password in the Cluster login password input box. [Video description ends]

And if I plan on using SSH for cluster access, then I can use the SSH username.

[Video description begins] The Secure Shell (SSH) username is set as sshuser. Below it, there is a check box for Use cluster login password for SSH. It has a tick mark. [Video description ends]

Notice here it's set to use the cluster login password also for SSH. So I'm going to tie this into an existing Resource group. I'm going to specify the appropriate Azure location for my config, after which I'll then click Next.

[Video description begins] He clicks the drop-down menu for Resource group. A list of options appears. He selects Rg1. He clicks the drop-down menu for Location. A list of options appears. He selects Canada East. [Video description ends]

[Video description begins] He clicks the Next button. In the HDInsight page, step 2: Storage is selected. A page titled Storage is displayed. It has a drop-down menu for Primary storage type. The Primary storage type is set as Azure Storage by default. For Selection method there are two options: My subscriptions and Access key. My subscriptions is selected by default. Below it there is a field for Select a Storage account. An input box for Container is also present. Its default value is hdinsightcluster 172-2019-03-14t11-47-2. Below it, there are fields for Additional storage accounts and Data Lake Storage Gen1 access. At the bottom, a Next button is present. [Video description ends]

Next, for the primary account storage type, I'm going to choose Azure Storage as opposed to Data Lake variations. This is going to be for data that is used by HDInsight as well as for logs that get generated. And I'll leave it on My subscriptions for access to that account. So, then I have to go through and choose a Storage account. So I'll choose one of my storage accounts.

[Video description begins] He clicks on Select a Storage account. A page titled Storage accounts appears. It has two options. He selects stor14567. The Storage account page closes. [Video description ends]

And then it'll make a storage container with the name listed down below here. And at this point, I'm going to click Next.

[Video description begins] He clicks the Next button. In the HDInsight page, step 3: Summary is selected. A page titled Cluster summary is displayed. It includes the following details: Basics, Security + networking, Storage, etc. [Video description ends]

So once the validation has passed, I'll be able to click Create to initiate my HDinsight Cluster, which in this case, is configured in the back end to use Apache Hadoop. So I'll go ahead and click on Create to start the process.

[Video description begins] He clicks the Create button. The HDInsight page closes. The Azure home page is open. A notification appears which reads: Submitting deployment. [Video description ends]

While that's happening, understand that the next couple of steps would really be for developers, where they would use some kind of a tool to interface with Hadoop to work with the data and workloads related to that data. Tools like Microsoft Visual Studio, the Azure storage explorer, or you could even, for example, use SSH to connect to the cluster and start actually issuing commands based on the Hadoop command syntax. So now I'll click on the All resources view on the left, and I'll filter it by hd as a prefix.

[Video description begins] In the navigation pane, he clicks on All resources. The All resources page opens. In the name input box, he types hd. One item is displayed in the table: hdinsightcluster172. [Video description ends]

And there's our HDInsight cluster, which I will click on.

[Video description begins] A page titled hdinsightcluster172 appears. At the top, the following buttons are present: Move, Delete, and Refresh. The page has a navigation pane with options such as: Overview, Activity log, Tags, Settings, etc. The main body has various details about the resource, such as Resource group, Status, Location, URL, etc. [Video description ends]

The first thing I'm interested in, in the Overview part of the properties blade is the URL, which I will copy to my clipboard, and I'm going to go ahead and open that up in another tab here in my web browser.

[Video description begins] He copies the URL: https: // hdinsightcluster172.azurehdinsight.net. [Video description ends]

I am then prompted to specify the Username and Password that I configured when I can set up this cluster in the first place. So we're going to go ahead and pop in those credentials.

[Video description begins] In the new tab, a Sign in box appears. He types cirving in the Username input box. He types the password in the Password input box. He presses Enter. [Video description ends]

And that's going to give me the cluster website page where I can start viewing a bunch of details. For example, from here I can go to Hosts, where I can get a list of a lot of the hosts that are being used here within my cluster for Apache Hadoop.

[Video description begins] An Ambari web page opens in the new tab. Five tabs are present at the top: Dashboard, Services, Hosts, Alerts, and Admin. Currently, the Dashboard is open. A navigation pane is present on the left. It contains the following options: HDFS, YARN, MapReduce2, etc. In the center pane, three tabs are present: Metrics, Heatmaps, and Config History. Currently, the Metrics tab is open. Two drop-down lists are present. In the first drop-down, Metric Actions is selected and in the second drop-down, Last 1 hour is selected. Beneath them, various details are displayed, such as HDFS Disk Usage, HDFS Links, Memory Usage, etc. [Video description ends]

[Video description begins] He clicks the Hosts tab at the top. The Hosts tab opens. An Actions drop-down list is present. A search input box is present to Filter by host and component attributes or search by keyword. Beneath it, a table is displayed with 9 columns: Name, IP Address, Rack, Cores, RAM, Disk Usage, Load Avg, Versions, and Components. [Video description ends]

If there are any alerts, as we can see it listed up here at the top in red, and also by a specific host here, then I can click to read any of those specific ideas.

[Video description begins] He points to the notification of 5 alerts displayed at the top of the screen. [Video description ends]

[Video description begins] In the 5th row under the Name column, he clicks on number 3 displayed next to the Name: wn4-hdinsi.e4hiqroou53uhf15yranlxhfmb.vx.internal.cloudapp.net. A new page opens by the same name. A table is displayed with four columns: Service, Alert Definition Name, Status, and Response. He points to the 3 items in red. Their status is CRIT. [Video description ends]

So we could see here that some of these alerts are related to connectivity issues because nothing has been actually done in this cluster at all thus far. So if I go back to the Dashboard, we'll see how we can get an overall usage of the data nodes that are available.

[Video description begins] He clicks the Dashboard tab at the top. The Dashboard opens. [Video description ends]

The Hadoop distributed file system, or HDFS disk usage among the nodes in the cluster.

[Video description begins] He clicks the first item in the Dashboard: HDFS Disk Usage. The following information is displayed: DFS used 1.6 MB (0.00%), non-DFS used 24.4 GB (1.55%), and remaining 1.4 TB (93.35%). [Video description ends]

Now you will use a variety of different tools to start loading data into Apache Hadoop as we mentioned. So this is what we would do at the administrative level. And from this point forward, it would be up to developers to interface with the Hadoop cluster to present data and workloads to be processed.

Azure Data Lake Analytics

[Video description begins] Topic title: Azure Data Lake Analytics. Your host for this session is Dan Lachance. [Video description ends]

Microsoft Azure Data Lake Analytics is a managed service offering in the Azure Cloud. It's designed for large scale data storage. We are talking about at the petabyte level. Now bear in mind, one petabyte equals approximately one million gigabytes. We're talking about potentially working with trillions of files. We can even take data, for example, that we might have stored in Azure storage account as blobs.

And we can actually copy that over into an Azure Data Lake store. For data analysis, we have to think about the kind of work-load power that we're going to need to work against these large types of data so that we can gain insights. And one consideration is configuring the Data Lake Analytic Unit, the DLAU. So this is a unit of measurement that's used to determine the underlying horsepower that's going to run our jobs where we can start to extract insights from this data.

So for example, each analytic unit contains a number of CPU course that are allocated to process data and also a chunk of memory. So at the time of this recording, one AU, one data lake analytic unit is two CPU cores and six gigabytes of RAM. So making a change to the data lake analytic unit really depends on the type of workload you envision will be handled through Azure data lake analytics. So this tells us then that we're talking about a large-scale parallel processing solution that uses node clusters.
We can use the Microsoft Visual Studio IDE, the integrated development environment, as a way to gain access to our Azure data lake and to begin running queries. We can also use the Eclipse IDE. We can use the IntelliJ IDE. All of these different integrated developer environments allow you to write code in a variety of different languages.
It really boils down to using whatever you are most familiar with, however, it's important to understand that these three IDEs are supported to hook into Microsoft Azure. And so in other words, there's an Azure toolkit that keeps getting updates for each and every one of these three items.
And these three items, these three IDEs also have plugins, even give them extended capabilities. So, Azure data lake storage then can be used to feed data into an Apache Hadoop cluster for parallel processing as part of data analysis. The Apache Hadoop cluster uses the Hadoop Distributed File System or HDFS. The jobs that we submit against that use what's called U-SQL.
This is even a type of project that you can launch if you're using GUI IDE tools like Microsoft Visual Studio. So U-SQL then, is just a simple language that you'll learn very quickly if you are already familiar with structured query language or just SQL.


Create a Data Lake Analytics Account
  - Just like a lake in the real world can have many incoming streams or tributaries to result in the water collected in the lake
    - Azure data lake in the Azure cloud allows us to specify a multitude of data sources to allow data to be fed into data lake.
  - Not only is it data storage, but we're talking about analysis of that data. So to get started here, I'm going to go into the Azure portal and click Create a resource in the upper left.

[Video description begins] He clicks on Create a resource. A page titled New appears. It contains a search bar at the top. The page has two columns: the first column is named Azure Marketplace. It has the following options: Get Started, Recently created, Compute, Networking, Analytics, etc. The second column is named Popular. It has the following options: Windows Server 2016 Datacenter, Ubuntu Server 18.04 LTS, Web App, SQL Database, etc. At the top, there is a search bar. [Video description ends]

Now because we're talking about analytics, I'm going to choose the Analytics category. And you'll see over on the right that we have Data Lake Analytics, which I will click.

[Video description begins] In the first column, he clicks on Analytics. A column titled Featured appears. It has the following options: Azure Data Explorer, HDInsight, Data Lake Analytics, etc. [Video description ends]

[Video description begins] He selects Data Lake Analytics. A new page titled New Data Lake Analytics opens up. An input box is displayed for Name. Drop-down lists are present for Subscription, Resource group, and Location. By default, the Resource group is cloud-shell-storage-eastus, The Subscription is Pay-As-You-Go and the Location is East US 2. A field for Data Lake Storage Gen1 is also present here. There are two options for Pricing packages: Pay-as-You-Go and Monthly commitment. Pay-as-You-Go is selected by default. A Create button is present at the bottom. [Video description ends]

So, what we can do is feed data into our Azure data lake. And then that data can be processed and transformed and manipulated for the purposes of gaining insights as to all of that collection of raw data, it can even be used for things like machine learning. So, I have to create a new data lake analytics account. I'm going to call this datalake172, and notice it's going to add the .azuredatalakeanalytics.net DNS suffix at the end.

[Video description begins] In the Name input box, he types: datalake172. [Video description ends]

I will deploy this into an existing resource group and choose a location that makes sense for me, and then down below, I've got to also create a data lake storage account.

[Video description begins] He clicks the drop-down menu for Resource group. A list of options appears. He selects Rg1. He clicks the drop-down menu for Location. A list of options appears. He selects Central US. [Video description ends]

[Video description begins] He clicks on Data Lake Storage Gen1. A page titled Select Data Lake Storage appears. There is an input box for name. A button titled Create new Data Lake Storage Gen1 is also present. Beneath it, the following text is displayed: 0 accounts found and No existing Data Lake Storage Gen1. [Video description ends]

So I'm going to click Create new Data Lake Storage Gen1, it's already got a name for it, that's fine, let's go with that. I'll leave it on Pay-as-You-Go and Encryption as enabled, so I'll click OK for that, and then I'll click Create to actually create this resource.

[Video description begins] A page titled New Data Lake Storage Gen1 appears. It has an input box for Name. The value here is datalake172adls. For Pricing package, there are two options with radio buttons: Pay-as-You-Go and Monthly commitment. Pay-as-You-Go is selected by default. The default value for Encryption settings is Enabled. An OK button is present at the bottom. [Video description ends]

[Video description begins] He clicks the OK button. The New Data Lake Storage Gen1 page and the Select Data Lake Storage Gen1 page disappear. [Video description ends]

[Video description begins] In the New Data Lake Analytics page, he clicks the Create button. [Video description ends]

Okay, so now I'm gonna go to the All resources view on the left and I'll filter it for things that start with the data.

[Video description begins] The Azure home page opens. In the navigation pane, he clicks on All resources. A new page titled All resources opens. It has the following buttons on the top: Add, Edit columns, Refresh, etc. Below the buttons, there is an input box for name and drop-down menus for resource groups, types, location, tags, and grouping. Below these options, there is a table with the following columns: Name, Type, Resource Group, Location, Subscription, and Tags. [Video description ends]

[Video description begins] In the name input box, he types data. Two items are displayed in the table: datalake172 and datalake172adls. [Video description ends]

We can see the two resources that resulted from our configuration, the data lake storage and the data lake analytics resource, which I'm going to click on to pop into the properties.

[Video description begins] He clicks on datalake172. A page titled datalake172 appears. At the top, the following buttons are present: New job, Sample scripts, Data explorer, etc. The page has a navigation pane on the left with the following options: Overview, Activity log, Tags, Settings, etc. The main body has details about the resource. Some of these are: Pricing tier info, AU-hours used, Estimated cost, etc. [Video description ends]

So when we're in here, notice right away that we have the option of submitting a job. So what we're talking about doing here is, submitting a job for processing for data lake analytics. Now of course, that could be fed data that we've configured into our data lake configuration. And if I were to scroll down, you'll see in the properties blade here indeed we do have data sources.

[Video description begins] In the navigation pane, under Settings, he clicks on Data sources. A new page titled datalake172- Data sources appears. At the top, a button titled Add data source is present. A table is displayed with two columns: Name and Type. A data source named datalake172adls (default) is listed in the table. [Video description ends]

Currently, for our data lake analytic configuration, we've got our data lake account that we specified for storage upon creation, but notice that we could add additional data sources. We also have some other configuration items, like for example, the maximum number of concurrent running jobs.

[Video description begins] In the navigation pane, under Settings, he clicks on Limits and policies. A new page titled datalake172- Limits and policies appears. At the top, two buttons are present: Save and Discard. Scales with sliders are present for the following criteria: Days to retain job queries, Maximum AUs, Maximum number of running jobs, Maximum AUs per job, Priority per job, etc. [Video description ends]

We've got a slider here to draw that up or down, depending upon what our specific needs hour, our processing might entail. If I were to click Tools in the properties blade, we then have a variety of tools that we can work with from a developer perspective to feed data into Data Lake Analytics, and then to determine which job should process that data, so there are Data Lake Tools for Visual Studio, and as we scroll down, it's also available for Azure PowerShell, and Azure CLI.

[Video description begins] In the navigation pane, under Getting started, he clicks on Tools. A new page titled datalake172- Tools appears. Some of the options listed here are: Data Lake Tools for Visual Studio, Azure PowerShell, Azure CLI, etc. [Video description ends]


Add a Data Lake Data Source
  - You can feed data into Azure Data Lake Analytics programmatically, through command line tools and also through the GUI here in the portal.
  - Here in the Azure portal, I'm already looking at my Azure data lake analytics resource which I will click on to open up its properties blade.
  - Scroll down, I have an option here called Data sources where I'll see the data lake account that's already available for data lake analytics.
  - Click on that, I can see some details, the name and the type. This is Azure Data Lake Storage Gen1.
    - If I wish, I can also go down and start exploring the data by clicking Data explorer.
  - Now, this will be based on what we've added as data sources, as we can see. And I can start browsing through all of the files in the file system related to that storage.
So to add additional storage, I'm going to scroll back up in the properties blade and choose Data sources and then I'll click Add data source.

[Video description begins] In the navigation pane, under Settings, he clicks on Properties. A page for Properties opens. It has a navigation pane. He clicks on Data sources from the navigation pane. A page titleddatalake172- Data sources page appears. He clicks the Add data source button at the top. A new page titled Add data source appears. Drop-down menus are present for Storage type, Selection method, and Azure storage. There is an Add button at the bottom. [Video description ends]

And in this case, I'm interested in Azure storage and what I'm going to do is specify the Select account option or I can choose an Azure storage account.

[Video description begins] He clicks the drop down menu for Storage type. Two options appear: Azure Data Lake Storage Gen 1 and Azure Storage. He selects Azure Storage. [Video description ends]

[Video description begins] He clicks the drop down menu for Storage method. Two options appear: Select account and Account name. He selects Select account. He clicks the drop-down menu for Azure Storage. A list of options appears. He selectsstor14567. [Video description ends]

So I'm going to select an existing Azure storage account that has data that I would like to feed into Azure data lake analytics for further processing. So, I'm gonna go ahead and click Add.

[Video description begins] The Add data source page closes. The datalake172- Data sources page is open. A notification appears at the top right corner. It reads: Data source operation complete. Another Data source named stor14567/ is added to the table. [Video description ends]

And after a moment, we can see that our storage has been added, and, if I click on it, notice here it's not data lake storage, but rather, just simple Azure storage, as in a storage account.

[Video description begins] He clicks on stor14567/. A page titled stor14567/ appears. It contains details about the Name and Type. The Name is stor14567/ and the type is Azure Storage. He clicks the Close button at the top right corner of the page. The page closes. The datalake172- Data sources page is displayed. [Video description ends]

And so now that I've done that, if I scroll down for instance and go to Data explorer, now I may have to refresh this.

[Video description begins] In the navigation pane, under Data Lake Analytics, he clicks on Data Explorer. The datalake172adls page appears. [Video description ends]

So I'll click Refresh, and of course, I'll close what I was looking at previously because now I can see besides my data lake storage, I've also got my storage account here, my Azure storage account stor14567, it was called.

[Video description begins] He clicks the More button. A list of options appears. He clicks on Refresh. [Video description ends]

[Video description begins] He closes the datalake172adls page. 2 pages are simultaneously open: All resources and datalake172- Data explorer. A page titled All resources is open. It has two options: datalake 172 and datalake172adls . datalake172 is selected. A page titled datalake172-Data explorer is open. It has a navigation pane and a list of folders.These folders are: Storage accounts, datalake172adls (default), catalog, system, stor14567, Catalog and datalake172. [Video description ends]

[Video description begins] He expands the stor14567 folder. It contains 3 folders. He points to the folder named pics. [Video description ends]

I can even start browsing through folders in that Azure storage account to expose content. In this case, I've got a jpeg image.

[Video description begins] He clicks on the pics folder. A new page titled stor14567 opens. The following three buttons are present at the top: New folder, Upload, and Properties. A table with the following four column is displayed: Name, Type, Size, and Last Modified. A file named dog.jpg is listed in the table. [Video description ends]

Now, notice here, if I select that, I can get a preview of what is in that specific file.

[Video description begins] He clicks on dog.jpg. A page titled File Preview opens up. The following four buttons are present at the top: Format, Download, Properties, and Delete file. [Video description ends]

Normally, you'll have to download it to do that, as the built in filters often will not show you anything that makes any sense, it really depends on the file type, but notice we can also upload content even from this interface instead of go out to the storage account in Azure, including managing the hierarchy by creating folders and so on.

[Video description begins] He closes the File Preview page. The stor14567 page is displayed. [Video description ends]

And so it's important then to add the appropriate data sources to Azure data lake analytics so that you can begin to submit jobs that will process that data, and we'll see how to do that in another demo.

[Video description begins] In the navigation pane, under Settings, he clicks on Data sources. The datalake172- Data sources page opens. [Video description ends]

Work with Data Lake Datasets

[Video description begins] Topic title: Work with Data Lake Datasets. Your host for this session is Dan Lachance. [Video description ends]

Azure Data Lake Analytics is designed to be used as a large scale centralized data storage repository where data can come from many different sources. But it's also used for submitting jobs, so that we can process that data and gain insights from that data.

[Video description begins] A Microsoft Azure web page titled All resources opens. It has a menu bar with a search bar and the following options: Filter, Notifications, Settings, etc. A navigation pane is also present with the following options: Create a resource, Home, Dashboard, All Services, Favorites, etc. There are five buttons at the top: Add, Edit columns, Refresh, Export to CSV and Try preview. Below these buttons, there is an input box for name and drop-down menus for resource groups, types, location, tags, and grouping. The name input box contains the following text: data. A table is displayed with six columns: NAME, TYPE, RESOURCE GROUP, LOCATION, SUBSCRIPTION, and TAGS. The table has two rows with NAME: datalake172 and datalake172adls. [Video description ends]

So, here in the portal, I've gone to the All resources view, I've filtered by data, because I know that my data lake analytics configuration is called datalake172.

[Video description begins] He highlights data in the name input box. [Video description ends]

So I'm going to go ahead and click to open that up. And what I'm interested in doing is submitting a job.

[Video description begins] He clicks on datalake172. A page with the same name opens. It has a search bar followed by a navigation pane with the following options: Overview, Activity log, Access control (IAM), etc. At the top, the following buttons are present: New job, Sample scripts, Data explorer, etc. The main body has details about the resource. Some of the options here are: Pricing tier info, AU-hours used, Estimated cost, etc. [Video description ends]

Now I have a New job button right here at the top in the overview part of the Properties blade. I could also scroll down under the data lake analytics section, and here I would also see New job.

[Video description begins] In the navigation pane under the Data Lake Analytics section, he clicks on the New job option. A new page titled datalake172 - New job appears. At the top, the following buttons are present: Data Explore, Open file, and Save as. There is an input box for Job name. It has the following text: New job. There is a horizontal bar with a pointer for AUs, where the pointer lies at 1. The following details are also present here: Account: datalake172, Estimated cost: USD 0.03/minute, etc. There is a Submit button. A code editor area is also present here. [Video description ends]

So I can give a name to the job, and I'm going to go ahead and specify the code for it down below, this syntax is called U-SQL.

[Video description begins] 10 lines of code appear in the code editor area. Code line 1 reads: @a =. Code line 2 reads: SELECT * FROM. Code line 3 reads: (VALUES. Code line 4 reads: ("Customer1", 190.0),. Code line 5 reads: ("Customer2", 100.0). Code line 6 reads: ) AS. Code line 7 reads: D(customerID, amount );. Code line 8 reads: OUTPUT @a. Code line 9 reads: To "/customerdata.csv". Code line 10 reads: USING Outputters.Csv();. [Video description ends]

So it's kind of a combination of the C# programming language along with structured query language, or SQL to give it a bit more power. And the reason it exists is because structured query language under itself is really not designed to handle Big Data, whereas this is designed to work with that through, in this case Azure Data Lake Analytics. So, what we're doing here is creating a, I'm going to be creating a file here, I'm creating a tiny dataset. Now, of course, we can bring this dataset in from many other ways. But all I'm doing is creating a file here called customerdata.csv, and I'm going to have a CustomerID column, or field definition along with amount, and I can see I'm feeding it a couple of sample rows here, Customer1, with a numeric amount of 190, Customer2, with numeric amount of 100.

[Video description begins] In the code line 9, he highlights: customerdata.csv. [Video description ends]

[Video description begins] He points at code line 7. [Video description ends]

Now, your U-SQL jobs can be much more complex, and they can actually deal with processing of data.

[Video description begins] He highlights code lines 4 and 5. [Video description ends]

All I'm doing here is trying to illustrate a very basic simple example, so you get the sense of the construct. The overall skeletal framework that is used to work with Data Lake Analytics and start to process information. So once this has been done, I'm going to go ahead and click Submit. Now before I do that actually, before I submit I can also adjust the performance, the AUs because what I'm doing here is determining how many things can be processed parallel at once.

[Video description begins] He moves the pointer of the AUs horizontal bar to 13. [Video description ends]

And so depending on the nature of your U-SQL, we'll determine if you need to do this. And because this is very simple, I'm not gonna need to adjust that. So I'm going to go ahead and submit this.

[Video description begins] He moves the pointer back to 1. He then clicks the Submit button. [Video description ends]

So the job is submitted, it's going to take me to a new dashboard where we can see it's currently in the preparation phase, after which it'll be queued for processing, it'll be run, and then we'll be able to examine the result. In this case, the result should be that we've got that customer data file with the data in it.

[Video description begins] A page titled New job appears. It has four buttons: Refresh, Resubmit, Reuse script, and Cancel job. There is a section titled Status: Preparing. It has four steps: Preparing , Queued, Running, and Done, where Preparing is currently active. The following details are also present here: Progress: 0%, AUs: 1, Consumed AU-hours: 0, etc. The other side of the page has the following tabs: Job graph, Script, Data, AU analysis, and Diagnostics. Currently, the Job graph tab is open. It has a drop-down menu for Display and a button for Playback. [Video description ends]

And we can now see that the status of our job is such that it has succeeded.

[Video description begins] The Status changes to Succeeded and Progress shows 100%. [Video description ends]

And so if we go, let's say to the Data tab here, look at any Outputs. We can see indeed we've got customerdata.csv file, but let's back out of here.

[Video description begins] He clicks on the Data tab. The following two tabs are present here: Inputs and Outputs. He clicks on Outputs. There is a table with two columns: Name and Size. It has one item with the name: customerdata.csv. He then closes the page. The screen shifts back to the datalake172-New job page. [Video description ends]

And, why don't we run the Data explorer option here, just to go through our data, and sure enough notice there it is, customerdata.csv, it's in our data lake storage.

[Video description begins] He clicks on the Data Explorer option from the navigation pane. The datalake172adls page opens. It has the following buttons: Filter, New folder, Upload, Access, Folder properties, etc. A table is displayed with three columns: Name, Size, and Last Modified. It has three items with names: catalog, system, and customerdata.csv. [Video description ends]

And, if I we're to actually open that up and preview, we can see our two customers along with the amounts that were specified in our U-SQL script.


IoT Overview
  - The Internet of Things, otherwise called IoT, is really just a general umbrella term that refers to a large variety of devices that communicate over the Internet. Now that relates to Microsoft Azure in the sense that we can register devices with this central location in the Azure Cloud, and we can receive data from these IoT devices and monitor them through the Azure IoT Hub.But we'll talk to that effect later on in more detail. There were plenty of examples of IoT devices.
  - Things like water pressure valves and gauges and their current settings, baby monitors, smart cars that allow their details about their internal systems and their location to be made available over the Internet in a secured manner, medical equipment that can be controlled through the Internet, as well as home automation features, things like environmental control and turning on lights, and so on. This is just but a subset of examples of IoT types of devices that have Internet connectivity.
The thing to be careful of with this is with consumer grade IoT devices. Often, security is just not a priority. In many cases, you'll find that firmware might not even be updatable when there are security holes that are revealed about a specific type of consumer grade IoT product, like a home automation device. As with all security hardening in IT, when it comes to IoT devices we should always take care to make sure that default settings, like credentials to access a web interface on the IoT device are changed.
AlsoIoT devices should be placed on an isolated and secured network. The reason for this is because if an IoT device is compromised, we want to make it as difficult as possible for the attacker to connect to other devices on the network where the IoT device resides. So by putting it on its own protected network, we're adding that extra layer of security.
Pictured on the screen, we have an example of the Shodan website, which is essentially an IoT search engine, where we can search for items, as I have done here, such as home automation, and it will index any discovered devices that might appear to be vulnerable out there on the Internet.

[Video description begins] A screenshot of SHODAN website is displayed on the screen. On the left, there is a navigation pane. It has the following headers: Total Results, Platform, Type, and Author. At the top, there is a search box for Exploits. Home automation is entered in the search box. In the center pane, the following results display: keware technologies homeseer 1.4 - Directory Traversal, Schneider Electric SBO / AS - Multiple Vulnerabilities, etc. [Video description ends]

And so when we work with the Azure IoT services, we have a centralized way to securely receive this information from IoT devices. And from there, we might even feed that data into things like Azure machine learning, to determine if vulnerabilities might exist or if there's suspicious activity related to those IoT devices that needs to be addressed.


IoT Central
  - Azure IoT Central is an Azure managed service. This means the underlying complexities of setting up the infrastructure to support the IoT central service, whereby we can work with our IoT devices, those complexities are hidden from us so we can focus on actually doing what the service offers, which is to centrally manage IoT devices.So it is a separate Azure resource that we deploy, and we have a URL that would use the DNS suffix of .azureiotcentral.com for the IoT central website. So it provides us the ability to centrally manage IoT devices that have been registered through the IoT hub.

It also allows us to monitor them, and we can even build triggers that look at some of the data that we're monitoring and can take specific actions, such as the pressure in a valve in a remote planned exceeding a given threshold value that is considered safe and acceptable. Pictured on the screen, we see an example of the Azure IoT Central Management Portal.

[Video description begins] A screenshot of the IoT 172 portal appears. The page URL: https://iot172.azureiotcentral.com has been highlighted. On the left, there is a navigation pane with the following tabs: Dashboard, Device Explorer, Device sets, etc. The Dashboard is currently open, and it has the following title: CONTOSO. Some of the options here are: Quick Start Demo, Tutorials, Add Device Set, etc. [Video description ends]

Notice that the URL uses the DNS suffix as we've mentioned of .azureiotcentral.com. This one was created using a template and you can see here the page lists CONTOSO, but notice on the left in the navigator we can also explore IoT devices that are registered. As we drill deeper into this sample Azure IoT central management portal, we can start exploring devices.

[Video description begins] A similar screenshot for IoT 172 portal appears. Here the center pane has the title: Refrigerator 1. Below the title, the following tabs are present: Measurements, Settings, Properties, Commands, Rules, and Dashboard. The Measurements tab is currently active. It has a list of Telemetry items. [Video description ends]

In this example, we are exploring a refrigerator IoT enabled device, where we can see some telemetry items such as items related to gyroscopes and pressure, and so on. So depending on the nature of the IoT device will determine what is seen here. But, again, we can configure actions that would look at thresholds that might be exceeded, in this case, maybe a temperature for a refrigerator getting too low or too high. And that could trigger the sending of an email to administrators to do something about this.


IoT Hub
Azure IoT Hub is a separate type of Azure resource that you can deploy much like you might deploy an Azure Virtual Machine. Azure Io Central uses an IoT Hub, but the IoT Hub isn't directly manageable in this particular case. But you might wonder, what does the IoT Hub exactly do? The purpose of the IoT Hub, as the name implies, hub meaning some kind of a centralized repository where we have IoT devices that are connected.

And from there, we can receive messages from IoT devices. So details about the statistics related to what that IoT device does, such as monitoring temperature controls in a building. But we can also configure it so that we send commands to control those remote IoT devices, such as to adjust the temperature. And developers can choose a wide variety of programming languages to do that in. But before all of this can happen, IoT devices need to be connected to the IoT Hub.

And that's done through connection strings that will show up after you've built your IoT Hub resource. So there's a device registration connection string to initially get a device connected to IoT Hub. When you deploy your IoT Hub, one of the things you'll get to deal with is the IoT sizing which really deals with the number of messages for throughput that you want your IoT Hub to be able to handle.

Now, not only device registration is of interest here, but also device message transmission, either from the device to the IoT Hub or command sent from the IoT Hub to devices to control them. So what might we use Azure IoT Hub for? Well, because there's a wide variety of IoT devices out there, the uses are many as well.

We could use it for medical device tracking, not only to track the device itself and where it is, but also, of course, to track all of the detailed statistics provided by that IoT device, which could include things like vital signs of the patient to which that medical device is connected. IoT Hubs can also be used to register and track information related to industrial machinery controls, or remote building, heating ventilation, and air conditioning control.
IoT devices will make a connection to IoT Hub and transmit data using a number of different protocols, depending on the configuration, one of which is HTTPS over TCP port 443. However, we've also got AMQP. This is the Advanced Message Queuing Protocol. This is a standard for IoT device transmission of data that uses port 5672, and it's designed to work on a number of different platforms not, for example, just Windows.

MQTT is the Message Queuing Telemetry Transport. This is another type of protocol used by IoT devices that uses TCP port 1883. Now, which one should you use? Well, for example, AMQP is a mature standardized protocol that provides more potential functionality than MQTT does, but it does so at a cost of higher overhead.


Configure IoT Hub
The Azure IoT Hub is a centralized Azure resource that's deployed in the Azure cloud that allows us to connect a multitude of IoT devices for the purposes of managing those devices and monitoring any data that they might send into Azure IoT Hub.

[Video description begins] A Microsoft Azure webpage opens. It has a menu bar with a search bar and the following options: Filter, Notifications, Settings, etc. A navigation pane is also present with the following options: Create a resource, Home, Dashboard, All services, and Favorites. The main body of the page has a section titled Azure services. Some of the options here are: Virtual machines, Storage accounts, App Services, etc. [Video description ends]

To get started here in the portal, I'm going to click Create a resource over on the left, and I'm going to search for IoT.

[Video description begins] He clicks on Create a resource from the navigation pane. A screen titled New appears. It has a search bar. The presenter types iot in the search bar. A list of options appears. [Video description ends]

And I'm going to choose IoT Hub.

[Video description begins] He selects IoT Hub from the list of options. A screen titled IoT Hub appears. It has a drop-down menu for the field Select a Software plan. IoT Hub is the default selection. There is a Create button at the bottom of the page. [Video description ends]

From here, I'll click Create, and I'll start by tying this into an existing resource group I've created.

[Video description begins] He clicks the Create button. A screen titled IoT opens. There are three tabs on this screen. These are: Basics, Size and scale, and Review + create. The Basics tab is currently active. It has a section titled Project Details. There are drop-down menus for Subscription, Resource Group, and Region. An input box for IoT Hub Name is also present. The default value for Subscription is Pay-As-You-Go. The default value for Resource Group is cloud-shell-storage-eastus. The default value for Region is West US. At the bottom there are two buttons: Review + create and Next: Size and scale. He clicks the drop-down menu for Resource Group. A list of options appears. He selects Rg1 from the list. [Video description ends]

And like pretty much deploying any resource in Azure, I'll select an appropriate region or location. And I'm going to give a name to this.

[Video description begins] He clicks the drop-down menu for Region. A list of options appears. He selects Canada East from the list. [Video description ends]

This I'm going to call iothubcentralapp.

[Video description begins] In the input box for IoT Hub Name, he types iothubcentralapp. [Video description ends]

Okay, after I've done that, I'm then going to click Next.

[Video description begins] He clicks the Next: Size and scale button. The screen shifts to the tab titled Size and scale. It has a drop-down menu for Pricing and scale tier. The default value is S1: Standard tier. A scale for Number of S1 IoT Hub units is also present. The pointer is currently on 1. On the page, there is a section with the following details: Pricing and scale tier, Messages per day, and Cost per month. The Pricing and scale tier is S1, Messages per day is 400,000, and Cost per month is 25.00 USD. The following features are enabled: Device-to-cloud-messages, Message routing, Cloud-to-device-commands, and IoT Edge. At the bottom there are two buttons: Review + create, and Previous: Basics. [Video description ends]

Here I can specify the pricing and scale tier, so that we can determine how many messages can be handled by this IoT Hub. These are called IoT Hub units, so this is the scale capacity, and as we need more IoT capacity units, then we can increase them. Now we have to choose the appropriate tier before that even becomes an option.

And notice that what we're looking at here is a number of messages per day that can be processed. And what goes along with that, of course, is the cost increase or decrease, as you increase or decrease the maximum messages per day that you want to be able to process.

[Video description begins] He clicks the drop-down menu for Pricing and scale tier. A list of options appears. He selects S3: Standard tier from the list. The name of the next criterion changes from Number of S1 IoT Hub units to Number of S3 IoT Hub units. The value of Pricing and scale tier changes to S3 and Messages per day changes to 300,000,000. The Cost per month changes to 2500.00 USD. He then changes the value of Number of S3 IoT Hub units to 3. The value of Messages per day changes to 900,000,000 and Cost per month changes to 7500.00 USD. He changes the value of Number of S3 IoT Hub units to 1. The value of Messages per day changes back to 300,000,000 and Cost per month changes back to 2500.00 USD. [Video description ends]

These are messages from IoT devices. Next, I'll click Review and Create, and then I'll just click the Create button.

[Video description begins] He clicks the Review + create button. The screen shifts to the tab titled Review + create. It has information on the basics and size and scale for the IoT hub . At the bottom, there are two buttons: Create and Previous: Size and scale. He clicks the Create button. A page titled All resources appears. It has the following buttons on the top: Add, Edit columns, Refresh, etc. Below the buttons, there is an input box for Filter by name and drop-down menus for resource groups, types, location, tags, and grouping. Below these, there is a table with the following columns: Name, Type, Resource Group, Location, Subscription, and Tags. A few rows of data are present in this table. [Video description ends]

Now, I'm going to go to the All resources view here in the portal, and I'm going to filter it by IoT, since I know that's the prefix used to name my IoT Hub.

[Video description begins] In the Filter by name input box, he types iot. A resource named iothubcentralappappears in the table. [Video description ends]

And now we can see that it's listed here in the view. I'm going to click to open up its Properties blade.

[Video description begins] He clicks on iothubcentralapp in the table. A page titled iothubcentralappappears. It has a navigation pane. The main body has the following buttons: Move, Delete, and Refresh. Below the buttons, a few details are listed. These include: Resource group, Status, Location, Subscription, Hostname, etc. [Video description ends]

The first thing that we want to bear in mind is the hostname that's been assigned to our IoT Hub because we're talking about connectivity from IoT devices over the Internet to the IoT Hub defined in the cloud, which is what we're looking at here.

[Video description begins] The hostname is iothubcentralapp.azure-devices.net. [Video description ends]

Also, if we take a look further down, we can also see we have an IoT devices view.

[Video description begins] He clicks on IoT devices present in the navigation pane. A page for IoT devices appears. At the top, the following buttons are present: Add, Refresh, and Delete. Below the buttons, there is a table with the following columns: Device ID, Status, Last Activity, Last Status Update, etc. The table is currently empty. [Video description ends]

If I click on that, we don't have any devices of course yet, but we can click to add IoT devices by specifying the Device ID.

[Video description begins] He clicks the Add button. A page titled Create a device opens. It has an input box for Device ID, Primary key, and Secondary key. For Authentication type, there are three options: Symmetric key, X.509 Self-Signed, and X.509 CA Signed. Symmetric key is selected by default. A check box for Auto generate keys is also present. This box is checked. For Connect this device to an IoT hub, there are two buttons: Enable and Disable. Enable is selected by default. [Video description ends]

And whether we have a certificate or a symmetric key that's used to authenticate the device to the IoT Hub.

[Video description begins] He closes the Create a device page. The IoT devices page is open. [Video description ends]

Then we've got IoT Edge listed over here on the left-hand side, where we can add an IoT Edge device.

[Video description begins] From the navigation pane, he clicks on IoT Edge. An IoT Edge page opens. It has the following buttons on top: Add an IoT Edge device, Add an IoT Edge deployment, and Refresh. This page has two tabs: IoT Edge devices and IoT Edge deployments. The IoT Edge devices tab is currently open. It has a table with the following columns: Device ID, Runtime Response, Deployment Count, etc. [Video description ends]

[Video description begins] He clicks the Add an IoT Edge device button. A page titled Create a device opens. At the top, an information box is present, which has the following text: Find Certified for Azure IoT devices in the Device Catalog. This page has input boxes for Device ID, Primary key, and Secondary key. The Authentication type is Symmetric key. A check box for Auto generate keys is also present. This box is checked. For Connect this device to an IoT hub, there are two buttons: Enable and Disable. Enable is selected by default. [Video description ends]

Now from here we can look at the supported Azure IoT devices in the Device Catalog.

[Video description begins] He clicks the information box. A new tab opens in the browser. The url is https://catalog.azureiotsolutions.com. A page titled Find your IoT device appears. It has a search bar and a button named See all devices. A section titled Azure IoT Edge Certified is also present here. Some of the devices listed here are: Cloudian AI Box, ARTiGO A1250, OpenBlocks IoT VX2, etc. [Video description ends]

And, for example, if I'm interested in looking at power, some kind of IoT device that tracks power. I might start selecting these devices and reading about them in their support for Azure.

[Video description begins] In the search bar, he types power. A list of devices appears on the screen. He clicks on the device named PMC-5231. A page with the information of this device opens. It has three tabs: Device Specifications, Kit Specifications, and Get Started. The Kit Specifications tab is currently open. The kit is called ICP DAS- Power management IoT Kit. Below the name of the kit, there is a Request Demo button. [Video description ends]

So the idea is that we need to be able to determine which IoT devices in this particular case would support IoT Edge which allows us to write custom code modules that will actually run directly on that device.

[Video description begins] He shifts to the Microsoft Azure tab. He closes the Create a Device page. The IoT Edge page is open. [Video description ends]

And then we can add an IoT Edge deployment to push out the IoT Edge agent and custom modules, code modules that we want to do.

[Video description begins] He clicks on the Add an IoT Edge deployment button. A page titled Create Deployment appears. It has six tabs. The first tab is titled Name and Label is open. It has an input box for Name. At the bottom, there is a Next button. In the input box for Name, he types aa. [Video description ends]

Now these code modules, of course, are docker compatible containers that we want to push out. We can specify the container registry settings to point to those specific items.

[Video description begins] He clicks the Next button. The page shifts to the second tab, titled Add Modules (optional). It has input boxes for Name, Address, User Name, and Password. At the bottom there are two buttons: Previous and Next. [Video description ends]

So we have a number of things that we can do then through the specific IoT Hub.

[Video description begins] He closes the Create Deployment page. The IoT Edge page is open. [Video description ends]

It serves as a central point to manage and monitor IoT devices.


IoT Edge
Azure IoT Edge is an IoT-based solution for the Azure cloud that allows us to have custom code running on IoT devices. So this custom IoT software can run on the device and can even perform processing data functions on the device before even sending data back to the cloud, and specifically, back to an Azure IoT Hub. So the way that this works, generally speaking, is developers can build these custom modules, which really run as docker containers on Azure IoT Edge devices.

And those code modules or containers are then deployed to IoT devices. This also means that if there's a network outage because these IoT devices ideally would be on-premises elsewhere and not in the Azure cloud, if there's a network outage, they can still work with their code logic and process data, and when the network link is re-established, send that to the cloud specifically to the Azure IoT Hub for further processing and storage.

Azure IoT Edge has a number of components that work together, such as the Azure IoT Hub, which is an Azure resource that is used to centrally register IoT devices and manage and monitor them in the Azure cloud. Of course, the Azure IoT devices themselves are components that are used. These could be devices built by any manufacturer out there such as small devices that are used with sensors to determine temperature or power readings or pressure and pump readings or anything like that.

And that IoT device then could be registered with the IoT Hub and it can send data to the IoT Hub. But remember, with Azure IoT Edge, a lot of that data processing and manipulation can happen directly on customized code modules we place or push out to IoT devices before being sent into the Azure cloud. And so the next component is IoT Edge runtime. The Azure IoT Edge runtime needs to be supported on the IoT device.

And essentially, this is what allows us to push out. It's an agent that allows us to push out our code modules or docker compatible containers that have our custom code onto IoT devices. So when you configure an Azure IoT Hub, you can choose to add an IoT Edge device. And when you do, you'll see that there's a web page here where you can search for specific IoT device types that are supported to work with Azure IoT Hub as an IoT Edge device running that agent.

[Video description begins] A screenshot of Microsoft Azure IoT Device Catalog is displayed on the screen. It is titled: Find your IoT device. Below the title, there is a search box. The central pane shows the options for Azure IoT Edge Certified devices. Two devices have been listed here. [Video description ends]

So the process looks like this: We first create an IoT Hub.

[Video description begins] Screen title: IoT Edge Process. [Video description ends]

This is an Azure resource and we might even do it using the portal, let's say, after which we can then look at the connection strings in the IoT Hub to determine how to register our IoT device or devices with that IoT Hub. Next, we would add, as we saw on the previous screen an IoT Edge runtime device.

Essentially, we're pushing the agent out to that device, so it has to support this connectivity to Azure IoT Hub after it's registered. And then as developers build these custom modules or docker compatible containers, we can then create deployments. Really, it's called creating an IoT Edge deployment, where we specify the modules that we want to push out to specific IoT devices connected to IoT Edge that are running IoT Edge runtime.

IoT Solution Accelerators

[Video description begins] Topic title: IoT Solution Accelerators. Your host for this session is Dan Lachance. [Video description ends]

Microsoft Azure IoT solution accelerators are essentially pre-created IoT cloud solutions, where code is already written. However, you can customize it as you see fit. Also, it's got built-in support for IoT device monitoring. And, it also means that required cloud IoT services like IoT Hub get created automatically from this essentially prefab IoT cloud-based solution. So we could use accelerators so that we have a complete IoT cloud solution out of the box, but rarely is that the case.

Often, we will use one of these prefabricated IoT cloud solutions in Azure as a starting point, where we then go back and tweak it and make changes certainly to things like code, especially if we're going to be using IoT edge devices, where we run custom code modules directly on those IoT devices on another network. Pictured on the screen, we can see the Azure IoT solution accelerators website.

[Video description begins] A screenshot of the Azure IoT solution accelerators website is displayed on the screen. The URL of the website https://www.azureiotsolutions.com/Accelerators is highlighted. The page has two sections: Deploy a Microsoft solution accelerator and Explore partner solution accelerators. The Deploy a Microsoft solution accelerator section has the following options: Remote Monitoring, Connected Factory, Predictive Maintenance, and Device Simulation. [Video description ends]

Now, by going to this solution accelerators website, we can browse the variety of prefabricated solutions that could serve as either a complete solution, out of the box, or as we mentioned, as a starting point.

[Video description begins] Screen title: Deploying Azure IoT Solutions Accelerators. [Video description ends]

Once you've located a solutions accelerator that you're interested in from the website, you can select it. And you do that by clicking the Try Now button, at which point you're then going to be asked to specify an Azure subscription and region for the deployment. Next thing is that after it's deployed, which could take a few minutes, it might include some IoT device simulators, so that you can immediately be up and running and start working with the tool.

It might even use backend Azure Cosmos DB storage, but remember that these Azure IoT solutions accelerators are all a little bit different. In the end, one commonality is that they will often have a monitoring dashboard, if not more than one that you will use to navigate through the IoT solutions accelerator.

Azure Cognitive Services

[Video description begins] Topic title: Azure Cognitive Services. Your host for this session is Dan Lachance. [Video description ends]

Artificial intelligence, otherwise called AI, is essentially the imitation of human behavior by technology. In Azure, that could be done using Azure Cognitive Services, which provides a series of developer artificial intelligence tools and also an endpoint URL for making API calls to use artificial intelligence. AI usage is many-factored, including for speech purposes. This would allow developers to add speech-enabled features to their applications, such as voice to text.

There are APIs related to vision metadata tagging for processing of images, language analysis APIs, and intelligence search APIs. So, you get to learn about each of these API calls when you deploy cognitive services in Azure as a resource. The documentation is built in to the Properties blade of cognitive services. And bear in mind that in order for developers to make API calls to the API of their choosing, depending on the need, will require access to a key for the code to authenticate.

Deploy Azure Cognitive Services

[Video description begins] Topic Title: Deploy Azure Cognitive Services. Your host for this session is Dan Lachance. [Video description ends]

In this demonstration, I will deploy Azure Cognitive Services in the portal. This is really more of a developer thing; however, as IT administrators for Azure, we can deploy Azure Cognitive Services, which really serves as an entry point for developers to hook into APIs of their choosing.

[Video description begins] A Microsoft Azure webpage opens. It has a menu bar with a search bar and the following options: Filter, Notifications, Settings, etc. A navigation pane is present on this screen with the following options: Create a resource, Home, Dashboard, All services, and Favorites. The center pane has a section titled Azure services. Some of the options here are: Virtual machines, Storage accounts, App Services, etc. [Video description ends]

To get started here in the portal in the upper left, I'm gonna click Create a resource.

[Video description begins] He clicks the Create a resource option from the navigation pane. A page titled New opens. At the top, a search bar is present. [Video description ends]

And I'll just search for C-O-G, for cog, and I can see Cognitive Services listed, so I'll go ahead and search that.

[Video description begins] In the search bar, he types cog. The following list of options appears: Azure Search, Cognitive Services, Spatial Anchors, etc. He clicks Cognitive Services. A new page titled Cognitive Services opens. It has a drop-down menu for Select a software plan. The default value here is Cognitive Services. Below it, a Create button is present. [Video description ends]

Then, I'll choose Create.

[Video description begins] He clicks the Create button. A page titled Create appears. It has an input box for Name. There are drop-down menus for Subscription, Location, Pricing tier, and Resource group. A check box with the following text is present: I confirm I have read and understood the notice below. At the bottom of the page, a Create button is present. [Video description ends]

I need a name for this, so I'm gonna call this cogservice1.

[Video description begins] In the input box, he types cogservice1. [Video description ends]

And I'm gonna deploy this into a location that makes sense, that's nearest to me geographically where I'll be accessing it.

[Video description begins] The default value for Subscription is Pay-As-You-Go. He clicks the drop-down menu for Location. A list of options appears. These are: Central US, East Asia, Canada Central, etc. He selects Canada Central. [Video description ends]

And I'm gonna choose the only available pricing tier, and I'll deploy this into an existing storage group.

[Video description begins] He clicks the drop-down menu for Pricing tier. S0 appears in the options. He selects it. [Video description ends]

Notice I have to check off this confirmation about Microsoft using data that we send to Bing Search Services, if we talk to Bing-related APIs. So I'm going to go ahead and do that, and just go ahead and create this resource.

[Video description begins] He clicks the drop-down menu for Resource group. The following options appear: Rg1, testwebapp1, testwebapp2, etc. He selects Rg1. He checks the box for I confirm I have read and understood the notice below. [Video description ends]

[Video description begins] He clicks the Create button. The Microsoft Azure Home page appears on the screen. [Video description ends]

Once it's completed, it'll show up like any other resource does. So if I go to All resources and filter with a prefix of cog, there's cogservice1.

[Video description begins] He clicks the All resources option from the navigation pane. A new page titled All resources is displayed. The following buttons are shown below the title: Add, Edit Columns, Refresh, etc. Below the buttons, there is an input box for name. There are drop-down menus for resource groups, types, location, etc. A table is present below these input boxes. It has the following columns: Name, Type, Resource Group, etc. [Video description ends]

And if I click on and open it up, the first thing that's going to be important is the Keys in the Properties blade.

[Video description begins] In the input box for name, he types cog. A resource named cogservice1 appears in the table. He clicks on it. On the next screen, a new page titled: cogservice1 – Quick start is displayed. It has a navigation pane with the following options: Overview, Keys, Quick start, etc. Quick start is currently active. He clicks the Keys option from the navigation pane. [Video description ends]

[Video description begins] A new page titled cogservice1 – Keys appears. At the top, the following buttons are present: Regenerate Key1 and Regenerate Key2. Below it, there are input boxes for Name, Key 1, and Key 2. [Video description ends]

So you've got two Keys here, and you can regenerate one or the other. So you have two so that you can keep one in use for a while as you regenerate the other and over time, vice versa.

[Video description begins] He highlights the values in Key 1 and Key 2. [Video description ends]

So there is more security achieved by rotating keys periodically instead of sticking with the exact same keys. But when developers are making API calls, they're going to need access to one of these keys. Now, if I go to Quick start in the Properties blade.

I can also see reference documentation links for making API calls to the API of the developers choosing, whether it's the face API reference for facial recognition or whether it's translator text API references.

[Video description begins] He clicks on Quick start from the navigation pane. Three guidance steps for Quickstart are written on the screen. The first step is Grab your keys. The second step is Make an API call to this endpoint: https://canadacentral.api.cognitive.microsoft.com/ and the third step is Enjoy coding. The second step has the following built-in testing consoles: Face API reference, Translator Text API reference, Logs, etc. He hovers over a few of them. [Video description ends]

So when I click on any one of these, let's say we choose the face API reference, that's gonna open up a new web browser where we can see the regions in which that specific API is available through Cognitive Services.

[Video description begins] He clicks the Face API reference. A new tab titled Microsoft Cognitive Services opens in the browser. A navigation pane is shown with the following options with drop-down menus: Face, FaceList, LargeFaceList, etc. The Face option is expanded to show the following options: Detect, Find Similar, Group, etc. Detect is currently active. In the center pane, Face API - V1.0 heading is shown with a list of available regions. Next to it, an API definition button is present. [Video description ends]

And then we can see the API definition can then be downloaded either as a Swagger or a WADL file. The developers can use to learn about how to hook in to the API.

[Video description begins] He clicks the API definition button. It expands to show the following options: Swagger and WADL. [Video description ends]

And, as we go further down it has more of an explanation about how this works and how to formulate the request URL.


Azure Machine Learning Studio
  - You can use the Azure portal to create an Azure Machine Learning Studio workspace. 
    - The purpose of Machine Learning Studio, it being a web-based tool, is essentially data analysis, but it runs deeper than that. 
    - Always bear in mind that the source data that we use, that we're going to analyze needs to be trustworthy, and it needs to be accurate.
  - Although we do have some built-in functions that allow us to manipulate data, in other words, to transform the data
    - It's also important to note that there are sample data sets that we can use to learn how to use the Machine Learning Studio interface. 
      - Of course, we can also import our own data sets.
  - The purpose of machine learning in this context is to take vast amounts of data, and based on the factors that we define as being relevant and the training model that we apply to that data, we can then predict future trends or some kind of outcome as it might relate to financial credit risks. Or, as another example, the most likely income to be expected based on marital status, education, city, and many other potential factors, whatever happens to be in your data set that you specify as being relevant.

It might even relate to the healthcare side of things, such as heart disease prediction, given a number of factors. The process of working with a data experiment in Azure Machine Learning Studio begins with working with data. Whether it's sample data that's provided, or whether you import your own custom data. Bear in mind that there are also plenty of pre-defined templates.

There's a gallery that you can select from, that you can open up directly into Machine Learning Studio, so that you can begin working with these items and start to learn how to use the tool. The next thing to do once you've acquired data, or you decide you're going to use sample data, is to start applying functions such as maybe to transform the data into a specific manner, or maybe to exclude data that is not relevant, perhaps values that fall below a certain range.

You can also then apply learning algorithms based on what it is you're looking for in terms of an outcome. Finally, the last thing you would do is to run the data experiment and then visualize the outputs. Pictured on the screen, we can see the result of having created a Machine Learning Studio workspace object in Azure and then launching the Learning Studio.

[Video description begins] A screenshot of the Microsoft Azure Machine Learning Studio webpage is displayed on the screen. There is a side pane and a navigation pane. The navigation pane has a search bar for searching experiment items. It also has various other options, such as Saved Datasets, Data Format Conversions, Data Transformation, etc. The Data Transformation field is expanded to show the following options: Filter, Learning with Counts, Manipulation, Sample and Split, and Scale and Reduce. The Scale and Reduce field is expanded to show the following options: Clip Values, Group Data into Bins, and Normalize Data. The items in the experiment are shown in the center pane. A right pane is also present. It has two tabs: Properties and Project. Currently, the Properties tab is open. Under the option Clip Values, drop-down menus are present for the following fields: Set of thresholds, Upper threshold, Upper substitute value, etc. [Video description ends]

What you end up getting in the middle is a blank canvas. And then you can start dragging items from the left, such as data sets and you can add them into the canvas, but you can also then expand things like functions to manipulate your data. And, in this screenshot, the Data Transformation category has been opened up and the Clip Values item has been dragged over.

Now, when you drag something over and select it on the far right in the panel, you'll see details related to what's selected. In this case, for clipping peak values of a specific piece of data. Now, once you've done this, in the left hand-side of the screen in the navigator, you'll also be able to select different types of training models. And at the very bottom center, which you can't see in this screenshot, you'll have a Run Experiment button that you can use to actually run your experiment and then end up with some kind of predictive analysis as an outcome.

                    
Azure Firewall
The Azure Firewall is a managed service that, as the name implies, is used to control inbound and outbound traffic to and from Microsoft Azure. So it's set to block everything by default. But besides controlling in and outbound traffic to and from Azure, it gets associated with one or more subnets within an Azure VNet.

And we can even use other VNets besides the one where we deployed the Azure Firewall that connect in a hub and spoke fashion. Now when you deploy the Azure Firewall, you need to have a subnet called AzureFirewallSubnet within the VNet that you're deploying Azure Firewall into. Now you don't have to worry about having that done ahead of time. You can have it done ahead of time, or you can do that as you deploy the Azure Firewall.

The Azure Firewall has a static public IP address. This is unlike a network security group, or NSG, which can also be used in Azure to control in and outbound network traffic. So because the Azure Firewall has a static public IP address, then you could use that in conjunction with other firewalls elsewhere as a source, perhaps as a trusted location to receive traffic from.

Also we use rules of different types that we'll talk about to control the traffic flow. And again, something that makes the Azure Firewall different than a standard Azure network security group is that in an outbound direction it supports rules related to fully qualified domain names. So if I want to specifically allow a certain subset of URLs within a DNS domain, I can do that using the Azure Firewall.

The Azure Firewall also includes some threat intelligence capabilities that can not only alert on potential threats but also start denying traffic based on what's currently happening. Azure Firewall supports three different types of rules, one of which is called a NAT Rule to allow inbound access to resources deployed in Azure, either traffic stemming from your on-premises network or from somewhere else on the Internet.

So this is supported through TCP and UDP transport protocols. And it's referred to as Destination Network Address Translation, or DNAT. Where we've got a public IP address and port that is configured to map to an internal or private IP address import to allow traffic initiated from the outside in to Microsoft Azure. Each of the rules that we create within a collection has a priority value that determines the order of rule execution. And once there's a match with a rule then processing stops after that.

So, as I've mentioned, rules get placed into what's called a collection, so you can have more than one rule grouped together, for example, for Destination Network Address Translation, or DNAT. So pictured here, we can see a DNAT rule collection with the name of incoming, a priority of 100. And we've got one rule configured down below. Notice that the destination is the public IP address of the Azure Firewall.

And then further on the right, we can see the translated address and port which are what are used internally. Remember we've got a public IP address and port mapping to private IP address and port.

[Video description begins] A window titled Add NAT rule collection appears on the screen with certain data and Rules. The data displays: Name as Incoming, Priority as 100, Action as Destination Network Address Translation, which is abbreviated to DNAT. The Rules display: Name as Incoming HTTP, PROTOCOL as TCP , SOURCE ADDRESS as *, DESTINATION ADDRESS as 40.80.251.142, which is public IP of Azure Firewall, DESTINATION PORTS as 80, TRANSLATED ADDRESS as 10.1.1.1, and TRANSLATED PORT as 80. [Video description ends]

Next, we've got Azure Firewall network rules, which support TCP, UDP, ICMP, as well as any type of protocol, where we can specify the source and destination IP address, the destination port. And this is what you would normally use to allow communication or to control traffic flow between subnets. And it allows us to either configure an action of allowing the traffic or denying it.

Azure Firewall application rules are for outbound connectivity, which means from within Azure going out. And so we can specify Fully Qualified Domian Names, or FQDNs, including using wildcards. So we could specify star or asterisk dot somednsdomain.com or we can simply refer to everything with an asterisk. And we can specify the protocol and port, such as HTTPS:443, and we can either allow or deny.

Now bear in mind that the default configuration with Azure Firewall is things are denied. So if you want to allow specific access, if you want to make a white list of FQDNs, then you can certainly do that very easily. The last thing to mention is that you'll also need to build a route table Azure object that has the default route for a subnet going through the Azure firewall's private IP address for an outbound direction in the case of configuring application rules.


Configure Azure Firewall
In this demonstration, I'll be using the Azure portal to configure the Azure Firewall. The first thing we'll do is take a look at our existing configuration for virtual machines that will be affected by the Azure Firewall.

[Video description begins] The Homepage of Azure portal opens. The address bar shows: https://portal.azure.com/#home. The left navigation pane of the Homepage displays various links to resources and services, and the right pane of the Homepage displays icons to access various Azure services. [Video description ends]

So here in the portal, I'm going to click on the Virtual Machines view over on the left. Here I've got a virtual machine running, it's called eastwindowsvm1. And if we take a look at the networking for this, it's in a network called EastVnet1 and more specifically in a subnet within that vnet called EastSubnet1.

[Video description begins] He clicks Virtual machines on the left navigation pane of the Azure portal. A window titled Virtual machines default directory appears on the right pane. Virtual networks displays three networks in three rows. The details of the second row display: NAME as eastwindowsvm1, TYPE as Virtual Machine, STATUS as Running, RESOURCE GROUP as Rg1, LOCATION as Canada East, SUBSCRIPTION as Pay-As-You-Go. He clicks the second row. A window titled eastwindowsvm1 Virtual machines opens on the right pane. He clicks Networking under the Settings. The Network Interface and port rules display. Network interface displays as eastwindowsvm1758 and Virtual network/subnet displays as EastVnet1/EastSubnet1. He closes the window on the right pane. [Video description ends]

Now having said that, if I go to my jumpbox virtual machine, which is running, and click on it and look at the networking. It's in the same virtual network, EastVnet1, but in a different subnet, in this case EastSubnet2. Now a jumpbox is normally used as a point for remote administration from the outside. So I can make a connection from the Internet into the jumpbox, and from the jumpbox to other virtual machines on private networks.

[Video description begins] The window titled Virtual machines default directory appears on the right pane. Virtual networks displays three networks in three rows. The details of the third row display: NAME as JumpBox, TYPE as Virtual Machine, STATUS as Running, RESOURCE GROUP as Rg1, LOCATION as Canada East, SUBSCRIPTION as Pay-As-You-Go. He clicks the third row. A window titled JumpBox - Networking Virtual machines opens on the right pane. He clicks Networking under the Settings. The Network Interface details display: Network Interface as jumpbox568 and Virtual network/subnet as EastVnet1/EastSubnet2. [Video description ends]

So what I'm going to do then is take a look at my virtual network definition, because I've prepared something ahead of time. If I go into virtual networks on the left. And then if I open up one of my virtual networks here on the right, called EastVnet1. I've already created a subnet called AzureFirewallSubnet.

All one word, no spaces, and I've allocated it some address range that falls under the vnet range. Now you can either have this done ahead of time or you are prompted to create a new virtual network and a subnet with this name when you build the Azure Firewall, as you'll see pretty much now.

[Video description begins] He closes the window JumpBox - Networking. He clicks Virtual networks on the left navigation pane of the Azure portal. A window titled Virtual networks Default Directory appears on the right pane. Virtual networks displays four networks in four rows. The details of the first row are: NAME as EastVnet1, RESOURCE GROUP as Rg1, LOCATION as Canada East, SUBSCRIPTION as Pay-As-You-Go. He clicks the first row. A window titled EastVnet1 Virtual network opens on the right pane. He clicks Subnets under the Settings. Three subnets display in three rows on the right pane. He highlights the second row with the following details: NAME as AzureFirewallSubnet, ADDRESS RANGE as 10.1.5.0/24, and AVAILABLE ADDRESS as 251. [Video description ends]

So I'm going to click Create a resource in the upper left to begin building the firewall. I'm going to search for firewall. I'll select it from the list and I'll click Create. So I want to put this in an existing resource group I've already got created. And I'm going to call this Fw1 for firewall1, and in this case I'll put in the Canada East region and here's where you have the option to create a new virtual network or use an existing one.

Notice it wants to call it, the subnet at least within the Vnet, AzureFirewallSubnet. We've already done that. So if I were to choose Use existing, if I use existing Vnet, let's say I chose Vnet2 here. Notice it says you need to have a subnet called AzureFirewallSubnet. Well that Vnet doesn't but EastVnet1 does, and so I don't get that message any longer. Now remember that an Azure Firewall has a public IP address so it needs to create that resource. I'm going to call this Fw1PubIP and I'll click Review and create, it'll check.

[Video description begins] He clicks Create a resource on the left navigation pane of the Azure portal. A window titled New appears on the right pane. He types firewall in the search bar and clicks Firewall, which appears as the search result. A window titled Firewall Microsoft appears on the right pane. A section appears at the bottom of the window, which is titled Select a software plan, Firewall, Azure firewall is a managed cloud-based network security service that protects your Azure Virtual Network resources. He clicks the Create tab, below the section. A window titled Create a firewall appears on the right pane. It displays four tabs, Basic, Tags, review + create and requires certain details to be populated under each tab. Under the Basics tab, he enters the following details: Subscription as Pay-As-You-Go, Resource group as Rg1, Name as Fw1, Region as Canada East, Choose a virtual network as Use existing, Virtual network as EastVnet1 (Rg1), Public IP address as Fw1PubIP. He clicks Review + create. [Video description ends]

And once the validation has passed, I will click Create. So I'm in the midst of creating the firewall, and then we can see that the deployment is underway.

[Video description begins] A window appears on the right pane. It displays Create a firewall is in progress and then updates as Validation passed. The window also shows the summary of the data populated under Basics tab. He clicks the Create tab at the bottom of the window. A pop-up window appears on the top-right corner and displays: Submitting deployment. The pop-up updates that deployment is in progress. The window also shows: Your deployment is underway. [Video description ends]

While that's happening, I'm going to click Create a resource because what we need to create is a route table. Now we have to do this so we can direct any subnets that have resources that we want to go through our Azure Firewall, we need to define a route so that they are forced to so before traffic gets to the Internet.

Now that's going to be our example, the Azure Firewall also controls inbound traffic from the Internet. So I'm going to choose Route table and I'm going to click Create. And I'm going to call Fw1Rt1, firewall 1, router table 1. And I'll place this in an existing resource group. Same region or location, Canada East, and Create.

[Video description begins] He clicks Create a resource on the left navigation pane of the Azure portal. A window titled New appears on the right pane. He types route in the search bar and clicks Route table, which appears as the search result. A window titled Route table appears and he clicks the Create tab at the bottom of the window. A window titled Create route table appears on the right and requires certain details to be populated. He enters the following details: Name as Fw1Rt1, Subscription as Pay-As-You-Go, Resource group as Rg1, Location as Canada East, Virtual network gateway route propagation as Enabled. He clicks the Create tab at the bottom of the window. [Video description ends]

So we're going to have to do two things here. Number one, I'm going to have to create a route to the private IP address of my Azure Firewall. And I'm also going to have to associate the routing table with the subnet in question. Okay, looks like that resource deployment has succeeded. So let's just go to all resources here, I'll type rt and there it is, Firewall 1 Rt1, my routing table.

[Video description begins] A pop-up window appears on the top-right corner of the Homepage of the Azure portal. It displays that the deployment was successful. He closes the pop-up window. He clicks All resources on the left navigation pane of the Azure portal. A window titled All resources Default Directory appears on the right pane. He types rt in the search bar and a row displays as a search result. The details on the row display: NAME as Fw1Rt1, TYPE as Route table, RESOURCE GROUP as Rg1, LOCATION as Canada East, and SUBSCRIPTION as Pay-As-You-Go. He clicks the row and a window titled Fw1Rt1 Route table displays on the right pane. [Video description ends]

First thing that I'll do here is go to subnets and click Associate. I'm going to choose EastVnet1 and I'm interested in EastSubnet1. That's got virtual machines on it and my goal is to limit their access to specific Internet locations based on the FQDN. And those virtual machines are in EastSubnet1. So I want them affected by this routing table. So therefore I'm going to go ahead and click OK.

[Video description begins] He clicks Subnet under the Settings of Fw1Rt1 Route table window. He clicks the Associate Tab on the top of the window. The Associate subnet window displays two options to select from. The first is Virtual network and the second is Subnet. He clicks the first option. A list of four resources displays on the right. He clicks the first resource EastVnet1 canadaeast. A list of three subnets displays on the far right. He clicks the second subnet EastSubnet1 Rg1. He clicks OK on the bottom of the window. A pop-up window displays on the top-right corner of the right pane. It shows that route table is being saved for the subnet. [Video description ends]

Then, I need to create a route. Now, to do that, I need a private IP at the firewall. Let's see if the firewall is ready yet. So if I go to all resources and filter by fw, there is Fw1, but we don't have the private IP address yet. So let's give it a moment until it's completely initialized, then we'll copy the private IP because that needs to be in the routing table entry, as you will see in a moment. And after a minute, we have now have a private IP address for this firewall. So we're going to go ahead and copy that.

[Video description begins] He clicks Routes under the Settings of Fw1Rt1 - Routes window. He clicks All resources on the left navigation pane of the Azure portal. A window titled All resources Default Directory appears on the right pane. He types fw in the search bar and a list of three resources display in three rows. He clicks the first row with details: NAME as Fw1, TYPE as Firewall, RESOURCE GROUP as Rg1, LOCATION as Canada East, and SUBSCRIPTION as Pay-As-You-Go. A window titled Fw1 Firewall displays. The Private IP address 10.1.5.4 updates on the window. He clicks and copies the IP address. [Video description ends]

Now just for fun, let's go back to virtual networks for a moment and let's open up EastVnet1, and let's click Connected devices.

[Video description begins] He clicks Virtual networks on the left navigation pane of the Azure portal. A window titled Virtual Networks Default Directory appears on the right pane. A list of four virtual networks appear in four rows. He clicks the first row, which displays virtual network as EastVnet1. He clicks Connected devices under the Settings. [Video description ends]

So we can see that our firewall device, firewall 1 is connected to a subnet called AzureFirewallSubnet. We've got our jumpbox connected to EastSubnet2, we are going to reach into that jumpbox. And then from it we will connect to the private IP address for our Windows virtual machine running in EastSubnet2. So let's get back to our routing table and get this all figured out and working.

[Video description begins] A window titled EastVnet 1 - Connected devices opens with four devices displayed in four rows. He highlights the details of the first row: DEVICE as jumpbox568, TYPE as Network interface, IPADDRESS as 10.1.3.4, and SUBNET as EastSubnet2. He highlights the details of the second row: DEVICE as Fw1, TYPE as Firewall, IP ADDRESS as 10.1.5.4, and SUBNET as AzureFirewallSubnet. He highlights the details of the third row: DEVICE as eastwindowsvm1758, TYPE as Network interface, IP ADDRESS as 10.1.1.4, and SUBNET as EastSubnet1. He highlights the details of the first row: DEVICE as eastlinuxvm1764, TYPE as Network interface, IP ADDRESS as 10.1.1.5, and SUBNET as EastSubnet1. He closes the right pane. [Video description ends]

So I need to go to All resources. Filter it for rt, there's our routing table. We've already associated with EastSubnet1. And now I'm going to go to Routes and Add a route. I'm going to call this firewall1 default and the address prefix here for the default route is 0.0.0.0/0. The actual firewall is considered a virtual appliance in here, we're going to give it the private IP address. Then I'll click OK.

[Video description begins] He clicks All resources on the left navigation pane of the Azure portal. A window titled All resources Default Directory appears on the right pane. He types rt in the search bar and a resource Fw1Rt1 displays in a row. He clicks the row. A window titled Fw1Rt1 Route table displays. He clicks Subnets under the Settings. The subnet EastSubnet1 displays on the right pane. He clicks Routes under the Settings. A window titled Add route opens on the right pane. He clicks Add tab on the top of the window. A window titled Add route displays on the right pane and requires data to be populated. He enters the following details: Route name as Fw1Default, Address prefix as 0.0.0.0/0, Next hop type as Virtual appliance, and Next hop address as 10.1.5.4. He clicks OK at the bottom of the window. [Video description ends]

So now I've used remote desktop to RDP into my jumpbox and through it RDP to the private IP address of a Windows computer that is on a subnet affected by our default route to our firewall. And so what you are going to notice then on those machines, like if you go to the command prompt and if you try to ping something on the Internet, let's say www.google.com, you are not going to get a response back.

But you would from your jumpbox, of course, because it's reachable from the Internet. And so if I were to open a web browser here on this computer, and let's say I just try to go to cnn.com. Notice, I get an action of deny being shown here. No rule matched. And the default rule blocks connectivity. Okay, well, let's say I want to allow access to cnn.com. So I'm going to make an application rule that will allow that.

[Video description begins] He types the following command in the command prompt: ping www.google.com. No data displays as a result. He closes the command prompt. He opens the web browser Internet Explorer and types the following in the address bar: http://www.cnn.com/. He presses enter and the web page displays: Action Deny. No rules matched. Proceeding with default action. [Video description ends]

Back here in the Azure portal, in the All resources view, I'm going to filter for things that have fw in the name. And let see, firewall 1, Rules, Application rule collection, Add application rule collection. I'm going to call this AllowedEntertainment. If I can spell that correctly. I'm going to give it a rule priority. In this case, it's the only one I have, so 100. I want to allow, and the name here will be AllowHBO or CNN or whatever it is, in this case CNN. And let's say the source address is any, protocols and ports http,https, and the target FQDN will be star dot cnn.com and I'll click Add.

[Video description begins] He opens the Azure portal and clicks All resources on the left navigation pane. He types fw in the search bar on the right pane of the All resources window. Three resources display in three rows. He clicks Fw1 in the first row. A window titled Fw1 Firewall opens on the right pane. He clicks Rules under the Settings. Three tabs display on the right pane. He clicks the third tab Application rule collection. He clicks Add application rule collection, which displays below the three tabs. Add application rule collection window displays on the right pane, which requires some details. He enters the following details: Name as AllowedEntertainment, Priority as 100, Action as, Allow. He enters the following Target FQDNs details: NAME as AllowCNN, SOURCE ADDRESS as *, PROTOCOL PORT as http, https, Target FQDNS as *.cnn.com. He clicks Add tab at the bottom of the window. [Video description ends]

So once it's updated that firewall rule, I'm going to go back to that client station and retry the connection to cnn.com.

[Video description begins] The window titled Fw1 - Rules opens on the right pane of the Azure portal. A pop-up window displays on the top-right corner of the window. It displays that the firewall is being updated. [Video description ends]

And after a moment we can see we're able to pop up the web page because now that is listed as an allowed FQDN through our Azure Firewall. Although if I try to go to other sites here, like I've tried to go to google.com, again, I get an action of deny and I don't get access to the webpage.

[Video description begins] He opens the CNN website http://www.cnn.com/ on Internet Explorer. The web page opens successfully. He opens the Google website http://www.google.com/ The web page displays: Action Deny. No rules matched. Proceeding with default action. [Video description ends]

Azure DDoS Mitigation

[Video description begins] Topic Title: Azure DDoS Mitigation. Your host for the session is Dan Lachance. Screen Title: Azure DDoS Mitigation Distributed Denial of Service is abbreviated to: DDoS. [Video description ends]

A distributed denial of service attack is executed by an attacker, pictured here at the top of the diagram, who has control of a multitude of infected machines. Now, these machines would have been infected perhaps by tricking users into following links to websites that contain malicious code. Or email messages that have infected file attachments, and the like. Now the idea is that the attacker has control of all of these machines. These machines are called zombies or bots.

And they are organized into what is referred to as a botnet, a collection of computers under the control of an attacker. And often, if you actually search around the dark web, you will come across sites where these are for sale. You can rent the use of a botnet to execute a DDoS attack against, for example, a website or even a competitor to make their web application unavailable. Or even if you're a malicious person, to demand ransom. So highly illegal. However, it does exist and it's a reality.

And so we need to be able to mitigate this. So the attacker controls all of these bots organized into a botnet, which can render a website or an application useless for legitimate traffic. Now what can we do about this? Well, with a distributed denial of service attack, basic protection is automatically enabled for you in Microsoft Azure. And there's no additional cost, but what does that mean?

Well, why don't we compare basic with standard, which does have a cost associated with it. You configure standard DDoS mitigation protection in the properties of an Azure virtual network, when you're in the properties blade.

[Video description begins] Virtual network is abbreviated to: VNet. [Video description ends]

So what happens then, is that based on the resources deployed in that Azure VNet, Microsoft Azure will tune protection against DDoS attacks against those resources. And you also get alerts when DDoS attacks appear to be occurring against some of your deployed resources In those VNets.

Network Security Groups

[Video description begins] Topic Title: Network Security Groups. Your host for the session is Dan Lachance. [Video description ends]

Azure network security groups, or NSGs, are resources in Azure that get associated with other resources like NICs, network interface cards, used by virtual machines, or subnets.

[Video description begins] Network Interface Cards is abbreviated to: NICs. [Video description ends]

And so we're talking about inbound network security rules to control traffic coming into Azure, or even traffic leaving Azure in an outbound direction. But that inbound and outbound protection is associated at the NIC level for a specific virtual machine or, a little bit more generally, at the subnet level. So certainly, if you've got a subnet with a bunch of Linux machines that you want to be able to administer, you might allow inbound SSH, either to one jump box or to all of them.

And so you could do that through a network security group associated with the subnet. However, when it comes to associating network security groups with things like network interface cards used by DMs, bear in mind that only one network security group can be associated with a network interface card.

[Video description begins] Network Security Groups is abbreviated to: NSGs. [Video description ends]

Azure network security groups support Allow as well as Deny actions, depending on what your requirements are. There are also a series of default rules to allow things like load balancing, to allow Inter-VNet communication. And of course, incoming Internet traffic initiated from the Internet is blocked by default. Outbound Internet traffic, however, is allowed by default.

When you use the portal to create a network security group, or an NSG, it's going to look something like this. Specifically, this is a rule being created within the NSG, where at the top we specify the Source, in this case it's IP Addresses. We can control either a specific IP address or a range of IP addresses. We can specify a source port range or just a single port from which the traffic is initiated from. And then we have to specify the Destination, because this is an inbound rule. In this case, it could be a virtual network, it could be a specific virtual machine IP address. And, of course, we can see here the Destination port of 80.

We can specify the Protocol as being TCP, UDP, or Any. And then, of course, we determine whether we want to Allow or Deny this traffic, in this case we are allowing it. The Priority value is relative to other items. Here we've got a Priority for 100 in this rule. If we have another rule with a priority of 300, well this rule will get checked first, and if there's a match with the incoming traffic, rule processing stops. Otherwise, it would continue on to the next rule with a priority of 300. And then, of course, we have a name that we can assign to the rule.

[Video description begins] A window titled Add inbound security rule NSG1 appears. It shows Basic information that needs to be populated. The data shows: Source as IP Addresses, Source IP addresses/CIDR ranges as 199.126.129.55, Source port ranges as *, Destination as VirtualNetwork, Destination port ranges as 80, Protocol as TCP, Action as Allow, Priority as 100 and Name as Port_80. [Video description ends]

Here we can see a number of inbound security rules listed together for a network security group. We can see the first rule, PRIORITY 100, is the rule we just looked at a moment ago for port 80. So because that has the smallest priority number, at least value-wise numerically, it gets checked first. And on the far right, you can see the ACTION is to Allow it if incoming traffic matches those conditions.

The next three, the last three also, are default rules, and I can click the Default rules button pictured here in the screenshot to hide them if I don't want to see them. But allowing inbound VNet traffic and load balancing is allowed by default. But after that, notice the last rule at the bottom is to DenyAllInbound traffic if there is not a match from above.

[Video description begins] The screen displays a screenshot of inbound security rules. The screenshot shows a table with seven columns and five rows. Above the table, two tabs display: Add and Default rules. The first row of the table displays the title of seven columns as: PRIORITY, NAME, PORT, PROTOCOL, SOURCE, DESTINATION, and ACTION. The second row displays 100, Port_80, 80, TCP, 199.126.129.55, VirtualNetwork, Allow as values for each column. The third row displays 65000, AllowVnetInBound, Any, Any, VirtualNetwork, VirtualNetwork, Allow as values for each column. The fourth row displays 65001, AllowAzureLoadBalancerInBound, Any, Any, AzureLoadBalancer, Any, Allow as values for each column. The fifth row displays 65500, DenyAllInBound, Any, Any, Any, Any, Deny as values for each column. [Video description ends]

Network security groups in Azure can be managed using the Azure portal GUI, or using PowerShell cmdlets such as New-AzNetworkSecurityGroup, Get-AzNetworkSecurityGroup to retrieve a list of them. We can remove a security group with Remove-AzNetworkSecurityGroup.

However, there are also PowerShell cmdlets to manage the rules within the network security group. At the CLI level, we can use az network nsg create, naturally to create the network security group. We can list them, and of course we can delete them using the appropriate syntax.

Network Security Group GUI Management

[Video description begins] Topic Title: Network Security Group GUI Management. Your host for the session is Dan Lachance. [Video description ends]

In this demonstration, I will use the Azure portal to create and configure a network security group. In Azure, network security groups are often simply referred to as NSGs and they are used to control traffic into and out of VNet subnets.

[Video description begins] The Homepage of Azure portal opens. The address bar shows: https://portal.azure.com/#home. The left navigation pane of the Homepage displays various links to resources and services, and the right pane of the Homepage displays icons to access various Azure services. [Video description ends]

So to go ahead and get started here, let's take a look at an existing configuration and then we'll build a new one. So here in the portal, I'll start by clicking on Virtual networks over on the left, and I'm going to click on one of my existing virtual networks to pull up its properties blade. Now the first thing I want to do here is look at the subnet affiliation or

[Video description begins] He clicks Virtual networks on the left navigation pane of the Azure portal. A window titled Virtual networks appear on the right pane. Virtual networks displays two networks in two rows. The details of the first row display: Name as EastVnet1, Resource GROUP as RG1, LOCATION as Canada East, and SUBSCRIPTION as Pay-As-You-Go. The details of the second row display: Name as EastVnet2, Resource GROUP as Rg1, LOCATION as Canada East, and SUBSCRIPTION as Pay-As-You-Go. He clicks the first row. [Video description ends]

association to the selected VNet. And on the right, we can see that we've got a number of subnets such as EastSubnet1, for example, that is associated with this virtual network. And notice under the SECURITY GROUP column, we can see the network security group associated with that particular subnet, in this case, NSG1. So therefore, if I go to All resources and

[Video description begins] He clicks Subnets on the left navigation pane of the Azure portal. A window titled EastVnet1 - Subnets Virtual network appears on the right pane. Three rows display three subnets. He highlights the last row. The data displays: NAME as EastSubnet1, ADDRESS NAME as 10.1.1.0/24, AVAILABLE ADDRESS as 249, DEDICATED TO as blank, and SECURITY GROUP as NSG1. [Video description ends]

if I were to filter by NSG, among other things, we will certainly see NSG1, the network security group we were just talking about.

[Video description begins] He clicks All resources on the left navigation pane of Azure portal. A window titled All resources appears on the right pane with various links. He types nsg in the search bar placed above the links of all the resources. Three resources display in three rows as the result of the search. The third row displays data: NAME as NSG1, TYPE as Network security group, RESOURCE GROUP as Rg1, LOCATION as Canada East, and SUBSCRIPTION as Pay-As-You-Go. He clicks the last row. [Video description ends]

And if I go ahead and click on that to pull up its properties blade, it has a set of inbound security rules to control traffic into, in this particular case, the way it's being used, the subnet, and also outbound security rules. Now when I go to both inbound and outbound security rules, I can hide the built in default rules, which, if you look at their priority values fall towards the bottom of the list of rules.

The rules are matched against, in this case, incoming traffic starting at the very top based on the priority, and then going further down to the next priority value and so on and so forth. When there is a match, rule processing starts. And so that is also true when it comes to outbound security rules.

[Video description begins] The screen displays NSG1 network security group on the right pane of the portal. The right pane displays NSG1 properties and other links. He clicks Inbound security rules under Settings. A table with seven columns and six rows displays on the right. He clicks Outbound security rules under Settings. A table with seven columns and four rows displays on the right. He clicks Inbound security rules again. He clicks Default rules tab placed above the rows. This hides the default value rules and displays only three rows. He clicks the Default rules tab again and all the seven rows display. He highlights the first column of the table, which shows the PRIORITY as 1000, 1010, 65000, 65001, and 65500. He clicks Outbound security rules and closes the window. [Video description ends]

Now let's just go look at our virtual machines. If I were to pop up the properties blade of a virtual machine, and if we were to click on Networking, we would also see the VNet and the subnet association, but also the network security group. So notice here that we've got NSG1, that's network security group 1, attached to a subnet, and we can see that the rules are showing up in here. But also notice that if the virtual machine were running, we'd be able to click Effective Security Rules so that we would be able to see all of the rules in effect if we've got more than one particular security group. Because you might have a network security group associated to a virtual machine specifically.

[Video description begins] He clicks Virtual machines on the left navigation pane of the Azure portal. A window titled Virtual machines Default Directory displays on the right pane. The window displays three rows with three virtual machines. He clicks the second row, which displays: NAME as eastwindowsvm1, TYPE as Virtual machine, STATUS as Stopped, LOCATION as Canada East, and Subscription as Pay-As-You-Go. A window titled eastwindowsvm1 virtual machine opens on the right pane. He clicks Networking under Settings. The right pane displays: Network Interface as eastwindowsvm1758, Virtual network/subnet as Eastvnet1/EastSubnet1, and network security group as NSG1 (attached to subnet: EastSubnet1). A table also displays inbound and outbound port rules on the same window. He clicks Effective security rules on the top of the window. A window titled eastwindowsvn1758 - Effective security rules opens on the right pane, which displays all the effective inbound and outbound rules. [Video description ends]

So I'm going to go to the Create a resource button in the upper left, and here under the Networking section, I'm actually going to create a network security group. Now when I do that, I have to come up with a name for it. So if this is going to be, let's say for the Windows environment for an application, specifically, that has many resources like a back end database, some virtual machines, a load balancer and what not, maybe I would call this, WebApp1_ NSG, if it's for that purpose. Then I have to deploy it into either an existing resource group or create new resource group, specify the location, and then I simply click Create.

[Video description begins] He clicks Create a resource on the left navigation pane of the Azure portal. A window titled New appears on the right pane. Under the Azure Marketplace section, he clicks Networking and then clicks Network security group. A window titled Create network security group opens. He populates the required data: Name as WebApp1_NSG, Subscription as Pay-As-You-Go, Resource group as Rg1, and Location as Canada East. He clicks the Create tab at the bottom of the window. [Video description ends]

But that's not the end of the story with network security groups, though of course, because they need in and outbound rules configured appropriately so that they can be used. And then, of course, they need to be associated with things like subnets so they're actually effective.

So if I go to All resources here, let's just look or filter for NSG, here's WebApp1 NSG, so I'm just going to go ahead and click on that. So for inbound security rules, we've got the default rules, because if I hide them we see nothing. Same with the outbound rules, we've got the default rules.

[Video description begins] He clicks All resources on the left navigation pane of the Azure portal. A window titled All resources appears on the right pane. He types nsg in the search bar and four network security groups display in four rows, as a search result. He clicks the last row WebApp1_NSG. A window titled WebApp1_NSG Network security group opens on the right pane. He clicks Inbound security rules under Settings and a list of three rules displays in three rows. He clicks Default rules tab placed above the rows. This hides the default value rules and it does not display any row. He clicks Outbound security rules under Settings and a list of three rules displays in three rules. He clicks Default rules tab placed above the rows. This hides the default value rules and it does not display any row. [Video description ends]

However, I want to add a rule to allow inbound traffic. So because this is for a web app, I'm going to click Add to add a rule. The source will be Any. I can specify Source port range on the request, and I can also specify a destination of Any. Or I could specify an IP Address if I know, for instance, I've got a fixed IP address, a static, unchanging IP address, that I'm using for a virtual machine, that I can pop that in here.

If I know that the destination port is 443, it's an HTTPS connection type of application only, I know that's happening over TCP port 443, and I want to allow it. And again, I've got a priority value here and I need to give it a name. How about we call this AllowinboundHTTPS, and then I'll click Add.

[Video description begins] He clicks Inbound security rules under the Settings of WebApp1_NSG - Inbound security rules window. He clicks Add on the right pane of the window. A window titled Add inbound security rule opens on the right. He enters the following details: Source as Any, Source port ranges as *, Destination as IP Addresses, Destination IP addresses/CIDR ranges as 10.1.1.5, Destination port ranges as 443, Protocol as TCP, Action as Allow, Priority as 100, and Name as AllowInboundHTTPS. He clicks the Add tab at the bottom of the window. [Video description ends]

So once we've added the security rule or security rules to our liking, we're then ready to make this effective by associating this network security group with something, and those somethings could include, as we know, a subnet. If I go to Subnets, I can click Associate and I can choose, first, a virtual network and then choose the appropriate subnet to which I want that applied.

[Video description begins] He clicks Subnets under the Settings of WebApp1_NSG - Subnets window. He clicks the Associate tab on the right pane. A window titled Associate subnet WebApp1_NSG opens and displays two options to choose from: Virtual network and Subnet. He clicks the Virtual network option. A window titled Choose virtual network opens on the right. It displays EastVnet1 Rg1 and EastVnet2 rg1. He clicks EastVnet1. It displays three options under Choose subnet on far right. He clicks the second option EastSubnet 2 Rg1. A window titled Associate WebApp1_NSG opens with two options: Virtual network EastVnet1 and Subnet EastSubnet2. He clicks OK at the bottom of the window. [Video description ends]

However, I'm going to exit out of there because we can also associate this with a network interface that's tied to a virtual machine. So we could have a network security group for an entire subnet, but there are times when you might have a single virtual machine which is linked to a network interface that has specific in or outbound network traffic security rule requirements. And so in that case, you could associate your network security group with a specific network interface.

[Video description begins] He closes the Associate subnet window. He clicks Network interfaces under the Settings of WebApp1_NSG - Network interfaces window. He clicks the Associate tab on the right pane of the window. Associate network interface window opens on the right pane and displays jumpbox568 Rg1 network interface. He clicks jumpbox568 Rg1 and a pop-up window appears on the top-right corner of the right pane. It displays that the network interface is being saved. [Video description ends]

Network Security Group CLI Management

[Video description begins] Topic Title: Network Security Group CLI Management. Your host for the session is Dan Lachance. [Video description ends]

In this demonstration, I will create a network security group using the Azure CLI. I've downloaded and installed the Azure CLI and I've already run the az login command to authenticate to Azure. So at this point, I'm going to run az space network space nsg, for network security group, create. And from here, if I do --help, I'll learn about the syntax related to the creation of a network security group.

[Video description begins] A Command Prompt opens. He types and executes the following command in Command Prompt: az network nsg create --help. He presses enter and the screen displays various commands. He types and executes the following command: cls. A clear screen displays. [Video description ends]

However, I'm going to go ahead and bring up that command using my up arrow key and just modify it by removing --help. I'm going to use -g, I'm going to tie this network security group or deploy it into a resource group, and I'm going to call it, with -n for name, Windows_NSG. So assuming I need a network security group to control traffic into and out of Windows virtual machines, this will be a good name.

I'm going to go ahead and just do that. Once that's finished, of course, I can also get a list of virtual networks. So we can see it looks like it created our Windows_NSG, network security group.

[Video description begins] He types and executes the following command in Command Prompt: az network nsg create -g Rg1 -n Windows_NSG. He presses enter and the screen displays various commands. [Video description ends]

And at any point in time I could run az space network space nsg space list. Now I get the same kind of thing back.

[Video description begins] He types and executes the following command: cls. A clear screen displays. He types and executes the following command in Command Prompt: az network nsg list. He presses enter and the screen displays various commands. [Video description ends]

What I could do is also run that command, but pipe the result to the find command and tell it to look for name. Now I'm also going to get the names of rules within the network security groups. But at least we can see we have less to look at, and indeed, our Windows Network Security Group lives on.

[Video description begins] He types and executes the following command: cls. A clear screen displays. He types and executes the following command in Command Prompt: az network nsg list | find "name". He presses enter and the screen displays various commands. He highlights the following command: "name" "Windows_NSG" in the last command line of the Command Prompt. [Video description ends]

So, the next thing we're going to do is create a rule within that network security group to control traffic. So I'm going to run az space network space nsg space rule space create. And this is going to be for a resource group of Rg1 --nsg-name, in this case is Windows_NSG. I'll set the priority, let's say, for this rule to value of 200, which is relative to the other rules to control the execution.

And I'll use --source-address-prefixes anywhere, so asterisk, --destination-address-prefixes, same thing, going anywhere. And then I can specify also the destination port information. So, --destination-port-ranges. And in this case I want to make an allowance for port 443 --direction is going to be inbound because network security groups can also control traffic going out. -- access, we can either allow or deny, in this case, allow, the protocol, -- protocol, is tcp. And finally, let's give this thing a name.

How about AllowInboundHTTPS. And then I'll go ahead and press Enter on the assumption that everything was typed in correctly. Okay, it looks good.

[Video description begins] He types and executes the following command: cls. A clear screen displays. He types and executes the following command in Command Prompt: az network nsg rule create -g Rg1 -- nsg-name Windows_NSG --priority 200 --source-address-prefixes * --destination-address-prefixes * --destination-port-ranges 443 --direction inbound --access Allow --protocol tcp --name "AllowInboundHTTPS" . He presses enter and the screen displays various commands. [Video description ends]

Let's just do this, let's clear the screen. az space network nsg rule space list and --resource-group Rg1, and what's the name of our security group? --nsg-name, it's Windows_NSG, and we can press Enter, and we have a typo. Well, that's because we have az newtork when really it should be az network. A little dyslexic here, there we go.

[Video description begins] He types and executes the following command: cls. A clear screen displays. He types and executes the following command in Command Prompt: az network nsg rule list --resource-group Rg1 --nsg - name Windows_NSG. He presses enter and the screen displays various commands. [Video description ends]

So we got the same kind of output that we got when we created that rule. And we can see the destinationPortRange indeed is for port 443, and that this is for an Inbound direction and we're allowing that traffic.

[Video description begins] He highlights the following commands: "destinationPortRange": "443", "direction": "Inbound", "access": "Allow",. [Video description ends]

Network Security Group PowerShell Management

[Video description begins] Topic Title: Network Security Group PowerShell Management. Your host for the session is Dan Lachance. [Video description ends]

You can also use PowerShell to create and manage network security groups in Azure. Here I've already got a PowerShell script that I've opened up in the PowerShell ISE, the integrated scripting environment. The first command is Get-AzNetworkSecurityGroup. So having my cursor blinking on line 1 where that command exists, I'm going to click the Run Selection button. And this is going to list back, of course, the Azure network security groups and the details that go along with each of them as we can see.

[Video description begins] A window titled Windows PowerShell ISE displays. The window is divided into two sections. The first section displays commands and the second section below that displays codes. He highlights and executes the following command in the first line of command: Get-AzNetworkSecurityGroup. The cursor blinks after the command. He clicks the Run Selection button on the toolbar. The second section of the window displays various codes. [Video description ends]

However, in line 3 I'm filtering it out and only showing the name. So I'm piping it to the select alias in PowerShell, and telling it that the only prop I'm interested in is name. So let's go ahead and run that line, and see how the output differs. That is much cleaner looking, because now we see only the names of the network security groups as opposed to all of the details for each and every one of those network security groups.

[Video description begins] He highlights and executes the following command in the third line of command: Get-AzNetworkSecurityGroup | select name. The cursor blinks after the command. He clicks the Run Selection button on the toolbar. The second section of the windows displays: Name, eastlinuxvml-nsg, eastwindowsvml-nsg, NSG1, WebApp1_NSG, Windows_NSG. The section also displays other details of network security groups. [Video description ends]

So to build a new network security group we would use the New-AzNetworkSecurityGroup cmdlet. Where we have to specify a name,- name, we deploy it into a resource group, so I use -resourcegroupname for that, and then we specify the Azure region. Now I'm going to go ahead and run that line, so I'm going to select it and I'm going to run the selection. So after a moment we'll see that we've got a new network security group here.

[Video description begins] He types and executes the following command in the second section of the window: cls. He highlights and executes the following command in the fifth line of command in the first section: New-AzNetworkSecurityGroup - name Linux_NSG -resourcegroupname RG1 -location canadaeast. He selects the fifth line of command and clicks the Run Selection button on the toolbar. The second section of the windows displays data associated with new network security group. [Video description ends]

Let's clear the screen down here in PowerShell, why don't we run that command again where we just select by name. So how about we do that, let's just clear this up and let's see what we get returned here. What we're looking for is that we've got our Linux NSG or network security group that exist. And indeed it is returned from that PowerShell cmdlet,

[Video description begins] He types and executes the following command in the second section of the window: cls. He highlights and executes the following command in the third line of command in the first section: Get-AzNetworkSecurityGroup | select name. He clicks the Run Selection button on the toolbar. The second section of the windows displays: Name, eastlinuxvml-nsg, eastwindowsvml-nsg, Linux_NSG, NSG1, WebApp1_NSG, Windows_NSG. [Video description ends]

so, what are we doing in line 7? Well, I'm using the back tick character so that I can have this wrap across three lines, it's really one big statement. What we're doing here is we're running Get-AzNetworkSecurityGroup and I'm calling it by name. I want to get the Linux network security group, and here's the resource group it's in.

And then, once we have a handle on that object, we are piping that output to the Add-AzNetworkSecurityRuleConfig cmdlet. And we're adding a rule that's called AllowSSH, so we're allowing access that's destined from an inbound direction for TCP port 22, as we see way down here. We can see all the other details like the priority, the sourceaddressprefix, and in this case from anywhere, *the sourceportrange*, destinationaddressprefix*.

Having done that, that's the middle command as we can see selected here. Then we take the result of that and we pipe it to Set-AzNetworkSecurityGroup, so we can write the settings to the security group that we got from the beginning of the command. Does that make sense? We get the network security group, get a handle on it, add a rule and then write it using the Set-AzNetworkSecurityGroup cmdlet.

[Video description begins] He highlights and executes the following command in the seventh line of command: Get-AzNetworkSecurityGroup -name linux_nsg -resourcegroupname rg1 | Add-AzNetworkSecurityRuleConfig `. He highlights and executes the following command in the eighth line of command: -name AllowSSH -access allow -protocol tcp -direction inbound -priority 220 -sourceaddressprefix * `. He highlights and executes the following command in the ninth line of command: -sourceportrange * -destinationaddressprefix * -destinationportrange 22 | Set-AzNetworkSecurityGroup. [Video description ends]

So, let's make sure we execute lines 7, 8, 9 here as one expression. So I'm going to select them and I will click the Run Selection button. And after a moment, it looks like it ran. Why don't we do this? Why don't we go into the Azure portal and check our work in this particular example just for fun.

[Video description begins] He selects the seventh, eighth, and ninth line of command and clicks the Run Selection button on the toolbar. The second section of the windows displays various codes. [Video description ends]

So here in the portal I'm in the All resources view, why don't we filter it for things that have NSG in the name. There's the Linux network security group, and if you look at our inbound security rules, there is the AllowSSH with the priority of 220, port 22, and so on, and of course it is allowed. So there you have it, it's pretty easy to work with network security groups using Microsoft PowerShell.

[Video description begins] The Azure portal displays. He clicks All resources on the left navigation pane. The links to All resources display on the right pane. He types nsg in the search bar placed above the links of all the resources. Six resources display in six rows, as the search result. He clicks Linux_NSG on the third row. Linux_NSG network security group opens on the right pane. He clicks Inbound security rules under Settings. A table with five rows and seven columns displays. He highlights the first row, which shows the following data: PRIORITY as 220, NAME as AllowSSH, Port as 22, PROTOCOL as TCP, SOURCE as Any, DESTINATION as Any, and ACTION as Allow. [Video description ends]

Configure a VM Jump Box

[Video description begins] Topic Title: Configure a VM Jump Box. Your host for the session is Dan Lachance. [Video description ends]

In this demonstration, I'm going to create a jump box. A jump box is a machine that you can connect to. For example, from the Internet if you're working on premises, so that you have access into the Azure cloud. And from the jump box you can then make remote connections to other internal Azure resources. Like other virtual machines that might not be publicly accessible directly.

[Video description begins] The Homepage of Azure portal displays. The address bar shows: https://portal.azure.com/#home. The left navigation pane of the Homepage displays various links to resources and services, and the right pane of the Homepage displays icons to access various Azure services. [Video description ends]

And so to get started, really we're talking about creating a virtual machine. So I'm going to click Create a resource in the upper left here in the portal, it's going to be Windows Server 2016 Datacenter. And I will deploy this into an existing resource group. We're going to call this JumpBox, and I'm going to go ahead and deploy this into a specific Azure region of my choosing.

And I'll fill in the Username and Password information. And then I'll click Next, I'm going to accept the disks. And for networking this is going to go and do a virtual network called EastVnet. And specifically I'm going to put this in a subnet, let's say, called EastSubnet1, and it's going to make a new public IP.

So that's fine, let's let it create that, because I need a public IP to get to the jump box. And from the jump box we get to other internal resources that might not have a public IP. So I'm okay with this. I'm just going to basically go through the wizard. I'm okay with everything here. Let's make sure validation is passed.

[Video description begins] He clicks Create a resource on the left navigation pane of the Azure portal. A window titled New displays on the right pane. It displays various links. He clicks Windows Server 2016 Datacenter Quickstart tutorial. A window titled Create a virtual machine displays on the right pane. It displays seven tabs: Basics, Disks, Networking, Management Advanced, Tags, and Review + create. He clicks the Basics tab. The tab displays various details, which need to be populated to create a virtual machine. He selects and types the following details: Subscription as Pay-As-You-Go, Resource group as Rg1, Virtual machine group as JumpBox, Region as Canada East, Availability options as No infrastructure redundancy required, Image as Windows Server 2016 Datacenter, and size as Standard DS1 v2. He types his username and password and clicks the Next: Disks > tab at the bottom of the window. The Disks tab displays. The OS disk type displays as Premium SSD. He clicks Next: Networking > tab at the bottom of the window. The Networking tab displays. He enters the following data: Virtual network as EastVnet1, Subnet as EastSubnet1 (10.1.1.0/24), Public IP as (new) JumpBox-ip, NIC network security group as None, and Accelerated networking as Off. He clicks Next: Management > tab at the bottom of the window. He clicks the Advanced, Tags and Review + Create tabs also. [Video description ends]

And it is, so I'm going to create this virtual machine. Now, while that's happening, if I go look at my other virtual machines. I've got one here called eastwindowsvm1, and it's got a private IP allocated but not a public IP. And this virtual machine is actually in the midst of being started. Let's just go back here and do a refresh now. And in a moment, we'll see that it's actually up and running.

[Video description begins] The Create a virtual machine window on the right pane displays Validation passed. He clicks the Create tab at the bottom of the window. A pop-up window shows that the deployment is in progress. He clicks Virtual machine on the left navigation pane of the Azure portal. A window titled Virtual machine opens on the right pane and displays three virtual machines in three rows. He clicks the second virtual machine eastwindowsvm1 on the second row. A window titled eastwindowsvm1 Virtual machine opens on the right pane. The window displays Private IP Public Address but not the Public IP address. He clicks Virtual machine on the left navigation pane of the Azure portal. A window titled Virtual machine opens on the right pane and displays three virtual machines in three rows. He clicks Refresh tab displayed above the rows. The Status of the virtual machines eastwindowsvm1 and JumpBox, displayed on the second and third row gets updated to Running. [Video description ends]

And after a few moments, we can see that the two virtual machines are up and running. Again, we've got a virtual machine here that does not have a public IP, but it does have a private one. But that's not our JumpBox. Our JumpBox, if I click on it, in fact does have a public IP address.

Let's start by using the Remote Desktop client here on premises to connect into the jump box. Okay, so I've popped in the public IP address that I copied from the jump box virtual machine in Azure. So I'll paste that in here, I'm going to click on Connect. And when I put in the credentials and click OK, I'll just get this certificate message. I'm going to trust this certificate and tell it not to ask me again every time I connect, and I'll choose Yes. So we're making an inbound connection from on-premises through

[Video description begins] The window titled Virtual machines displays on the right pane. He clicks the second virtual machine eastwindowsvm1 on the second row. The Public IP address is still not displayed. He clicks the third virtual machine JumpBox on the third row. The window tilted JumpBox displays the Public IP address as 52.235.38.242. He clicks and copies the Public IP address. A pop-up window titled Remote Desktop Connection displays. He types Computer as 52.235.38.242 and clicks Connect. Another pop-up window titled Windows Security displays. He enters the credentials and clicks OK. A security warning displays on the window. He clicks the Yes tab. A pop-up titled Remote Desktop Connection displays, which shows the connection is being established to 52.235.38.242. [Video description ends]

the Internet into our jump box Windows virtual machine in the Azure cloud. Now, let me just go ahead and minimize that Remote Desktop window. Because what we want to do is now make a connection to this virtual machine eastwindowsvm1. Which, of course, as we know, if we go to overview, let's say, it does not have a public IP but it does have a private one. So I'm going to copy that private address, 10.1.1.4. Let's go back to our Remote Desktop session in our jump box.

[Video description begins] A window titled Virtual machines displays on the right pane of the Azure portal. The window displays three virtual machines in three rows. He clicks the second row: eastwindowsvm1. A window titled eastwindowsvm1- Networking displays on the pane. He clicks Overview. The right pane displays the Private IP address as 10.1.1.4, however, does not display the Public IP address. He clicks and copies the Private IP address. [Video description ends]

So now within here, I'm just going to go to my Start Menu and we're going to go ahead and fire up the Remote Desktop client. So from the jump box we're making a connection to other Azure host. In this case, using the private IP, in this case 10.1.1.4, which was our example, 1.1.4. And I'll click Connect. And of course it wants the credentials so I'll go ahead and supply that including the password.

And then after a moment we'll be prompted to trust a certificate for that connection to secure that network transmission. And now we can see that we are one level deeper, we are now connected to an internal Azure virtual machine, that itself, does not have a public IP. But rather, we got to it by going through a jump box. Now, the jump box itself does not have to be on the same subnet.

[Video description begins] He clicks Start menu on his computer and opens the Remote Desktop Connection. A pop-up window titled Remote Desktop Connection displays. He types the Private IP address as 10.1.1.4 and clicks the Connect tab on the pop-up window. Another pop-up window displays, which requires credentials to connect. He types the credentials and clicks the OK tab on the pop-up window. A security certificate appears and he clicks the Yes tab. The connection gets established. [Video description ends]

Back here in the Azure portal, if I open up EastVnet1 and look at the connected devices, we can see our Windows virtual machine and our jump box which are both on the same subnet. Now, that may or may not meet your security needs, we easily could have put our jump box on a different subnet in a different range.

And it would still be able to make a connection to the private IP of our Windows virtual machine. And sometimes because the jump box is publicly accessible, you might want to put it on its own subnet for isolation purposes, but it's not a requirement.

[Video description begins] A window titled eastwindowsvm1 Virtual machines displays on the right pane of the Azure portal. He clicks Activity log and a window titled Virtual networks displays on the right pane. The window displays two virtual machines in two rows. He clicks EastVnet1 on the first row. A window titled EastVnet1 Virtual network displays on the right pane. He clicks Connected devices under Settings and the right pane displays the following three network interfaces in three rows: eastwindowsvm1758 with IP address 10.1.1.4 , eastlinuxvm1764 with IP address 10.1.1.5, and jumpbox240 with IP address 10.1.1.6. [Video description ends]

Just-in-Time VM Access

[Video description begins] Topic Title: Just-in-Time VM Access. Your host for the session is Dan Lachance. [Video description ends]

Configuring a virtual machine in Azure with just in time access can further harden virtual machines. This is because instead of always allowing, for instance, inbound remote management traffic, then what we could do is only enable that as it's needed and then turn it off when remote management is complete. Instead of always leaving a port open, for example, through an inbound rule in a network security group. So here in the portal, I've got a list of virtual machines, one of which I will click on, it's called JumpBox.

[Video description begins] The Virtual Machines page of the Azure portal opens. The left navigation pane of the portal displays various links to resources and services, and the right pane displays details of three virtual machines in three rows. He clicks the last row. The details of the virtual machine are: NAME as JumpBox, TYPE as Virtual machine, STATUS as Running, RESOURCE GROUP as Rg1, LOCATION as Canada East, SUBSCRIPTION as Pay-As-You-Go. A window titled JumpBox opens on the right pane. [Video description ends]

And in here I am going to go to the configuration part of the properties blade, where I can enable just-in-time-access, so I'm going to go ahead and do that. Now when you enable that on a virtual machine, you can then open the Azure Security Center from that provided link or just by clicking Security Center here in the bottom left of the navigator, same thing, same place.

But when I do that, what happens is I can select virtual machines that are enabled for this and request access. Now before we do that, why don't we go back to our virtual machines here, and I'm going to copy the public IP address of this virtual machine and attempt to connect using the remote desktop protocol client on my station.

[Video description begins] He clicks Configuration under Settings displayed on the JumpBox window, A window titled JumpBox - Configuration opens on the right pane. The window displays: Just-in-time access with Enable just-in-time policy tab and Azure hybrid benefit with Yes and No tabs. He clicks the Enable just-in-time policy tab. A pop-up window appears on the top-right corner of the screen. It displays that just-in-time access policy is successfully enabled. The JumpBox - Configuration window displays Open Azure Security Center link under Just-in-time access. He clicks the link and a window titled Just in time VM access opens on the right pane. The window displays a row, which shows a configured JumpBox virtual machine with a checkbox. He clicks and enables the checkbox. He clicks Virtual machines on the left navigation pane of the Azure portal. The right pane displays a list of three virtual machines in three rows. He clicks the last row, which displays JumpBox. A window titled JumpBox opens on the right pane. He clicks and copies the Public IP address 52.235.38.242. [Video description ends]

So I'm trying to make a remote desktop connection to the public IP of this virtual machine. But notice it seems to be taking an awful long time, and that's because it's going to time out. When you enable just-in-time-access, this is what the desired outcome is.

[Video description begins] A Remote Desktop Connection pop-up window displays. It attempts to establish the remote desktop connection to the Public IP address 52.235.38.242. Another pop-up window shows that the connection could not be established. He clicked the OK tab on the pop-up window. He closes the Remote Desktop Connection pop-up window. [Video description ends]

And so, when we go to the Azure Security Center or we can do that through the configuration, then we can request access as we need it. So I'm going to select that JumpBox virtual machine, it could be any virtual machine, and then I'll click Request access. So I want access to port 3389 because it's running Windows, I want that on,

[Video description begins] He clicks Configuration under Settings of the JumpBox window. The JumpBox - Configuration window opens on the right pane. The window displays Just-in-time access with Enable just-in-time policy link. He clicks the link and the window titled Just in time VM access opens on the right pane. The window displays a row, which shows a configured JumpBox virtual machine with a checkbox. He clicks and enables the checkbox. He clicks the Request access tab displayed above the row. [Video description ends]

I want to allow it from my current IP address as it's known on the Internet. And it's set here for three hours, that's fine, although I do have the slider I could control. But I will leave it on 3, and I am going to click the Open ports button.

[Video description begins] A window titled Request Access opens on the right pane. A row displays the port details that need to be selected for JumpBox virtual machine. He selects the following details: PORT as 3399, TOGGLE as On, ALLOWED SOURCE IP as My IP, and TIME RANGE as 3 hours. He clicks the Open ports tab at the bottom of the window. [Video description ends]

And after a moment we can see in the upper right that it's enabling just-in-time or JIT access to that virtual machine. So now if I go back to my remote desktop connection for the public IP of that virtual machine and click Connect, we know it's working because it's prompting us for credentials right away. And if I pop those credentials in, then we will successfully have made a remote desktop connection through just-in-time-access to that virtual machine.

[Video description begins] The window titled Just in time VM access opens on the right pane. A pop-up window displays on the top-right corner of the window. It displays: JIT or Just-in-time network access request initiated. A Remote Desktop Connection pop-up window displays. He clicks the Connect tab displayed on the pop-up window. Another pop-up window titled Windows Security displays. He types the required credentials and the remote desktop connection gets established. [Video description ends]

VM Antimalware

[Video description begins] Topic Title: VM Antimalware. Your host for the session is Dan Lachance. [Video description ends]

There are a few ways, using the Azure Portal, that we can install anti-malware agents within virtual machines.

[Video description begins] The Virtual Machines page of the Azure portal opens. The left navigation pane of the portal displays various links to resources and services, and the right pane displays details of three virtual machines in three rows. [Video description ends]

One is to go to the Azure Security Center. When I go to the Azure Security Center, we can start to take a look at any of the recommendations that might apply to things like Compute, which would be virtual machines.

[Video description begins] He clicks Security Center on the left navigation pane of the Azure portal. A window titled Security Center - Overview opens on the right pane. The window displays three sections: Policy & compliance, Resource security hygiene, and Threat protection. These sections display certain data and various details. The Resource security hygiene section further displays two sections: Recommendations and Resource health monitoring. The Resource health monitoring section display: 3 Compute & apps, 3 Data & storage, 3 Networking, and 1 Identity access. He clicks 3 Compute & apps. [Video description ends]

And I can see here that it talks about installing endpoint protection on virtual machines. And if I click that, it'll have some recommendations for virtual machines that need it and I could select some or all of them and choose Install. But we can also do this manually.

[Video description begins] A window titled Compute opens on the right pane. The window displays four tabs: Overview, VMs and Computers, VM scale sets, Cloud services, and App services. The Overview tab displays four rows. He clicks the first row, which displays the following data: Recommendation as Install endpoint protection solution on virtual machines, Secure Score as +15, and Failed resources as 2 of 3 virtual machines. A window titled Endpoint Protection not installed on Azure VMs displays on the right pane. The window displays Virtual Machine row with no recommendations. [Video description ends]

So if I go to my Virtual machines view, and if I click on a virtual machine to pull up its property sheet, one of the things I can look at are its Extensions. And extensions are add-on items that run as agents within the virtual machine to give it additional functionality.

And so I have no extensions listed here, but I could click Add. And then it's a matter of choosing from the list. For example, I'll choose Microsoft Antimalware. And I'm going to go ahead and click on Create.

[Video description begins] He clicks Virtual machines on the left navigation pane of the Azure portal. The right pane displays details of three virtual machines in three rows. He clicks the second row, which displays the following data: NAME as eastwindowsvm1, TYPE as Virtual machine, STATUS as Running, RESOURCE GROUP as Rg1, LOCATION as Canada East, and SUBSCRIPTION as Pay-As-You-Go. A window titled eastwindowsvm1 opens on the right pane. He clicks Extensions under Settings and clicks the Add tab. A window titled New resource opens on the right pane. The window displays a list of resources and he clicks Microsoft Antimalware from the list. The details on Microsoft Antimalware display on the right. He clicks the Create tab at the bottom of the window. [Video description ends]

Now a lot of these extensions will give you some configuration settings, as we see here, that are specific to that extension. Such as whether I want to configure excluded files or locations from my anti-malware solution that might normally trigger false positives. Or files extensions I want to exclude, or processes that are running that I want to exclude.

So I'm going to leave Real-time protection enabled, and we're going to turn on Run a scheduled scan. That's enabled. And the Scan type will be a full scan. And the Scan day, let's say, will be Sundays. And we can also determine the maximum amount of Scan time from midnight, so this is the starting time. So this is 120 minutes from midnight, so in other words, at 2 o'clock in the morning we want to begin doing a scan. So I'm going to go ahead and click OK.

[Video description begins] A window titled Install extension displays on the right pane. He enters the following data: Excluded files and locations, Excluded file extensions, and Excluded processes as blank, Real-time protection as Enable, Run a scheduled scan as Enable, Scan type as Full, Scan day as Sunday, and Scan time as 120. He clicks the OK tab at the bottom of the window. [Video description ends]

And we can now see it's submitted that deployment to install that extension within that virtual machine. And after a moment, we can see that the provisioning succeeded for the installation of that anti-malware extension.

[Video description begins] The window titled New resource opens. A pop-up window titled Submitting deployment displays on the top-right corner of the right pane. A window titled eastwindowsvm1 - Extensions opens on the right pane. The window displays a row, which shows the following details: NAME as IaaSAntimalware, TYPE as Microsoft.Azure.Security.IaaSAntimalware, VERSION as 1.*, and STATUS as Provisioning succeeded. [Video description ends]

Storage Account Access

[Video description begins] Topic Title: Storage Account Access. Your host for the session is Dan Lachance. [Video description ends]

When you are planning your Azure resource deployment, one thing to consider is from where you want to allow access to that resource. And that also applies to storage accounts, which we'll focus on here.

[Video description begins] The Homepage of Azure portal opens. The address bar shows: https://portal.azure.com/#home. The left navigation pane of the Homepage displays various links to resources and services, and the right pane of the Homepage displays icons to access various Azure services. [Video description ends]

So, here in the Azure Portal, I'm going to start in the left-hand navigator by clicking on Storage accounts, where I will click on an existing one to pull up its properties blade. I'm interested in scrolling down in the properties blade until I see Firewalls and virtual networks.

[Video description begins] He clicks Storage accounts on the left navigation pane of the Azure portal. Three Storage accounts appear on the right pane. He clicks an existing storage account stor14567. The right pane displays the properties of stor14567. He scrolls through the list of properties and clicks Firewalls and virtual networks. The right pane of Firewalls and virtual networks displays two radio buttons under Allow access from. The first radio button is All network and the second radio button is Selected network. [Video description ends]

Notice that this is configured to allow access from all networks. Now we can limit that. If I click Selected networks, I can choose to add an existing VNet, or virtual network, or add a brand new virtual network that will have access to the storage account. So I'm going to choose Add existing virtual network. From here, I can select all my VNETs, or specifically cherry pick the ones I'm interested in. And then I can also choose subnets, any variation thereof, that should have access, I'll choose a specific subnet, and I'll click Add.

[Video description begins] The first radio button All network is selected, by default on the right pane of Firewalls and virtual networks. He clicks the second radio button: Selected networks. After the selection, Under Virtual networks displays: Secure your storage account with virtual networks. It also displays two options to select from: Add existing virtual network and Add new virtual network with a + sign in front of both the options. He clicks Add existing virtual network. Another window titled Add networks displays on further right of the pane. The window displays: Subscription, Virtual networks, and Subnets, each having a drop-down menu. From all the three drop-down menus, he selects Subscription as Pay-As-You-Go, Virtual networks as EastVnet1 displayed under Rg1, and Subnets as EastSubnet1. He clicks the Add at the bottom of the window. [Video description ends]

And we can see here that we've got an entry here for the EastVnet1 with EastSubnet1 having access to this storage account. But as we go further down below, we can also even add our client IP address. This IP address is my current IP as it's known on the Internet. And so conveniently, I can set that on. But bear in mind, if my public IP address for my Internet connection changes, then this will no longer work, but I can just come in and change it again.

I can also specify specific IP addresses or CIDR ranges. I can determine if I want to allow read access to logging or metrics related to this storage account from any network, I don't. And if I want to allow other trusted Microsoft services to access this storage account. But be careful with this one. Notice it's checked on by default, which it allows some other services like Azure Backup or Recovery services to be able to talk to the storage account. And so I'm going to go ahead and leave that on then because of that, and I'm going to click Save.

[Video description begins] The Firewalls and virtual networks pane of the storage account stor14567 displays the added virtual network. Virtual network displays: VIRTUAL NETWORK as EastVnet1, SUBNET as 1, RESOURCE GROUP as Rg1, and SUBSCRIPTION as Pay-As-You-Go. He clicks the arrow placed before EastVnet1. Under EastVnet1, the details display: SUBNET as EastSubnet1, ADDRESS RANGE as 10.11.0/24, ENDPOINT STATUS as Enabled, RESOURCE GROUP as Rg1, and SUBSCRIPTION as Pay-As-You-Go. He scrolls through the window. Under the Virtual networks, two more sections display: Firewall and Exceptions. Firewall displays Add IP ranges to allow access from the internet on your on-premises networks. He checks the checkbox: Add your IP address ('71.7.176.108'). He moves his cursor to Address Range, which displays under IP address checkbox. There are three check boxes under Exceptions: Allow trusted Microsoft services to access this storage account, Allow read access to storage logging from any network, and Allow read access to storage metrics from any network. The first checkbox is checked by default. He clicks Save, which displays on the top of the pane. [Video description ends]

After a moment, we can see it successfully wrote the changes here. So now we have limited access to our storage account from a specific VNet subnet, and from a specific on-premises client IP address.


Azure Advanced Threat Protection
  - Azure Advanced Threat Protection, or ATP, provides protection against security threats to your Azure resources
    - There is built-in monitoring to monitor for suspicious activity and then to send alerts about that activity.
  - It identifies anomalies based on what is not within the profile of being normal in your Azure usage environment
    - In other words, beyond a standard normal usage baseline, anything outside of that is considered abnormal
    - Advanced Threat Protection reports are available to be generated.
  - Specifically, the type of protection that ATP gives us is against attacks related to things such as pass the hash. Pass the hash is a type of attack that given access to a virtual machine where we've got, for example, an administrator logged on. Doesn't have to be an administrator, but that's in our example. Then, if an attacker can gain access to that host during that session, then the attacker can look at the hash values stored in memory and use that hash value to connect to other network resources as that user, without having to figure out what the password is.

Another protected item would be against enumeration of SMB, or Server Message Block, sessions. Protection against the enumeration of items in Active Directory. Protection against encryption downgrades, which is applicable when two machines begin to communicate, they negotiate how they will communicate. And in the attackers sense of realm, of what would happen is that they would try to use a lower level of encryption. Ideally, one that is known to have weaknesses.

And that's called an encryption downgrade attack. Advanced Threat Protection can also detect DNS reconnaissance attempts. Reconnaissance essentially is information gathering. The more that a malicious user knows about your Azure environment, including DNS names, IP addresses, deployed resources, which resources talk to each others, then the better off they are in finding some kind of a vulnerability and attempted to compromise something you've got deployed in Azure.

In order to use Advanced Threat Protection in Azure, you need an ATP license. And you manage this through the ATP portal, it's a separate portal that has a URL of portal.atp.azure.com.

[Video description begins] The ATP portal address typed is: https://portal.atp.azure.com. [Video description ends]

ATP is also designed to connect to and monitor Active Directory, there are Azure ATP sensors that are used to do that. And this is used to detect things like Active Directory enumeration type of reconnaissance attacks.                    

                    
Azure Active Directory
  - Microsoft Active Directory Domain Services is an important infrastructure component that you'll see on many on-premises enterprise networks. However, we can also work with Active Directory in the cloud in the form of Azure Active Directory, otherwise called Azure AD, even sometimes just AAD. What it is is a managed service. This means that you don't have to manually deploy domain controller computers that will house your Active Directory instance. It's taken care of for you already.
  - Unto itself, Azure Active Directory does not offer the slew of features you would might be used to when you run Active Directory on-premises. An example of this is the lack of group policy for centralized configuration management. However, Azure Active Directory can contain standard types of objects like users so that users can authenticate and then be authorized to use services.
  - And we can even enable multi-factor authentication or MFA. So that we have an additional layer of security beyond just username and password when users authenticate. Users can be organized into groups, which is often done to facilitate permissions assignments for people that have the same type of privilege needs. We can also configure applications in Azure Active Directory. And devices can be joined to Azure Active Directory. Let's take a look at a couple of variations of Azure AD starting with Azure AD Join.
With Azure AD Join, we can join devices to the Azure Active Directory domain, such as Windows 10 computers. And not only that, but people sitting in front of those computers can then authenticate with the user account that exists. Not in the on-premises active directory necessarily, but rather in Azure Active Directory. Then we've got Azure AD Domain Services. And this is where you get some more features that make it feel like on-premises Active Directory.

Things like the ability to create organizational units, or OUs, which are like folders to organize users or groups in Active Directory. Furthermore, we can then apply group policy settings centrally that would apply to our Active Directory hierarchy. Finally, we've got Azure AD Connect, this used to be called DirSync. And it allows us to install an agent on an on-premises domain controller that will replicate select information into Azure AD.

So for users that should have access to on-premises IT systems and so would be authorized to do that through authenticating with their local Azure or with their local domain creds, rather, on-premises. If it's replicated to Azure, then they can also access Azure services without having to provide another set of credentials.


Navigate Azure Active Directory Settings
  - Azure Active Directory is an identity management solution in the Azure cloud. When you're in the Azure Portal, in the left hand navigator towards the bottom, you'll see an entry for Azure Active Directory.
  - Now, if you don't have the textual display, then you'll be able to hover over the icons in the left hand navigator to see what they are. Either way, when I go to Azure Active Directory, the first thing I'll see are some metrics related to the number of sign-ins plotted against dates. And as I scroll down, if I look over on the right, there's a quick list of common tasks, like creating users, or a guest user account, or a group. Or even having an application registered through Active Directory.
  - And, as I go further down, I even have the option of creating a brand new instance of Azure Active Directory by filling in my organization name and a domain name. Which will, by default, use the .onmicrosoft.com suffix, but you can change that by configuring a custom domain.
  - And as a matter of fact, if we kind of scroll down in the left hand navigator here, where we're looking at our settings for our default directory, so this is the properties blade for the default directory. You'll see as you go all the way down, you have a number of options available, and one of those options is to create custom domain names.

[Video description begins] The Default Directory - Overview page displays. He clicks the Custom domain names option. The Default Directory - Custom domain names page displays. It has different options, such as Add custom domain, Refresh, Troubleshoot, and Columns. It also displays Status, Federated, and Primary drop-down fields. [Video description ends]

So that way you could use the DNS domain name that represents your corporate identity on the Internet instead of something with the .onmicrosoft.com suffix. Now, also bear in mind when you're signed in to the Azure Portal, in the upper-right, if you click on your sign-in account name. You'll have the option to switch between different instances of Azure Active Directory, if you've got more than one instance.

[Video description begins] On the top-right corner, he clicks the login name. A pop-up box displays with the login information and two hyperlinks, My Microsoft account and Switch directory. He clicks Switch directory. [Video description ends]

So we can go ahead and simply click on one to switch to it. Now, bear in mind that when you switch to another instance of Azure Active Directory, you're looking at the resources from its context. So for example, you can see that we are now looking at the default directory.

[Video description begins] The Directory + subscription pane displays. It has the Switch directory section, which contains the Set your default directory drop-down field and it is set to Default Directory. It also displays two tabs, Favorites and All Directories. On the Favorites tab, two directories display, Default Directory and quick24x7.com. He points to Default Directory. [Video description ends]

And so if I were, for instance, to go to the All resources view, then I'm seeing all of the resources that would be related to that specific Azure Active Directory instance.

[Video description begins] He expands the left pane of the Microsoft Azure web page. Then, he clicks the All resources option. The All resources page displays. It has various options, such as Add, Edit columns, and Refresh. It also has different filter options, such as All resource groups, All types, and All locations. It displays the list of resources with details, such as Name, Type, Resource Group, and Location. [Video description ends]

But let's say in the upper right, I switch directory to another Azure Active Directory instance that I already have, and we know that we can create one. Well, if I go to the All resources view, notice we see nothing here. So all of the stuff, all the resources that we work with here in Azure will be related to the currently selected, well, Azure subscription for sure, but also the Azure Active Directory instance. So I'm just going to switch back to the default directory.

[Video description begins] On the top-right corner, he clicks the login name and then clicks Switch directory. The Directory + subscription pane displays. He clicks the quick24x7.com directory. The Microsoft Azure web page displays. He clicks the All resources option. The All resources page displays. The page does not display the list of resources. Then, he clicks the login name again, clicks Switch directory, and selects Default Directory. [Video description ends]

And once again, if I go to the All resources view, then we're back to seeing all the resources that have been previously deployed. I'm going to click on Azure Active Directory once again, on the left.

[Video description begins] The Microsoft Azure web page displays. He clicks the All resources option. The All resources page displays. [Video description ends]

So we see here that we can click on Users in the Properties blade to work with user accounts in Azure Active Directory.

[Video description begins] He clicks the Azure Active Directory option in the left pane. The Default Directory - Overview page displays. On the left-hand side, he clicks the Users option. The Users - All users page displays. It has various options, such as New user, New guest user, and Multi-Factor Authentication. It also displays the list of users, with details, such as Name, User Name, User Type, and Source. He clicks the Close button. [Video description ends]

We can also, if I close that out, organize users into groups, perhaps to facilitate permissions management. And also, if I take a look at Roles and administrators on the left, we can look at a specific role, let's say the Billing administrator role. And we can add members that will assume the privileges that this role provides, in this case, to manage things related to billing.

[Video description begins] On the left-hand side, he clicks the Groups option. The Groups - All groups page displays. It has various options, such as New group, Refresh, and Columns. It also displays the list of groups, with details, such as Name, Group Type, and Membership Type. He clicks the Close button. Then, he clicks the Roles and administrators option. The Default Directory - Roles and administrators page displays. It shows the list of different roles and their descriptions. He clicks the Billing administrator role. The Billing administrator - Members page displays. It has different options, such as Add member, Refresh, and Manage in PIM. He clicks the Close button. [Video description ends]

So we've got a number of options available here, including Azure AD Connect, which is used to synchronize On-Premises Active Directory with Azure Active Directory. So we can see the sync status here is that the Azure AD Connect component or agent is not even installed on-premises. So you see we have a Download link here to make that happen. And then we could follow through the installation and running of that wizard on-premises to make a connection to Azure for synchronization purposes.

[Video description begins] He clicks the Azure AD Connect option. The Default Directory - Azure AD Connect page displays. It has three sections: Sync Status, User Sign-In, and On-Premises Applications. [Video description ends]

Azure AD User and Group Management

[Video description begins] Topic Title: Azure AD User and Group Management. Your host for this session is Dan Lachance. [Video description ends]

You can use the Azure portal to create Azure Active Directory users and groups. Of course, you could also do the same thing programmatically or through the CLI or through PowerShell cmdlets. So here in the portal, to get started, I'm going to click Azure Active Directory in the left hand navigator.

[Video description begins] The Microsoft Azure web page displays. In the left pane, it has various options, such as Home, Dashboard, All services, and Resource groups. On the right-hand side, it has Azure services, such as Virtual machines, Storage accounts, and App Services. The host clicks the Azure Active Directory option in the left pane. [Video description ends]

First I'm going to take note of is the fully qualified domain name for my instance of Azure Active Directory. And I'm going to copy that only because I know I'm going to need that when I build a user account later on. Let's start by going to Groups.

[Video description begins] The Default Directory - Overview page displays. On the left-hand side, it has various options, such as Overview, Getting started, Users, Groups, and Organizational relationships. On the right-hand side, it displays a chart with sign-ins for the Default Directory. The host copies the domain name - stefansammsoutlook.onmicrosoft.com. Next, he clicks the Groups option. [Video description ends]

Here we can see any existing groups, but I'm going to click the New group button. Groups are used, of course, to organize users into a manageable unit, usually to facilitate things like permissions management. So you've got two group types you can select from here, Security, and Office 365. Because I'm setting this group up for assistant Azure IT technicians, I'm going to choose Security.

So we're not building this group to control access to Office 365 resources. The group name here will be HQ, for headquarters, _AzureIT. And the membership type can be old school, as in Assigned, where you manually add members to the group. But you can also use Dynamic User or Dynamic Device for membership of the group.

So for instance with Dynamic User, we could build a rule that would look at user attributes, such as the department the user is in. And based on the value of the department attribute, that would then determine the group that that user becomes a member of. However here, I'm going to use Assigned, and I'm not going to add members at this point. So I'll just click Create.

[Video description begins] The Groups - All groups page displays the list of groups with details, such as Name, Group Type, and Membership Type. He clicks the New group hyperlink. The Group dialog box displays. He selects Security in the Group type drop-down field, enters HQ_AzureIT in the Group name field, and selects Assigned in the Membership type drop-down field. Then, he clicks the Create button. [Video description ends]

So after a moment in the list, we're going to see our newly created group, HQ_AzureIT. And there it is in the list. Now we could click the three dots on the right to delete the group. We could also click on the group to open it up and maybe modify some of the properties of the group.

[Video description begins] The new group, HQ_AzureIT appears on the Groups - All groups page. He clicks the new group. [Video description ends]

Such as switching it from Assigned to Dynamic User. Or we could add members to the group, but I'm not going to that in this method.

[Video description begins] The HQ_AzureIT Group page displays. It displays fields, such as Membership type, Source, Type, and Object ID. On the left-hand side, it displays options, such as Properties, Members, and Owners. He clicks the Properties option. The Properties page displays. It has a General settings section with details, such as Group name, Group description, Group type, and Membership type. Then, he clicks the Members option on the left-hand side. The Members page displays. He clicks the Close button. [Video description ends]

So let's get out of here, and let's go back to the point where we can click on Users in the Properties blade. Now we can add guest users. Essentially you're sending an invitation, such as through email, to allow users' limited access to Azure. However I'm not going to do that here, I'm just going to click New user. And I'm going to build a user called Jonathan Gold.

And the user name will be jgold@, and then I'm going to paste in my Azure Active Directory domain name, after the @ symbol. I could then click things like Profile and fill in values, such as for the department. So I'm just going to go ahead and click OK. Then for properties, all we can see here is the authority source is Azure Active Directory. And here I can also modify group membership.

So I want this account, Jonathan Gold, to be a member of the HQ_AzureIT group. So I'm going to select that group and I'm going to click Select.

[Video description begins] The Default Directory - Overview page displays. He clicks the Users option. The Users - All users page displays. It shows the list of users with details, such as Name, User Name, User Type, and Source. He points to the New guest user hyperlink and clicks the New user hyperlink. The User dialog box opens. He enters Jonathan Gold in the Name field and jgold@ in the User name field. Then he appends the user name with the domain name. He clicks Profile. The Profile dialog box opens. It contains fields, such as First name, Last name, and Job title. He specifies IT in the Department field. He clicks Properties and the Properties dialog box opens. Next, he clicks Groups. The Groups dialog box opens. He selects HQ_AzureIT. [Video description ends]

Now down below, notice that a password is generated for this user. And if I click Show password, we can see it here. I'm just going to go ahead and copy that in case we want to use it. And we can reset it at any time if the password is forgotten.

[Video description begins] The Password field is populated with a password. He selects the Show Password checkbox and clicks the Copy icon. [Video description ends]

Now in this case, Jonathan Gold has a directory role of User. Now we could select Global administrator to give full access to that account to manage our Azure subscription. Or we could also use limited administrator.

[Video description begins] He clicks Directory role, which is set to User. The Directory role dialog box opens. It has three radio buttons: User, Global administrator, and Limited administrator. He selects the Global administrator and Limited administrator radio buttons, one by one. Then, he clicks the User radio button and clicks the Create button. [Video description ends]

So notice when I choose global administrator, it says this person will have full control over all directory resources. But if I choose Limited administrator, then we can see these specific roles that we might want to assign. Such as the billing administrator, and maybe an application administrator, and so on.

So we have a number of options available. We might even use things like custom roles that we build. So I'm going to leave it as just user and I'm going to create Jonathan Gold. So after a moment, we'll see that our account for user Jonathan Gold has been created.

[Video description begins] The user, Jonathan Gold, appears in the Users - All users page. [Video description ends]

So I've gone into a new web browser and I'm trying to authenticate to portal.azure.com. Although technically, there could be numerous different ways a user might want to authenticate to Azure. Or even Office 365 depending on the account type. Here we're just going to ahead and pop in the user account name. I'll click Next and I'll specify the password. And of course it wants me to change the password to something different, because it's the first time this user account is signing in.

[Video description begins] The Sign in to Microsoft Azure web page displays. It shows the user name as jgold@stefansammsoutlook.onmicrosoft.com. He clicks Next. The Enter password section displays. He pastes the copied password and clicks Sign in. The Update your password section shows three fields: Current password, New password, and Confirm password. He enters the current password. [Video description ends]

And after a moment, we get a welcome message to Azure. I'm not going to view the tour, but notice that we've got our account name jgold listed up here for the default directory. And so if we go to All resources, well we don't really have access to work with a lot of items. And if we go to Create a resource, such as a virtual machine. Well, we don't quite have access for that, so then instead, we get a list here of creating a free account with a link to start a free account.

[Video description begins] The Microsoft Azure web page displays. On the top-right corner, it displays the new user name. He clicks the All resources option. The All resources page displays. Next, he clicks the Create a resource option. The New dialog box displays. It contains several resources, such as Windows Server 2016 Datacenter, SQL Database, and Web App. He selects Windows Server 2016 Datacenter. The Create a free account page opens with a Start free hyperlink. [Video description ends]

However, we know that the account is valid, it just doesn't have any permissions to do anything yet. You can learn more about that in another video entitled Assigning Built-in RBAC Roles.

Azure AD User MFA

[Video description begins] Topic Title: Azure AD User MFA. Your host for this session is Dan Lachance. [Video description ends]

Multi-factor authentication, or MFA, enhances user login security. And it does this because instead of simply having the knowledge of a username and a password to authenticate to Azure, an additional factor is required. So let's get started enabling MFA here on the portal by clicking on Azure Active Directory in the left-hand navigator. Then I'm going to click on Users and I'm going to click the Multi-Factor Authentication button.

[Video description begins] The Microsoft Azure web page displays. In the left pane, it has various options, such as Home, Dashboard, All services, and Resource groups. On the right-hand side, it has Azure services, such as Virtual machines, Storage accounts, and App Services. The host clicks the Azure Active Directory option in the left pane. [Video description ends]

That's going to open up a new web browser, so I'm going to specify the admin credentials that I want to use.

[Video description begins] The Default Directory - Overview page displays. On the left-hand side, it has various options, such as Overview, Getting started, Users, Groups, and Organizational relationships. On the right-hand side, it displays a chart with sign-ins for the Default Directory. The host clicks the Users option. The Users - All users page displays the list of users. He clicks the Multi-Factor Authentication hyperlink. The Sign in to your account web page displays. It shows the Pick an account section with two active accounts. He selects stefan.samms@outlook.com. The Enter password section displays. [Video description ends]

Here I can see a list of my Azure Active Directory users and the multi-factor authentication status. In this case, it's listed as Disabled for all users. I want to enable it for user Jonathan Gold. So I'm going to put a check mark next to Jonathan Gold, and over on the right, under Quick Steps, I will click Enable.

[Video description begins] The multi-factor authentication page displays. It shows the list of users with details, such as Display Name, User Name, and Multi-Factor Auth Status. He selects the checkbox for the user - Jonathan Gold and clicks the Enable hyperlink in the quick steps section. [Video description ends]

It tells me here that if my users don't normally use a web browser to sign in, then I've got a link I can provide to them so that they can register for multi-factor authentication. But I don't have to worry about that here, I'm just going to click enable multi-factor authentication. And notice here it says multi-factor authentication is now enabled for the selected accounts. And if I close out, indeed we can see it is enabled for user Jonathan Gold.

[Video description begins] A dialog box opens to confirm the enabling of multi-factor authentication. He clicks the enable multi-factor auth button. A dialog box displays with the message - Updates successful. He clicks close. The Multi-Factor Auth Status of the user changes to Enabled. [Video description ends]

Now when I use that account to sign into my web browser again, so I've already specified the username and the password for the jgold account. I now get this message upon login. It says more information required. Your organization needs more info to keep your account secure. Okay, no problem. Let's continue, Next. So then we're prompted, how should we contact you?

So we can specify an office phone, a mobile app, or an authentication phone. Well, if I were to choose Mobile app, then it says, how do you want to use the mobile app? So you can receive notifications for verification or you can use a verification code. And it tells me down below that to use this I have to get the Microsoft Authenticator app installed on my smartphone. Okay, so what I'm going to do then is use the Microsoft Authenticator app to receive notifications for verification. And then I'm going to go ahead and click Set up.

[Video description begins] The Sign in to Microsoft Azure web page displays for the user - Jonathan Gold. He clicks Next. The Additional security verification page displays. From the Step 1: How should we contact you? drop-down field, he selects Mobile app. Next, he clicks the Receive notifications for verification radio button and clicks the Set up button. [Video description ends]

So then I get this little pop-up where I can scan this code, assuming I have an app on my phone to scan this type of code, and then I can continue configuring the Microsoft Authenticator app. And we do have a message that says, if we are unable to scan this image, for example, if we don't have some kind of a QR or bar code scanner app on our mobile device, then we can enter this code and the URI information manually.

Okay, so now that we've scanned that in within our Microsoft Authenticator app after choosing work or school account which I've done, then we're ready to continue with Next. What will happen on your smartphone is you'll have a numeric code, a six-digit code that pops up in the Microsoft Authenticator app for that account you've just added, and it's good for 30 seconds. It changes every 30 seconds.

So I'm going to go ahead and click Next. It's checking the activation status. Okay, looks good. So I'm going to click Next. And at this point it's trying to send a message

[Video description begins] The Configure mobile app pop-up box displays. It shows the scan image and other details. He clicks Next. The Additional security verification page displays. He clicks Next. [Video description ends]

to the Microsoft Authenticator app on my smartphone, and I did get a pop-up message, so I'm just going to tell it I approve this type of connectivity. And it says verification successful.

[Video description begins] The Step 2: Let's make sure that we can reach you on your Mobile App device section displays. [Video description ends]

So choose my country or region in case we lose access to the mobile app. Okay, well, I'm going to go down and fill in that information including my number. And then I'll click Done.

[Video description begins] The Step 3: In case you lose access to the mobile app section displays. He selects Canada from the drop-down field. He clicks Next. The Step 4: Keep using your existing applications section displays. He clicks Done. [Video description ends]

Okay, so I'm going to put in the password again. So I have to know the username and the password. And now we have to approve a sign in request by tapping on Approve on our smartphone app, so I'll tap on Approve, and now we are good to go. So we are logged in now as user jgold through multi-factor authentication.

[Video description begins] The Sign in to Microsoft Azure web page displays the Enter password section. Then, it displays the Approve sign in request section. The Microsoft Azure web page displays. [Video description ends]

Azure Subscription Overview

[Video description begins] Topic Title: Azure Subscription Overview. Your host for this session is Dan Lachance. [Video description ends]

Microsoft Azure Subscriptions allow you to create Azure resources. The hierarchy begins at the top, with an organization, under which we can create one or more subscriptions. Now you might have multiple subscriptions. For example, for different countries, if you're a multinational firm. In some cases maybe even for different projects, or maybe one subscription for development versus one for production.

There are many reasons that we would do this, but in the hierarchy, your subscription or subscriptions exist under an organization name. Now we are assigned licenses at the subscription level. And this was what allows us to use specific features of Azure. Going further down in the hierarchy under the subscription, we can create resource groups. Like the name implies, a resource group allows us to deploy resources.

So further down in the hierarchy under Resource Group 1, for example, we see three resources. But it could be one resource like a single virtual machine. Or it could be multiple resources like virtual networks, virtual machines, web applications, load balancers, all of that type of stuff. Often, we try to organize related items into a resource group. But as the diagram depicts, we can have more than one resource group to organize our Azure resources.

[Video description begins] A diagram displays. An Organization points to Subscription1, which has Licenses. Subscription1 bifurcates into Resource Group1 and Resource Group2. Both Resource Groups bifurcate into three Resources. [Video description ends]

So Azure Subscriptions then work in such a way that we can have one Azure account that we sign into, but we can switch between multiple subscriptions. We can do that in the Azure Portal, so in the GUI. But we can also do it using command line tools. Whether we're talking about programming SDKs or the Azure CLI, even PowerShell commandlets.

We can switch between subscriptions, so that we can manage resources within that subscription hierarchy. Billing also occurs separately for each individual subscription. And that's why sometimes it might facilitate having large scale projects that might run for long periods of times under their own Azure subscription, although, that certainly not a requirement. And if you sign up for a trial account, a trial subscription in Azure, once that time runs out, you can then convert it to a paid subscription, such as a Pay As You Go, for example.

Azure Policies and Initiatives

[Video description begins] Topic Title: Azure Policies and Initiatives. Your host for this session is Dan Lachance. [Video description ends]

In Microsoft Azure, we pay for the resources that we use. And so it's important that we have a way to control how resources can be deployed and which resources can be deployed by whom, and also how they can be managed. And that's where Azure policies and initiatives come in. By definition, an Azure Policy lets us control the deployment and management of Azure resources.

And it's much more granular than RBAC, role-based access control. With RBAC, we could determine, for example, whether an administrative assistant in Azure has the ability to deploy virtual machines or not. However, with an Azure Policy, we can be much more granular. So for example, we can limit how many virtual machines users can deploy and in which specific regions.

Now, we also have Azure Initiatives. Initiatives take Azure policies a step further because it groups similar policies together for management. So that we might have a series of individual policies that lock down certain Azure resources to be compliant with a certain law or set of regulations. And so we might have the initiative with the name of that law or regulations, and all the individual policies that that would entail would be contained within that initiative.

There are built-in policies that we can use. In Azure, built-in policies allow us to control resource deployment by region. We can control resource deployment by type, such as whether we can deploy storage accounts, or load balancers, or virtual machines and in which regions. We can also use built-in policies to essentially audit things, such as to verify the version of SQL Server that we are using in the cloud.

Now, custom policies can also be built. We can do this by getting them from Internet repositories like GitHub. We can manually create policies. We could copy an existing policy and then make minor changes. Either way, in the end, a policy uses JSON syntax. Notice here, also, in the middle of these two listings of built-in and custom policies, we see policy parameters.

Policy parameters are basically variable values that we can pass to the policy. And it enables us to reuse policies instead of hard-coding things like region names or virtual machine names and so on. Now bear in mind that whether we use built-in or custom policies to control resource deployment or management, we're really talking about these policies that will apply not only to the creation of new resources, but also to existing resources.

We can assign policies using a specific scope, which could include a specific resource group. Now if we assign a policy to a resource group, then it applies to child items within that resource group. Remember that policies apply not only to the creation of new resources but to existing ones. So that, for example, if we've got a virtual machine type that's been deployed in a resource group with a policy assigned to it that specifies only another virtual machine size that was allowed, then we'll see this show up as being non-compliant.

We can also assign policies to a management group. A management group essentially allows us to work with policies across more than one Azure subscription. We can also, of course, assign a policy to an entire Azure subscription, and that will flow down through the hierarchy. Under the subscription, of course, we would have resource groups under which, we would then have resources themselves, like virtual machines, storage accounts, and so on.

Bear in mind also that the permissions get inherited by the child objects throughout this hierarchy. There are exclusions that are permitted. So you might specify at the subscription-level that there are only specific Azure regions to which virtual machines of a certain kind can be deployed. But you might make an exclusion on a specific resource group. Then we have to think about policy effects, where we can deny, for example, the creation of something that doesn't fall into the scope of the policy.

We can append data. We can deploy only if something doesn't exist. Or we can audit if it doesn't exist. So in the case of deny, for example, as a policy effect, which we specify within the policy document itself, what we're talking about doing is notifying or making a note of items that are non-compliant. So imagine, if the policy only allows a specific virtual machine size, yet there are existing virtual machines that do not use that same sizing, and so that's a violation of our policy. So non-compliant items are then marked as non-compliant, but they wouldn't be deleted.

Assign Built-In RBAC Roles

[Video description begins] Topic Title: Assign Built-In RBAC Roles. Your host for this session is Dan Lachance. [Video description ends]

The purpose of Role-Based Access Control, or RBAC, in Microsoft Azure is to control permission's assignment to Azure resources. Here, in the Azure Portal, I've signed in not as a global administrative type of account, but as a regular user, jgold. And in this case, I'm looking at the virtual machine's view, and despite the fact that I might try to refresh the view, nothing shows up.

Now, what I'm demonstrating here is that user jgold does not have access in this particular example to virtual machines. The same thing could be said about going to the storage accounts view where nothing shows up at all, at least for this particular user, jgold.

[Video description begins] The Microsoft Azure web page displays. The Virtual machines page is open. In the left pane, there are various options, such as All resources, Resource groups, and App Services. On the right-hand side, options, such as Add, Reservations, and Edit columns display. The table shows 0 items. The host points to the user name and then clicks the Refresh hyperlink. Next, he clicks the Storage accounts option in the left pane. The Storage accounts page displays. Options, such as Add, Edit columns, and Refresh display. The table shows 0 items. [Video description ends]

However, in the Azure portal, when I'm signed in using an administrative account, in this case, stefan.samms, we can see indeed there are virtual machines, and there are storage accounts. So one way that you can work with role-based access control is on a per individual resource basis.

[Video description begins] The Virtual machines page displays for an administrative account. It shows list of virtual machines with details, such as Name, Type, Kind, and Resource Group. He clicks the Storage accounts option. The Storage accounts page displays. It shows the list of storage accounts with details, such as Name, Type, Kind, and Resource Group. [Video description ends]

So for example, I could go into the Properties of a storage account, I could choose access control, IAM, and then I could choose Roles. And over here, I can see role definitions related to this particular type of item. In this case, the storage accounts. So we've got some Backup options, some Monitoring, Reader, and Data Access options, and so on.

[Video description begins] He clicks the stor14567 storage account from the list. The stor14567 page displays. On the left-hand side, options, such as Overview, Activity log, and Access control (IAM) display. On the right-hand side, details, such as Resource group, Status, and Location display. He clicks the Access control (IAM) option. The Access control (IAM) page displays. It has different tabs, such as Check access, Role assignments, and Deny assignments. He clicks the Roles tab. The list of roles displays with details, such as Name, Type, Users, and Groups. He clicks the Add hyperlink, which displays two options, Add role assignment and Add co-administrator. He selects Add role assignment. The Add role assignment dialog box opens. He clicks the Close button. [Video description ends]

Now, what I could do is click the Add button to add a role assignment where I could chose a role and a specific principle that should have that privilege. So for example, why don't we do this for virtual machines? Although, it doesn't really matter, other than what your needs are.

So I'm going to go into a particular virtual machine, let's say East Windows VM1. And I'm going to go into Access control, IAM. I'll click on Roles. And really, what I want to look at is adding a role, so I'll click the Add button and I'll choose Add role assignment.

[Video description begins] He clicks the Virtual machines option. The Virtual machines page displays. He clicks the eastwindowsvm1 virtual machine from the list. The eastwindowsvm1 page displays. He clicks Access control (IAM). The Access control (IAM) page displays. He clicks Roles. The list of roles displays. He clicks the Add hyperlink and selects the Add role assignment option. [Video description ends]

Now, from this list, I have roles here that are specific, in this case, to this class of resource, in this case, a virtual machine, so whether I want to set as a virtual machine contributor. If you click the little informational icon, it will describe what permissions are allowed if you set the user or group as an occupant of this role.

So here, it says virtual machine contributor lets you manage virtual machines but not access them, and not the virtual network or storage account that they might be connected to. Okay, well, if that's what I want here, in this case, I'm going to go ahead and select it. And then, down below, I can choose from users and groups. I'm going to use my HQ_AzureIT group.

So I'm making sure that this group is assigned the virtual machine contributor role, in this case for a specific virtual machine called eastwindowsvm1. Now, user jgold is a member of this group.

[Video description begins] The Add role assignment dialog box opens. It has various fields, such as Role, Assign access to, and Select. The host selects Virtual Machine Contributor from the Role drop-down list. Next, in the Select field, different users and groups display. He selects HQ_AzureIT. He clicks Save. [Video description ends]

So I'm going to go ahead and click Save to save that role assignment. And then it says the role assignment succeeded.

[Video description begins] On the top-right corner, a message displays, which states - HQ_AzureIT was added as Virtual Machine Contributor for eastwindowsvm1. [Video description ends]

Now, after signing out and signing back in with that same user account, notice that in the virtual machines view, I see that single virtual machine to which the role grants me access, in this case, for virtual machine contributor purposes.

But if I go to other views like Storage accounts and so on, I don't even see the storage account associated with that virtual machine. If I go to things like virtual networks, I also don't see anything. Although, I know that those are also required for a virtual machine to function properly.

[Video description begins] The Microsoft Azure web page displays for the user - Jonathan Gold. The Virtual machines page displays. The list shows 1 virtual machine added - eastwindowsvm1. He clicks the Storage accounts option. The Storage accounts page displays. Next, he clicks the Virtual networks option. The Virtual networks page displays. He opens the Virtual machines page. [Video description ends]

Now, back here, in the Azure Portal as the global administrator account, so not the regular user jgold to which we have assigned a role through a group membership, I've gone to the Resource groups view. So if I pop-into the Properties blade for our resource group, it too has an Access Control, IAM, option. If I click on that, I can also add a role assignment from here.

Except, when you look at the list of roles, it's going to be much longer. Because it accounts for the different types of Azure resources, including virtual machines that might be deployed into this resource group. So by setting these permissions on a resource group, you are then applying this to the resources deployed within the resource group. So you can see then how role-based access control can facilitate permissions management to Azure resources.

[Video description begins] The Microsoft Azure web page displays for the administrative account. The Resource groups page is open. It displays the list of resource groups with details, such as Name, Subscription, Location, and Tags. He selects Rg1 resource group from the list. The Rg1 page displays. He clicks the Access control (IAM) option. The Access control (IAM) page displays. He clicks the Add hyperlink and selects Add role assignment. The Add role assignment dialog box opens. He clicks the Role drop-down arrow, which displays a list of roles. [Video description ends]

Create a Custom RBAC Role Using the CLI

[Video description begins] Topic Title: Create a Custom RBAC Role Using the CLI. Your host for this session is Dan Lachance. [Video description ends]

Here in Microsoft WordPad, I've created a custom role file using JSON syntax, where we've got an open curly brace and a closing curly brace. And then we've got things like the name of this custom role that I'm going to build. It's going to be called The Overseer. And the IsCustom flag is set to true, because it is a custom RBAC role that I am creating.

I've got a description here, and importantly, here I've got the Actions. What can anyone that might be assigned to this role do? Well, they have access to read all items. So */read, to be able to see if it will have read only access to everything within a subscription because down below for the AssignableScope, I've set the specific subscription ID for my Azure subscription.

[Video description begins] A WordPad file with title MyCustomRolejason displays. The code reads as the following: { "Name": "The Overseer", "IsCustom": true, "Description": "Subscription-level viewing..", "Actions": [ "*/read" ], "NotActions": [ ], "AssignableScopes": [ "/subscriptions/00da78ac-9d0e-427b-80da-e1b07c749f72 ] }. The Microsoft Azure web page displays. In the left pane, it has various options, such as Home, Dashboard, All services, and Resource groups. On the right-hand side, it has Azure services, such as Virtual machines, Storage accounts, and App Services. [Video description ends]

Here in the Azure portal if you're wondering how do I find out what my subscription ID is, one way is simply to go into your search box at the top. I've searched for sub so that I can choose Subscriptions and all my subscriptions will be listed here along with the subscription ID.

[Video description begins] The host enters sub in the Search field and selects the Subscriptions option from the drop-down menu. The Subscriptions page displays. The table displays the Pay-As-You-Go option as the Subscription with details, such as Subscription ID, My Role, Current Cost, and Status. He points to the Subscription ID. [Video description ends]

So using the Azure CLI that I've downloaded and installed locally on my on-premises station, I've already run the az space login command. So I've authenticated to my Azure subscription.

[Video description begins] The CommandPrompt window displays. It shows the version 10.0.17763.379 of the Microsoft Windows installed. At the command prompt, he enters and executes the authentication command az login. The output displays the details of AzureCloud. He then enters the cls command to clear the screen. [Video description ends]

So the next thing I'm going to do is create a role using the az role definition create command. So --role-definition, I simply refer to the path and name of the json file that we looked at that defines the role, assignable scope, and the actions that are either allowed or not allowed.

[Video description begins] He enters and executes the following command: a: role definition create -- role-definition d:\mycustomrole.json. [Video description ends]

So I'm going to go ahead and press Enter to create the role. And after a moment, we can see that we've got some returned JSON which indicates that the custom role was created.

[Video description begins] He returns to the WordPad file. [Video description ends]

Back here in WordPad, you can even clean it up a little bit so things are on one line instead of wrapped across multiple lines, if it's easier to read this way. So we've got our new custom role called The Overseer, that will have been created. It's a custom role and as we described earlier, it will provide read-only access to resources within the listed Azure subscription.

[Video description begins] He goes to the CommandPrompt window. He enters and executes the following command: a: role definition list --custom-role-only true pipe find "roleName". [Video description ends]

Back here in the CLI, we can use the az role definition list command, -- custom-role-only true, so only show custom roles. And I'm going to pipe that to the Windows find command, because all I want to see is the roleName attribute, or lines that display that, I should say. And notice here we can see our custom role, The Overseer.

[Video description begins] The result shows the role name as The Overseer. [Video description ends]

Managing Custom RBAC Roles Using the Portal

[Video description begins] Topic Title: Managing Custom RBAC Roles Using the Portal. Your host for this session is Dan Lachance. [Video description ends]

Once you've created a custom role, and I've already done this using the Azure CLI in another demo called Create a Custom RBAC Role Using the CLI. Well, now it's time to assign it, and to put it into effect, and I'm going to do that here in the Azure portal. Now I can apply custom roles or built-in roles at the Azure subscription level, or to be a little more specific, in the hierarchy below that.

I can assign roles to specific scopes like resource groups, or even individual resources, like storage accounts, and virtual machines, and so on. In this case, I'm going to do it for the subscription level. So in the search box at the top, I'm going to search for sub, and I'm going to choose Subscriptions, and I'm going to click on my subscription,

[Video description begins] The Microsoft Azure web page displays. In the left pane, it has various options, such as Home, Dashboard, All services, and Resource groups. On the right-hand side, it has Azure services, such as Virtual machines, Storage accounts, and App Services. The host enter sub in the Search field and selects Subscriptions from the drop-down list. The Subscriptions page displays. The list shows the Pay-As-You-Go subscription with details, such as Subscription ID, My Role, Current Cost, and Status. [Video description ends]

and I'm going to choose Access Control (IAM). Now here, I'll see any roles that are available here, whether they're built in, or as I scroll further, and further down, such as into the T's, I'll also see our custom role called The Overseer. Now I can also click the Add button up here if I actually want to add a role assignment, which I do.

[Video description begins] The Pay-As-You-Go Subscription page displays. He clicks the Access control (IAM) option from the left-hand side. The Access control (IAM) page displays. He clicks the Roles tab. The list of roles displays and he points to The Overseer role. Next, he clicks the Add hyperlink, which displays two options, Add role assignment and Add co-administrator. He selects Add role assignment. [Video description ends]

So I'll choose Add role assignment, and the role here is going to be the custom RBAC role that was created called The Overseer. If I actually hover over the little information I, it even shows the description, in this case it says Subscription-level viewing, so I'll select that. And I want to assign this custom role to a group in Azure Active Directory Called HQ_AzureIT, and so I'll go ahead and click Save.

[Video description begins] The Add role assignment dialog box opens, which has various fields, such as Role, Assign access to, and Select. He selects The Overseer in the Role drop-down field. Then, in the Select field, some users and groups display. He selects HQ_AzureIT and clicks Save. [Video description ends]

And so at this point the role has been applied to the entire Azure subscription, so if I go look at Azure Active Directory groups. And if we take a look at that group, HQ_AzureIT, and specifically the members, the members of the group. In this case only one, Jonathon Gold, will assume the privileges of that custom role which is read-only access to all items, in this case, for the entire subscription.

[Video description begins] He clicks the Azure Active Directory option. The Default Directory - Overview page displays. Next, he clicks the Groups option. The Groups - All groups page displays the list of groups. He selects the HQ_AzureIT group. The HQ_AzureIT page displays. He clicks the Members option. The Members page displays. It shows the user - Jonathan Gold. [Video description ends]

And I've just jumped in to Wordpad here so that we could quickly look at the definition that was used to create that custom role in the CLI. And notice here, it is read access tied to a subscription, so the AssignableScope is set to the subscription level.

[Video description begins] The Wordpad file with the JSON code displays. [Video description ends]

Azure Resource Tagging

[Video description begins] Topic Title: Azure Resource Tagging. Your host for this session is Dan Lachance. [Video description ends]

You can add tags to Azure resources for descriptive purposes. Tagging an item such as a storage account, or a web app, or even a virtual machine, for instance, allows you to add metadata, more detailed information. Perhaps a project that something is assigned to, or a department that something falls under for billing purposes. So to get started here in the Azure Portal, I'm going to go to my Virtual machines view, for no purpose other than to select some kind of an individual Azure resource.

[Video description begins] The Microsoft Azure web page displays. In the left pane, it has various options, such as Home, Dashboard, All services, and Resource groups. On the right-hand side, it has Azure services, such as Virtual machines, Storage accounts, and App Services. The host selects the Virtual machines option. The Virtual machines page displays. [Video description ends]

And I'm going to select one of my virtual machines, to open up its Properties blade. And you'll notice that whenever you look at the Properties blade for, really, any type of Azure resource, you're going to see a Tags item. And when you click Tags, you'll see any existing tags that might have been set already. For example, this virtual machine is already flagged as Project. That's the name of the tag, with a value of ProjectB.

[Video description begins] He clicks the eastlinuxvm1 virtual machine. The eastlinuxvm1 page displays. On the left-hand side, options such as Overview, Activity log, and Access control (IAM). On the right-hand side, details, such as Resource group, Status, and Location display. He clicks the Tags option. The Tags page displays. It shows the name and value of tags assigned. [Video description ends]

Now, we can also add multiple tags to an item. So for example, I could build a new tag here called Department. And over here, I might put in Sales. So now I've got two tags. Now I have to click Save in this case, for that to apply to that particular item.

[Video description begins] In the Name column, he adds another tag with the name Department and in the Value column, he specifies Sales. Then, he clicks Save. Next, he clicks Close. [Video description ends]

Now, we can also select multiple items if we want to tag them all at once. So let's say, in this case, that I want to select a couple of virtual machines. So I can select them here. And then I can click the Assign tags button up at the top. And from here, I can choose from existing tag names that were created. For example, there's Department.

And if I want to assign them to Sales, then I can go ahead and do that. And then once I'm done, I can click Save to apply those tags. You can also work with tags programmatically, and through the CLI, and through PowerShell.

[Video description begins] The Virtual machines page displays. He selects the checkboxes for two virtual machines - eastwindowsvm1 and JumpBox. Next, he clicks the Assign tags hyperlink. The Tags page displays. He selects Department in the Name drop-down field and Sales in the Value drop-down field. Then, he clicks Save. Next, he clicks Close. [Video description ends]

Now, one of the reasons that that works well is because you can filter resources, for example here in the GUI, by tags. Notice here when you go to the All resources view, I see, well, all resources. But from here, I can choose the All tags drop-down. And I can select something such as Department, Sales. And when I do that, it filters the list. And now I see only Sales Department-tagged items. Which in this case, happens to be those three virtual machines.

[Video description begins] He clicks the All resources option. The All resources page displays. He clicks the All tags drop-down arrow and selects the Sales checkbox from the Department category. The virtual machines from the Sales department display. [Video description ends]

But this can also be helpful for billing. So let's say up in my search bar, I search for subscriptions, so sub. And let's say, I go to my subscription. So here's my subscription. I'll click on it to open it up. What I can do within here is go to Cost analysis.

[Video description begins] The host enter sub in the Search field and selects Subscriptions from the drop-down list. The Subscriptions page displays. The list shows the Pay-As-You-Go subscription with details, such as Subscription ID, My role, Currency, and Status. He clicks the Pay-As-You-Go subscription. The Pay-As-You-Go subscription page displays. He clicks the Cost analysis option. [Video description ends]

And then towards the top here, I can also start to look at this in a variety of different ways. So instead of just viewing what's presented in front of me, which is a great way to break down costs, I can also click Add filter. And here I might choose Tag. So from here, I can then start to select the appropriate tag information I want to view.

[Video description begins] The Cost analysis page displays. It shows different cost graphs and charts. It also shows various filter options, such as Date, Granularity, and Group by. He clicks the Add filter button. Three drop-down fields appears. He selects Tag in the first drop-down field. Then, he selects project and projectb in the other two drop-down fields, respectively. [Video description ends]

Now, sometimes, newly added tags won't show up here. For example, I don't see Department quite yet. But I could choose some existing tags that existed previously, such as project. And from here, I can start to select exactly what it is that I'm looking for in terms of filtering by, in this case, the project tag.

So to do that down below, I'll open the next drop-down list. And let's say, I want to see items flagged as projectb. And I can also choose, for example, to view perhaps this quarter or this year. So I'm filtering out by the projectb tag, that's the value. And then I can now see that the numbers are changing based on my filtered selection.

[Video description begins] The Date drop-down list displays. He selects This year option and the filter is set to 2019. The updated charts display. [Video description ends]

Azure Resource Locking in the Portal

[Video description begins] Topic Title: Azure Resource Locking in the Portal. Your host for this session is Dan Lachance. [Video description ends]

Sometimes, IT technicians make mistakes. It happens, we're human too. And so one option in Azure is to lock resources. You can lock resources from either being deleted or being modified. And you can do this at various levels such as doing it at the subscription level, a resource group level, or a specific resource. It's kind of like a safeguard. So to get started here in Azure, in the portal, I'm going to go to my Virtual machines view to lock a particular virtual machine.

[Video description begins] The Microsoft Azure web page displays. In the left pane, it has various options, such as Home, Dashboard, All services, and Resource groups. On the right-hand side, it has Azure services, such as Virtual machines, Storage accounts, and App Services. He clicks the Virtual machines option. [Video description ends]

Let's say my first VM here, eastlinuxvm1. So I'm going to click on it to open up it's Properties blade. And what you'll notice when you're working in the Azure portal is that if you scroll down of the Properties blade, you're always going to see this Locks item. And when you select it you'll see the current state of locking on that resource.

[Video description begins] The Virtual machines page displays the list of virtual machines with details, such as Name, Type, Status, and Resource Group. He selects eastlinuxvm1. The eastlinuxvm1 page displays. On the left-hand side, options, such as Overview, Activity log, and Access control (IAM) display. On the right-hand side, details, such as Resource group, Status, and Location display. The host clicks the Locks option. [Video description ends]

Now, this one states that this resource has no locks. So I'm going to go ahead and click Add to add a lock. And I have to give a name to the lock. So how about PreventChanges. And the Lock type can either be Read-only, which is what I want here to prevent changes, or Delete. In other words, prevent from being deleted. So in this case, I'm going to choose Read-only. And I could add additional Notes, which I won't. And I'm going to click OK.

[Video description begins] The Locks page displays. It has various options, such as Add, Resource group, and Subscription. It also displays a table with details, such as Lock Name, Lock Type, and Scope. The table shows there are no locks for the resource. He clicks the Add hyperlink. The following fields appear: Lock name, Lock type, and Notes. He enters PreventChanges in the Lock name field. In the Lock type drop-down field, there are two options, Read-only and Delete. He selects Read-only. Next, he clicks OK. [Video description ends]

And now, notice that we see our current resource locked to prevent changes, it's Read-only for this resource. And of course, we can go ahead and Delete that lock at any point in time.

[Video description begins] The Locks page displays the lock details. [Video description ends]

So let's try to make a change here. So I don't know, let's say we try to resize the VM. I'm going to go to the Size part of the Properties blade. And I'll click Resize. And immediately, it says Failed to resize the virtual machine and something about resources being locked.

[Video description begins] He clicks the Size option. The Size page displays. It shows different details, such as VM Size, Offering, and RAM (GB) in a tabular format. He clicks the Resize button. A message displays. It states - Failed to resize virtual machine. [Video description ends]

So we know that it's working already. So of course, if I go and remove that lock, okay, let's just refresh to make sure it's good and it is. If I were to go ahead now and decide that I want to resize something, then it will let me resize it. It's in the midst of happening. So we have the option then of doing this at pretty much any level in the hierarchy.

[Video description begins] He clicks the Locks option. The Locks page displays. He clicks the Delete icon for the PreventChanges lock and clicks Refresh. Next, he clicks the Size option. The Size page displays. He clicks the Resize button. A message displays. It states - Resized virtual machine. [Video description ends]

So for example, let's say I go into Resource groups. And if I go into resource group RG1 there it is, again, Locks. As you might expect, it would apply to the child items within the resource group.

[Video description begins] He clicks the Resource groups option. The Resource groups page displays. He selects Rg1. The Rg1 page displays. He clicks the Locks option. The Locks page displays. It shows that the resource has no locks. [Video description ends]

And if I start going into Subscriptions, then in the same way, we'll also have the option of setting Resource locks down here by choosing Resource locks and clicking Add and, basically, filling out the same type of thing again. So this is a great way then to essentially, protect yourself from yourself if you're the only Azure IT technician.

[Video description begins] The host enter sub in the Search field and selects Pay-As-You-Go from the drop-down list. The Pay-As-You-Go Subscription page displays. He clicks the Resource locks option. The Resource locks page displays. It shows details, such as Lock Name, Lock Type, and Scope. It displays that the resource has no locks. He clicks the Add hyperlink. The Add lock section displays. It has the following fields: Lock name, Lock type, and Notes. [Video description ends]

Azure Resource Locking Using the CLI

[Video description begins] Topic Title: Azure Resource Locking Using the CLI. Your host for this session is Dan Lachance. The CommandPrompt window displays. He enters and executes the following command: a: lock create -- name Rg1Lock --lock-type CanNotDelete --resource-group Rg1. [Video description ends]

You can lock Azure resources to prevent deletion or modifications at the subscription, resource group, and individual resource level. You can do that in the portal or, as we're going to see here, we can also do that using the CLI using the az lock create command. So I'm going to name my lock Rg1Lock because I'm going to lock a resource group, which will also apply to the child items deployed within that resource group.

So then I'm going to use --lock-type. And I'm going to use CanNotDelete, so preventing deletion. And then I'm going to specify the resource group by name here of course, using --resource-group. And the resource group in question here I want to apply the locking to is Rg1. So I'm going to go ahead and press Enter. Now after a moment, we can see that it appears we have some output from that command that tells us that the lock is in place.

[Video description begins] The output displays. It provides details on the lock that includes level, name, notes, owners, resource group, and type. He enters and executes the following command: cls to clear the screen. [Video description ends]

Let's clear the screen and let's verify this, by typing az space lock space list, this will show us any locks that we currently have in place. And here, we can see that it's called Rg1Lock. It's set to CannotDelete, and it's set for a particular resource group in this case, Rg1.

Here in the Azure portal, if I were to open up that resource group and view its properties blade and then click Locks. I would see here that we've got our lock here, Rg1Lock that we just created through the Azure CLI. So indeed, it is in effect.

[Video description begins] The Resource group Microsoft Azure window displays. The Resource groups page is open. He selects the Rg1 option from the list of Names displayed on the screen. The Rg1 - Locks screen displays. Then, he clicks the Locks option. The Locks page displays. It shows the following details: Lock Name as Rg1Lock, Lock Type as Delete, and Scope as the Resource group. [Video description ends]

I can also use the az lock show command, so I can view the id related to that lock. Which we see up here, we see the id. All I'm doing here is telling it I want to show something specific about a lock called Rg1Lock for a resource-group called Rg1.

And I'm going to control the output and view the id. So I'm going to query for the id, in other words only show me the id. And that's really essentially what we see up here at the top. So I'm going to go ahead and copy that, because what we can then do is use that id to remove the lock using az lock delete. And of course I can just use --ids and paste in or we can use a variable if we really wanted to.

But if I go ahead and remove the lock that way after that's completed, let's just clear the screen. If I run az lock list, if we spell that correctly that would be superb, so az space lock space list, there we are. Then we're going to get a whole lot of nothing returned because we no longer have a resource lock, we have removed it.

[Video description begins] The CommandPrompt window displays. It shows the following code: az lock show --name Rg1Lock --resource-group Rg1 --output tsv --query id. The result displays and the host copies the id. Next, he enters the following code: az lock delete --ids and pastes the copied id. He clears the screen using the cls command. [Video description ends]

Azure Resource Locking Using PowerShell

[Video description begins] Topic Title: Azure Resource Locking Using PowerShell. Your host for this session is Dan Lachance. [Video description ends]

In this demonstration, I'm going to use Microsoft PowerShell to manage Azure resource locks. Resource locking is helpful if you want to prevent unwanted modifications or the deletion of Azure resources. And we can set locking at the subscription resource group or at the resource level. So here in the PowerShell ISE, I've already got a script here, where in line 1 I'm creating or locking a resource using the New-AzResourceLock PowerShell commandlet.

So I have to provide a name for this lock. So I'm calling this Rg1, for resource group 1, NoDelete. And the LockLevel here will be CannotDelete, but I can also specify that I want to prevent modifications as opposed to deletions. And here the resource group name to which I want this applied is called rg1.

[Video description begins] The Windows PowerShell ISE window displays. The screen is divided into two sections. The top section is where the host writes the codes and the bottom section is where the output displays on executing the code. He enters and executes the following code in line 1: New-AzResourceLock -LockName Rg1NoDelete -LockLevel CanNotDelete -ResourceGroupName rg1. He clicks the Play button at the top to run the code. The Confirm window displays. [Video description ends]

So let's go ahead and execute that one line by putting our cursor on the line somewhere here in the ISE and then clicking the Run Selection button. I get a prompt, are you sure you want to create that lock? Yes, so I'll click Yes. And after a moment it appears that it's done. Why don't we check our work in the portal?

[Video description begins] The host clicks the Yes button and the output displays in the bottom section. [Video description ends]

Here in the portal, I'm in the resource groups view. There's Rg1, so I'll click on it. And in the Properties blade, I'll click Locks. Here we could see we've got the Rg1NoDelete lock name that we just specified and applied from PowerShell.

[Video description begins] The Microsoft Azure web page displays. The Resource groups page is open. He selects Rg1 from the list. The Rg1-Lock page displays and he selects the Locks option. The Locks page displays. It shows the following details: Lock Name as Rg1NoDelete, Lock Type as Delete, and Scope as Resource group. [Video description ends]

Now, of course, here in PowerShell, we can view any current lock configuration using the Get-AzResourceLock commandlet. So I'm going to clear the screen down below, then I'm going to click on line 3 here to run Get-AzResourceLock. And, again, we can see here it is. We've only got one here, it's called Rg1NoDelete. And we know that it will be applied specifically to our resource group called rg1.

[Video description begins] The Windows PowerShell ISE window displays. He executes the cls command in the output section to clear the section. Then, in line 3 he enters and executes the following code: Get-AzResourceLock. He clicks the Play button at the top to run the code. The output displays in the section at the bottom. [Video description ends]

Now, the next thing I want to do is remove that lock. So the first thing I can do here is create a variable. Creating a variable here called lockId. And I'm going to run Get-AzResourceLock and going to specify the ResourceGroupName. And then I'm going to refer to the .LockID property. Now, the reason that I've got the open and closed parentheses here is because I need some way to tell Powershell that what is within the parentheses is part of one expression, one statement in PowerShell.

Then after that, I want to refer to a property. Because if I don't have the parentheses around it, it's going to think that rg1.LockId is a parameter value, when really the only parameter value here for ResourceGroupName is rg1. So the result of that, the ID, the LockId, will be put in the LockId variable. And so after that in line 7, we can simply remove it using Remove-AzResourceLock. Just tell up a LockId based on the variable that we've created back up here in line 5. So I'm going to select those lines of code in my script here and I'm going to click the Run Selection button.

[Video description begins] He enters and executes the following code in line 5: $lockId is equal to (Get-AzResourceLock -ResourceGroupName rg1 ). LockId. He also enters and executes the following code in line 7: Remove-AzResourceLock -LockId $lockId. He clicks the Play button at the top to run the code. The output displays in the section at the bottom. [Video description ends]

Then I get a prompt. Are you sure you want to delete that? Sure, yes, I am.

[Video description begins] The Confirm window displays. The host clicks the Yes button and the output displays in the bottom section. [Video description ends]

And it looks like it's good. Why don't we verify our work by running Get-AzResourceLock? We get a whole lot of nothing. And why don't we just check it just for fun in the Azure portal. Why not? So here in the portal, I'm just going to open up that resource group and look at Locks, and we now see it says, this resource has no locks.

[Video description begins] The Resource groups Microsoft Azure window displays. The Resource groups page is open. He selects Rg1 from the list. The Rg1-Locks page displays and he selects the Locks option. The Locks page displays. It shows the resource has no locks. [Video description ends]                    


Common Data Privacy Frameworks
  - Data privacy has a big impact on organizational security policies especially as related to cloud computing. We have to consider the types of data that we need to safeguard using data privacy frameworks. Data such as Personally Identifiable Information otherwise called P-I-I or PII, Protected Health Information, PHI.
  - Data that resides within specific national boundaries might be subject to specific laws and regulations. But then we need to consider data that's being transmitted into a country from elsewhere, and also data being transmitted out of a country. With data privacy frameworks, the first consideration is Personally Identifiable Information or PII, which would include things like a person's phone number, their credit history, their mother's maiden name, their social security number, their credit card number, and so on.
So essentially, whatever can uniquely identify an individual in some way is called Personally Identifiable Information. Then on the right, we've got Protected Health Information which is more medically related. It would include things such as a patient's name, medical discharge dates, medical payments, past procedures, drugs that had been administered, and so on.

And so in relation to this type of information, we have to consider data privacy frameworks which outline how the data will be collected, how the data will be used. And whether or not the data will be shared with third parties. And often users must supply consent to some or all of these activities. And, there are also maybe laws and regulations that stipulate that this data collection use and sharing must be related directly to business practices. One example of data privacy is the General Data Protection Regulation

[Video description begins] Screen title: General Data Protection Regulation (GDPR) [Video description ends]

otherwise called GDPR. This applies to European Union countries. It's all about data privacy within the European Union. But also it deals with data that will be exported outside of the European Union. Microsoft Azure is GDPR compliant. Now if an organization is found to be in breach of GDPR standards, then they could possibly be fined up to 4% of their annual global amount of profit or 20 million pounds.

So whichever one is greater. So there's definitely an incentive then for European Union organizations that will work with data to make sure that they adhere with the GDPR. Then we've got the National Institute of Standards and Technology, otherwise called NIST. This is a set of international standards, some of which are related to IT security, so the cybersecurity framework, which focuses on things like critical infrastructure.

Now critical infrastructure would be things like the power grid, water supplies, dams, that type of thing. And also, sensitive data related to that hosted by cloud providers. Now there are many different types of publications such as NIST Special Publication or SP 800-122. This specifically is the guide to protecting the confidentiality of Personally Identifiable Information or PII, P-I-I.

And it relates to things like strong access control and protection of data at rest. But in order for us to implement these types of security controls in accordance with these types of data privacy frameworks, we need to first identify things like Personally Identifiable Information within the organization and the systems that will process and store that type of information.

And then, we have to think about minimizing the collection and use of Personally Identifiable Information so that it only is used strictly for business-related purposes. There are many other bodies of frameworks related to data privacy, including the International Standards Organization, ISO. This is international, and one of the many standards is ISO/IEC 27017:2015. And this deals with cloud computing security controls, related to things like access control. So being authenticated and then authorized to use specific cloud services or resources.

Cloud tenant isolation or separation from one another. And also the secure removal of cloud tenant data so that there are no artifacts that can be retrieved by unauthorized parties after the fact. So with data privacy frameworks, the first thing we have to consider is which data privacy laws and regulations affect the organization.

And then, we need to think about our cloud solution, in this case, Azure, to ensure that we are adhering to those respective laws or regulations. We then need to incorporate data privacy into organizational security policies. And then within the organization, assign responsibility for compliance to laws and regulations. This normally comes in the form of an organizational role called a compliance officer.


The Azure Security Center
The Microsoft Azure Security Center gives you a central place where you can view security related items to be in a better position to enhance your security posture with the use of Azure Cloud Computing Services.
And so here in the Azure Portal, in the navigator on the left at the very bottom, I'm going to click Security Center. But notice everything is gray in the properties blade, and
that's because we need to make sure that we're using a security center plan, and it's not enabled by default. But we're going to go ahead and start a trial, a 30 day free trial to be specific, so if I scroll down here on the far right, I can click Start trial.

[Video description begins] The Start trial button is located at the bottom of the page. [Video description ends]

So I'm going to go ahead and do that.

[Video description begins] A message box pops up in the right corner and it says:Trial started. [Video description ends]

And one of the things that it wants to do is install agents within my virtual machines in my Azure subscription, so it knows how secure they are or are not.

[Video description begins] A section titled Install agents automatically, displays. It has a table with the type of subscriptions installed, Pay-As-You-Go, in this case. It also has a button labelled Install agents. [Video description ends]

So I've got my subscription selected here, I'm going to go ahead and click Install agents. Once that's been done, we can see things become available in the properties blade. And I'm still in the Overview area where we can get a great list of overall suggestions related to security, or rather any security shortcomings related to our Azure environment.

[Video description begins] All the menu items in the navigator become enabled now. A Policy & compliance section displays on the right. It shows the Least compliant regulatory standards, Secure score, resource security hygiene, and Subscription coverage. [Video description ends]

So we can see we've got an overall secure score here of 348 out of 480. Well, that's not 480 out of 480, so let me go ahead and click on that to pull up some details related to that.

[Video description begins] The Secure Score Dashboard displays. It shows a section titled Secure score by category. Here, 4 categories are covered- Compute & apps, Data & storage, Networking, and Identity & access. Progress bars below each category shows the score. A table displays below the scores, and it contains 2 columns titled SUBSCRIPTION and SECURE SCORE. 1 subscription, Pay-As-You-Go, displays in the table. A hyperlink, View recommendations, is present next to this subscription. [Video description ends]

So down below, we can see our subscription, and we can see that we have a View recommendations link up above. You can also click on specific categories like Compute & apps versus Identity & access. Down below, I'm just going to click on View recommendations, so we can see all of them.

[Video description begins] The Recommendations page displays. All 9 resources in different categories display along with their health monitoring score, marked by different colors for different severity levels- red for high severity; orange for medium severity; and blue for low severity. Below this, all recommendations display in a table format with columns titled RECOMMENDATION, SECURE SCORE, and FAILED RESOURCES. [Video description ends]

Well, red naturally might be a problem, so let's see. We've got a problem here with our subscription, it says that we need to enable MFA multi-factor authentication. For accounts that have owner permissions on our subscription, apparently, that's not been done. That's a great point actually. Because with multi-factor authentication, instead of having knowledge of the username and password with overall access to our subscription.

We could add another factor such as requiring a smartphone that has a constantly changing numeric value, that is only good for a few seconds. So, when we have to authenticate, we'd have to specify the numeric code which is only good for a short period of time, in addition to having knowledge of the username and the password. That's a good way to secure our accounts through multi-factor authentication.

And we'll focus more on that in another demo where we focus on identity and access management. It says here we should also enable network security groups on subnets. So remember, you can click on each of these to get more further detail about what that description is for that recommendation.

[Video description begins] He clicks one of the recommendations, Enable Network Security Groups Groups on Subnets, and its page opens. It contains the number of Unhealthy resources and Healthy resources, and a Learn more hyperlink. Remediation steps also display. The page contains tabs- Unhealthy resources, Healthy resources, and Unscanned resources. Unhealthy resources tab is active now and it shows one unhealthy resource- Subnet1. [Video description ends]

So it'll go ahead and tell us the culprit, so to speak here, which in this case, happens to be Subnet1.

[Video description begins] The Subnet1 page opens. It contains fields such as Address range, Available addresses, Network security group, and Route table. [Video description ends]

And when I actually click on that, I can actually see details related to that, such as, the network security group, which is set to none for that specific subnet. So we can drill down and actually solve problems. We can also see here that we don't have endpoint protection installed on virtual machines, for things like anti-malware at least, in this case, for one of two virtual machines.

[Video description begins] He returns to the Recommendations page and hovers over the next recommendation. [Video description ends]

And if I click on that to drill down, we can see here the severity level is high and the culprit here apparently is a virtual machine called eastwindowsvm1.

[Video description begins] The Endpoint Protection not installed on Azure VMs page opens. It contains a table with columns titled VIRTUAL MACHINE, STATE, and SEVERITY. One VM is listed. Its name is eastwindowsvm1 and its state is open and severity is high. The following 2 links display at the top of the page: Filter and Install on 1 VMs. [Video description ends]

So, notice that we've got a link here to install on 1 VM, we can just click it and choose to install Microsoft anti-malware, we can go through and get that done.

[Video description begins] The Select Endpoint Protection page opens. One software, Microsoft Antimalware, displays here. [Video description ends]

[Video description begins] The Microsoft Antimalwareinstallation page displays. [Video description ends]

So not only does it point out any security deficiencies but it gives us a very convenient and easy way to solve the problem. Now, of course, if you have that problem on hundreds of virtual machines, that's probably not the best way to deal with it, however, it does work.

Now here, we've got Install on 1 VMs because that is what happens to be selected here. So if we select a bunch of them, for example, hundreds of them, then we can have the ability to install that endpoint protection agent on hundreds of VMs at once, so it's very convenient. 

[Video description begins] He returns to The Endpoint Protection not installed on Azure VMs page and unchecks the eastwindowsvm1 option. [Video description ends]

As we go further down the list in the Azure Security Center, we can also see it suggests that we don't have disk encryption applied on virtual machines for protection of data at rest, so we can go ahead and do that. So the security center that is designed to give us details on any security shortcomings in our Azure environment, along with the convenient way to address those concerns.


Azure Service Trust Portal
  - The Microsoft Azure Service Trust Portal allows us to track compliance, to run audit reports on that compliance. And also to focus on data protection in line with laws and regulations. The Azure Service Trust Portal allows us to work with the Compliance Manager. This allows us to be compliant with different data protection regulations including HIPAA, GDPR, ISO 27001, to name just a few.

We can also track our compliance with specific rules that need to be followed, and we can also even assign compliance responsibility. In the Azure Service Trust Portal, another aspect is auditing. Where we can run audit reports for compliance with standards related to ISO, PCI DSS for cardholder data protection, FedRAMP, SOC, otherwise called SOC.

So for example, SOC3 allows organizations to adhere to rules for internal controls within an organization for things like business processes and the integrity of those business processes. Finally, the Azure Service Trust Portal also deals with data protection, where documentation is made available. There is also mappings made between data privacy frameworks, a variety of them, to the Azure security controls will allow organizations to be compliant in those specific regards. There are also frequently asked question documents and white papers that are available for Azure IT technicians.


Block Public SSH and RDP Traffic
When you deploy Linux and Windows virtual machines into Azure, you probably want to remotely manage them from on-premises. And so you might use SSH to get into Linux hosts or the remote desktop protocol client to get into Windows hosts. The problem is we don't want that type of accessibility through a public IP address on each VM.

Instead ideally, we would use a point to site VPN connection from our administration on-premises to Azure, and then SSH or RDP to the private IP address of those VMs. So here in the Azure Portal, why don't we start by going into the Virtual machines view on the left?

[Video description begins] The Microsoft Azure portal home page displays in a browser window. The host clicks Virtual machines in the navigator pane. Its page opens on the right. It has buttons titled Add reservations, Edit columns, Assign tags, Start, Stop, Delete, and Services. The available Subscriptions, namely, Pay-As-You-Go, displays below the buttons. By default, Filter fields are set to All resource groups, all types, All locations, all tags, and No grouping. A table with columns titled NAME, TYPE, STATUS, RESOURCE GROUPS, LOCATION, MAINTENANCE, SUBSCRIPTION, and TAGS, displays below. The table displays 2 items- eastlinuxvm1 and eastwindowsvm1. [Video description ends]

Let's start with our eastlinuxvm1 virtual machine that's running Linux.

[Video description begins] The eastlinuxvm1 page opens. It shows the virtual machine settings such as Resource group set to Rg1, Status set to Running, and Location set to Canada East. [Video description ends]

Now, the first thing I notice is it does have a public IP address. Well, if that's only for the purpose of allowing inbound administration, that's a problem. So what we're going to do is click on Networking over on the left as well.

[Video description begins] He clicks Networking in the navigator. Its page opens. The Effective security rules and Topology hyperlinks display here. The Public IP is present as a hyperlink below Effective security rules. [Video description ends]

And I can see here that if we look at the effective security rules, I'll click on Effective security rules. And the virtual machine has to be running for effective rules to display here. We'll then see that we've got access that would be allowed here into the virtual machine over a specific port.

[Video description begins] After the security rules complete the loading process, eastlinuxvm1 -Effective security rules page opens. Associated NSGs field has the value NSG1 (Subnet). 2 tabs- eastlinuxvm1 and NSG1 display below. eastlinuxvm1 is open now. The text- Inbound rules- display on the top. A table with columns such as NAMES PRIORITY, SOURCE, SOURCE PORTS and DESTINATION, displays. [Video description ends]

So for example, we've got a port 22 rule from any source that's allowed to get to any destination on TCP port 22, which is SSH. However, do we really want to allow that coming in? The answer is no. And at the same time, we really don't need a public IP address if that's the sole purpose of it for this Linux virtual machine.

So let's clean this up a little bit. We're going to go ahead and close out some of these things. I'm going to go back to Networking, where notice we've got the public IP listed here for this Linux virtual machine.

[Video description begins] He returns to the Networking page and clicks the link under the Public IP field . A page titled pubIP1 opens. The page has buttons titled Associate, Dissociate, Move, Delete, and Refresh. [Video description ends]

And when I click the link, it takes me into that because it's a separate Azure resource, the public IP. I'm going to click Dissociate. Now I'm going to do that so

[Video description begins] When he clicks Dissociate, a confirmation window pops up and he clicks Yes in it. [Video description ends]

that it's not associated any longer with the Linux virtual machine.

[Video description begins] A window with the text: Saving network interface- pops up in the top-right corner of the page. [Video description ends]

And if this public IP address resource isn't needed for anything else, I can even go ahead and delete the resource. It's always a good idea to delete Azure resources that you are certain you no longer need. Because then you're not incurring any additional charges, plus it just makes management of your Azure resources a little bit more streamlined.

[Video description begins] A window with the text: Saved network interface- displays. [Video description ends]

Now, at the same time, I'm going to close out of that and go back to the Networking part of the properties blade for my Linux virtual machine. Because I'm interested in looking at the network security groups here. So I've got a couple of network security groups.

Remember, if we click on Effective security rules, if the VM's running, we'll see all effective security rules that apply to this particular virtual machine at this point in time. And here, I've got a network security group for the VM itself and then another one for a subnet. And if I click on these links, notice I can see where the rules comes from. And so the Port_22 item is from the eastlinuxvm1-nsg, or network security group. I'm going to go ahead and click on that so we can look at the inbound rules.

[Video description begins] The eastlinuxvm1 -nsg page opens and he clicks the Inbound security rules menu in the Settings menu group in the navigator. On the right, the rules display in a table containing columns titled PRIORITY, NAME, PORT, PROTOCOL, SOURCE, DESTINATION, and ACTION. 4 rules display in the table. [Video description ends]

Here is the Port_22 rule, so I'm going to go ahead and select that and delete the rule, why?

[Video description begins] The Port_ 22 pane displays on the extreme right. It has 4 buttons titled Save, Discard, Basic, and Delete. When he clicks Delete, a confirmation window displays and he clicks Yes in it. [Video description ends]

Because we don't need it. What we're going to be doing, as we've seen in another demo, is connecting our on-premises station through a VPN to Azure, that's called a point to site VPN. After which, we can then connect to the private IP of the virtual machine.

[Video description begins] He clicks Overview in the navigator. [Video description ends]

So let's just go ahead and close out of this network security group, we can see the rule's been removed. And back here, let's just close the network interface actually. We've got all kinds of levels of resources we're into. Now let's go back to the overview for the VM itself. So what we're going to be interested in then is noting that we no longer have a public IP address. But if I go ahead and click on Networking on the left, we can see the private IP for this host.

[Video description begins] He highlights the value in the Private IP field. [Video description ends]

And so the private IP then is going to go ahead and allow us to make a connection to that host once we have VPNed into the network environment. And just bear in mind that the default rule here, AllowVnetInbound will allow connectivity for resources on the VNET to resources in that same VNET, like our Linux virtual machine.

[Video description begins] He hovers over the AllowVnetInBound port rule in the displayed table. [Video description ends]

So we could go ahead and follow this practice and apply it to all the virtual machines that we don't want publicly accessible for remote management purposes.

Azure Government Services

[Video description begins] Topic title: Azure Government Services. Your host for this session is Dan Lachance. [Video description ends]

Cloud computing with Azure presents a lot of interesting opportunities, not only for private sector enterprises, but also for the US government.

[Video description begins] Screen title: Azure Government Services. [Video description ends]

So Azure Government Services provides specific Azure services for US government agencies, such as the Department of Defense or DoD. So federal agencies, state agencies, and even municipal agencies. With Azure Government Services, one consideration is a hybrid cloud, where there are some government agency data centers, that can be extended into the Azure cloud.

So that some services and data reside in the cloud and are replicated from on premises, either for safe keeping or for high availability. Also Azure Government Services uses dedicated data centers located throughout the United States, although those locations are not disclosed. There are many different types of connected devices that can be related to government use of the Azure government cloud. Such as traffic control systems, heating, ventilation and air conditioning for government agency facilities.

Also, entire smart cities and military sites. With Azure Government Services, we need to think about differences between how we would configure IT systems and services on premises versus the cloud. Because while there are a lot of similarities, it's not done in exactly the same manner. One reason for this is shared responsibility, because when we use cloud computing, depending on exactly what we're deploying into the cloud, such as an infrastructure as a service virtual machine.

Means that some of the underlying responsibility such as for the hypervisor that hosts our virtual machine would be the responsibility of Microsoft in the Azure cloud. But the maintenance and the application of updates and configuration of the operating system in that virtual machine, in this case, would be the responsibility of us, the cloud consumer.

Things like DNS name resolution, bear in mind, set as a default Azure-provided DNS. Which means that if we want to use our own DNS servers, that has to be a conscious decision, and that's a configuration we'd have to make.

Also, virtual network IP addresses that are available. Bear in mind that when you might be configuring a government agency network on premises and assigning IP address ranges. You will have more IP addresses available for your use than you might in the Azure cloud, because Azure reserves IP addresses. As seen here, when we are adding a subnet to a Microsoft Azure virtual network, notice that there are five Azure reserved addresses that are allocated.

[Video description begins] Screen title: Azure Virtual Networking. A screenshot of the Add subnet dialog box displays. It contains 2 fields- Name and Address range. Subnet4 displays in the Name field and 10.1.0.0/24 displays in the Address range field. Below this field is the text- 10.1.0.0-10.1.0.255 (251 + 5 Azure reserved addresses). [Video description ends]

So that means within your IP address range for the subnet, that's five IP addresses that you cannot use. And so that's an important consideration. Azure Government Secret is a part of the Azure government cloud that adheres to Department of Defense Impact Level 5. Which deals with controlled yet unclassified information, otherwise called CUI. And it's also compliant with the use of National Security Systems or NSS.

So this is any type of computing system that processes data that meets a certain level of security and is deemed acceptable for use in this context for US government use. Also, Azure Government Secret uses dedicated infrastructure so that we've got a physical separation between cloud tenants. And connectivity is through the Non-classified Internet Protocol Router Network, otherwise called NIPRNet. NIPRNet is a private network that's used for the sharing of information that's considered unclassified for Azure government use.

Azure Germany Services

[Video description begins] Topic title: Azure Germany Services. Your host for this session is Dan Lachance. [Video description ends]

Azure Germany services, as the name implies, relates to the use of Azure cloud services in the German environment. This means that workloads need to run in German data centers. And the data also needs to reside in German data centers. This means that we need to have appointed a German data trustee that is responsible for the oversight of these data centers in Germany.

And this is done specifically by T-Systems International. There are only two Azure German regions. Now, replication occurs between these regions for high availability like it would between any other regions around the world for Azure. The two regions are Germany Central and Germany Northeast.

When you use Azure Germany services, you'll notice that some of the DNS suffixes are different than what you might be used to when you use Azure outside of Germany. So for example, when we're using Azure SQL we would have a DNS suffix by default that ends in .database.cloudapi.de. Whereas outside of Germany, normally that SQL suffix for DNS would be .database.windows.net. And you'll see some of those changes with a variety of different Azure services that use DNS suffixes.

In Azure Germany services, ExpressRoute circuits are supported, but only for Azure not for Office 365. ExpressRoute circuits use a local point of presence so that organizations, or in some cases government agencies, can have a dedicated network circuit or link straight from their data center directly into the Azure cloud without traversing the Internet.

Azure Active Directory is supported with Azure Germany services, however, you can't use a standard Microsoft account sign-in for Azure. Where that will work outside of Azure Germany, it does not work with Azure Germany services.

View Azure PCI DSS Compliance

[Video description begins] Topic title: View Azure PCI DSS Compliance. Your host for this session is Dan Lachance. [Video description ends]

PCI DSS is a security standard that applies to organizations that deal with cardholder data, things like credit cards and debit cards. And it's a series of security controls that should be put in place to ensure the safeguarding of that type of data. And in Azure, we have a way to view our compliance based on our current configuration of our Azure resources. While it's not complete and doesn't give us a 100% assurance that we are complying, it certainly a very good starting point. So to get to this, the first thing I'll do here in the Azure Portal is go to the Security Center down at the bottom of the left-hand navigator.

[Video description begins] The Microsoft Azure portal homepage displays. The Azure services page is open now. [Video description ends]

[Video description begins] The Security Center -Overview page opens. It has 2 main sections titled Policy & compliance and Resource security hygiene. [Video description ends]

And then in the properties blade for the Security Center, there's something you'll see under policy and compliance called Regulatory compliance which is currently a preview feature. So I'm going to go ahead and click on it. Now over on the right, I can see we've got number of different standards bodies here such as ISO 27001, SOC TSP, and

[Video description begins] A Download report hyperlink displays on the top of the page. A donut chart titled Regulatory compliance assessment displays below. It shows the number of failed, passed, and skipped assessments, denoted by colors- red, green, and grey, respectively. On the right, the Regulatory standards compliance status report displays. It shows assessment status for 4 services- Azure CIS1.0.0, PCI DSS3.2, ISO27001, and SOC TSP. The page also shows 4 tabs by the same name as the services, plus a tab titled All. [Video description ends]

of course, what we're looking for PCI DSS. It says that out of 30 past controls, we've got 30. However, that doesn't mean we are 100% compliant with what we should be in a PCI DSS context if we're dealing with cardholder data. So I'm going to click the link down below for PCI DSS 3.2. This gives me a bit more detail. I'm going to choose the checkbox for expand all compliance controls.

Because as you see, just because we have a green bar next to something. In this case, install and maintain a firewall configuration to protect cardholder data that comes straight from PCI DSS. Notice that we've got some compliance green bars here but others, not necessarily. So we have to take a look at those and

[Video description begins] A multi-level list of compliance controls displays. It has a total of 4 items- 3 of which have a green bar before them, and 1 has a grey bar. [Video description ends]

address them, so we can expand upon them to read more details about what we should be doing to be fully compliant. And as we go further down through this list, well actually why don't we do this. How about I remove the check mark for expanding all compliance controls.

There's no question that the grayed out items mean that we are missing some things that we should be doing to secure cardholder data.

[Video description begins] The multi-level list collapses and a single, numbered list of compliance controls displays. Some of them have a green bar before them, and some have grey. A down arrow is present next to all controls. [Video description ends]

And if I expand them, in this case for the regular use and updating of antivirus programs. Well, it says that we should be deploying that solution, and we are not,

[Video description begins] When he clicks the down arrow of one of the compliance control, it expands downwards to reveal recommended steps. [Video description ends]

on all of our virtual machines. However, again, if we've got something like, assign a unique ID to each person with computer access, if we expand that, and take a look at these subordinate items. While some of them do have green bars, again some do not, there are gray bars. So we need to read those and make the appropriate changes if we are seeking full compliance, in this case, with PCI DSS.

Azure Service Level Agreements

[Video description begins] Topic title: Azure Service Level Agreements. Your host for this session is Dan Lachance. [Video description ends]

Service Level Agreements or SLAs are contractual documents between a service provider and the service consumer. In this context, the service provider is Microsoft Azure, and in this context, the service consumer would be you. You are the Azure customer. So the service level agreement is important because it stipulates what we can expect for performance and uptime from a given Azure service.

So in other words, there's an SLA for each different Azure service. And it's important that we take a look at that to know what we can expect. Especially if we're burdened with meeting specific compliance guidelines, perhaps by certain industry standards. And we want to make sure that we comply with those through the use of Azure Cloud Computing Services.

[Video description begins] The Microsoft Azure home page displays in a browser window. The URL in the address bar is: https://azure.microsoft.com/en-ca/support/legal/sla. The re are some tabs on the page such as Overview, Solutions, Products, Documentation, Pricing, and Training. The page titles says: Service Level Agreements. [Video description ends]

So here, I've gone to the Microsoft Azure Service Level Agreements page. You can use your favorite search engine to search this up and you'll find it in a hurry. And if I scroll down, I can see that I've got a list of all kinds of different products and categories that I can do the SLAs for. So for example, let's say we start with the Compute category and I want to look at the SLA for Virtual Machines.

[Video description begins] He scrolls down to reach the products sections. On the left, all the products are listed and a search field is present at the top. He selects Compute from the product list and its page opens on the right. It has hyperlinks such as Virtual Machines, Azure Kubernetes Service, Service Fabric, and Batch. [Video description ends]

[Video description begins] A page titled- SLA for Virtual Machines- displays. It has a bulleted list of information and expandable links such as Introduction and General Terms. [Video description ends]

So here we see the service level agreement for virtual machines and whether it's deployed across two or more availability zones for high availability. And we can see here connectivity to at least one of them, 99.99% of the time. So as we go further down through a Service Level Agreement document, you'll see that it's broken into an Introduction section.

Then we've got a General Terms, so the terms that are used throughout the SLA document. And then as we go further down, we can see the SLA details for this specific service, in this case, virtual machines. And we can also determine what kind of, in this case, a service credit we might receive if we've got less than a specific amount of service uptime that is promised through the SLA.

Now that's just for virtual machines, let's say, we were to go and look at Storage. So I'm interested in looking at standard storage with storage accounts. So again, we can see that we've got 99.99% uptime, and the ability to process storage requests. And here it also even mentions something specific to this class of Azure resource, or storage, in this case, for Cool Access Tiers.

And again, we can view the introductory information about this SLA, in this case, for Azure storage, just as before, we can see General Terms. A lot of that would be similar across SLAs but they won't always be exactly the same naturally due to the nature of the different types of cloud services. And then we can see the SLA details. So for example, here, we've got references to Blob Storage Accounts, Hot Access Tier, Cool Access Tier.

And as we go further down again, we can see the processing time and the types of transactions that we can expect to get in terms of performance. And then if that is not met, then we can see the service credits related to the sub par performance that we might experience. Hopefully, you will never experience it. So, it's very important then that we keep abreast of all of these service level agreements and any changes to them for the Azure services that we are using.


Azure Preview Features and General Availability
Azure preview features are just that. They're new features that Microsoft is making available for testing purposes in the Azure environment because with Microsoft Azure there is a constant process for improvement of available cloud services. However, we don't want to use preview features for mission critical workloads.

Azure preview features can be turned on or off for the specific services that you might be interested in using the preview feature for. But the thing to bear in mind is that Azure preview features are excluded from Azure service level agreements or SLAs. So where the SLA might guarantee up time or response time, that would not apply if you are using an Azure preview feature. You can get notifications of Azure preview features that show up in the portal as pictured here.

[Video description begins] A screenshot of Azure Notifications page displays. The bell icon in the title bar is selected. There are 2 hyperlinks on the page, namely More events in the activity log and Dismiss all. A list of latest updates such as Recent, Resource groups, Marketplace, and Templates, displays below. [Video description ends]

When you look at the Notification icon, the alarm bell icon, you'll see notifications for the appropriate items that have new preview features. Here we can see preview listed next to Templates and the Quickstart Center. After Azure preview features have gone through the appropriate testing and feedback from customers has been brought into the final version of the product, the final version of that product or feature means it is now available generally. That's called general availability, often simply notated in documentation as GA.

[Video description begins] Screen title: Azure General Availability, abbreviated to: GA. [Video description ends]

So GA features and APIs then are covered by Azure service level agreements because its an actual feature that is supported now by Microsoft. It's no longer in the preview phase. Now if you're a developer, and you've taken advantage of some preview features, the reality is that sometimes features that were available in preview at the development level are removed once the feature or product goes to general availability.

And so any preview code that might have worked during the preview phase may no longer work in the general availability phase. And so you might need to make a few code changes to adhere to that fact.
