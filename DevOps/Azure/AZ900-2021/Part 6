                    AZ900 Microsoft Azure Cloud Fundamentals 2021
                    Course Notes Part 6


Azure Availability Zones
  - If we had to sum up Azure Availability Zones in one word, we would simply use the word availability.
    - An availability zone doesn't have to be, but it can equate to a single Azure data center
    - An availability zone can consist of more than just one data center
    - This can be used to spread out services to increase availability.
  - We might replicate data between availability zones, so that if there's some kind of a catastrophe or a failure in one availability zone
    - Then the data is still available elsewhere and it doesn't have just to be data
      - It could be an entire application ecosystem that we've duplicated in another AZ.
  - With Azure Availability Zones, we get the benefit of high availability of IT systems and data
    - We know that an Azure Availability Zone could consist of one or more data centers
    - Then there is the notion of fault domains
    - The purpose of a fault domain is essentially to spread out our deployed services like virtual machines that we might create in Azure
    - Spread them out if we've got a cluster of them across multiple physical data center racks
    - Where each rack has its own network switch, at least one, its own power source, its own hypervisor etc
    - That way if there's some kind of an unanticipated failure within an Azure data center in a rack
    - Whether it's power-related, network-related, or hypervisor-related, at least we will still have some of our virtual machines 
      - They were deployed to another fault domain and so when you start deploying resources, this happens automatically.
  - There is the notion of an update domain, an update domain is a little bit different here because instead of an unpredictable or unanticipated failure
    - We have a planned maintenance type of downage of something like a hypervisor server
    - Maybe Microsoft needs to apply configuration changes or updates
    - Instead of bringing down a whole bunch of physical hypervisor servers in an Azure data center simultaneously, one would be brought down
    - Its configuration changes and or updates will be applied, and then once that is back up and running then the next server would get the same treatment 
      - Where it would be perhaps brought down or reconfigured, updates are applied, that type of thing.
  - The whole purpose here is that when updates need to be applied, we don't end up with the service outage. 
    - It minimizes what is affected and we are not talking here about how we, as Azure customers, might deploy virtual machines manually ourselves
      - Because we are responsible for updating them, this is more at the underlying Azure data center level.
  - Some regions are much larger than others and will have numerous Availability Zones within them
    - Depending on which region you work with, as in this case when deploying a virtual machine
    - In some cases it is to be expected, to not have the choice of Availability Zone, it simply depends on the region that is selected.


Azure Resource Manager
  - Azure Resource Manager, otherwise called ARM for short, is often used to manage related Azure resources together as a group although you don't have to do that. 
    - You can use ARM, for example, to deploy or manage a single virtual machine
    - This really shines when you're talking about something like a web application 
      - This could consist of a front end load balancer, a public IP address, numerous virtual machines to host the website
      - Or the web front end, and then even some back end databases. Which also includes storage. 
    - All of those things together, all of those different Azure resources, can be managed as a single unit through an Azure Resource Manager resource group.
  - So we use ARM to deploy resources, so to create new things like virtual machines, storage accounts, virtual networks, databases, and so on
    - We can also use ARM to manage existing resources, maybe to change a configuration or to remove a deployed resource.
  - So what is an Azure resource? Well, it's pretty much anything that you can deploy in the Azure Cloud
    - This includes things like a web application that's hosted in Azure. Maybe a Cosmos DB NoSQL compliant database or an Azure SQL database. 
    - Or even a storage account, because you want to store files such as Office productivity files in the Cloud
    - It can also be virtual machines that we deploy, these are all resources
    - If there is a single application, it might consist of all of these items, so we could organize these into what's called a resource group.
  - When deploying and managing Azure resources, whether it's through command line tools or through the Azure portal or the web GUI
    - You will always have to deal with the resource group
    - For example, if you're deploying a virtual machine, one of the things you have to do is either deploy it into an existing resource group 
      - Or define a new resource group.
  - When we work with ARM Template files, they use JSON file format, J-S-O-N
    - It looks similar JavaScript, but it's not JavaScript, it's JSON
    - We can set a default parameter, in this case for a virtual machine name, where the default value, if not specified otherwise, would be MyVM. 
    - Example would be "parameters"l {"virtualMachines_vm1_name": {"defaultValue": "MyVM", "type": "String" },. 
  - We can see the location, or region, into which this virtual machine will be deployed
    - The virtual machine size listed below, which determines the underlying horsepower, like virtual CPUs, the amount of RAM. 
      - Whether it uses solid state drives and so on. 
      - He highlights the code: "properties": {"hardwareProfile": { "vmsize": "Standard_B1s"
  - In the Azure portal, when we deploy a resource, in this example, if we've deployed a virtual machine. 
    - We have created a new Azure virtual machine in the Azure Cloud.  
    - When you get to the end of the screens, the Wizard in the GUI, there's a link in the bottom right to download a template for automation
    - In other words, the Azure portal is essentially tracking all of your choices when you deploy your resource. 
    - Then you have the option to download a template, so that you could reuse that template to deploy more resources of that type. 
  - Now you can also deploy ARM templates in numerous ways, such as through the Azure portal as seen here. 
    - When you create a template deployment in Azure portal, this is what you see. 
    - You could build your own template in the editor, there's a built in editor online, where you can also import a template. 
  - Remember, template is a file that uses JSON syntax. 
    - You can build it in the cloud, if already built you could import it into the cloud. 
    - There's also a list here of common templates for creating things like Linux or Windows virtual machines or a web app. 
    - You can even connect to templates over the Internet, such as through GitHub.
    - In this example, we're talking about the Azure CLI, the command line interface
    - You can download and install so that you have command line management of Azure
    - We are deploying an ARM template through the CLI. In the first command, az group create, we are creating a resource group. 
    - The resource group is called rg1 and it's been deployed on a location, or a region, called Canada central. 
    - Complete command is: az group create --name rg1 --location "Canada central"
  - Next thing we see is a command that says, az group deployment create. We are creating a deployment. 
    - We want to deploy or create resources in Azure. In this case using a JSON formatted template file. 
      - We are giving our deployment a name eg deployment1, referencing my resource group rg1. 
      - Then specifying a local template file, eg mytemplate.json
      - You could also specify a location elsewhere over the Internet
      - Again, as in the case of connecting to an ARM template, that you might want to deploy from GitHub
        - Then you might specify parameters. In this case, such as a parameter for MyVM
          - The complete command is: az group deployment create \ --name deployment1 \ --resource-group rg1 \ --template-file mytemplates.json \ --parameters "MyVM"
  - We can also deploy ARM templates using PowerShell. 
    - In the first line we're creating a variable called $rg that contains the text rg1. That's the name of the resource group. 
    - There are 2 commands, the first is: $rg = "rg1", the second command is: $location = "Canada east"
  - Then we're using the New-AzResourceGroup cmdlet to build a resource group. 
    - Command: New-AzResourceGroup -Name $rg -Location $location. 
    - We are building a New-AzResourceGroupDeployment and referencing our resource group name and a local TemplateFile in the root of drive C called mytemplate.json. 
    - Command: New-AzResourceGroupDeployment -ResourceGroupName $rg - TemplateFile c:\mytemplate.json. 
    - Like with the Azure portal, with the Azure CLI, we don't have to reference a local template file. 
    - We can actually point to one over the Internet, such as stored in a GitHub repository.


Azure Resource Groups
  - The Azure Resource Manager, or ARM, method of managing Azure resources allows us to group resources together
    - For example if we've got a web application that consists of a front end load balancer, and a couple of load balanced web servers and backend databases
    -All of those items together could be grouped into a single resource group to facilitate management
    - We can even build resource group templates or ARM templates that allow us to deploy and manage these resources together.
  - In the Azure portal, we can see that on the left there is a Resource groups view. 
    - When clicked any resource groups that I've already defined will be shown. 
    - The Resource groups page opens in the content pane. 
    - There are Add, Edit columns, and Refresh buttons, there is a Filter by name field and All locations, All tags, and No grouping drop-down lists. 
    - The resource group table headings are NAME, SUBSCRIPTION, and LOCATION. 
    - We can add a resource group at this point by clicking the Add button
