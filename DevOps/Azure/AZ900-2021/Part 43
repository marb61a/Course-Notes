                    AZ900 Microsoft Azure Cloud Fundamentals 2021
                    Course Notes Part 43


Network Security Group CLI Management
  - Create a network security group using the Azure CLI
    - Ensure that we have downloaded and installed the Azure CLI and I've already run the az login command to authenticate to Azure
    - At this point, I'm going to run az space network space nsg, for network security group, create
    - From here, if we use the help command --help, we will learn about the syntax related to the creation of a network security group
    - Go ahead and bring up that command using my up arrow key and just modify it by removing --help
      - We are going to use -g, then tie this network security group or deploy it into a resource group
      - We can then name it for example call it, with -n for name, Windows_NSG
      - Assuming I need a network security group to control traffic into and out of Windows virtual machines, this will be a good name
      - Go ahead and just do that and once that's finished, we can also get a list of virtual networks
      - So we can see it looks like it created our Windows_NSG, network security group
      - t any point in time I could run az space network space nsg space list
  - What I could do is also run that command, but pipe the result to the find command and tell it to look for name
    - Now we are also going to get the names of rules within the network security groups
    - But at least we can see we have less to look at, and indeed, our Windows Network Security Group lives on
  - The next thing we're going to do is create a rule within that network security group to control traffic
    - So we are going to run az space network space nsg space rule space create
    - This is going to be for a resource group of Rg1 --nsg-name, in this case is Windows_NSG
    - We can set the priority, let's say, for this rule to value of 200, which is relative to the other rules to control the execution
    - We'll use --source-address-prefixes anywhere, so asterisk, --destination-address-prefixes, same thing, going anywhere
    - Then we can specify also the destination port information. So, --destination-port-ranges
    - In this case we want to make an allowance for port 443 --direction is going to be inbound 
    - Because network security groups can also control traffic going out. -- access
    - We can either allow or deny, in this case, allow, the protocol, -- protocol, is tcp. And finally, let's give this thing a name
    - How about AllowInboundHTTPS and then go ahead and press Enter on the assumption that everything was typed in correctly
    - Clear the screen. az space network nsg rule space list and --resource-group Rg1
    - And what's the name of our security group? --nsg-name, it's Windows_NSG, and press Enter
  - We got the same kind of output that we got when we created that rule
    - We can see the destinationPortRange indeed is for port 443, and that this is for an Inbound direction and we're allowing that traffic


Network Security Group PowerShell Management
  - You can also use PowerShell to create and manage network security groups in Azure
    - Here we've already got a PowerShell script that we've opened up in the PowerShell ISE, the integrated scripting environment
    - The first command is Get-AzNetworkSecurityGroup
    - So having our cursor blinking on line 1 where that command exists, we are going to click the Run Selection button
    - This is going to list back, of course, the Azure network security groups and the details that go along with each of them as we can see
  - However, in line 3 I'm filtering it out and only showing the name. So I'm piping it to the select alias in PowerShell, and telling it that the only prop I'm interested in is name. So let's go ahead and run that line, and see how the output differs. That is much cleaner looking, because now we see only the names of the network security groups as opposed to all of the details for each and every one of those network security groups.
  - To build a new network security group we would use the New-AzNetworkSecurityGroup cmdlet. Where we have to specify a name,- name, we deploy it into a resource group, so I use -resourcegroupname for that, and then we specify the Azure region. Now I'm going to go ahead and run that line, so I'm going to select it and I'm going to run the selection. So after a moment we'll see that we've got a new network security group here.
Let's clear the screen down here in PowerShell, why don't we run that command again where we just select by name. So how about we do that, let's just clear this up and let's see what we get returned here. What we're looking for is that we've got our Linux NSG or network security group that exist. And indeed it is returned from that PowerShell cmdlet,
so, what are we doing in line 7? Well, I'm using the back tick character so that I can have this wrap across three lines, it's really one big statement. What we're doing here is we're running Get-AzNetworkSecurityGroup and I'm calling it by name. I want to get the Linux network security group, and here's the resource group it's in.
And then, once we have a handle on that object, we are piping that output to the Add-AzNetworkSecurityRuleConfig cmdlet. And we're adding a rule that's called AllowSSH, so we're allowing access that's destined from an inbound direction for TCP port 22, as we see way down here. We can see all the other details like the priority, the sourceaddressprefix, and in this case from anywhere, *the sourceportrange*, destinationaddressprefix*.
  - Having done that, that's the middle command as we can see selected here
    - Then we take the result of that and we pipe it to Set-AzNetworkSecurityGroup
    - We can write the settings to the security group that we got from the beginning of the command
    - Does that make sense? We get the network security group, get a handle on it, add a rule and then write it using the Set-AzNetworkSecurityGroup cmdlet
  - Make sure we execute lines 7, 8, 9 here as one expression
    - Select them and then click the Run Selection button
    - After a moment, it looks like it ran which we should check by going into the portal
  - Here in the portal in the All resources view, filter it for things that have NSG in the name
    - There's the Linux network security group, and if you look at our inbound security rules
    - There is the AllowSSH with the priority of 220, port 22, and so on, and of course it is allowed
    - It's pretty easy to work with network security groups using Microsoft PowerShell.


Configure a VM Jump Box
  - Create a jump box which is a machine that you can connect to
    - For example, from the Internet if you're working on premises, so that you have access into the Azure cloud
    - From the jump box you can then make remote connections to other internal Azure resources
    - Like other virtual machines that might not be publicly accessible directly
  - To get started, really we're talking about creating a virtual machine. So I'm going to click Create a resource in the upper left here in the portal, it's going to be Windows Server 2016 Datacenter. And I will deploy this into an existing resource group. We're going to call this JumpBox, and I'm going to go ahead and deploy this into a specific Azure region of my choosing.
And I'll fill in the Username and Password information. And then I'll click Next, I'm going to accept the disks. And for networking this is going to go and do a virtual network called EastVnet. And specifically I'm going to put this in a subnet, let's say, called EastSubnet1, and it's going to make a new public IP.
So that's fine, let's let it create that, because I need a public IP to get to the jump box. And from the jump box we get to other internal resources that might not have a public IP. So I'm okay with this. I'm just going to basically go through the wizard. I'm okay with everything here. Let's make sure validation is passed.
And it is, so I'm going to create this virtual machine. Now, while that's happening, if I go look at my other virtual machines. I've got one here called eastwindowsvm1, and it's got a private IP allocated but not a public IP. And this virtual machine is actually in the midst of being started. Let's just go back here and do a refresh now. And in a moment, we'll see that it's actually up and running.
And after a few moments, we can see that the two virtual machines are up and running. Again, we've got a virtual machine here that does not have a public IP, but it does have a private one. But that's not our JumpBox. Our JumpBox, if I click on it, in fact does have a public IP address.
Let's start by using the Remote Desktop client here on premises to connect into the jump box. Okay, so I've popped in the public IP address that I copied from the jump box virtual machine in Azure. So I'll paste that in here, I'm going to click on Connect. And when I put in the credentials and click OK, I'll just get this certificate message. I'm going to trust this certificate and tell it not to ask me again every time I connect, and I'll choose Yes. So we're making an inbound connection from on-premises through
the Internet into our jump box Windows virtual machine in the Azure cloud. Now, let me just go ahead and minimize that Remote Desktop window. Because what we want to do is now make a connection to this virtual machine eastwindowsvm1. Which, of course, as we know, if we go to overview, let's say, it does not have a public IP but it does have a private one. So I'm going to copy that private address, 10.1.1.4. Let's go back to our Remote Desktop session in our jump box.
So now within here, I'm just going to go to my Start Menu and we're going to go ahead and fire up the Remote Desktop client. So from the jump box we're making a connection to other Azure host. In this case, using the private IP, in this case 10.1.1.4, which was our example, 1.1.4. And I'll click Connect. And of course it wants the credentials so I'll go ahead and supply that including the password.
And then after a moment we'll be prompted to trust a certificate for that connection to secure that network transmission. And now we can see that we are one level deeper, we are now connected to an internal Azure virtual machine, that itself, does not have a public IP. But rather, we got to it by going through a jump box. Now, the jump box itself does not have to be on the same subnet.
  - In the Azure portal, if we open up EastVnet1 and look at the connected devices
    - We can see our Windows virtual machine and our jump box which are both on the same subnet
    - That may or may not meet your security needs, we easily could have put our jump box on a different subnet in a different range
  - It would still be able to make a connection to the private IP of our Windows virtual machine
    - Sometimes because the jump box is publicly accessible, you might want to put it on its own subnet for isolation purposes, but it's not a requirement


Just-in-Time VM Access
  - Configuring a virtual machine in Azure with just in time access can further harden virtual machines. This is because instead of always allowing, for instance, inbound remote management traffic, then what we could do is only enable that as it's needed and then turn it off when remote management is complete. Instead of always leaving a port open, for example, through an inbound rule in a network security group. So here in the portal, I've got a list of virtual machines, one of which I will click on, it's called JumpBox.
  - In here I am going to go to the configuration part of the properties blade, where I can enable just-in-time-access, so I'm going to go ahead and do that. Now when you enable that on a virtual machine, you can then open the Azure Security Center from that provided link or just by clicking Security Center here in the bottom left of the navigator, same thing, same place.
But when I do that, what happens is I can select virtual machines that are enabled for this and request access. Now before we do that, why don't we go back to our virtual machines here, and I'm going to copy the public IP address of this virtual machine and attempt to connect using the remote desktop protocol client on my station.
So I'm trying to make a remote desktop connection to the public IP of this virtual machine. But notice it seems to be taking an awful long time, and that's because it's going to time out. When you enable just-in-time-access, this is what the desired outcome is.
And so, when we go to the Azure Security Center or we can do that through the configuration, then we can request access as we need it. So I'm going to select that JumpBox virtual machine, it could be any virtual machine, and then I'll click Request access. So I want access to port 3389 because it's running Windows, I want that on,
I want to allow it from my current IP address as it's known on the Internet. And it's set here for three hours, that's fine, although I do have the slider I could control. But I will leave it on 3, and I am going to click the Open ports button.
And after a moment we can see in the upper right that it's enabling just-in-time or JIT access to that virtual machine. So now if I go back to my remote desktop connection for the public IP of that virtual machine and click Connect, we know it's working because it's prompting us for credentials right away. And if I pop those credentials in, then we will successfully have made a remote desktop connection through just-in-time-access to that virtual machine.


VM Antimalware
There are a few ways, using the Azure Portal, that we can install anti-malware agents within virtual machines.
One is to go to the Azure Security Center. When I go to the Azure Security Center, we can start to take a look at any of the recommendations that might apply to things like Compute, which would be virtual machines.
And I can see here that it talks about installing endpoint protection on virtual machines. And if I click that, it'll have some recommendations for virtual machines that need it and I could select some or all of them and choose Install. But we can also do this manually.
So if I go to my Virtual machines view, and if I click on a virtual machine to pull up its property sheet, one of the things I can look at are its Extensions. And extensions are add-on items that run as agents within the virtual machine to give it additional functionality.
And so I have no extensions listed here, but I could click Add. And then it's a matter of choosing from the list. For example, I'll choose Microsoft Antimalware. And I'm going to go ahead and click on Create.
Now a lot of these extensions will give you some configuration settings, as we see here, that are specific to that extension. Such as whether I want to configure excluded files or locations from my anti-malware solution that might normally trigger false positives. Or files extensions I want to exclude, or processes that are running that I want to exclude.
So I'm going to leave Real-time protection enabled, and we're going to turn on Run a scheduled scan. That's enabled. And the Scan type will be a full scan. And the Scan day, let's say, will be Sundays. And we can also determine the maximum amount of Scan time from midnight, so this is the starting time. So this is 120 minutes from midnight, so in other words, at 2 o'clock in the morning we want to begin doing a scan. So I'm going to go ahead and click OK.
And we can now see it's submitted that deployment to install that extension within that virtual machine. And after a moment, we can see that the provisioning succeeded for the installation of that anti-malware extension.


Storage Account Access
When you are planning your Azure resource deployment, one thing to consider is from where you want to allow access to that resource. And that also applies to storage accounts, which we'll focus on here.
So, here in the Azure Portal, I'm going to start in the left-hand navigator by clicking on Storage accounts, where I will click on an existing one to pull up its properties blade. I'm interested in scrolling down in the properties blade until I see Firewalls and virtual networks.
Notice that this is configured to allow access from all networks. Now we can limit that. If I click Selected networks, I can choose to add an existing VNet, or virtual network, or add a brand new virtual network that will have access to the storage account. So I'm going to choose Add existing virtual network. From here, I can select all my VNETs, or specifically cherry pick the ones I'm interested in. And then I can also choose subnets, any variation thereof, that should have access, I'll choose a specific subnet, and I'll click Add.
And we can see here that we've got an entry here for the EastVnet1 with EastSubnet1 having access to this storage account. But as we go further down below, we can also even add our client IP address. This IP address is my current IP as it's known on the Internet. And so conveniently, I can set that on. But bear in mind, if my public IP address for my Internet connection changes, then this will no longer work, but I can just come in and change it again.
I can also specify specific IP addresses or CIDR ranges. I can determine if I want to allow read access to logging or metrics related to this storage account from any network, I don't. And if I want to allow other trusted Microsoft services to access this storage account. But be careful with this one. Notice it's checked on by default, which it allows some other services like Azure Backup or Recovery services to be able to talk to the storage account. And so I'm going to go ahead and leave that on then because of that, and I'm going to click Save.
After a moment, we can see it successfully wrote the changes here. So now we have limited access to our storage account from a specific VNet subnet, and from a specific on-premises client IP address.


Azure Advanced Threat Protection
  - Azure Advanced Threat Protection, or ATP, provides protection against security threats to your Azure resources
    - There is built-in monitoring to monitor for suspicious activity and then to send alerts about that activity.
  - It identifies anomalies based on what is not within the profile of being normal in your Azure usage environment
    - In other words, beyond a standard normal usage baseline, anything outside of that is considered abnormal
    - Advanced Threat Protection reports are available to be generated.
  - Specifically, the type of protection that ATP gives us is against attacks related to things such as pass the hash. Pass the hash is a type of attack that given access to a virtual machine where we've got, for example, an administrator logged on. Doesn't have to be an administrator, but that's in our example. Then, if an attacker can gain access to that host during that session, then the attacker can look at the hash values stored in memory and use that hash value to connect to other network resources as that user, without having to figure out what the password is.
Another protected item would be against enumeration of SMB, or Server Message Block, sessions. Protection against the enumeration of items in Active Directory. Protection against encryption downgrades, which is applicable when two machines begin to communicate, they negotiate how they will communicate. And in the attackers sense of realm, of what would happen is that they would try to use a lower level of encryption. Ideally, one that is known to have weaknesses.
And that's called an encryption downgrade attack. Advanced Threat Protection can also detect DNS reconnaissance attempts. Reconnaissance essentially is information gathering. The more that a malicious user knows about your Azure environment, including DNS names, IP addresses, deployed resources, which resources talk to each others, then the better off they are in finding some kind of a vulnerability and attempted to compromise something you've got deployed in Azure.
In order to use Advanced Threat Protection in Azure, you need an ATP license. And you manage this through the ATP portal, it's a separate portal that has a URL of portal.atp.azure.com.
ATP is also designed to connect to and monitor Active Directory, there are Azure ATP sensors that are used to do that. And this is used to detect things like Active Directory enumeration type of reconnaissance attacks.                    



Azure Active Directory
  - Microsoft Active Directory Domain Services is an important infrastructure component that you'll see on many on-premises enterprise networks
    - However, we can also work with Active Directory in the cloud in the form of Azure Active Directory, otherwise called Azure AD, even sometimes just AAD
    - What it is is a managed service, it means that you don't have to manually deploy domain controller computers that will house your Active Directory instance
    - It has been taken care of for you already.
  - Unto itself, Azure Active Directory does not offer the slew of features you would might be used to when you run Active Directory on-premises. An example of this is the lack of group policy for centralized configuration management. However, Azure Active Directory can contain standard types of objects like users so that users can authenticate and then be authorized to use services.
  - And we can even enable multi-factor authentication or MFA. So that we have an additional layer of security beyond just username and password when users authenticate. Users can be organized into groups, which is often done to facilitate permissions assignments for people that have the same type of privilege needs. We can also configure applications in Azure Active Directory. And devices can be joined to Azure Active Directory. Let's take a look at a couple of variations of Azure AD starting with Azure AD Join.
With Azure AD Join, we can join devices to the Azure Active Directory domain, such as Windows 10 computers. And not only that, but people sitting in front of those computers can then authenticate with the user account that exists. Not in the on-premises active directory necessarily, but rather in Azure Active Directory. Then we've got Azure AD Domain Services. And this is where you get some more features that make it feel like on-premises Active Directory.
Things like the ability to create organizational units, or OUs, which are like folders to organize users or groups in Active Directory. Furthermore, we can then apply group policy settings centrally that would apply to our Active Directory hierarchy. Finally, we've got Azure AD Connect, this used to be called DirSync. And it allows us to install an agent on an on-premises domain controller that will replicate select information into Azure AD.
So for users that should have access to on-premises IT systems and so would be authorized to do that through authenticating with their local Azure or with their local domain creds, rather, on-premises. If it's replicated to Azure, then they can also access Azure services without having to provide another set of credentials.


Navigate Azure Active Directory Settings
  - Azure Active Directory is an identity management solution in the Azure cloud. When you're in the Azure Portal, in the left hand navigator towards the bottom, you'll see an entry for Azure Active Directory.
  - Now, if you don't have the textual display, then you'll be able to hover over the icons in the left hand navigator to see what they are. Either way, when I go to Azure Active Directory, the first thing I'll see are some metrics related to the number of sign-ins plotted against dates. And as I scroll down, if I look over on the right, there's a quick list of common tasks, like creating users, or a guest user account, or a group. Or even having an application registered through Active Directory.
  - And, as I go further down, I even have the option of creating a brand new instance of Azure Active Directory by filling in my organization name and a domain name. Which will, by default, use the .onmicrosoft.com suffix, but you can change that by configuring a custom domain.
  - And as a matter of fact, if we kind of scroll down in the left hand navigator here, where we're looking at our settings for our default directory, so this is the properties blade for the default directory. You'll see as you go all the way down, you have a number of options available, and one of those options is to create custom domain names.
So that way you could use the DNS domain name that represents your corporate identity on the Internet instead of something with the .onmicrosoft.com suffix. Now, also bear in mind when you're signed in to the Azure Portal, in the upper-right, if you click on your sign-in account name. You'll have the option to switch between different instances of Azure Active Directory, if you've got more than one instance.
So we can go ahead and simply click on one to switch to it. Now, bear in mind that when you switch to another instance of Azure Active Directory, you're looking at the resources from its context. So for example, you can see that we are now looking at the default directory.
And so if I were, for instance, to go to the All resources view, then I'm seeing all of the resources that would be related to that specific Azure Active Directory instance.
But let's say in the upper right, I switch directory to another Azure Active Directory instance that I already have, and we know that we can create one. Well, if I go to the All resources view, notice we see nothing here. So all of the stuff, all the resources that we work with here in Azure will be related to the currently selected, well, Azure subscription for sure, but also the Azure Active Directory instance. So I'm just going to switch back to the default directory.
And once again, if I go to the All resources view, then we're back to seeing all the resources that have been previously deployed. I'm going to click on Azure Active Directory once again, on the left.
So we see here that we can click on Users in the Properties blade to work with user accounts in Azure Active Directory.
We can also, if I close that out, organize users into groups, perhaps to facilitate permissions management. And also, if I take a look at Roles and administrators on the left, we can look at a specific role, let's say the Billing administrator role. And we can add members that will assume the privileges that this role provides, in this case, to manage things related to billing.
So we've got a number of options available here, including Azure AD Connect, which is used to synchronize On-Premises Active Directory with Azure Active Directory. So we can see the sync status here is that the Azure AD Connect component or agent is not even installed on-premises. So you see we have a Download link here to make that happen. And then we could follow through the installation and running of that wizard on-premises to make a connection to Azure for synchronization purposes.


Azure AD User and Group Management
You can use the Azure portal to create Azure Active Directory users and groups. Of course, you could also do the same thing programmatically or through the CLI or through PowerShell cmdlets. So here in the portal, to get started, I'm going to click Azure Active Directory in the left hand navigator.
First I'm going to take note of is the fully qualified domain name for my instance of Azure Active Directory. And I'm going to copy that only because I know I'm going to need that when I build a user account later on. Let's start by going to Groups.
Here we can see any existing groups, but I'm going to click the New group button. Groups are used, of course, to organize users into a manageable unit, usually to facilitate things like permissions management. So you've got two group types you can select from here, Security, and Office 365. Because I'm setting this group up for assistant Azure IT technicians, I'm going to choose Security.
So we're not building this group to control access to Office 365 resources. The group name here will be HQ, for headquarters, _AzureIT. And the membership type can be old school, as in Assigned, where you manually add members to the group. But you can also use Dynamic User or Dynamic Device for membership of the group.
So for instance with Dynamic User, we could build a rule that would look at user attributes, such as the department the user is in. And based on the value of the department attribute, that would then determine the group that that user becomes a member of. However here, I'm going to use Assigned, and I'm not going to add members at this point. So I'll just click Create.
So after a moment in the list, we're going to see our newly created group, HQ_AzureIT. And there it is in the list. Now we could click the three dots on the right to delete the group. We could also click on the group to open it up and maybe modify some of the properties of the group.
Such as switching it from Assigned to Dynamic User. Or we could add members to the group, but I'm not going to that in this method.
So let's get out of here, and let's go back to the point where we can click on Users in the Properties blade. Now we can add guest users. Essentially you're sending an invitation, such as through email, to allow users' limited access to Azure. However I'm not going to do that here, I'm just going to click New user. And I'm going to build a user called Jonathan Gold.

And the user name will be jgold@, and then I'm going to paste in my Azure Active Directory domain name, after the @ symbol. I could then click things like Profile and fill in values, such as for the department. So I'm just going to go ahead and click OK. Then for properties, all we can see here is the authority source is Azure Active Directory. And here I can also modify group membership.

So I want this account, Jonathan Gold, to be a member of the HQ_AzureIT group. So I'm going to select that group and I'm going to click Select.

[Video description begins] The Default Directory - Overview page displays. He clicks the Users option. The Users - All users page displays. It shows the list of users with details, such as Name, User Name, User Type, and Source. He points to the New guest user hyperlink and clicks the New user hyperlink. The User dialog box opens. He enters Jonathan Gold in the Name field and jgold@ in the User name field. Then he appends the user name with the domain name. He clicks Profile. The Profile dialog box opens. It contains fields, such as First name, Last name, and Job title. He specifies IT in the Department field. He clicks Properties and the Properties dialog box opens. Next, he clicks Groups. The Groups dialog box opens. He selects HQ_AzureIT. [Video description ends]

Now down below, notice that a password is generated for this user. And if I click Show password, we can see it here. I'm just going to go ahead and copy that in case we want to use it. And we can reset it at any time if the password is forgotten.

[Video description begins] The Password field is populated with a password. He selects the Show Password checkbox and clicks the Copy icon. [Video description ends]

Now in this case, Jonathan Gold has a directory role of User. Now we could select Global administrator to give full access to that account to manage our Azure subscription. Or we could also use limited administrator.

[Video description begins] He clicks Directory role, which is set to User. The Directory role dialog box opens. It has three radio buttons: User, Global administrator, and Limited administrator. He selects the Global administrator and Limited administrator radio buttons, one by one. Then, he clicks the User radio button and clicks the Create button. [Video description ends]

So notice when I choose global administrator, it says this person will have full control over all directory resources. But if I choose Limited administrator, then we can see these specific roles that we might want to assign. Such as the billing administrator, and maybe an application administrator, and so on.

So we have a number of options available. We might even use things like custom roles that we build. So I'm going to leave it as just user and I'm going to create Jonathan Gold. So after a moment, we'll see that our account for user Jonathan Gold has been created.

[Video description begins] The user, Jonathan Gold, appears in the Users - All users page. [Video description ends]

So I've gone into a new web browser and I'm trying to authenticate to portal.azure.com. Although technically, there could be numerous different ways a user might want to authenticate to Azure. Or even Office 365 depending on the account type. Here we're just going to ahead and pop in the user account name. I'll click Next and I'll specify the password. And of course it wants me to change the password to something different, because it's the first time this user account is signing in.

[Video description begins] The Sign in to Microsoft Azure web page displays. It shows the user name as jgold@stefansammsoutlook.onmicrosoft.com. He clicks Next. The Enter password section displays. He pastes the copied password and clicks Sign in. The Update your password section shows three fields: Current password, New password, and Confirm password. He enters the current password. [Video description ends]

And after a moment, we get a welcome message to Azure. I'm not going to view the tour, but notice that we've got our account name jgold listed up here for the default directory. And so if we go to All resources, well we don't really have access to work with a lot of items. And if we go to Create a resource, such as a virtual machine. Well, we don't quite have access for that, so then instead, we get a list here of creating a free account with a link to start a free account.

[Video description begins] The Microsoft Azure web page displays. On the top-right corner, it displays the new user name. He clicks the All resources option. The All resources page displays. Next, he clicks the Create a resource option. The New dialog box displays. It contains several resources, such as Windows Server 2016 Datacenter, SQL Database, and Web App. He selects Windows Server 2016 Datacenter. The Create a free account page opens with a Start free hyperlink. [Video description ends]

However, we know that the account is valid, it just doesn't have any permissions to do anything yet. You can learn more about that in another video entitled Assigning Built-in RBAC Roles.

