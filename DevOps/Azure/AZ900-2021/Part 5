                    AZ900 Microsoft Azure Cloud Fundamentals 2021
                    Course Notes Part 5


Cloud Migration (Cont)
  - We can also migrate data that's currently housed on-premises into the cloud 
    - This is as long as it meets specific security requirements that may be applicable based on the industry, or the government agency that we might doing this for
  - We have to also consider the suitability of on-premises IT solutions for migration into the Azure cloud. We need to make sure that we can map existing on-premises services to an equivalent solution in the cloud. Now in some cases you might simply be able to take what you're running on-premises and move it essentially into the cloud. Or, in other cases you might have to find a functional equivalent that is already made available through Azure service offerings. Then you need to consider security standards, such as whether or not you need to encrypt data at rest, such as data stored in a storage account in the Azure cloud.
With cloud migration, an important term to be aware of is lift and shift migration. What this means is we're taking an existing IT solution, and we're migrating it to the cloud without changing it. [Video description begins] The IT solution is migrated to the cloud without any changes made to the source. [Video description ends] So an example of this might be migrating a physical or a virtual server that we currently have running on-premises and migrating it to Azure. So really, we're changing the hosting environment in which that virtual machine or maybe we're converting a physical to a virtual. We're changing the hosting environment, but the operating system and its configuration remains exactly as it was on-premises, unchanged.
The Azure Migrate Service is an offering that can help with such types of migrations. It allows us to evaluate the migration suitability for things like virtual machines that we currently have running on-premises, and the workloads that they support. [Video description begins] Virtual Machines are also known as VMs. [Video description ends]
It can also take a look at IT system dependencies. For instance, you might have a front end web application that depends on a back end data base running in a different virtual machine. So that kind of system dependency would be caught by the Azure Migrate Service, because you don't want to be in a situation where you're only migrating one part of the solution to the cloud, only to realize it then doesn't work in the cloud.
The Azure Migrate Service can also provide cost estimations as to what you might be looking at for monthly charges on a recurrent basis after you've migrated specific workloads to the cloud.
So the Azure Migration Service Process begins with creating what's called a project. It then requires running an on-premises collector virtual machine. And this is designed to run in a VMware vCenter type of environment. Now that collector virtual machine will then gather data from on-premises and that gets sent to the Azure project.
Next, that discovered data is organized into specific groups. And this discovered data really comes from on-premises virtual machines that we're considering migrating to the Azure cloud. [Video description begins] The groups consist of the VMs that were discovered. [Video description ends]
Finally, the last step of working with the Azure Migration Service Process is to assess the results, to determine in fact if it is a migration that will take place. [Video description begins] The assessment needs to be viewed or downloaded. [Video description ends]


Azure Data Centers
Microsoft Azure data centers are the physical side of Microsoft Azure cloud computing. A couple of terms come to mind when talking about data centers, as we see here. Physical facilities is one of them. A data center is a physical facility, often a very large building or a collection of buildings that house computing equipment. In this case, for potentially thousands of different cloud customers.

Now, in the case of Microsoft Azure, these physical facilities, or data centers, exist currently in 140 countries around the globe. Although that will be changing over time. Then physical security becomes an important aspect of it, due to the fact that we do have a centralized location physically, that houses a lot of potentially sensitive data for many different customers. So as a result, you'd be hard-pressed to get a specific address for a Microsoft Azure data center, as the actual physical locations are not disclosed.

One data center component to consider, much like you would if you had a data center owned by a single large organization or even a server room within a building, is HVAC. Heating and ventilation and air conditioning. Within a data center, on a large scale, it's absolutely crucial that we've got pathways for air to travel. So that we can take warm air exhaust and feed it away from equipment, often out of the facility, and then, of course, have cool air fed into the facility from the outside and maybe through air-conditioning units that are filtered to equipment intake fans.

The next thing that we should consider is the number of equipment racks that would exist within a data center. It's often a very large number because pretty much everything these days, every physical computing device, is an appliance that can be rack mounted. Whether it's a hypervisor server that's used to host virtual machines running in the Azure cloud environment. Whether it's storage arrays that Azure customers enjoy when it comes to provisioning cloud storage. Whether it's physical routers and switches to provide network connectivity. UPSs, UPSs, uninterruptible power supplies, are used for short-term battery power for a device to shut down gracefully when it detects that the AC power from the power grid is no longer there. For longer-term power supplies, we looked at things like power generators that might run, for instance, off of diesel fuel.

At the physical security level, we have to consider things like fencing around the perimeter of an Azure data center. Along with both interior and exterior alarm systems, often in the form of motion detection sensors. And then, of course, physical guards on premises to check badges. Mantrap doors work in such a way that after access to an outer door is granted and the door opens there's an area within the door that the person must wait before they can enter a second inner door. The outer door has to close first. And often these doors are locked, of course. And they are controlled, or access is granted, through a proximity card. And all entry and exit points in the facility are logged centrally.

Microsoft performs thorough background checks on all employees. Especially those that work in Microsoft Azure data centers. Within the data center, specific rooms that might contain a specific type of equipment, such as storage arrays, might be in a locked area that requires additional access beyond just gaining access to the facility itself. In the same way, we can also have locked equipment racks so that in order to gain access physically to a device, whether it is a rack-mount server or a router or a storage array, access must be granted to the rack itself. We have to physically be able to open the rack before we can even get our hands on the equipment.
So all of these things together provide a secure physical environment for an Azure data center.


Azure Regions
Microsoft Azure regions are an important concept to understand. Whether you're managing Azure at the command line, or whether you're doing it using GUI tools like the Azure portal. And in some cases you'll see references to, not an Azure region, but rather a location. Either way, it's the same thing.
An Azure region is geographical in nature. We are talking about a physical region whereby Azure resources can be deployed. And when you actually deploy new resources like a virtual machine, let's say, in Azure, you need to specify the location or region. Currently, Azure has a presence within 140 countries, and that is organized into 54 regions. But bear in mind that while these numbers are current, they're always changing. Microsoft is always looking at expanding Azure with more regions in additional countries.
Microsoft Azure also supports some special Azure government cloud options, and those specific regions are not disclosed anywhere. Unlike standard Azure cloud regions like East US and Canada Central, are made available.
Pictured on the screen, we get a sense of what an Azure region really is. We can also see a bit of a hierarchy. So you can think here of a region as being interconnected over the Internet by the wide area network link. So on the left, we've got Region 1. Let's say that's East US. Then we've got Region 2. Now, Region 1 and Region 2 are my labels. In Azure, they would actually be named East US and, in this case, Region 2 is Central India. So they can be very far apart from one another. And you can deploy Azure resources into disparate regions like this. And you might do that for availability in case there is some kind of a regional disaster. Although in this case we're talking about pretty much opposite sides of the planet, so it's an extreme example.
What we see within each region is a set of data centers, and we'll talk about availability zones shortly. But essentially we've got very high speed network links within a region compared to between regions.
Availability zones, or otherwise called AZs, exist within a Microsoft Azure region. And often, you'll find that most regions have three availability zones, although in some cases, you won't see that. This means that we've got one or more data centers. So what we're really saying is that there is not a one-to-one correlation between an Azure availability zone mapping to one data center. It's not always that simple. You could have an availability zone that consists of, let's say, three data centers.
Then we have to think about Azure Service Availability and how it relates to regions. The first thing we have to bear in mind is Azure Services, so the cloud stuff that we as customers want to use, varies. It varies in its availability from one region to the next. So as an example, if we want to use the Azure search feature, when we configure that and deploy it, we won't be able to specify a location or region of Canada East, at least not currently. And again this is always in flux. Another example would be the deployment of G-Series VMs, virtual machines, high-end virtual machines. This specific series or type of VM is not available in Central US.
Now G-Series virtual machines might be important to you if you need to accommodate very large database workloads and you need as much CPU, memory, and processing power that you can get. So in some cases this could be very important, but we do need to understand that when we go to manage and deploy resources, they will vary in their availability, in some cases from one region to another.


Azure Availability Zones
  - If we had to sum up Azure Availability Zones in one word, we would simply use the word availability.

Pictured on the screen, we have two availability zones, or AZs. One on the left, AZ 1, and another on the right, AZ 2. On the left with AZ 1, notice we have a picture of a single data center. So in other words, an availability zone doesn't have to be, but it can equate to a single Azure data center. But on the right, we've got three data centers. So what we're seeing here then is that an availability zone can consist of more than just one data center. So what we're talking about using this for is to spread out services to increase availability.

Now, how is that? Well, we might replicate data between availability zones, so that if there's some kind of a catastrophe or a failure in one availability zone, the data is still available elsewhere. And it doesn't have just to be data, it could be an entire application ecosystem that we've duplicated in another AZ.

With Azure Availability Zones, we get the benefit of high availability of IT systems and data. And we know that an Azure Availability Zone could consist of one or more data centers. But then we've got the notion of fault domains. The purpose of a fault domain is essentially to spread out our deployed services like virtual machines that we might create in Azure. Spread them out if we've got a cluster of them across multiple physical data center racks. Where each rack has its own network switch, at least one, its own power source, its own hypervisor, and so on. And that way if there's some kind of an unanticipated failure within an Azure data center in a rack. So whether it's power-related, network-related, or hypervisor-related, at least we will still have some of our virtual machines that were deployed to another fault domain. And so when you start deploying resources, this happens automatically.

Then we've got the notion of an update domain. So an update domain is a little bit different here because instead of an unpredictable or unanticipated failure, we have a planned maintenance type of downage of something like a hypervisor server. Maybe Microsoft needs to apply configuration changes or updates. So, instead of bringing down a whole bunch of physical hypervisor servers in an Azure data center simultaneously, one would be brought down, its configuration changes and or updates will be applied, and then once that's back up and running then the next server would get the same treatment where it would be perhaps brought down or reconfigured, updates are applied, that type of thing.

And the whole purpose here is that when updates need to be applied, we don't end up with the service outage. It minimizes what is affected. And we're not talking here about how we, as Azure customers, might deploy virtual machines manually ourselves, because we are responsible for updating them. So this is more at the underlying Azure data center level.

Pictured on the screen, we've got an example of deploying a virtual machine using the Azure portal, the web interface. [Video description begins] A section of the Azure web interface displays, specifically the INSTANCE DETAILS section. There is a Virtual machine name field, set to vm1. There are Region, Availability options, and Availability zone drop-down lists. The Availability options is set to Availability zone. Availability zone has no value, but a note below the drop-down list indicates that there are no availability zones available for the selected location. There is a hyperlink to View locations that support availability zones. [Video description ends]

Notice here, the selected region is Canada East. And when we take a look at availability zones within that region, it says that there are no availability zones available. Now that depends on the region. So some regions are much larger than others and will have numerous Availability Zones within them. So depending on which region you work with, as in this case when deploying a virtual machine, you can expect, in some cases, to not have the choice of Availability Zone. It simply depends on the region that is selected.

Azure Resource Manager

[Video description begins] Topic title: Azure Resource Manager. Your host for this session is Dan Lachance. [Video description ends]

Azure Resource Manager, otherwise called ARM for short, is often used to manage related Azure resources together as a group. Although you don't have to do that. You can use ARM, for example, to deploy or manage a single virtual machine. But it really shines when you're talking about something like a web application which might consist of a front end load balancer, a public IP address, numerous virtual machines to host the website, or the web front end, and then even some back end databases. Which also includes storage. So all of those things together, all of those different Azure resources, can be managed as a single unit through an Azure Resource Manager resource group.

So we use ARM to deploy resources, so to create new things like virtual machines, storage accounts, virtual networks, databases, and so on. But we can also use ARM to manage existing resources, maybe to change a configuration or to remove a deployed resource.

So what is an Azure resource? Well, it's pretty much anything that you can deploy in the Azure Cloud, including things like a web application that's hosted in Azure. Maybe a Cosmos DB NoSQL compliant database or an Azure SQL database. Or a storage account, because you want to store files such as Office productivity files in the Cloud. Also virtual machines that we deploy, these are all resources. So if we've got a single application, it might consist of all of these items. And so we could organize these into what's called a resource group.

You'll notice that when you deploy and manage Azure resources, whether it's through command line tools or through the Azure portal, the web GUI, you'll always have to deal with the resource group. For example, if you're deploying a virtual machine, one of the things you have to do is either deploy it into an existing resource group or define a new resource group.

Here we see an example of an ARM Template. When we work with ARM Template files, they use JSON file format, J-S-O-N. It looks kind of like JavaScript, but it's not JavaScript, it's JSON. So here we see parameters. So we can set a default parameter, in this case for a virtual machine name, where the default value, if not specified otherwise, would be MyVM. [Video description begins] The presenter highlights the following code: "parameters"l {"virtualMachines_vm1_name": {"defaultValue": "MyVM", "type": "String" },. [Video description ends]

We can see the location, or region, into which this virtual machine will be deployed, in this case canadaeast. [Video description begins] He highlights the code: "location": "canadaeast",. [Video description ends] We can see the virtual machine size listed below, which determines the underlying horsepower, like virtual CPUs, the amount of RAM. Whether it uses solid state drives and so on. [Video description begins] He highlights the code: "properties": {"hardwareProfile": { "vmsize": "Standard_B1s". [Video description ends]

In the Azure portal, when we deploy a resource, in this example, if we've deployed a virtual machine. So we've created a new Azure virtual machine in the Azure Cloud. [Video description begins] He displays a section of the Azure web interface, which lists several settings. [Video description ends] When you get to the end of the screens, the Wizard in the GUI, you'll see that there's a link, as we see outlined here in the bottom right, to download a template for automation. [Video description begins] He highlights the link in the image. [Video description ends] So in other words, the Azure portal is essentially tracking all of your choices when you deploy your resource. And then you have the option to download a template, so that you could reuse that template to deploy more resources of that type. Now, of course, you might want to change things like the specific name of a virtual machine and so on. Or you could customize it and parameterize it as we were talking about previously.

Now you can also deploy ARM templates in numerous ways, such as through the Azure portal as seen here. [Video description begins] The presenter displays a page from the ARM Template Deployment Portal. The heading is Custom deployment. [Video description ends] When you create a template deployment in Azure portal, this is what you see. You could build your own template in the editor, there's a built in editor online, where you can also import a template. [Video description begins] He points to the Build your own template in the editor link in the Learn about template deployment section. [Video description ends]

Remember, template is a file that uses JSON syntax. So you can build it in the cloud, if you already built it, you could import it into the cloud. And there's also a list here of common templates for creating things like Linux or Windows virtual machines or a web app. And you can even connect to templates over the Internet, such as through GitHub.

In this example, we're talking about the Azure CLI, the command line interface, which you can download and install so that you have command line management of Azure. So here we're deploying an ARM template through the CLI. In the first command, az group create, we are creating a resource group. The resource group is called rg1 and it's been deployed on a location, or a region, called Canada central. [Video description begins] The complete command is: az group create --name rg1 --location "Canada central". [Video description ends]

Next thing we see is a command that says, az group deployment create. We are creating a deployment. We want to deploy or create resources in Azure. In this case using a JSON formatted template file. So we're giving our deployment a name. Here I'm calling it, deployment1, referencing my resource group rg1. And then I'm specifying a local template file, in this case, mytemplate.json. But you could also specify a location elsewhere over the Internet. Again, as in the case of connecting to an ARM template, that you might want to deploy from GitHub. And then you might specify parameters. In this case, such as a parameter for MyVM. [Video description begins] The complete command is: az group deployment create \ --name deployment1 \ --resource-group rg1 \ --template-file mytemplates.json \ --parameters "MyVM". [Video description ends]

We can also deploy ARM templates using PowerShell. In the first line we're creating a variable called $rg that contains the text rg1. That's the name of the resource group. And we're setting the location variable to Canada east. [Video description begins] The presenter highlights two commands. The first is: $rg = "rg1". The second command is: $location = "Canada east". [Video description ends]

Then we're using the New-AzResourceGroup cmdlet to build a resource group. [Video description begins] He highlights the command: New-AzResourceGroup -Name $rg -Location $location. [Video description ends] And then we're building a New-AzResourceGroupDeployment. So we're referencing our resource group name and a local TemplateFile. In this case on the root of drive C called mytemplate.json. [Video description begins] He highlights the command: New-AzResourceGroupDeployment -ResourceGroupName $rg - TemplateFile c:\mytemplate.json. [Video description ends] But just like with the Azure portal, with the Azure CLI, we don't have to reference a local template file. We can actually point to one over the Internet, such as stored in a GitHub repository.


Azure Resource Groups
The Azure Resource Manager, or ARM, method of managing Azure resources allows us to group resources together. So for example if we've got a web application that consists of a front end load balancer, and a couple of load balanced web servers and backend databases. All of those items together could be grouped into a single resource group to facilitate management. And we can even build resource group templates or ARM templates that allow us to deploy and manage these resources together.

[Video description begins] The presenter switches to an instance of the Azure portal in a Web browser. The URL is https://portalazure.com/#home. The Home page displays. There is a toolbar, which includes a search bar, and a navigation pane with several options, including Dashboard, Favorites, and App Services. There is also a content pane. [Video description ends]

So here in the Azure portal, we can see that on the left we've got a Resource groups view. When I click it, any resource groups that I've already defined will be shown. [Video description begins] He clicks Resource groups in the navigation pane. The Resource groups page opens in the content pane. There are Add, Edit columns, and Refresh buttons. There is a Filter by name field and All locations, All tags, and No grouping drop-down lists. The resource group table headings are NAME, SUBSCRIPTION, and LOCATION. A message indicates that there are no resource groups to display. There is also a Create resource group button. [Video description ends] Currently I don't have any, but we can add a resource group at this point by clicking the Add button. [Video description begins] He points to the Add button on the toolbar. [Video description ends]

Now aside from doing that, if I were, for example, to deploy a new virtual machine. So let's say I click on Virtual machines on the left [Video description begins] He clicks Virtual machines in the navigation pane. The Virtual machines page opens in the content pane. There is a toolbar, filter options, and a table with no data. A message indicates that there are no virtual machines to display. [Video description ends] and then click the Add button in the Virtual machines view, you'll also notice that as you deploy resources here in Azure, [Video description begins] He clicks Add on the toolbar of the Virtual machines page. The Create a virtual machine wizard launches. The Basics tabbed page of the wizard displays. [Video description ends] you also get the chance to select an existing resource group, but you can also create a new one here while you're deploying this resource. [Video description begins] He points to the Resource group drop-down list and then to the Create new hyperlink. [Video description ends]

So what I'm going to do then is close out of this Create a virtual machine window and I'm going to go back to the Resource groups view over on the left, [Video description begins] He closes the wizard and clicks Resource groups in the navigation pane. [Video description ends] and I'm going to click Add. So we can have one here. [Video description begins] He clicks Add on the toolbar of the Resource groups page. The Create a resource group wizard launches. The Basics tabbed page displays. [Video description ends]

First thing I have to do is tie it to a subscription. So I've only got one subscription that's listed here, my pay as you go subscription. [Video description begins] In the PROJECT DETAILS section, he points to the Subscription drop-down list. [Video description ends] And then I need the name of a resource group. So I'm going to call my first resource group Rg1. Now if this were a resource group that would be used to manage the Azure resources to support a web application, I would have a more meaningful name. Perhaps the name of the web application followed by Rg. It's important in Azure that you have a standard when it comes to naming conventions for items. So in this case, I'm just going to stick with Rg1 for resource group one. [Video description begins] In the Resource group field, he types "Rg1". [Video description ends]

Then I have to determine into which region I want to create this resource. Currently it's set to Central US. If I open the drop-down list, I can choose whichever one makes the most sense. [Video description begins] In the RESOURCE DETAILS section, he expands the Region drop-down list. Several regions are listed including Australia East, Brazil South, and Canada East. [Video description ends] Because I'm on the East Coast of Canada, I'm going to choose Canada East. And then I'm going to click Next. [Video description begins] The Tags tabbed page of the wizard opens. There is a table with three columns: NAME, VALUE, and RESOURCE. [Video description ends]

Here we can build a tag or we can add multiple tags, which is really just metadata. You can do this for more than just resource groups in Azure. You might, for example, do it for storage accounts or virtual machines so you could tag it and assign it to a specific department or a billing cost center or something like that. So for here I'm going to create a new tag called Project. And let's say that this is going to be for a project that we are currently working on called ProjectA. [Video description begins] In the first data row of the table, he types "Project" in the NAME field and "ProjectA" in the VALUE field. The RESOURCE value is automatically set to Resource group. [Video description ends] So that's what I'm going to tag this resource group with. You don't have to tag.

Now the next things I'll do is click the Review + Create button down at the bottom. [Video description begins] The Review + Create tabbed page of the wizard displays. [Video description ends] And here we have a little summary of what we are configuring, which is a resource group, which will be deployed in the Canada East region. [Video description begins] The SUMMARY list also displays the Subscription value of Pay-As-You-Go. [Video description ends] And then I'll go ahead and click Create. [Video description begins] The wizard closes and a message indicates briefly that the resource group was created. [Video description ends]

After a moment if we refresh the Resource groups view, we'll see clearly that we've got our resource group, Rg1, listed here. [Video description begins] On the Resource groups page, he clicks Refresh. The Resource group Rg1 is listed. [Video description ends] So I could click on it to select it to open up its properties blade. And we kind of have a navigator here on the left related to the property categories for the resource group called Rg1. [Video description begins] He clicks Rg1. It opens its own page. [Video description ends]

And as we scroll down for example, we can see we've got tags and [Video description begins] He clicks Tags in the navigation pane. The Tags page opens. [Video description ends] we can see that we've got a Project tag with the value of ProjectA. [Video description begins] He points to the listed tags. [Video description ends] However, I'm going to go ahead and close that property sheet for that resource group. [Video description begins] He returns to the Resource groups main page. [Video description ends]

And if I were once again to click on Virtual machines on the left [Video description begins] He clicks Virtual machines in the navigation pane. The Virtual machines page opens. [Video description ends] and then click the Add button in the Virtual machines view. [Video description begins] He clicks Add on the toolbar. The Create a virtual machine wizard opens. The Basics tabbed page displays. [Video description ends] Notice that when we go to deploy our virtual machine we now have our Rg1 resource group available from the drop-down list. Again, we could create a new one, but we have a couple of ways that we can work with it here in the Azure Portal.


Azure Portal
The Microsoft Azure portal is a GUI tool, a graphical user interface type of tool, that comes in the form of a web application. This facilitates managing Azure resources. So it's a GUI management tool that also supports RBAC self-provisioning. RBAC stands for role based access control. We'll talk about that a lot more later, but for now what it means is that we could give other administrators limited access to manage specific resources in Azure instead of everything.

The Azure portal has a lot of functionality. And part of this includes, of course, creating and managing Azure resources. So for example, you can very quickly, using the portal, deploy a new Linux or Windows virtual machine, or a storage account to store files in the cloud, or even quickly deploy in Azure SQL database. You don't have to know any commands to type in, it's all done visually.

We can also work with ARM templates, Azure resource manager templates. ARM templates use the JSON file syntax and they allow us to create and manage Azure resources of any type. So we can use an ARM template to create resources like storage accounts in virtual machines. We can also use the portal to edit templates. We can also import existing templates into the portal and maybe tweet them. And we can also even download ARM templates. Because whenever you deploy your resource in the Azure portal, it's watching what you're doing and tracking in the background what that comprises of in terms of JSON commands. And so you can then download an ARM template based on what you've deployed in the GUI.

In the Azure portal, we can also tag resources. Tagging means you're adding extra metadata, such as assigning a virtual machine and a storage account to a specific project, or maybe to a specific department within a large organization. The benefit of tagging is that you can then search based on the tag. So for instance, show me all deployed Azure resources related to project A, or I would like to see all deployed Azure resources for billing purposes related to the human resources department.

We can also search for resources within the Azure portal. So instead of rummaging around through potentially dozens, hundreds, even thousands of deployed resources in a larger subscription, we could simply search for what we're looking for, such as a specific virtual machine that we want to manage.

There's also this notion of the Azure Cloud Shell. When we talk about the Azure Cloud Shell, we're talking about either issuing commands using a Linux-style bash shell or using PowerShell cmdlets. Now why would we want to do this? Well, we're talking about command line management of Azure resources. So instead of having to download, and install, and configure, and authenticate to some command line tool like the Azure CLI or Azure PowerShell, which you can do, and we'll talk about later, instead you can simply launch the Azure Cloud Shell within the portal, and you're already authenticated.

So the PowerShell also supports a number of built-in languages. If you want to work with Node.js, or Java, or Python, it's available. It also support Azure file share storage. So if you need to store something in a file persistently between Azure Cloud Shell sessions, well, you can do it. So Azure Cloud Shell is yet another benefit of working through the Azure portal.


Navigate the Azure Portal
The Azure portal is a web-based GUI management tool for Azure resources. I've popped in the URL of portal.azure.com and it, of course, has changed it and it wants me to pick an account to login with. [Video description begins] The Microsoft login page displays in the Web browser. The Pick an account dialog box displays. There is one user account and an option to use another account. [Video description ends]

So I'm going to go ahead and choose my Azure account, at which point it wants me to specify the password for that account. [Video description begins] The presenter clicks stefan.samms at outlook.com. The Enter password dialog box opens. [Video description ends] So I'm going to go ahead and put the password in and choose Sign in. And after a moment I will be brought to the main home screen in the Azure portal, where we can see that we've got a quick way to quickly jump into things like virtual machines. [Video description begins] He enters the passwords and clicks Sign in. The Azure portal opens to the Home page. The URL is https://portalazure.com/#home. There is a toolbar with a search bar, along with a navigation pane and a content pane that displays several apps. [Video description ends]

If I click that it takes me into the Virtual machines viewer. [Video description begins] He clicks Virtual machines in the content pane. The Virtual machines page opens. There is a toolbar, fields for filtering, and a table of virtual machines arranged in columns that include NAME, TYPE, and STATUS. [Video description ends] I can see I've got two of them that currently have a status of Running. [Video description begins] He points to the virtual machines in the table. [Video description ends]

If I go back to Home I can also view Storage accounts and do the same type of thing. [Video description begins] He returns to the Home page, then clicks Storage accounts. The Storage accounts page opens. There is a toolbar, fields for filtering, and a table of virtual machines arranged in columns that include NAME, TYPE, and KIND. [Video description ends]

Of course, we've got a left-hand navigator, so if we want to view SQL databases, [Video description begins] He clicks SQL databases in the navigation pane. The SQL databases page opens. It has a similar layout to the other pages. [Video description ends] or if we want to view Azure Active Directory, [Video description begins] He clicks Azure Active Directory in the navigation pane. The Default Directory - Overview page opens. This page has its own navigation and content panes. [Video description ends] and perhaps then view users or groups that are defined, we can do that. [Video description begins] He clicks Users in the navigation pane. The Users - All users page opens. [Video description ends]

Now on the topic of Azure Active Directory, which serves as a storage location for additional users and groups, that type of thing, we can switch between multiple Azure Active Directory instances if we have them. In the upper right where my user account name is, it says DEFAULT DIRECTORY, but if I click on that I can switch to another Azure Active Directory instance. [Video description begins] He clicks his user name on the Azure portal toolbar. The user details display along with a Switch directory link. [Video description ends] It's kind of like having multiple Active Directory domains in a larger network. [Video description begins] He clicks Switch directory. The Directory + subscription pane displays. [Video description ends]

You might do that for different business units, one might be for testing and development, while the other is for production. [Video description begins] A default directory is specified as well as links to favorite directories. [Video description ends] Either way, when I click another existing Azure Active Directory instance, it switches me to it in the portal. [Video description begins] He clicks quick24x7.com in the Favorites list. A new instance of the Azure portal opens on the Home page. [Video description ends] So for example, if I were to go to Azure Active Directory now and click on Users, I have a different listing of users that I did previously, because now I'm in a different named Azure Active Directory instance. [Video description begins] He switches to the Azure Active Directory page and points out the differences from the previous time this page was accessed. [Video description ends]

If I click on the Virtual machines view, notice here that we don't see anything. [Video description begins] He opens the Virtual machines page from the navigation pane. No virtual machines are listed. [Video description ends] Well, its because we are tied to a different Azure Active Directory instance. So if I flip back to the default directory, so I'll switch back to the default directory where we began working. [Video description begins] He accesses the Directory + subscription pane again and clicks Default Directory. The Azure portal reloads to the Home page. [Video description ends] And again, if I go back and look at Virtual machines, there they are. [Video description begins] He clicks Virtual machines in the navigation pane. Two virtual machines are listed. [Video description ends]

So we have a couple of things that are important here in terms of navigating through the Azure portal. Now in the left-hand navigator, I can hide the text labels once I begin getting used to what these icons mean. [Video description begins] He collapses the navigation pane so that the icon labels are not displayed. Tooltips display as he moves the pointer over each icon. [Video description ends] For example, the plus sign naturally means I want to create some kind of an Azure resource, [Video description begins] He clicks the plus icon. The New page opens. The available categories include Networking, Storage , and Web. [Video description ends] and we've got a number of categories here. So if I want databases, I can see Databases, and of course, I can always search for something. So if I'm interested in Ubuntu Linux, I could search for ubuntu. [Video description begins] He clicks in the Search field and types "ubuntu". [Video description ends]

Now we also have couple of buttons across the top that we should be aware of. [Video description begins] He returns to the Azure portal Home page. [Video description ends] The first here looks like a command prompt icon, and when I hover it, it says Cloud Shell. Cloud Shell allows me to run either CLI commands or PowerShell commands right here through the Azure portal, without having to download and install the Azure CLI or Azure PowerShell files. [Video description begins] He clicks Cloud Shell on the toolbar. [Video description ends] Now because I've never done it, it says you don't have any storage for this, so if you want to have any kind of persistence, if you want to save any files between sessions, you need this set up. [Video description begins] He points to the dialog box that displays. The Subscription field has a value of Pay-As-You-Go. [Video description ends]

Well, it wants to tie it to my subscription, I'm just going to go ahead and click Create storage, so we can see how this works. And notice here we've now got some storage that was created for Azure Cloud Shell, and this says, it's initializing our account for use with Cloud Shell. [Video description begins] He clicks Create. The PowerShell window opens. [Video description ends] And after a moment I'm in an Azure Cloud Shell prompt. [Video description begins] The prompt is PS Azure :\>. [Video description ends] So for example, if I simply type az, which we normally do for the Azure CLI, just like we would if we downloaded and installed the Azure CLI on our on-premises station. The difference is we're already authenticated here, and we've got all of the options available for that. [Video description begins] He runs the command az. The output is a list of Azure options and their descriptions. [Video description ends]

Now in the future, so let's go ahead and close the Azure Cloud Shell. [Video description begins] He returns to the Azure portal Home page. [Video description ends] In the future when we run the Azure Cloud Shell, it's not going to have to set up our storage or anything like that, because we've already done it the first time. So when I click on it, [Video description begins] He clicks PowerShell on the toolbar and the PowerShell window opens. [Video description ends] we can then determine whether we want to run PowerShell, or whether we want to go into a more Linuxy environment through Bash. [Video description begins] In the PowerShell toolbar, he clicks the Select environment drop-down list, that's set to PowerShell, and selects Bash. A message displays indicating that a switch to Bash will create a new session and PowerShell running processes will go to the background. [Video description ends] And if I click Confirm, it will switch over and do just that. [Video description begins] He clicks Confirm. A Bash session starts up. [Video description ends]

So we can either work in a Bash type of environment if we're used to Unix and Linux, or we can work in a PowerShell more Windows-based type of environment. And we can switch back and forth as you can see just by clicking that little icon. [Video description begins] He closes PowerShell and returns to the Azure Home page. [Video description ends]

Now the other thing to bear in mind here [Video description begins] He clicks Directory + Subscription on the toolbar. The Directory + subscription pane opens. [Video description ends] is that we can also filter based on our subscriptions and our directories. [Video description begins] In the Switch directory section, he expands the Set your default directory drop-down list. The options include Sign in to your last visited directory, Default Directory, and quick24x7.com. [Video description ends] So we can see that we've got a couple of Azure Active Directory instances. So we can determine how that appears here in the Azure portal. [Video description begins] He closes the pane and returns to the Azure Home page. [Video description ends]

The alarm bell is for any notifications in this session, such as the creation or the deletion of an Azure resource. [Video description begins] He points to the Notification icon on the toolbar. [Video description ends] We've also got some graphical configuration settings for the portal, [Video description begins] He clicks Settings on the toolbar. The Settings pane opens. Settings that can be configured include the default view, themes, and toast notifications. [Video description ends] and some timeout items, such as logging out when there's a period of time for inactivity. And of course, we can click on our account name over here and sign out, or as we know, switch to a different Azure Active Directory instance.

Now when you're looking at a view, so for example, let's say that we go to the Virtual machines view, [Video description begins] He opens the Virtual machines page from the navigation pane. [Video description ends] bear in mind that you can also edit the columns here at the top. And when you do that, you can determine what you want to see. [Video description begins] He clicks Edit columns on the toolbar. The Edit columns pane opens. There is an Available columns list and a Selected columns list with back and forward arrows between them. [Video description ends] The selected volumes are listed on the right, what's available to you is listed on the left. And if I'm interested in Tags, let's say, because I've tagged my resources, I can select that column and move it over to the Selected columns area on the right. [Video description begins] He clicks Tags in the Available columns and clicks the forward arrow. Tags is added to the Selected columns list. [Video description ends]

When I apply it, then the tags will be here. [Video description begins] He closes the pane and points to the virtual machines table. TAGS has been inserted as the last column of the table. [Video description ends] And from here I have an easy way to edit, to make a change to any tags, here we can see it's ProjectB, and so on. [Video description begins] He clicks the pencil icon in the TAGS column and the Tags pane opens. He closes the Tags pane. [Video description ends]

Also, notice the filtering that is available here. So if I only want to see virtual machines that have Linux in the name, then I can just type in Linux and it's only showing me that. [Video description begins] In the filters section. he types "linux" in the Filter by name field. One result is returned. [Video description ends] I can also filter by other things like tagging. So if I open up tagging here maybe I only want to see stuff related to ProjectA. [Video description begins] He expands the Tags filter. There is a Filter tags field, All or Any radio buttons, and tag names with checkboxes. He selects the ProjectA checkbox. [Video description ends] And so when I do that and close the drop-down, it filters it and shows me only that. [Video description begins] One result is returned. [Video description ends] So I can see here that if I hover over the tags item for that virtual machine, indeed it is set to ProjectA.

So it's important to spend a bit of time, then, to get used to the Azure portal, because if you're going to be working in the GUI, this is going to be your home as it relates to Azure resource management.


Azure CLI
The Microsoft Azure CLI is a command line interface tool. It lets you manage Microsoft Azure resources from a command line environment.
Now you could also launch this through the Azure Cloud Shell. In other words, when you're authenticated to the Azure portal, the GUI, you can launch Azure Cloud Shell and gain access to the CLI. Or you could download and install it on one of your machines on-premises. And the machine on-premises can be running Windows, it can be running Linux or it can be running the MacOS. And within any of these operating systems you can then issue Azure CLI commands if you know the syntax.

Now the syntax, once it's installed, begins with az followed by a hierarchy or a subset of commands. So for example one of the first things you should know is how to retrieve the version of the Azure CLI. Because if you are looking at an example on the Internet on how to do something in the CLI and you've got a CLI installation that's a year or two old, what you see on the Internet might be newer and it might not be available in your installed version. So we can run az --version, so we know what version of the CLI we're running.

We can learn about the syntax with az --help, where we might notice that there's a vm command. So then we can get further help on that, because it is a hierarchy, by typing in az vm --help. Then we're going to get a help screen showing us what we can do with Azure virtual machines through the CLI.

Now an important command, of course, is az login. This allows you to authenticate to your Azure account so you can actually start managing your subscription and the resources within it. When you issue the az login command you're going to see a screen that looks like this, where there's a note about having launched a web browser where you'll have to sign into your Azure account if you're not already signed in. Then after you sign in, you'll see the clear text listed down below here beginning with cloudName. It returns information about your specific Azure account. [Video description begins] The account details are as follows: [{"cloudName": "AzureCloud", "id": "048...2109", "isDefault": true, "name": "Pay-As-You-Go", "state": "Enabled", "tenantID": "258e...bf7c", "user": { "name": "hotmail.com", "type": "user"}}]. [Video description ends]

Now at this point, you will be authenticated and you can actually start to do things like deploy virtual machines either manually or through an ARM template, or work with storage accounts or databases, websites, work with user accounts, and groups and permissions in Azure. Basically, the sky is the limit but you'll be able to find out about the syntax by using az --help.


Install and Configure the Azure CLI
  - The Azure CLI, or command line interface, allows us to manage Azure resources at the command line level. Now, we can run this using Azure Cloud Shell which is accessible through the Azure portal. But in this example, we're going to talk about how you can download and then run the Azure CLI on any station of your choosing on-premises. [Video description begins] The presenter switches to the Microsoft Azure - Install the Azure CLI page in the Web browser. [Video description ends]
  - So here in my web browser, I've gone to the documentation related to installing the Azure CLI. And we can see here there are instructions detailing how this is done for the Windows platform, the macOS, and Linux variants. We're going to be doing this in Windows. So I'm going to choose Install on Windows. [Video description begins] He clicks the Install on Windows link. The Install Azure CLI on Windows page displays. [Video description ends] And I'm going to choose Download the MSI installer. [Video description begins] He clicks the Download the MSI Installer button. [Video description ends] And after a moment we can see that the Azure CLI is in the midst of downloading.

Once the CLI is downloaded we can go ahead and run the installation. [Video description begins] He right-clicks the install file on the download bar and selects Open. The Microsoft Azure CLI Setup wizard launches. [Video description ends] So I'm going to go ahead and accept the terms in the license agreement and I'm going to choose Install. And after a moment we'll click Finish to complete the installation. [Video description begins] He accepts the licence agreement terms and finishes the installation. [Video description ends]

Now on that same station, I can go to a command prompt where I can begin by typing az. [Video description begins] A command prompt window opens. The prompt is C:\>. He enters the command: az. [Video description ends] Now what's happening here is we're testing that the Azure CLI has been installed. This is the prefix that starts all of the other hierarchical commands that follow az. [Video description begins] The output is a list of commands with their associated descriptions. [Video description ends]

So looks like we have something, which is good, it's recognized. If I type az --version, then we'll get some versioning information related to Azure CLI components. And it's always important to make sure that we know exactly which version of the CLI that we are using, which we see here is 2.0.59. [Video description begins] He runs the command: az --version. The output is a list of components with their associated version numbers. [Video description ends] Now the reason that's important is to make sure that if we're looking at documentation on how to do something from the CLI that it will work in our version of it.

If I were to type az --help, then from here I would see some next level commands that would be available after az, such as vm, or storage, or sql. [Video description begins] He runs the command: az --help. The output is a list of commands with their associated descriptions. [Video description ends] Well, that means then it's like I type az vm --help to get the next level commands after az vm. [Video description begins] The output is a list of commands with descriptions, related to VMs. [Video description ends] So for example, we see here create. And we can even take that a step further, az vm create --help, to even learn more about how to use this command line syntax. [Video description begins] He runs the command: az vm create --help. The output is a list of example syntax for using the create command. [Video description ends] Now, we have examples of how to do it. So to create a Debian virtual machine, for example, so a Linux variant.

Now at the same time, it's also important that we know how to authenticate to our account in Azure, of course, so that we can manage resources. And we can do that with az login command. [Video description begins] He runs the command: az login. [Video description ends] That's going to open up a web browser page like we see here where we can sign in to our Azure account if we're not already signed in. So I'm going to go ahead and click next to continue signing in. And then I'll go ahead and specify the password and I'll click Sign in. It then says that we have logged into Microsoft Azure, so it will redirect me to some CLI documentation, and I can go back to the command prompt and continue working. So here it is, it's redirected us automatically. [Video description begins] The Azure documentation displays in the Web browser. [Video description ends]

Let's flip back to the command prompt for a second. [Video description begins] He switches to the command prompt. [Video description ends] Back here we can see a note about how it launched a browser for us to login. And after successfully authenticating we can see that we are connected to our AzureCloud subscription. [Video description begins] He points to the following account details: [{"cloudName": "AzureCloud", "id": "048...2109", "isDefault": true, "name": "Pay-As-You-Go", "state": "Enabled", "tenantID": "258e...bf7c", "user": { "name": "hotmail.com", "type": "user"}}]. [Video description ends]

And so now that we are connected to our Azure account, we could issue commands like az vm list to list out virtual machine information for what we've got in our current cloud subscription. We can see it's all been returned here. So we if we kind of scroll back up, we can see that the first returned item would be our first virtual machine, and of course, a lot of details related to it. And as we go back up we can see things like the specific names of things. So, for example, as we go down here we can see that we've got the location or region, canadaeast, for our virtual machine named eastlinuxvm1. And as we start scrolling down, then we have all the further details for that virtual machine, including the admin user name, the computer name, and so on.


Azure Cloud Shell CLI
In this demonstration, I'll use the Azure Cloud Shell CLI to deploy a Linux virtual machine. [Video description begins] The presenter switches to an instance of the Microsoft Azure portal in the Web browser. The home page is open. [Video description ends]

I've already signed into the Azure portal. So up in the bar at the top, I'm going to click the command prompt icon that will let me launch the Cloud Shell. Once the Cloud Shell loads, I need to ensure that I'm using either Bash or PowerShell. [Video description begins] He clicks Cloud Shell on the toolbar. The PowerShell window opens, but the environment is set to Bash. [Video description ends] In this case, I'm using a Bash environment which is very familiar for Unix and Linux people. And I'm going to stick with this.

If I were to type az --version, I can see the version of the Azure CLI that is available here. [Video description begins] The output is a list of the Azure components and their version numbers. [Video description ends] And I can kind of scroll up and get the overall version at the very top, 2.0.59 is what it says here. [Video description begins] He points to the azure-cli version. [Video description ends]

So now what I want to do is clear the screen with the clear command and deploy an Azure virtual machine. To do that, I'll use the az vm create command. I'm going to use -n, and the name of this virtual machine will be eastlinuxvm2. And I'm going to assign it to a resource group with -g called rg1. I'm going to use --image, and I'm going to base this on Centos Linux. I'm going to generate some SSH keys, so --generate-ssh-keys, where the public one will be stored inside of the newly created virtual machine. And the private part of the key pair will be stored here in the Bash shell environment. Or, if you're actually doing this from a Linux station on-premises with the CLI installed, the private key will be stored on that machine. And I'm going to create a user here using --admin-username called azureuser.

We're going to go ahead and press Enter to begin the creation here of this virtual machine using the Azure Cloud Shell. [Video description begins] He runs the command: az vm create -n eastlinuxvm2 -g rg1 --image Centos --generate-ssh-keys --admin-username azureuser. [Video description ends]

So now that our virtual machine is deployed, we can see the public IP address that it was assigned by default. [Video description begins] The output is: { " fqdns": "", "id": "/subscriptions...eastlinuxvm2", "location": "canadaeast", "macAddress": "00...98", "powerState": "VM running", "privateIpAddress": "10.1.1.7", "publicIpAddress": "52.235.37.149", "resourceGroup": "rg1", "zones": "" }. [Video description ends]

So at this point, what I'm going to do within the Cloud Shell is use the ssh command to SSH into our newly deployed virtual machine. So to do that, I'll type ssh. The account we created was azureuser, that's what we created in our command line up here above, and I'm going to use an @ symbol and specify the public IP address of the virtual machine as we see it listed up above. [Video description begins] He runs the command: ssh azureuser@52.235.37.149. [Video description ends]

And when I go ahead and press Enter, it asks if I want to trust the unique digital fingerprint [Video description begins] The output indicates that the authenticity of host 52.235.37.149 can't be established and requires confirmation to continue connecting. [Video description ends] because it's the first time we've connected. I'll go ahead and type in yes and press Enter. And after a moment, we're in.

We know by looking at the command prompt that we have successfully SSHed into that remote host in the cloud. [Video description begins] A warning message indicates 52.235.37.149 has been permanently added to the list of known hosts. The prompt changes to [azureuser@eastwestlinuxvm2 ~]$. [Video description ends] And from here, it's business as usual. Which means we can issue any standard commands that we would issue normally in Linux once connected to the host, such as ifconfig, where we can see the internal IP address, the private IP assigned for the subnet into which that Linux host was deployed. [Video description begins] He runs the command: ifconfig. There are two large blocks of output. The first is for eth0 and has values such as netmask, ether, and txpackets. [Video description ends]


Azure PowerShell
Micorsoft PowerShell has been around for quite a while. We're up to version 6 these days. Azure PowerShell focuses on how to use PowerShell commands or cmdlets to manage the Azure environment.

So PowerShell, then, is a command line interface tool. But it's not just for developers. Administrators use it to manage the file system on a Windows client or manage the DHCP service on a Windows Server. Even third-party vendors are into PowerShell such as, managing VMWare virtual machines through PowerShell or managing Amazon Web Services through PowerShell. But here, the focus is on managing the Azure environment through PowerShell. And doing stuff in the command line provides many benefits including automation and repeatability that otherwise might be somewhat cumbersome using the Azure portal or the Web GUI.

One way to get into Azure PowerShell is through Azure Cloud Shell. What this means is that we would first authenticate to Azure, using the Azure portal, the web GUI interface, from which we could then launch the Azure Cloud Shell where Azure PowerShell is available.

Now we can also download, install, and run Azure PowerShell on any of our on-premises stations as well. Whether we are running the Windows, Linux, or MacOS operating systems. Now we have to bear in mind that if we're installing Azure PowerShell on the Windows platform, one form of the installer is an MSI file, a Microsoft installer file. Or we could download a ZIP file. We can also do an installation directly from within PowerShell itself. Such as Install-Module -Name, and you notice that a lot of the Microsoft Azure modules have an Az prefix. [Video description begins] The complete command is: Install-Module -Name Az. [Video description ends]

Depending on the distribution of Linux you're running, such as Ubuntu Linux, you can install components using apt-get install followed by the name of the package. And you'll need privileges to do this. A regular Linux user won't be able to do this. So we could do this, for instance, to install PowerShell on Linux in the first place, so we could get support to run Azure PowerShell cmdlets.

Pictured on the screen, we have some examples of how Azure PowerShell syntax works. As a matter of fact, it really stems back to how regular PowerShell works where we have PowerShell commands, otherwise called cmdlets, that take the form of verb dash noun. So, for example, Get is a verb, Command is a noun, separated by a dash, Get-Command. What this lets us do is retrieve a list of PowerShell cmdlets and specifically here, from specific modules where a module is really just a library or collection of PowerShell cmdlets.

So in the first command, we're really saying, show me PowerShell cmdlets related to working with Azure Compute, which means virtual machines. [Video description begins] The command is: Get-Command -Module Az.Compute. [Video description ends] Second command really is saying, show me PowerShell cmdlets related to working with Azure SQL. [Video description begins] The command is: Get-Command -Module Az.Sql. [Video description ends]

Then we've got another cmdlet where the prefix or the verb is different. It's not Get, which is retrieve really, but rather Set, to make a change. And what we are doing here is setting the Azure Context. Why would you want to set AzContext? Well, you might be working in an environment where you have multiple Azure subscriptions and so you can set the Azure Context to a particular subscription before you start working with it using Azure PowerShell cmdlets. [Video description begins] The command is: Set-AzContext. [Video description ends]

You can also get help using the Get-Help cmdlet. So if I know, for instance, there's a cmdlet called Connect-AzAccount, and I don't know how to use it but I want to figure it out, I could use Get-Help, give it the name of the cmdlet, in this case Connect-AzAccount, and if I even want detailed help, including syntax examples if available, I could use -detail at the end. [Video description begins] The command is: Get-Help Connect-AzAccount -detail. [Video description ends]

The Connect-AzAccount is a very important cmdlet because it allows you to authenticate to your Azure account. After which, of course, you can use PowerShell cmdlets to work with your Azure resources.


Install and Configure Azure PowerShell
While you can run PowerShell cmdlets through the Azure portals, specifically in Azure Cloud Shell, you can also install the Azure PowerShell module, which contains all the cmdlet definitions on-premises. And that's what I'm going to do here. I've already started PowerShell as an administrator as we see here listed in the upper left of the window. [Video description begins] The presenter switches to the Select Administrator: Windows PowerShell window. The prompt is PS C:\WINDOWS\system32>. [Video description ends]

So to get the PowerShell module installed, I'm going to type, install-module-name az. And then I'll press Enter. I get a message about needing a new version of a provider to talk to a repository on the Internet. [Video description begins] A Nuget provider is required to continue. Instructions for its installation display. [Video description ends] So I'm going to go ahead and press Enter which is the default of yes, we allow this to happen.

Then I get a message about trusting installing something from a repository out on the Internet. [Video description begins] The message relates to an untrusted repository and asks if the installation should proceed. [Video description ends] I am going to type in yes because this time if I just press Enter the default here it says is no. So I do trust it. So what we're doing is reaching out to a repository to install this PowerShell module. The good thing about doing it from PowerShell is that it's the same method as long as you've got PowerShell running on Windows, or the MacOS, or even Linux.

Now we have a red message that says some commands are already available on the machine, and it gives me some name of the cmdlets. And that will happen if you've got different versions of modules installed. So all you have to do to avoid this and to use the latest installed version is to use the -AllowClobber parameter. No problem, let's clear the screen. Let's bring up our command initially that we used to install the module. And we'll simply add to the end of it -allowclobber, that's one word, and we'll press Enter. [Video description begins] He runs the command: install-module -name az -allowclobber. The output is the untrusted repository message. [Video description ends] And again, we going to type in yes to trust the repository and let it be on its way. And now notice this time no errors, we are good to go.

And now if I run get-module and use wildcards looking for PowerShell modules, which are essentially libraries of cmdlets, if I look for them that begin with az. and I use -list to show me what's been installed, not necessarily what's loaded in memory, we can see we've got all kinds of these great Azure PowerShell modules available, such as Az.Compute. [Video description begins] He runs the command: get-module *az.* -list. The output is a table of modules with the column headings: ModuleType, version, Name, and ExportedCommands. [Video description ends] And we can even see some of the cmdlets listed here for working with virtual machines, Cdn for Content Delivery Network, Az.Accounts for working with account information, and so on.

So what I could do is run things like get-command -module, let's say, az.compute. So show me the PowerShell cmdlets related to compute. [Video description begins] He runs the command: get-command -module az.compute. The output is a question asking whether to run software from an untrusted publisher. [Video description ends]

Now here it wants me to trust this file to do that. So I'm going to choose that I always want to run, so a. And here we now see a list of the many PowerShell cmdlets available within that module [Video description begins] The output is a list of cmdlets such as Remove-AzVmzzDataDisk. [Video description ends] where we can remove things like data disks or we can save virtual disks. And as we go further up through the list of commands because there's a lot of them available here, we see one for example called New-AzVM.

So if I clear the screen, I can also run get-help. So get-help new-azvm. And I can even ask for detail by putting in -detail. [Video description begins] He runs the command: get-help new-azvm -detail. The output is a question checking whether to run Update-Help. [Video description ends] Now, it says do you want to make sure you run Update-Help so that you have the most up-to-date information? Sure, I have some time. I'll go ahead and type in the letter y for yes and press Enter.

After a moment the update is complete. So if I scroll back up here we'll see examples of how we can actually use this cmdlet to work with new virtual machines that are being created through PowerShell. So we have the synopsis Creates a virtual machine, and we can see the many parameters available potentially to be used with the New-AzVM cmdlet. And as we scroll further down because we asked for detail with -detail, we can see a detailed listing of each and every parameter. And furthermore, down at the bottom we'll start seeing examples of how to use this cmdlet to create a virtual machine. [Video description begins] He points to different sections of the output. [Video description ends]

The last thing we'll do here is talk about how to authenticate to our Azure account here in PowerShell so we can actually do things like manage Azure resources. To do that I'm going to run connect-azaccount. That's going to pop up this Sign in screen for Azure, [Video description begins] He runs the command: connect-azaccount. The Sign in to your account dialog box opens. [Video description ends] so I'll go ahead and put in my credentials. And then I'll go ahead and click Sign in. [Video description begins] He enters his username and clicks Next, then he enters his password and clicks Sign in. [Video description ends] And after a moment, indeed we can see that we are connected to our Azure account. [Video description begins] The output lists the account, subscription, tenantId, and environment. [Video description ends]



Azure PowerShell Syntax
  - Azure Powershell cmdlets are a great way to manage your Azure resources at the command line. One way to do it is to install and download the Azure Powershell modules on your on-premises station. But another way that we're going to look at is through the Azure portal, where we can launch the Azure Cloud Shell. [Video description begins] The presenter switches to the Microsoft Azure portal in the Web browser. The Home page displays. [Video description ends]
  - The icon at the top that's for the Cloud Shell, it kind of looks like a command prompt icon. So, I'm going to go ahead and click on it. That's going to start my Azure Cloud Shell, which I will maximize for a moment. [Video description begins] He clicks Cloud Shell on the toolbar. [Video description ends] I want to make sure in the upper left I'm using PowerShell and not a Linuxy Bash type of environment. [Video description begins] The Cloud Shell window opens in the PowerShell environment. The command prompt is PS Azure:\>. [Video description ends] And right away, I'm ready to go, I'm authenticated.
  - So I'm going to clear the screen with cls and I'm going to run get-azvm. This is the cmdlet I know will list Azure virtual machines. [Video description begins] He runs the command: get-azvm. The output is a list of two virtual machines under column headings which include ResourceGroupName, Name, and Location. [Video description ends] And we can see that we've got two of them here. They're deployed in resource group called RG1. We can see their names, their locations, which is the Azure region, and so on.

Now I can filter this list out a little bit. So for instance, I can run get-azvm, and if I only want to see a few of these details, I could use the the select alias. Now I say alias because select is an alias that technically actually points to select-object, but it's less to type. So I'll go with select, and I'm going to select the name comma and location properties, and I'll press Enter. And notice that we've filtered out the other properties that might not be of interest to us at the time. [Video description begins] He runs the command: get-azvm | select name, location. The output is the list of two VMs, but arranged only by Name and Location. [Video description ends]

Now I'm going to run get-command because I'm wondering is there anyway to stop a virtual machine from PowerShell? So I'm going to put wildcard asterisks symbols around the word stop. And while we have a lot of cmdlets with the word stop, one that jumps out here is Stop-AzVM. Sounds like what we want. [Video description begins] He runs the command: get-command *stop*. The output is a cmdlets list. He points to Stop-AzVM. [Video description ends] So I'm going to clear the screen and get help on it, get-help stop-azvm, maybe -example if I'm just looking at syntax examples, that might help. [Video description begins] He runs the command: get-help stop-azvm -example. The output lists the cmdlet name, a synopsis, and an example of its usage. [Video description ends]

Well, indeed as we thought, it does stop a virtual machine. Says so right here, and it's a pretty simple syntax. We give it the resource group, the virtual machine was deployed into, and of course, the name of the virtual machine, and we're ready to go. So I'm going to go ahead and run stop-azvm -resourcegroupname, in this case, it's rg1. Well, let's take a look at that actually, we're going to minimize this. [Video description begins] He switches to the Virtual machines page in the Microsoft Azure portal. [Video description ends]

So, I do have a virtual machine called eastlinuxvm1 and it's running, that's the status, and it's in a resource group called Rg1. So let's pop up our Cloud Shell again, and let's make this happen, [Video description begins] He returns to the Cloud Shell. [Video description ends] -name is eastlinuxvm1, and I'll press Enter. [Video description begins] He runs the command: stop-azvm -resourcegroupname rg1 -name eastlinuxvm1. The output contains several warnings and a message that the virtual machine is stopping operation. [Video description ends]

So, it says this cmdlet will stop the virtual machine. You sure you want to continue? The default is yes, if I just press Enter. So, I'll just press Enter. And after a moment it will begin the process of shutting down the virtual machine. So I'm just going to go ahead and minimize this and refresh my list of virtual machines here in the portal. [Video description begins] He switches to the Azure portal Virtual machines page. The eastlinuxvm1 VM has a status of Running. [Video description ends] And after a moment, we'll see that the virtual machine will be stopped. And sure enough, we can see that it's actually deallocating. So, after a moment, the state of the virtual machine will be stopped. [Video description begins] He clicks Refresh on the toolbar. The eastlinuxvm1 status changes to Deallocating. [Video description ends]

So we can use PowerShell cmdlets here in the Azure Cloud Shell which might be a little easier to work with than having to download it and install it on an on-premises station. But it really depends how you want to use it.


Azure Disk Storage
In the Microsoft Azure environment, virtual machine hard disks can be defined.
  - They come in the form of hard disk drives or HDDs. 
  - Or for better performance, you can have it backed by solid state drives or SSDs.

What we're really talking about here is Azure using a virtual hard disk or a VHD hard disk file that is used by a virtual machine. And certainly, a virtual machine can have more than a single disk. It can have numerous data disks attached to it. So this is considered a managed disk solution. What that really means is that we can simply make a selection in the interface, or programmatically about what type of disk storage we want to use with a virtual machine.

And it's automatically taken care of by the Azure environment. We don't have to worry about the underlying technical detailed configuration. So we can choose from standard hard disk drives, or HDDs, and solid state drives. Or we can choose between ultra and premium SSDs. We'll get a sense of this on this screenshot, which we see we're in the midst of creating a virtual machine in the Azure cloud.

[Video description begins] Screen title: Azure IaaS VM Disk Selection. An Azure Cloud interface screen displays. It has the title Create a virtual machine. There are 7 tabs on the screen- basics, disks, networking, management, guest config, tags, and review+create. The disks tab is activated. A brief description displays. It reads: Azure disk and a temporary disk for short-term storage. You can attach additional data disks. The size of the VM determines the type of storage you can use and the number of data disks allowed. There is a hyperlink captioned Learn more, after the description. Below that is a drop-down field titled Disk Options. There are 3 options in the drop-down menu- premium SSD, standard SSD, and standard HDD. [Video description ends]

And you can see here that we can specify the disk type, in this particular case for the operating system. But you can also do it for data disks. We have options such as Premium SSD, Standard SSD, and Standard HDD. Now, Premium gives us better disk performance or a higher disk IOPS value, where IOPS stands for Input and Output Operations Per Second.

In this case, more is better. But you'll notice what's lacking in the drop down list here is the Ultra SSD option that we discussed previously. And the reason it's not there is because this is currently a preview feature in Azure. And you have to enroll in that preview in order for that option to be available.

[Video description begins] A message displays below the Azure interface. It reads: Ultra SSD requires enrollment to use this preview feature. [Video description ends]

Configure Azure Disk Storage

[Video description begins] Topic title: Configure Azure Disk Storage. The host for this session is Dan Lachance. [Video description ends]

Microsoft Azure virtual machines use virtual hard disks. Each virtual machine is going to have at least one of them, and it's going to be to host the operating system files. But we have the option, depending on the workload requirements running within that VM, to add additional data disks.

And so here in the Azure portal I'm going to go ahead and manually create a managed disk, and then I'm going to attach it to an Azure virtual machine.

[Video description begins] The Microsoft Azure portal home page displays in a browser window. The address bar contains the URL: https://portal . azure. com /#home. The page is divided into 2 panes. In the left pane is a menu bar with menus such as Create a resource, Home, Dashboard, All services and Favorites . The right pane has 2 sections. The first is titled Azure services and contains icons for some main Azure services such as Virtual machines, Storage accounts, App services, SQL databases, Azure database, Azure Cosmos, and others. The second section is titled Make the most out of Azure. It has 5 tiles listing the main advantages of using Azure. Each tile has an icon representing the advantage, a tagline, and a link to a relevant service. [Video description ends]

To get started here in the portal, I'm going to click Create a resource, towards the upper left, and I'm going to search for managed disk. And sure enough, there is Managed disks, and then I'll click the Create button.

[Video description begins] The host clicks on the Create a resource menu and a dialog box appears on the right. It is titled New and has a search field. He types managed disk in the search field and presses the Enter key. A new dialog box appears. It is titled Managed disks and has a brief explanation about managed disks. A Save for later button and a Create button are also present there. The Publisher's name is mentioned as Microsoft. [Video description ends]

 

[Video description begins] A Create managed disk dialog box opens. It has fields such as Name, Subscription, Resource group, Location, Availability zone, Account type, Source type, and Size. A Create button displays at the box bottom. [Video description ends]

So the first thing you have to do is give it a meaningful name, I'm going to call this DataDisk1. I'm going to tie it to an existing resource group and I'm going to put it in a location or region closest to where the virtual machine is already deployed.

[Video description begins] He types datadisk 1 in the Name field. He leaves the Subscription field with its default value, Pay-As-You-Go. He selects Rg 1 from the Resource group drop-down field. He selects Canada East from the Location drop-down field. [Video description ends]

And as I go further down I then get to choose the account type, whether it's Premium, SSD, Standard SSD, or the older and slower Standard HDD for hard disk drive. Now, depending on your disk IO requirements, you might choose one or the other of these options.

So for example, I'm just going to go middle of the road and choose Standard SSD. Then I get to choose the source. So are we taking an existing snapshot and creating a disk from it? Or if I open that drop-down list, do we want to go to a storage one? We might have to have, for instance, uploaded VHD or a virtual hard disk file from on-premises to a storage account. Or I can just make an empty disk, which I'll choose here. I'll choose the none empty disk option.

[Video description begins] He clicks the Source type drop-down arrow. 3 options display- Snapshot, Storage blob, and None ( empty disk). He selects the None option. [Video description ends]

I can then control the size of that virtual hard disk. I'm going to leave it at the default setting for this example, and then down at the bottom I'm going to click Create.

[Video description begins] The default value in Size field is 1023 GB. [Video description ends]

 

[Video description begins] At the bottom of the box is a section titled Estimated performance. It shows the IOPS limit as 500 and the Throughput limit as 60 MB per second. He clicks the Create button. [Video description ends]

So after a moment we'll have a managed disk in Azure disk that we can then work with by attaching to a virtual machine where it would be needed.

[Video description begins] He returns to the Create a resource page and a progress bar in the right corner shows the disk creation progress. [Video description ends]

So if I were to go to All resources, from here I will see a number of items, including the disk I just created.

[Video description begins] He clicks the All resources menu in the Favorites group. All the resources present in the default directory display on the right. There are a total of 21 items and he filters the resources by typing the text, disk, in the first filter field. Buttons labelled Add, Edit columns, Refresh, Assign tags, Delete, Export to CSV, and Try preview display at the top. [Video description ends]

So if I just filter it, let's say, for the word disk, after a moment, I might have to refresh, I'll see the DataDisk1 here that I've just created.

[Video description begins] 4 search results display. They include Datadisk 1 and its details such as TYPE, RESOURCE GROUP, SUBSCRIPTION, and TAGS. [Video description ends]

Now, if I were to go into a virtual machine's properties, so I'm going to click on the virtual machine's view over on the left. And let's say I pop up the Properties blade from one of my Windows virtual machines. So I'll click on that, and then I'll click on Disks in the Properties blade.

[Video description begins] A page titled Disk settings display on the right. It has a field captioned Enable Ultra SSD compatibility (preview) with 2 radio options, Yes and No. The next section is titled OS Disk and it contains a table with columns titled NAME, SIZE, STORAGE ACCOUNT, ENCRYPTION, and HOST CACHING. One disk, eastwindowsvm1_OsDisk_1_acee is listed in the table. The next section is titled Data disks and it contains the text, None, and a button labelled Add data disk. [Video description ends]

On the right we can see the existing OS disk, but notice that there are no data disks defined yet. But notice below that we've got a button that says Add data disk, so I'm going to go ahead and click on that, and from the drop-down list I'm going to choose DataDisk1.

[Video description begins] When he clicks the Add data disk button, a table displays above. It has columns titled LUN, NAME, SIZE, STORAGE ACCOUNT, ENCRYPTION, and HOST CACHING. [Video description ends]

Now, once I've done that, I'm going to click Save to save the change.

[Video description begins] The Save button displays at the top of the page, along with 2 other buttons, Discard and Refresh. [Video description ends]

So at this point I've added another virtual hard disk to an Azure virtual machine. And when I fire up that virtual machine, it will show up as another Disk device.

[Video description begins] A notification at the top-right corner says Updating virtual machine disks. [Video description ends]

 

[Video description begins] The notification text changes to Successfully updated virtual machine disks. [Video description ends]

So why don't we go ahead back to the Overview part of the Properties blade here and start the virtual machine? This is a Windows virtual machine, so I will RDP into it, and we'll take a look at that newly-added disk device.

[Video description begins] When he clicks the Start button at the top of the Overview page, a notification displays in the top-right corner. It says Starting virtual machine. [Video description ends]

 

[Video description begins] The Server Manager Dashboard window displays. The header bar contains the Server Manager- Dashboard title, and tabs such as Manage, Tasks, View, and Help. Below are 2 panes- left and right. In the left pane is a navigator with menus Dashboard, Local Server, and File and Storage Services. The right pane has a heading text, WELCOME TO SERVER MANAGER. Below the heading is a section containing 2 panes- left and right. The left pane displays 3 steps, QUICK START, WHAT'S NEW, and LEARN MORE. QUICK START is selected. The right pane shows 5 steps, out of which step 1, Configure this local server, is highlighted and displays in larger font than other steps. Below this steps section is a section titled ROLES AND SERVER GROUPS. Underneath are 3 tiles titled File and Storage Services, Local Server, and All Servers. [Video description ends]

So I've RDPed, or I've used the Remote Desktop Protocol client to connect to the public IP address of my Azure Windows virtual machine. And it automatically starts the server manager tools, so we can work from here by clicking File and Storage services on the left and then Disks.

And what we're going to see is that we've got a disk here, now the partitioning is not known, because it's a brand new added disk. And it shows up here as serial attached SCASI or SAS, S-A-S.

[Video description begins] When he clicks the File and Storage Services menu in the navigator, a new page displays, and it contains the following 4 menus in the naviagtor pane on the left: Servers, Volumes, Disks, and Storage Pools. When he clicks Disks, a page titled DISKS displays on the right. It has a Filter field at the top; a number of tabs such as Number, Virtual Disks, Status, and Unallocated; a table for eastwindowsvm 1; and 2 tiles titled VOLUMES and STORAGE POOLS. [Video description ends]

 

[Video description begins] He highlights the last row in the table for eastwindowsvm1. [Video description ends]

But notice the capacity here is about well, let's say 1,000 gigabytes is what we're looking at, so that's pretty much the default size that was set in Azure. So at this point we would right click, depending on the operating system version, and whether it's Linux or Windows. You would use whichever method you would normally use to initialize a file system and make that a usable disk device.

[Video description begins] When he right clicks on the highlighted row, a menu with the following options pops up: New Volume, Bring Online, Take Offline, Initialize, Reset Disk. [Video description ends]

Azure Blob Storage

[Video description begins] Topic title: Azure Blob Storage. The host for this session is Dan Lachance. [Video description ends]

If you enjoy those old horror films from the 1950s, you might remember the movie The Blob.

[Video description begins] Screen title: Azure BLOB Storage. [Video description ends]

That's not the type of blob we're talking about here, we're talking about binary large objects, hence BLOBs, specifically how they relate to Azure storage accounts.

[Video description begins] An icon with the caption- Binary Large Object (BLOB) - displays. [Video description ends]

So BLOB storage in the Azure cloud is really used as unstructured data storage. Where we don't always have the exact same type of file that is read from and written to in the exact way, instead it's unstructured. So we can take snapshots of BLOB files, just like you could take a snapshot of a disk volume, and it serves as a point in time picture, so to speak, of the state of the data at that point in time. There are also different storage tiers that you can choose from.

So if you don't require frequent access to your BLOB objects, you might configure your Azure storage tier for your BLOB storage to use the cool storage tier. Whereas if you need frequent access to your BLOB files, instead you might then choose the hot storage tier, which is optimized for frequent access. There are a variety of BLOB types, all of which are accessible over either HTTP, or the more secure HTTPS.

[Video description begins] 4 branches emerge from the BLOB icon. They are captioned Unstructured data storage, snapshots, storage tiers, and various BLOB types. An arrow points towards the BLOB icon. It has the label HTTP/ HTTPS next to it. [Video description ends]

Whether you're using a GUI tool, like a web browser, whether you're using PowerShell commandlets, the Azure CLI, or even developer's access and BLOBs through the REST API, all of those methods use HTTP or HTTPS. The Azure BLOB hierarchy starts with the storage account. So let's say we've got a storage account that we create called sa123, under which we can then create one or more containers. Think of these as being like folders on a disk that you use to organize all of your files.

And so here, let's say we've got a BLOB container called pics for pictures, into which we upload a file called pic1.jpg, that's the actual BLOB. So when we put all this together and we access it over HTTP or HTTPS, the URL would look something like this, as we see on the screen. In this case, http://sa123, which is our storage account name, then .blob.core.windows.net/pics, which is our container, and /pic1.jpg, which is the actual name of the BLOB itself.

And that can be a different name than, for example, what you started with on-premises before you uploaded it to your storage account, if that's how you're populating your storage account.

[Video description begins] A 3 -step process infographic displays. Step1 has the caption storage account: sa123. The second step has the caption BLOB container: pics, and the last step has the caption BLOB: pic1.jpg. [Video description ends]

Block BLOBs are one type of BLOB, these are used for small and large files. And you can even upload multiple BLOBs at the exact same time. So this would be useful if you want to store things like pictures, office productivity documents, any type of media documents up in the cloud. And it's great that you can upload multiple files concurrently.

Another type of BLOB is a page BLOB. This one is generally used for large file cloud storage, and it's designed for files that will experience random reads and random writes. A great example of this would be virtual hard disk files, or VHDs. Now these are the virtual hard disks that are used by Azure virtual machines. The last type of BLOB is an append BLOB. Now, this one is designed so that when we have new data, it gets added to the end of an existing BLOB.

Now this means, then, that any existing blocks of data that currently exist in the BLOB can't be updated or deleted. Why would you want this? Well, a great example of using this would be for logging purposes.


Create a Storage Account
In this demonstration I'll be using the Azure portal to create a new Azure storage account. As the name implies, an Azure storage account is a cloud storage location. But when you define a new storage account, there are a number of detailed settings to consider. Depending on things like the type of performance you want. Or the type of durability, or how many replicas of data you might need replicated throughout the Azure infrastructure. Now here in the Azure portal, I'm at the homepage where I could click Storage accounts, which takes me to the storage accounts view.

[Video description begins] The Microsoft Azure portal home page displays in a browser window. The address bar contains the URL: https://portal. azure.com/#home. The page is divided into 2 sections. In the left section, is a menu bar with menus such as create a resource, home, dashboard, all services and favorites. The right section has 2 panels. The first is titled Azure services and contains icons for some main Azure services such as virtual machines, storage accounts, app services, SQL databases, Azure database, Azure Cosmos, and others. The second panel is titled Make the most out of Azure. It has 5 tiles listing the main advantages of using Azure. Each tile has an icon representing the advantage, a tagline, and a link to a relevant service. He clicks the storage accounts service. [Video description ends]

Now I don't have any storage accounts listed right now, but I could add one by clicking the Add button.

[Video description begins] A storage accounts page appears. There are 5 buttons on the top of the page- Add, Edit Columns, Refresh, Assign Tags, and Delete. Below that are the filter options. No storage accounts are listed on the page. He clicks the add button. A create storage account page opens. He clicks the cross symbol on the upper-right corner of the page to close the page. [Video description ends]

Now instead of doing that, what we could also do is click the Create a resource link over in the upper left.

[Video description begins] He returns to the home page and clicks the create a resource option in the left panel. A dialog box titled New opens. There is a Search field on the top. He types storage accounts here. There are two columns on the page- Azure marketplace and Featured. In the first column, are options such as get started, recently created, compute, networking, storage, and others. The host clicks the Storage menu and its contents display on the right. They include quickstart tutorials for storage account, Azure file sync, data box edge, data lake storage, and others. He clicks the storage account tutorial. [Video description ends]

And from there, it opens up a new blade where we could search for what we want to create. So if I look for storage account, we could search for it that way, or we can simply browse what's presented to us on the screen. So I could simply go down under the Storage category on the left and then on the right, within that, choose Storage account, which I will do.

The first thing we have to think about is the subscription to which this storage account will be tied. I only have one subscription so that's an easy choice. Then I have to associate this with a resource group. I could either create a new one or choose from an existing one in the drop down list, which I will do. I'll choose Rg1.

[Video description begins] A Create storage account dialog box opens. There are 4 tabs in the box- Basics, Advanced, Tags, and Review+Create. The Basics tab is activated. A brief description of Azure Storage displays at the top. The first section of the box is titled project details. It has 2 fields- Subscription and Resource Group. He leaves the subscription field with its default value- pay-as-you-go. In the Resource Group drop-down field, he selects Rg1. [Video description ends]

Further down below, I have to give a name to the storage account. Notice uppercase letters will not be allowed. Lowercase are fine. But if I start using uppercase letters. It gives me a little red error message here about the fact that the name can only contain lowercase letters and numbers. And notice if I back out of the capital letters here, that if I just put in a name that's already in use that isn't globally unique. It will tell me. So I'm going to go ahead and call this eaststorageaccount. Now if I put in 1, it'll determine whether or not that's a unique name. And in this case it is because we've got the green check mark. We don't have the red error text. And of course, we always need to make sure we adhere to organizational naming standards as it applies to the creation of Azure resources. For the location, I'm going to specify Canada East, that's my region. The performance is either Standard or Premium.

[Video description begins] He types eaststorageaccount1 in the storage account name field. He selects Canada east in the Location field, the second field in this section. The performance field has 2 radio options- Standard and Premium. He selects standard and clicks the drop-down menu in the next field, Account Kind. There are 3 options here- Storage V2, Storage, and Blob Storage. He selects storage V2 (general purpose v1) option. 2 options-Cool and Hot - display in the Access Tier field. When he selects storage (general purpose v1) the Access Tier field disappears. [Video description ends]

In other words, with Standard, do we want to use older hard disk technology like magnetic hard disks that spin. Or the newer solid-state storage which provides better performance? Of course, it also means an increased cost. Now, depending on what we're planning on doing with the stuff that we put in the storage account really determines the next couple of selections. So if we're not going to have frequent access to what we're going to store in the cloud, we might want to just stick with standard performance.

But if we're going to have frequent access and we want it to be speedy, maybe we should look at using Premium. Down below I've also got to specify the account kind, whether it's StorageV2, general purpose storage. Or general purpose version one storage, or BlobStorage. Now with general purpose version two type of storage, we have an access tier, Cool or Hot. Similar to Standard and Premium, for frequently access data and the speediest access we should be choosing the Hot access tier. If this is more of an archive type of usage scenario, we would look at using a Cool access tier.

Now, if I were to switch this to Storage general purpose v1, notice that we lose the option of selecting the storage tier. And if I were to choose BlobStorage, binary large object, we then get a couple of additional options for replication. So the first option is locally redundant storage or LRS. Now, this means that we've got some replication that will occur within the Azure environment but at a very small level. Not, for example, across regions. Whereas Geo-redundant storage, if we were to select that, does provide replication across Azure regions geographically. And the benefit of doing this is that if there's some kind of a large-scale disaster or outage within an entire geographical region.

Well, your data's already been replicated elsewhere, and you can access it that way. Then we've got another variation called Read-ahead geo-redundant storage, RA-GRS. So essentially, this is similar to replicating across Azure regions, the difference being that we would have read-access only to a replica. So depending on what your storage requirements are will determine what you select here. It's important to realize that if we were to choose StorageV2 general purpose v2.

That we can change it later on if we want to for example, BlobStorage. If we're going to be working with storage, let's say of virtual machine hard disks. So we can always change our mind later. So generally speaking, the general purpose v2 account kind is what you'll see used more often than not in Azure. So I'm going to go ahead and click Next.

[Video description begins] He clicks the Next button and the Advanced tab gets active. The page has 3 sections- Security, Virtual Networks, and Data lake storage gen2. [Video description ends]

Here we have a couple of options such as whether we want to enable secure transfer. This would mean only allowing connections over HTTPS or newer versions of SMB, the Server Message Block protocol. As opposed to older, less secure standards. So I'm going to leave that on Enabled.

[Video description begins] In the security section, there is a field named secure transfer required with 2 radio options- Disabled and Enabled. He selects the Enabled option. [Video description ends]

Then we can determine where we want to allow access from in terms of virtual networks. And currently, it says All networks. If I were to click Selected network, then from the drop-down list, I could choose an existing Azure virtual network that I previously have defined. However, I'm going to leave it on All networks for now.

[Video description begins] The virtual networks section has a field allow access from. This field has 2 radio options- all networks and selected network. He selects the all networks option. [Video description ends]

We're going to talk about data lake storage later on, so I'm going to leave that disabled as a default setting, and then I'll click Next.

[Video description begins] The Data lake storage gen2 section has a field named hierarchical namespace. This field has 2 radio options- Disabled, the Default Option, and Enabled. He leaves the field with the default option. Then, he clicks the Next button. [Video description ends]

So we then get to decide whether we want to assign a tag to this storage account. And remember, tagging is just metadata, it's extra information that you might use here. So you can search, or sort, or assign costs to a department or a project. And from the name drop-down list, if I've already defined a tag before which I have, it'll show up. I've already used a tag called project. So go ahead specify that.

[Video description begins] The third tab- Tags- gets active now. A brief description displays. It reads: tags are name/value pairs that enable you to categorize resources and view consolidated billing by applying the same tag to multiple resources and resource groups. A note displays: Note that if you create tags and then change resource settings on other tabs, your tags will be automatically updated. There are 3 fields in this tab- name, value, and resource. [Video description ends]

Then I can give it a value, and I can also see any existing values I might have used for tagging. In this case, ProjectA. I'm going to go with it. I could add a multitude of tags but I'm just going to leave it that way for now. Technically, I don't have to add tags at all.

[Video description begins] He selects project in the name field, project A in the Value field and Resource Account in the Resource field. [Video description ends]

Then I'll click Next to review my settings.

[Video description begins] He clicks next and the tab Review+Create gets active. All the storage account settings display. The message validation passed displays on the top. A link captioned download a template for automation displays at the window bottom. [Video description ends]

Now notice it says the validation has passed based on my selection. We have a little summary here of what's going to be created. I also have the option to download a template for automation. That is an ARM template that uses JSON file syntax. And why would I do that?

Well, I might download it if I want to be able to deploy a storage account with all these settings from the template in the future. Maybe even using the Azure CLI or PowerShell, which is way quicker than doing it here and clicking on all these things in the screen. So it allows for repetition, automation, that type of thing. However, I'm okay with this. I'm going to click on the Create button to create the storage account.

[Video description begins] A message window displays on the top-right corner and it says: initializing deployment. A progress bar displays there. [Video description ends]

And it's taking us into an overview screen for the deployment of our new storage account.

[Video description begins] Once the deployment is complete, an overview screen displays. It has a navigator with options-overview, inputs, outputs, and template on the left. 4 buttons display on the right, namely Delete, Cancel, Redeploy, and Refresh. The text- Your deployment is underway- displays on the screen in large font. [Video description ends]

We can see some information related to it down below. But at the same time, I can simply go over to All resources on the left. And after I refresh it, we'll see that we do have our new storage account listed.

[Video description begins] He clicks the all resources option in the main window navigator and its page displays. It has buttons- add, edit columns, refresh, assign tags, delete, export to CSV, and try preview. Below the buttons the subscription mode displays. Then, filter options display, namely filter by name, resource groups, types, locations, tags, and grouping. According to the filter options selected, search results display in a table format. Its columns are name, type, resource group, location, subscription, and tags. The eaststorageaccount 1 displays in the table and the value under tags column is 1. [Video description ends]

And like always, we can see the resource group, it was deployed into the region or location. And in this case, if you've added the Tags column, you'll see that here too. The Tags column is not normally here by default unless you go to Edit columns,

[Video description begins] He clicks the Edit Columns button and its window opens on the right. All the available columns are listed on the left side and the selected columns on the right. Between the two column types are right and left arrow buttons for adding and removing columns. 5 column names display under selected columns, namely- type, resource group, location, subscription, and tags. [Video description ends]

select it on the left. And then click the arrow to move it on the right, which I've already done. So therefore, I can see some tag information. If I were to click on that storage account, it opens up the properties blade for it.

[Video description begins] He closes the edit columns window and returns to the storage account window. Here, he clicks eaststorageaccount 1 and its detailed page opens. There are 4 buttons here, namely Open in Explorer, Move, Delete, and Refresh. A navigator on the left shows menus such as Tags, Diagnose And Solve Problems, Events and Settings. [Video description ends]

And I could go back and take a look at the tags and make changes to it. Or I could go through and look at the settings specific, in this case to a storage account. Such as geo-replication options, if I want to enable that type of item.

[Video description begins] He clicks geo-replication in the settings menu group. A world map displays on the right. [Video description ends]

Also, I can see if I want to configure blob service settings and so on.

[Video description begins] He clicks blobs in the blob service menu group. Its page displays on the right. There are 4 buttons on the top- Container, Refresh, Delete, and Change Account level. A Search field is also present and a table with columns name, last modified, public access, and lease state. [Video description ends]

So we have a number of properties available then after we've configured an Azure storage account. But there you have it, that's how you can initially create the storage account here in the Azure portal.


Azure Blob Storage GUI Management
In this demonstration I'm going to use the Azure portal to create a new Azure storage account, and then we'll configure to be used for Blob storage. To get started here in the portal, I'm going to click Create a resource over on the left.

[Video description begins] The Microsoft Azure portal home page displays in a browser window. The address bar contains the URL: https://portal. azure.com /#home. The page is divided into 2 sections. In the left section, is a menu bar with menus such as Create a resource, Home, Dashboard, All services and Favorites. The right section shows the page linked to the menu item clicked on the left. He clicks the Create a resource menu. [Video description ends]

I want to create a storage account, so one way for me to do that, is to go under the Storage category here and then on the right to choose Storage accounts. I'm going to go ahead and do that.

[Video description begins] A dialog box titled New appears. It has a search field at the top. Below that are two columns-one titled Azure Marketplace and the other Featured. Under Azure Marketplace are various menu items such as Get started, Recently created, Compute, Networking, Storage, and others. In the featured column, detailed contents of the selected menu displays. The host clicks the Storage menu and its contents display on the right. He clicks the Storage account tutorial from here. [Video description ends]

So, now I have to tie it to a resource group. So I've already got one called Rg1, and down below I have to give it a name.

[Video description begins] A Create storage account window displays. It has 4 tabs- Basics, Advanced, Tags, and Review+create. The Basics tab is active now. It has a brief description about Azure storage and a section titled PROJECT DETAILS. He selects Rg 1 in the Resource group drop-down field. [Video description ends]

Now notice if I start typing in things like capital letters, it says here that the account name can use only lower case letters and, of course, numbers. And it needs to be between 3 and 24 characters, fine. No problem, because when we plan out how we're going to name our Azure resources, we should have a standard naming convention. So in this case, I'm going to call this stor, for storage account, S-T-O-R. And then I'm going to give it a number to make it unique.

[Video description begins] He scrolls down the window and reaches a section titled INSTANCE DETAILS. The first field in this section is the Storage account name. He types stor14567 here. [Video description ends]

Then, I'm going to choose a storage location that reflects where it might be used geographically. Then I get to choose between Standard and Premium types of storage, where I can determine, for example, whether or not I have access to these cool and hot access tiers. If it's standard, I do have access to that, and I could choose BlobStorage for the account kind, but I could also choose Premium for performance.

[Video description begins] He selects Canada East in the Location field. The Performance field has 2 radio options- Standard and Premium. He selects Standard and clicks the drop-down menu in the next field, Account kind. There are 3 options here- StorageV2, Storage , and Blob Storage. He selects StorageV2 option. When he clicks the Premium radio option, the Account kind field shows only the first 2 options. He finally clicks the Standard option and Blob storage option. [Video description ends]

Now, notice I don't get BlobStorage available when I do that. So it's important to understand the ramifications of the choices you make here and what features will follow down below. So I want to work with BlobStorage here, so I'm going to leave it on standard, and I'm going to choose BlobStorage. Then I get to determine if I want replication. So locally-redundant storage, geo-redundant storage, and read-access geo-redundant storage. Think of locally redundant storage as meaning that your data is replicated only within an Azure data center.

So therefore, if you've got a problem with an Azure data center, you could lose all your data if you don't have it stored elsewhere. Geo-redundant storage will replicate your data across multiple Azure regions. So, in the case of an Azure data center problem, even an Azure regional disaster, your data's still been replicated elsewhere. Then you've also got read-ahead geo-redundant storage, RA-GRS. And what this means is that you've got a primary replica that's writable, and then the replica itself from that is only allowable through read access. So in this case, I'm going to leave it on locally-redundant storage. I'm going to leave it on the hot access tier under the assumption that I'm going to be accessing the Blobs that I will populate the storage account with on a frequent basis.

[Video description begins] The next field is Replication. There are 3 options in its drop down menu- Locally-redundant storage, Geo-redundant storage, and Read-access geo-redundant storage. He selects Locally-redundant storage. The last field is Access tier and it has 2 radio options- Cool and Hot. He selects Hot. Then, he clicks the Next button. [Video description ends]

Now, I can click Next to view any advanced options. Do I want secure transfers enabled? Do I want to limit the virtual networks from which access is allowed to this storage account? I'm not going to change anything here.

[Video description begins] The Advanced tab gets activated. The page has 3 sections- SECURITY, VIRTUAL NETWORKS, and DATA LAKE STORAGE GEN2. [Video description ends]

I can click Next and then apply tags if applicable.

[Video description begins] The Tags tab gets activated. A brief description displays. There are 3 fields in this tab- NAME, VALUE, and RESOURCE. He doesn't update any of the fields and clicks Next. [Video description ends]

I'm just going to click Next to review my settings. So it's running a file validation based on my selection looks good, so at this point I'm just going to go ahead and create my BlobStorage account.

[Video description begins] The last tab, Review+create, gets activated. It contains all the options he chose. A progress bar on the top shows the review and validation progress. When the review completes, a message, Validation passed, displays at the top of the screen. He clicks the Create button and a progress bar displays in the top-right corner of the window. It is captioned- Submitting deployment. [Video description ends]

We can see clearly our deployment is underway, we have a link here to our new storage account down below. But, notice on the left also, we've got a view just for Storage accounts.

[Video description begins] A new page displays. It is titled- Microsoft.StorageAccount-2019030007131545- Overview. The page is divided into 2 sections-left and right. The left section has a search field and 4 menus- Overview, Inputs, Outputs, and Template. The right section has 4 buttons- Delete, Cancel, Redeploy, and Refresh. Below the buttons, the deployment progress status displays. A table with all newly-created resources display. There is just 1 resource here- stor14567- he just created. [Video description ends]

So if I click that, I'll see any storage accounts. And remember, if you don't see your new storage account here, you can always click Refresh until such time that it shows up and the deployment has completed. So ours is showing up here, I'm going to click on the link for

[Video description begins] There are 3 storage accounts here, including Stor14567, shown as links in a table. In the top-right corner the deployment status shows completed. He closes the window. [Video description ends]

the name of my storage account to go and do its properties blade. And there are a number of things that I can do here, for

[Video description begins] He clicks the stor14567 link and its page opens. There are 2 sections - a navigator on the left with menus. The right section shows contents of the menu clicked in the navigator. [Video description ends]

example, if I scroll all the way down, I can click on Blobs and it says, we don't have any containers yet. Well, remember, containers are kind of like folders used to organize Blobs. So what I'm going to do then is click Container. I'm going to call this one pics, for pictures.

[Video description begins] He clicks the Blobs menu in the Blob service group in the navigator. Its window opens on the right. There are 4 buttons here- Container, Refresh, Delete, and Change access level. He clicks the Container button. A section titled New container displays. It has 2 fields- Name and Public access level. Two buttons- OK and Cancel- display at the bottom of the page. [Video description ends]

And then down below I can determine whether it should be private, so no anonymous access allowed. Or anonymous read access for the blob only, or anonymous read access for containers and blobs. Why don't we start up here with Private (no anonymous access); OK, and

[Video description begins] He types pics in the Name field. He clicks the drop-down menu in the Public access level field. There are 3 options- Private ( no anonymous access), Blob (anonymous read access for blobs only), and Container ( anonymous read access for containers and blobs ). He selects Private. Then, he clicks the OK button. [Video description ends]

after a moment there's the pics container. So I'll click it to open it up. That gives me a new properties blade related to the container, and from here I can upload Blobs.

[Video description begins] The pics container appears in the contents as a link. He clicks the link and the pics page opens. The page is divided into 2 sections- a navigator on the left and the contents on the right. There is no content in the pics container. In the right section are buttons captioned Upload, Refresh, Change access level, Delete, Acquire lease, and Break lease. [Video description ends]

So I'm going to go ahead and upload Blobs. When I do that on the far right, I'll click the Select a file button.

[Video description begins] He clicks the Upload button. A new window titled Upload blob, appears in the far-right side of the screen. There is a files field where a file can be searched to be uploaded as a blob. A check box captioned Overwrite if files already exist is also present. An Upload button is present at the bottom of the window. [Video description ends]

After you've selected a local file, and you can have multiple files. At this point you can open up Advanced to specify details about the upload whether it should be treated as a block blob or an append blob. In this case it's going to be a block blob.

[Video description begins] He searches the file dog.jpg in the Files field. Then, he clicks the Advanced drop down arrow. The Advanced section displays. It has 4 fields and an Upload button. The Authentication type field has 2 options- OAuth and SAS. The Blob type field is a drop-down type with 2 options- Block blob and Append blob. The Blob size field has a default value of 4MB and the last field Upload to folder is blank. [Video description ends]

And I'm going to click Upload. And after a moment we can see it's uploaded this jpg. It's showing up right here in the list, and

[Video description begins] When he clicks the Upload button, a message box displays in the top-right corner of the window. It says: Upload completed for dog.jpg. Dog.jpg file now shows in the pics page, as a clickable link. [Video description ends]

if I actually click on it, I'll see some details, or properties related to it. Notice that by default server-side encryption is enabled for protection of data at rest. So what I'm going to do then for the URL is click the little copy icon, because I'm going to open a new web browser window, we're going to see if we can access this Blob data, over HTTP using a web browser.

[Video description begins] When he clicks the dog.jpg link, its page displays. The page has 4 tabs- Overview, Snapshots, Edit blob, and Generate SAS. The Overview tab is active now and the blob URL displays. He clicks the copy icon next to the URL. [Video description ends]

Now, when I paste that URL up here, by default, I get this kind of an error message, resource not found. Well, that's because we didn't allow anonymous access, if you recall.

[Video description begins] He opens another browser window and pastes the copied URL there. An error message displays that reads: This XML file does not appear to have any style information associated with it. [Video description ends]

So if I go back into Azure, and why don't we go back to the point, I'm just using my links here, my breadcrumb trail. Why don't we back to the point where we can actually go into our folder. So there's pics, and I'm going to click, I'm looking at the overview on

[Video description begins] He goes back to the Azure portal window and clicks the pics link. The pics container window opens. [Video description ends]

the left, I'm going to click the Change access level button at the top. And here it is, private (no anonymous access). Let's say we choose Blob (anonymous read access for blobs only).

[Video description begins] He clicks the Change access level button on the top of the window. The page opens and he clicks the Public access level drop-down field. He selects the Blob (anonymous read access for blobs only) option in the field. [Video description ends]

Okay, let's try that. So I'm going to click OK. It says it successfully applied the change. So, let's go back into our browser here where previously it failed, and let's refresh it. And sure enough, now we have access to the picture of the dog. So we can see how we can build a storage account and configure a variety of Blob Storage options, and then how we can start to work with content in the Blob Storage account.

