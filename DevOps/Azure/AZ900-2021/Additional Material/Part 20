                    AZ900 Microsoft Azure Cloud Fundamentals 2021
                    Additional Material Course Notes Part 20


Policy Assignment and the CLI (Cont)
  - In other words, let's bring up that previous command, let's use the up-arrow key, az policy definition list
    - But this time, what we are going to do is use --query
    - We are going to put in open and closing square bracket, which indicates that we have an array of items
    - There's multiple policy definitions. Dot. And the property we are interested in is displayName, where name has a capital N
    - This is only going to show me the names of the policies as opposed to all of the details for each of them.
  - We can see as we scroll back up through the output that there are quite a few of them
    - Having done that, we are just going to clear the screen here for one second. We can also view policy assignments.
    - We could run az policy assignment list. We'll see any assigned policies.
  - We've got one that's assigned for checking disk encryption, and we can see when it was created, who was it assigned by, and we have all of those details
    - Now we could also specifically ask for that information, meaning we could ask for specific assignments at a specific scope level.
  - For example, we're going to run az policy assignment list and we are going to use --scope
    - What we've put in double quotes here is a reference to our subscription ID
    - We want to see any assignments made at the subscription level.
  - We're going to see the same kind of output because we only have one assignment
    - But nonetheless, it is showing us our disk encryption should be applied on virtual machines assignment
    - We will just minimize the Cloud Shell here and verify this.
    - We do see that we have our disk encryption policy here, this assignment made at the Pay-As-You-Go subscription level.


Policy Assignment and PowerShell
  - In the Azure portal, we know that we can go into the Policy tool and go to the Assignments view to assign a policy at a given scope
    - Whether it's a subscription, resource group, and whatnot
    - However, we can also do that in PowerShell
  - The first thing we are going to do here is to create a variable called $rg for resource group
    - We are going to store in that the result of get-azresource group, and the name is going to be rg1
    - If we do $rg, we can see it's got a reference to the resource group
  - The next thing we want to do is create a variable to store the definition of a policy
    - To do that, we've created a $definition variable, it will store the result of running Get-AzPolicyDefinition, which we are then piping to Where-Object
  - We've got the space backtick here to wrap that to the next line
    - Where-Object then has an expression, where we're looking at the display name of each policy definition 
    - Until we find one that equals Audit VMs that do not use managed disks
  - Where-Object is a filtering type of cmdlet, we've got the open and the closing curly brace and within the expression
    - The $_ is a built-in PowerShell variable, it's a placeholder that allows you to process a collection of items
    - Here the collection of items is the collection of policy definitions
    - Then from there, we can call upon the .Properties.DisplayName property
    - After we've done that, we should have the policy definition for Audit VMs that do not use managed disks stored in our dollar sign definition variable.
    - There are some warning messages here about some changes taking place with these PowerShell cmdlets, and that's fine
    - What we want to do then is clear the screen and let's just see what's in $definition.
    - Looks good. Looks like we've got the definition of a policy, the next order of business is to assign that policy.
  - To do that, we are going to use the New-AzPolicyAssignment cmdlet
    - We are going to assign a name. It's going to be called VMs-ManagedDisks, and the DisplayName, Check for VM Managed Disks, then -Scope
    - We are then going to reference my variable $rg, it points to resource group one
    - Within that, we'll call upon the ResourceID property
    - That's what we going to do to set the scope of where that policy should be applied
    - Then, of course, we have to tell it the policy definition using -PolicyDefinition, use our $definition variable
    - Again, we've got a few warnings as these cmdlets are always changing.
  - In the end, the assignment should have taken place, we can take a look at that even in the portal to see if that's true
    - We're already in the Assignments view.
    - If we do a Refresh, then we should see that there it is right there, Check for VM Managed Disks
    - And it's applied not just to the subscription, but rather to a resource group, Rg1, within the subscription


Custom Policies
  - Although there are many built-in policies that you can assign in Azure, such as for checking security compliance
    - Like checking if virtual machines have disk encryption enabled
    - Or for doing other things like limiting which types of virtual machines can be created in certain regions
    - There are times you might need to build your own custom policy. 
    - To do that here in the portal, we are going to search for Policy to open up the Policy tool.
  - In the Policy tool, go to Definitions, we'll see a list of all of the policy definitions that are available.
    - We can filter it so that, for example, we can view only Custom policies
    - There are none, at least not yet so we're going to add a custom policy definition by clicking the add Policy definition button up above.
    - When we do that, we have to fill in a few items. Notably, we have to specify the actual policy rule in JSON format.
  - We've placed my own custom JSON text here
    - We've got a policyRule and what we're looking at is when we have a resource deployment occurring
    - We want to check to see if any tags have been applied
    - If tags haven't been applied, so exists false, then the effect is going to be append, we want to append some tags
    - To the tags field, we want to add costCenter with a value of yhz
    - This is a way that we could enforce some consistency to a degree when it comes to adding tags to newly created resources. 
  - To create this custom policy, first of all, we are going to define the location at the top, as let's say subscription level.  
    - We are going to call this name, Add Cost Center Tag, and apply it to an existing category
    - These are categories of policy definitions, let's say Tags and of course, we have our rule listed down below.
    - That's it we are going to scroll down at the bottom, and click Save to save this custom policy definition
    - Now we are able to use this for assignments
    - For example, if we go to the Assignments view, we can then actually assign that custom policy. 
  - We could choose Assign policy, just like we normally would with a built-in policy
    - The only difference is, we're going to select our custom policy
    - For Policy definition down below because you might have quite a large list, you might want to filter it by Custom.
    - There it is, Add Cost Center Tag, we can select that and we can decide where we want that applied.
  - Say for example, we want to change it from the subscription to a resource group.
    - We can go back to the Scope selector, within our subscription, we'll apply that to a specific resource group where we might deploy resources
    - Then we'll go ahead and select that.
    - At this point, we are going to click Review + create and then we will create the policy assignment.
  - The next thing we'll do is just test that out by creating something in that resource group.  
    - So let's just go Home, let's choose Create a resource.
    - Let's say it's going to be a storage account, so I'm going to type in storage account.
    - We'll select that and choose Create, at this point we're going to go through and just basically create a very simple storage account.
  - We'll deploy it into resource group 1 because that's where a policy applies.
    - We'll also just give it a unique name that we know won't be used by anything else.
    - All that we really want to do is create the storage account. 
    - We are just going to go right to the review and create it.  
    - Back in the Policy tool, if we look at the Compliance view, make sure you track that assignment.
  - Right now, it currently says it's not yet been started
    - These things can take a little bit of time before they kick in
    - So as we keep clicking Refresh, we can see for our Add Cost Centre Tag policy that we've got a Compliance state now of Non-compliant
  - Currently, it's 18 out of 24 resources, so 75%. However, if we keep clicking Refresh
    - That will change as it keeps evaluating the resources in our subscription to see which ones do not have that specific cost center tag
  - So, we can click directly on that custom assignment to open that up and view the details about it
    - Such as scrolling down to see a list of the non-compliant resources
    - In this case, that do not have the cost center tag applied


Policy Compliance
  - While you can use Azure Policies to limit resource management in the Azure environment
    - You can also use it to check for compliance, such as with security standards.
  - To get started here in the portal, we are going to search for Policy up in the top bar
    - We are going to open up the Policy tool, where the first thing we should do is look at any existing policy assignments.
    - Bear in mind that when you make a policy assignment, such as at the subscription level for that type of scope.
  - Depending on how many objects are in your subscription will determine how long it takes before you can expect compliance reports
    - For example, we've got an assignment here for a policy called Disk encryption should be applied on virtual machines
    - That's been applied at the Pay-As-You-Go subscription level.
  - When we go to the Compliance view, if it's not yet had time to run we have to just wait 
    - And click on Refresh until such time we start getting some information
    - For example, we can see the Disk encryption should be applied on virtual machines compliance report here for the Pay-As-You-Go subscription
    - Currently the Compliance state is Non-compliant, so 0 out of 1
    - It means we have zero out of one applicable item that are compliant with that.
  - If we take a look at that by opening it up, opening up the assignment details
    - Then when we scroll down towards the bottom, we'll see the offender
    - What is the one item that was not compliant?
    - Well, in this case we're talking about disk encryption, which applies to a virtual machine, shows us the name of the virtual machine
    - We can see the Compliance state for it is that it's Non-compliant.
    - If we click on the Details link for that, we'll get a bit more insight as to what's going on.
    - Here it says, No related resources match the effect details in the policy definition. In this case, looking for encrypted disks.
  - By viewing these compliance reports, we can determine whether certain machines are compliant with security standards such as this one
    - If not, we know where to focus our energy to bring those devices into compliance.


Policy Remediation
  - You can configure remediation tasks for certain types of Azure Policies when it comes to non-compliant resources.
An example of this would be a custom policy that uses the modify policy effect. Let's take a look at this here in the portal. I'm going to start by going to the Azure Policy tool.
And we'll first start by looking at an existing definition for a custom built policy.
So I'm going to change the Type drop-down list here on the right to Custom, there it is. Add Cost Center Tag, going to click to open up that custom policy definition, and let's take a look at the definition down below.
What's happening is we're looking for a tag in resources called CostCenter.
Now, depending on where we assign this policy will determine what it's going to look at.
Is it going to look at all resources in the subscription or just certain ones in a resource group? Depends on where this custom policy is assigned at which scope level. So if there is not a CostCenter tag, so if that works out to be false, what should we do?
Well, we want to add a CostCenter tag with an appropriate value. So then the effect is modify. 
And what we want to do is make sure that we add a specific tag, in this case the CostCenter tag, with the value of YHZ.
Now, this will certainly apply to newly created resources, they will automatically have this tag added. But for existing ones, we'd have to check the compliance. So let's see what that looks like. 
Let's close out of here, and let's go back to our Compliance view over here on the left, where we can see our Add Cost Center Tag has been applied to the Pay-As-You-Go or subscription scope.
And we can see that currently the state is Non-compliant, 0 out of 34 resources are compliant with that. So if we click on that, we'll be able to see the resources in question. In this case, it's going to be any resource that does not have that tag value.
So, CostCenter with a value of YHZ. We can scroll down and we can see the identity of those specific resources. So for example, the first one is a virtual machine called winsrv2019-1. Over on the far right, if I click the three dots button, I can select the Compliance reason to see why it's not compliant.
It's not compliant because the CostCenter tag doesn't even have a value, so there's nothing there. It needs to have a value of YHZ. 
So what I can do is create a remediation task by clicking that button of the same name up here at the top. 
When you create a remediation task, you are remediating in alignment with what that policy says should exist. In this case, that's the Add Cost Center Tag policy that wants the CostCenter tag with the value of YHZ to be applied. So we have a list of the resources here in our subscription that really need to be remediated and have that item added, that tag. So I'm going to go ahead and click the Remediate button at the bottom. And we can see a remediation task has successfully been created.
And it shows it here, when we're looking at our Policy compliance, we can see under the Remediation tasks tab that it's currently In Progress. So back here in our Compliance view, if we click Refresh, we can see that for our Add Cost Center Tag custom policy, the non-compliant state is changing.
 It will take a bit of time, we can keep on clicking the Refresh button. But now we've got 86% resource compliance. 
So if I click to open that up, let's go back and take a peek at the status of our remediation task. So if go to the Remediation tasks, we can see its Complete.
And if I clicked on it, then we'll be able to see some further detail.
Now just because it's complete, it doesn't mean that every resource in the subscription has been modified to be compliant. It means that it's complete in that the instructions have been sent, it just might not completely be done. So here we can see the resources against which that modify effect for adding that tag value has succeeded. So for example, for vnet1, a virtual network, let's take a look at that. If we actually click to open up that resource, did it or did it not automatically tag it?
Let's take a look. So I'm going to go Tags.
Now if there were any tags here already, we'll see those in addition to the new one. And it looks good. We apparently had a tag here called Project with the value of ABC. And now we can see CostCenter: YHZ has been added. And this is a result of having created a remediation task.

                    
Azure AD Role Overview
In Azure Role-Based Access Control, otherwise called RBAC is a way to delegate permissions to others to manage Azure resources.  
There are a number of built in roles that you can select from or you can define your own custom roles if they don't suit your needs. Some examples of built in roles include the owner role.
Now if you have the owner role, you have full resource management control of all resources in Azure. We haven't yet talked about the scope of where that applies, but unto itself that's what it means. Think of an RBAC role as being a collection of related permissions. You've got the contributor role. So resource control, other than changing RBAC access. Reader role, which implies read-only access. Other examples would include CDN endpoint reader for Content Delivery Network endpoint reader. So you can read endpoints. But that's it, can you configure them. Cost Management contributors you can read and write Azure cost configurations including working with budgets, virtual machine administrator login as it implies. You can read VMs in the portal and login with admin credentials.
Now there are many more built in roles than that, that's just to give us a sampling of what we might expect. But you can also work with custom roles. Maybe you need one role that combines virtual machine and cost management permissions for example. So what you would do is create a custom JSON role file, this is just a text file that uses JSON syntax. You have to know what that syntax is to properly define the role, and then you can create the role from that file. For example in PowerShell, you can do that with the New-AzRoleDefinition cmdlet, or in the CLI you might use AZ role definition create.
Working with a custom RBAC role file uses JSON syntax, you could even type this into your favorite text editor, it doesn't matter. But notice we've got the opening and closing curly braces at the very top and the very bottom. And the first item we see defined here is the "Name": custom VM roles It's got its own ID, the IsCustom flag third line down is set to true. We have a Description, and then we have a collection of actions. What are the permissions grouped together here within this role? So it looks like we have a bunch of read access to all items indicated with the asterisk in storage, network and compute, and then the ability to start and restart virtual machines. So this is what we would see within a custom RBAC role definition file.
Now we can assign roles, whether they're built in or custom at a variety of levels within the hierarchy in Azure. But before we get to that, let's talk about which principals we can assign it to. You can assign roles to users individually, but it's normally easier to do it on a group level. So you just add members to the group, they get the permissions for the roles assigned to the group. You could also do it for service principles. Think of a service principle as being kind of a dummy user account used by software. It's not actually user logging in, it's a software component that might require access, let's say, to some other resource like a storage account.
Then you've got managed identities. Now, this is something this is a built in type of security principle that's managed automatically by Azure. So this would be used for example, when if you're a software developer, you building custom solutions in Azure that need to authenticate to certain Azure services. So depending on what you're working with, will determine whether Azure creates the managed identity or not. So let's say that we've assigned a role to a group.
Where does that apply in the Azure hierarchy? Well, we can assign that at the subscription level, which means that the group members would have those permissions from the role for everything in the entire subscription, it flows down through the hierarchy down to resource groups and down to individual resources in resource groups. However, you could also assign RBAC roles to a specific resource group. And naturally those permissions would only apply for resources in the resource group. And if you need to be very granular, you can also assign it to a specific resource. So let's say you need to allow a virtual machine login for a group for one particular virtual machine. You can certainly do that by assigning the scope for that particular virtual machine resource.
Pictured on the screen we have a screenshot that shows us how inheritance works in the portal. So in the upper left, notice that we're looking at a resource group called Rg1. And if you look in the navigation panel, the Access Control (IAM) blade has been selected. That's what we're seeing on the right, we are viewing the permissions. And over on the right we can see Network Contributor which is a role has been assigned to a Group. That's called Central_Region_Canada and that was applied at this resource. Remember this resource is the Rg1 resource group. So the members of that group will have the network contributor role for resources in Rg1. Down below notice the Owner role, which was assigned to the Azure_Admins Group. Now, these groups are Azure AD groups. Notice over to the far right it says that that was (Inherited) from the Subscription level. So it's inherited from above but it's still applies here.


Azure AD Role Portal Assignment
You can use the Azure Portal to assign roles and also to view where the roles are effective. 
We're talking about Role-Based Access Control, or RBAC. So to get started here in the portal, I'm going to search for subscription, and I'm going to go to the subscription level, because I want to start by applying a role there.
Then we can examine how those permissions flow down the hierarchy, that means to resource groups within the subscription and within resource groups to individual resources. So let's start by opening up a subscription.
Now when you want to assign RBAC roles, regardless of which level you're doing it at, you always go into the properties of the item, in this case, the Subscription. And in the navigation bar, you click on Access control (IAM). Now from here, you'll be able to see any role assignments.
You can choose to View role assignments.
So if I click View, I can see that listed over here on the right, but I can also +Add role assignments, which we're going to do. So I'm going to click +Add, Add a role assignment. And the first thing I need to do is select the appropriate Role.
I can choose from the alphabetical list of role names. And bear in mind that a role is really just a collection of related permissions. So what I'm going to do is type in the word virtual just to filter this out. And we'll see here we've got a Virtual Machine Contributor role, which allows with the creation of virtual machines and management of them. So I'm going to leave that as the Role.
Now I can assign the access to Azure AD users, groups, or service principals.
So what I'm going to do here is take a look for a group by the name of east. And sure enough, I have an existing Azure AD group I've created previously called EastAdmins. I want to assign this role to that group. So EastAdmins is now showing up down below as a selected member.
I'm going to save that.
Now at this point, we want to check our work right here at this level, at the subscription level. So I'm just going to scroll over a little bit to the right so we can kind of see everything, including our scroll bar. And at the subscription level, notice for the Virtual Machine Contributor role, EastAdmins is part of that. And we can see that that is a Group and that it was assigned at the Scope of This resource. Now why don't we take a look at a resource group somewhere within the Subscriptions.
So for that I'm just going to go to Home, actually, I'll just open up my navigation bar on the left, and I'll just choose Resource groups.
I'm going to open up the properties of an existing Resource group.
And we know that to get to the RBAC portion of that item, we need to click on Access control (IAM), so I'm going to do that.
Now I don't want to make a role assignment here, what I want to do is View role assignments, so I'm going to click the View button. And I'm just going to scroll over just a little bit so we can see what's happening here.
And as I scroll down, notice that EastAdmins has the Virtual Machine Contributor role that is effective here in my resource group. However, it says Inherited, and it was inherited from the Subscription level. So why don't we go into an object within this resource group to take a peek.
So for example, if I click on Overview here for the resource group, one of the things I'll be able to do is see the resources down below that are in that resource group. It doesn't matter which one I pick. I'm just going to click on this network security group to open it up.
And as is the case with what we've been looking at so far to get to the RBAC section, we click Access control (IAM), so this is for an individual resource.
Let's View the role assignments over on the right, and we'll see, of course, that Virtual Machine Contributor EastAdmins is shown here with inheritance coming from the Subscription level.
So that's all that we need to do to be able to grant permissions to Azure resources through the use of roles in the portal.


Azure AD Role CLI Assignment
RBAC roles can be assigned using the Azure CLI.
Here in the portal I'm going to click on Cloud Shell to start up the CLI, and I'm going to start by creating a role assignment using az role assignment create.
The first thing I have to do is specify the name of the role that I want to grant, in this case --role and in quotes, "SQL DB contributor". I then have to determine who the assignee is with the --assignee parameter who you assigning this to. Now it could be a service principle and Azure AD group, in this case, it's an Azure AD user, specifically jhill. And then I've got the full email address or user name of that account. I want to make sure that the SQL DB contributor role is assigned to jhill, and I want the scope to be a resource group. So --resource-group, and Rg1. Could go ahead and press Enter to create that role assignment.
And it looks like it's good. We've got some returned JSON, and we can check our work here in the portal. Let's just minimize this.
Let's go into the Rg1 Resource group to see if user J Hill is shown there with the SQL DB Contributor role.
So I'm going to go to Access control (IAM) for Rg1.
And what we want to do in there is View the role assignments, so I'll just go ahead and click on that, scroll over a little bit and let's go down and take a peek.
Sure enough their SQL DB Contributor and Jen Hill is a member of that role at this level, This resource. It wasn't inherited from the subscription, so let's go back into the CLI.
So I can also view assignments from within here, of course as you might imagine, so az role assignment list --, let's say resource group rg1 since that's what we just looked at in the portal.
And we can see here that user principalName J Hill is assigned here.
And we can also see that the roleDefinitionName is SQL DB Contributor, and this is for the resource group of course Rg1 that we asked for, up above in the command line.
We can also remove role assignments from here as well.
To do that I would use the az role assignment delete command syntax. I need to specify the assignee, so --assignee, and it's going to be the user we just added here in this example, jhill. And have to specify the role because she might be assigned with multiple roles at that level, so --role SQL DB Contributor. And the scope where that was applied, that I want to remove it from, is the Rg1 resource group. So let's go ahead and press Enter. Now, that's going to remove that role assignment.
So I'm just going to use the up arrow key, back to where we were listing role assignments for resource group 1, or Rg1. And notice now nothing is returned.


Azure AD Role PowerShell Assignment
PowerShell cmdlets can be used to manage RBAC role assignments. Here in the portal, I'm going to launch the Cloud Shell to access those PowerShell cmdlets.

[Video description begins] The Microsoft Azure web portal opens. He clicks an icon called “Cloud Shell” and the PowerShell command prompt window opens. The following prompt is displayed: PS /home/danlachance72>. [Video description ends]

The first thing I'm going to do is create a new role assignment. Now to do that, I'm going to use the New-AzRoleAssignment PowerShell cmdlet. I'm going to use the -SignInName parameter. And I'm going to assign this to an Azure AD user jhill@quick24x7test.onmicrosoft.com. Now I could also apply this to a service principle in Azure AD or a group. But in this case, it's an individual Azure AD user. I have to specify the RoleDefinitionName, so I'll specify that parameter. In this example, it's going to be the SQL DB Contributor. And as we know when we work with RBAC, we have to determine the scope where the assignee can exercise those privileges. In this case -ResourceGroupName, Rg1. I could specify a subscription or an individual resource, here I want it done at the resource group level. So I'm going to go ahead and press Enter.

[Video description begins] He executes the following command: New-AzRoleAssignment -SignInName jhill@quick24x7test.onmicrosoft.com -RoleDefinitionName "SQL DB Contributor" -ResourceGroupName Rg1. The output displays the details of the role assignment. The prompt does not change. [Video description ends]

Now we can verify this using PowerShell cmdlets. So I'm just going to clear the screen and what we're going to do, is we're going to retrieve role assignments for Rg1 for that user.

[Video description begins] He executes the following command: cls. The screen gets cleared and the prompt does not change. [Video description ends]

To do that, I'm going to use Get-AzRoleAssignment -ResourceGroupName is Rg1, that's where we just assigned it. -SignInName is going to be our user J Hill. Let's go ahead and press Enter and see what it returns.
So we're seeing that user Jen Hill has been assigned the SQL DB Contributor role. And of course we asked for this at the Rg1 resource group level so she has those permissions for SQL database deployments within the Rg1 resource group. Now naturally, we need to know how to be able to remove role assignments using PowerShell.
We know how to add them and check them, what about removing them? We do that with the Remove-AzRoleAssignment PowerShell cmdlet. As you might expect, in this case, we're going to use -SignInName and specify our Azure AD user sign in name, the email address. I'm going to specify the role with -RoleDefinitionName. It's going to be SQL DB Contributor. And I have to apply that to a scope. Where do you want to remove that from? Well, that would be -ResourceGroupName of Rg1, so I'm going to go ahead and press Enter to remove the role assignment.
We're going to check our work. I'll use the up arrow key to bring up previous commands.
Up to where we get back to Get-AzRoleAssignment and when I press Enter, nothing is returned because user J Hill no longer has that role assigned in Rg1.


Azure AD Custom Roles
If the built in roles for RBAC in Azure don't meet your needs, you can then define your own custom roles in a JSON formatted file as I've got open here. So it's a JSON formatted file, it's just a text file really.
I've got the opening and the closing curly braces. And here, I'm defining the Name of my custom role to be Custom - Network Resource Reader. IsCustom is set to true and I've also got a description here that says, Ability to view network resources. Then you have to define what this role's actions are, what can someone do in terms of permissions if they are assigned this role. So here for actions, I'm specifying Microsoft.Network/*, so all Microsoft Network types of resources in Azure, but the ability to only read them, read.
There are no definitions for NotActions, only actions that we want to allow. And for the AssignableScopes here, I've set it at the subscription level with the ID of my Azure subscription. So now, how do we take this and create a custom role? Well, there are a number of ways that that can be done. We can do this in PowerShell and that's actually what I'm going to do here. So the next thing I need to do is launch the Cloud Shell so I can get to a place where I can issue PowerShell commands.
So I'm going to go ahead and launch Cloud Shell. Now, the first thing I have to think about is that the file that we just looked at for our custom JSON role definition was on-premises. I need to get it up here in the cloud in Cloud Shell. So I've got this button at the top here in the bar where I can upload and download files. I'm going to go ahead and click Upload/Download files, and then I'll choose Upload. So I've specified my file and it looks like the upload has completed. So the first time you open Cloud Shell, you're asked to set up storage. And this is one of the reasons so you can have persistent storage of items that you might deal with, in this case, a file I've uploaded. If I do dir, I can see indeed, there's the Create_Custom_Role.json file that we were just looking at in WordPad just a few minutes ago.
So what I want to do then is I want to make sure I create a new role from this. So I'm going to do that with the new-azroledefinition PowerShell cmdlet. I'm going to pass it the -inputfile parameter with the value of, in this case, create. And I can even use my tab completion to spell out the rest of it since I'm in the same subdirectory. Let's see what happens. I'm going to go ahead and press Enter to create this custom role, and it should be done.
Now, we can check this here in the portal. So again, it's called Custom - Network Resource Reader. So let's say we were going to go to the subscription level and apply that role.
So I'm going to go into my subscription.
We know that in the GUI when you want to work with RBAC, you go into Access control (IAM). So I'm going to do that.
And one of the things that we're going to do here is click +Add, Add role assignment.
And, we have a unified drop down list here of both built in and custom roles. Now remember, our role starts with the word custom. And you can actually select it from the list, or you can even filter the list if you so choose.
So if I type in custom, we can see right away, Custom - Network Resource Reader. That's the role we just created. And we can see the description here, Ability to view network resources. That's what we've just created. Now, you can also remove that from PowerShell. So let me just go back here into PowerShell.

[Video description begins] He closes the page. He switches back to the PowerShell command prompt window. [Video description ends]

Let's get rid of that.

[Video description begins] He executes the following command: cls. The screen gets cleared and the prompt does not change. [Video description ends]

I'm going to run get-azroledefinition, and I'm going to specify the name of it, which is going to be Custom - Network Resource Reader, the spaces between those items. Now when I do that, all it does is return that yes, that role is there, that definition exists. So I'm going to bring up that command again with the up arrow key.

[Video description begins] He executes the following command: get-azroledefinition -name "Custom - Network Resource Reader". The output displays the details of the role. The prompt does not change. [Video description ends]

What I want to do is pipe the result of that to the remove-azroledefinition cmdlet. So we're going to retrieve that specific role and pass it through and delete it. Are you sure you want to do, or we can actually suppress that message.

[Video description begins] He executes the following command: get-azroledefinition -name "Custom - Network Resource Reader" | remove-azroledefinition. A confirmation message appears. [Video description ends]

Let me just Control+C out of there.

[Video description begins] He clears the screen and the prompt does not change. [Video description ends]

So, if I bring back that full command again, I can just add -force, if I could spell that over correctly over here. And it will suppress that message so it will remove that role.

[Video description begins] He executes the following command: get-azroledefinition -name "Custom - Network Resource Reader" | remove-azroledefinition -force. No output is displayed and the prompt does not change. [Video description ends]

So if we use our up arrow key to go back a little bit, where we were getting that role definition, it no longer exists.

[Video description begins] He executes the following command: get-azroledefinition -name "Custom - Network Resource Reader". No output is displayed and the prompt does not change. [Video description ends]

Resource Locking Overview

[Video description begins] Topic title: Resource Locking Overview. The presenter is Dan Lachance. [Video description ends]

The purpose of Microsoft Azure resource locks is to control when others can modify or delete Azure resources of any type, whether that's intentional or unintentional.

[Video description begins] Azure Resource Locks. [Video description ends]

So it's a way to basically check out a resource, so to speak. And while it's checked out, in a manner of speaking, it can't be either modified or it can't be entirely deleted. We can set resource locks at the subscription level. And similar to how you apply RBAC roles at the subscription level and it flows down to everything in the subscription, like resource groups and resources, the same thing is true with Azure resource locks. If you set a resource lock at the subscription level, it will flow down to resource groups and resources. You could, of course, apply an Azure resource lock initially at the resource group level, or you might lock an individual resource such as a storage account, to prevent the modification of its properties. Now you can set the Azure resource lock to be read-only.

[Video description begins] Azure Resource Lock Levels. [Video description ends]

What that means is you are allowing read-only access to the item, so that it can't be reconfigured, so to speak. Or you could set it to not allow deletion or to prevent deletion of the resource.

[Video description begins] Azure Resource Lock Inheritance. [Video description ends]

So the inheritance, as we've mentioned, starts at the subscription level, then applies to resource groups, and then applies to individual resources. Now if you don't want that, in other words, you don't want the locking applying everywhere, simply specify the lock at the resource group or the individual resource level.

[Video description begins] VM and storage account are displayed as the individual resources. [Video description ends]

And you can disable or unlock the subscription, the resource group or the resource, at any point in time, once you've deemed it appropriate to allow modifications or the potential for deletion. Bear in mind that modification and deletion of an Azure resource is only possible anyways if somebody has the appropriate permissions to do so, which is usually granted through RBAC roles.

Resource Locking and the Portal

[Video description begins] Topic title: Resource Locking and the Portal. The presenter is Dan Lachance. [Video description ends]

In Microsoft Azure, a resource is an object that you define in the cloud, such as a virtual machine or a disk that you would attach to a virtual machine or a storage account or a SQL server. Any of those things are resources. And so we have the ability to use the portal to lock resources. Why would you do that? You would do it because you want to prevent either a modification of a resource, you want it to be read-only, or you want to prevent the deletion of it.

[Video description begins] The Microsoft Azure web portal opens. [Video description ends]

So we can set locking at various levels in the Azure hierarchy, such as at the subscription level. Now, that's what I'm going to do.

[Video description begins] He clicks the Subscriptions option and the corresponding page opens.[Video description ends]

For example, here if I go into the subscription, I'll be able to open it up, to reveal its properties, and I am interested primarily in resource locking.

[Video description begins] He clicks the Pay-As-You-Go row entry and the corresponding blade opens. It is divided into two parts: navigation pane and content pane. [Video description ends]

So I'm going to scroll all the way down under Settings where I see Resource locks.

[Video description begins] He clicks an option called "Resource locks" and the corresponding page opens. [Video description ends]

Any existing resource locks at this level will be shown. It says This resource has no locks. Okay, well, I could click +Add, and I could add a lock at this level.

[Video description begins] A section called "Add lock" opens. [Video description ends]

And when I do that, I specify a name and I can determine if it should be a Read-only lock, so to prevent modifications, or if I want to prevent deletions.

[Video description begins] He clicks a button called "Cancel". [Video description ends]

 I'm not going to do that though I could, but I'm not going to. Instead, I'm going to navigate to Resource groups.

[Video description begins] He clicks an option called "Resource groups" from the left-hand navigator and a page called "Resource groups" opens. [Video description ends]

So what I want to do then is take a look at the resource locking options at the Resource group level, which would be inherited by the resources in the Resource group. I'm going to click on my resource group Rg1.

[Video description begins] The corresponding blade opens. It is divided into two parts: navigation pane and content pane. [Video description ends]

And in the Overview blade, one of the things you'll see over on the bottom right are the resources in that resource group. So let's scroll down in the navigation bar and let's take a look at resource locks. So it's listed a little bit differently here. Under Settings, it just says Locks.

[Video description begins] He clicks an option called “Locks” and the corresponding page opens. [Video description ends]

If we take a look, we'll see if there are any locks that have been made here. Now, we've got the Subscription icon where we could take a look at subscription level locks.

[Video description begins] He clicks an icon called "Subscription" and a page called "Resource locks" opens. [Video description ends]

We were just there a few moments ago.

[Video description begins] He clicks a link called “Rg1 | Locks” and the Locks page opens. [Video description ends]

It's just a shortcut to get there. However, we can also add locks at this specific level for this particular Resource group.

[Video description begins] He points to Rg1. [Video description ends]

So that's what I'm going to do. I'm going to click Add. And I'm going to call this, let's say Lock1. And I'm going to set it as a Read-only lock here.

[Video description begins] He clicks a drop-down list box called “Lock type” and selects an option called “Read-only”. [Video description ends]

I could add Notes if I so chose, I don't choose to so I'm just going to click OK. And after a moment, we can see that Lock1 shows up here as Read-only for resource group 1. If I click Subscription once again, then we can see that it shows up at the subscription level and we can see the Scope that it's applied to is only rg1.

[Video description begins] The Resource locks page opens. [Video description ends]

Notice, you can Edit it to change any settings related to that or Delete that lock.

[Video description begins] He switches back to the Locks page. [Video description ends]

 If I go back to the Resource group, you can see the lock here.

[Video description begins] He clicks a link called "Lock1" and a page called "Edit lock" opens. [Video description ends]

And if you click on it, it'll pull up the items where you can modify its settings. But you can't delete it from here, you'd have to go to the subscription level and that's to be expected. Now, let's take a look at some of the resources within Rg1.

[Video description begins] He closes the page. [Video description ends]

We can do that by just scrolling up, clicking Overview. We'll see any resources deployed into this resource group, as we mentioned previously, listed in the bottom right.

[Video description begins] The corresponding page opens. [Video description ends]

For example, here's a resource group called, or pardon me, here's a network security group NSG called NSG-Windows.

[Video description begins] A blade called "NSG-Windows" opens. It is divided into two parts: navigation pane and content pane. [Video description ends]

If I click to open it up, we'll be able to look at the Locks for that particular individual resource.

[Video description begins] He clicks an option called "Locks" in the navigation pane and the corresponding page opens in the content pane. [Video description ends]

When I click Locks here, notice we can see Lock1 is applied Read-only. And it says Parent resource locks, can't edit them here. Click on the locks scope to go to that scope. Okay, so we'd have to go up to in this case rg1 to take a look at it. But interestingly, if we try to delete this resource, so let's say go back to Overview and normally we'll just go to Delete here.

[Video description begins] He clicks an option called "Overview" in the navigation pane and the corresponding page opens in the content pane. He clicks a button called "Delete" and a message box labeled “Delete network security group” opens. [Video description ends]

And normally, if you have the role permissions to do this it would succeed. Let's go ahead and say, Yes get rid of it.

[Video description begins] He clicks a button called “Yes”. [Video description ends]

It says, I can't do it, cannot do it because there is a lock.

[Video description begins] Another message box opens. [Video description ends]

And it's at the Rg1 level. So therefore, that's not going to happen. It's read-only, which will also prevent modifications here to this particular object.

[Video description begins] He clicks an option called "Inbound security rules" and the corresponding page opens. [Video description ends]

So for example, if I go to Inbound security rules, let's say I go to +Add a new rule, we'll just fill in a couple of blanks here really quickly.

[Video description begins] He clicks a button called "Add" and a page called "Add inbound security rule" opens. [Video description ends]

So I'm just going to accept all of the defaults and I'm going to click Add.

[Video description begins] The page closes and a message box opens. [Video description ends]

Well, it didn't even like that. So I can't even modify it, let alone delete it. Bear in mind, we set a read-only type of lock at the resource group level and it's flowing down at the resource level. So to get rid of all of this, what I could do is go up to the subscription level, as we saw because that's where it allows us to actually delete locks.

[Video description begins] He switches back to the Subscriptions page. [Video description ends]

So I'm going to do that, I'm going to go back into my Pay-As-You-Go subscription. And I'm going to scroll down and look at Resource locks.

[Video description begins] He clicks the "Pay-As-You-Go" row entry and the corresponding blade opens. [Video description ends]

And we'll see the resource lock applied at the resource group level.

[Video description begins] He clicks an option called “Resource locks” and the corresponding page opens. [Video description ends]

So I'm just going to take a look at that.

[Video description begins] He clicks the "Lock1" link and the "Edit lock" page opens. [Video description ends]

Now of course, we can only edit what's there, but if we scroll to the right to see what's over on the far end, there's the Delete option.

[Video description begins] He clicks the Cancel button and the page closes. [Video description ends]

So I'm going to press Delete, and now it's gone.


Resource Locking and the CLI
Resource locking can be managed using CLI commands just as well as it can be done using the portal.
So I'm going go into the Azure CLI and I'm going to start by using the az -h command because I don't know what the syntax is. So there's a lot of stuff here, the next level commands after az.
I'm going to guess it might be in the Rs for resource lock, but I don't see anything like that. Okay, not that. I'm going to next guess that it's somewhere in the Ls. Here it is, lock, Manage Azure locks.
So therefore, I can do az lock -h to try to figure out how to proceed from here.
So, to Create a lock, Delete a lock, list locks, and so on. Got it. So, I'm going to run az lock create, and I'm going to create a lock here called Lock2.
And I'm going to set it at the resource group level. I don't have to, I could set it at the subscription level. I could even set it at an individual resource level. But commonly, you would find it would be done at the resource group level, in this case, Rg1. I'm going to specify --lock-type and I'm going to set it to readonly. So I want to prevent modification, which also includes preventing deletion. So it's called Lock2, this looks good.
Let's check it out in the portal to see what it looks like in Rg1. So let's see.
I'm going to go to my navigator up here on the left and go to the Resource groups view, where we are going to see Rg1.
I'm just going to go ahead and click to open that up.
Let's go down and check the locks for it shall we. So scroll down and we're going to take a look at the locks, there it is, Locks. And we can see that Lock2 Read-only has been set here.
And again, it's been set at this level rg1. Now of course, if we scroll over to the far right, we can choose to Edit or Delete it. We could also go up to the Subscription level, where we'll see all the locks in the subscription, even if they weren't tied to the subscription levels.
There it is. And from here, we can also Edit and Delete it at that level. But of course, we can also do that in the CLI.
Back here in the CLI, for example, we might run az lock list.
And here, we'll see that we do have a lock that's applied it's called Lock2, it's been applied to Rg1, and the locking level has been set to ReadOnly.


Resource Locking and PowerShell
You can use PowerShell cmdlets to manage resource locking in Azure.
To get started here in PowerShell, I'm going to run get command and I'm going to search for any cmdlets that have resourcelock in their name. So I'm going to pad the string resource lock with an asterisk on either end. So as long as it's got resource lock in the name, I want to see the cmdlet.
And right away we can see for instance, New-AZResourceLock to create a new lock, or Get-AZResourceLock to retrieve a list of locks through Azure. We even have the option to remove or set a lock.
And if I wanted more details on any one of these, I could run get-help, let's say a new-azresourcelock. I could ask for detail, and maybe pipe it to more to stop after the first screen full of output.

[Video description begins] He executes the following command: get-help new-azresourcelock -detail | more. The output displays the details and syntax of the command. The prompt does not change. [Video description ends]

Here I can see the syntax for this cmdlet, including the parameters, such as -LockId, -LockLevel and so on, even to the point where I'll see an example of how I can actually create a resource lock.

[Video description begins] He clears the screen and the prompt does not change. [Video description ends]

Let's get started by retrieving resource locks with get-azresourcelock. I'm going to press Enter.

[Video description begins] He executes the following command: get-azresourcelock. The output displays the details related to resource lock. The prompt does not change. [Video description ends]

So it looks like we already have a lock called Lock2 that has been applied to a resource group called Rg1. And the level we can see here has been set as ReadOnly. So what I want to do is remove that lock. In order to do that, I need to get this LockId.

[Video description begins] He highlights the LockId value in the output. [Video description ends]

So in order to do that through variables, I'm going to create a variable called $lock.

[Video description begins] He clears the screen and the prompt does not change. [Video description ends]

So the variable's $lock and it's going to equal the return value of running get-azresourcelock. I'll specify a lock name of lock2 and we know that that applies to a resource group called rg1. But I need the lockid property. Notice I've enclosed that expression within opening and closing parentheses. That's because .lockid will be a property of us retrieving that lock with that statement. Otherwise it'll think we're looking at lockid as being a property of rg1.

[Video description begins] He executes the following command: $lock=get-azresourcelock -lockname lock2 -resourcegroupname rg1.lockid. The output reads: Get-AzResourceLock: LockNotFound : The lock 'lock2' could not be found. The prompt does not change. [Video description ends]

Actually, let's see what that would look like in terms of an error if we didn't have those parenthesis there, what would it look like? Okay, well, we're getting some kind of a message about lock2 could not be found. So it's having a problem finding all of this. However, if I bring up the previous command where we did have our open and close parentheses, it didn't give us any complaints.

[Video description begins] He executes the following command: $lock=(get-azresourcelock -lockname lock2 -resourcegroupname rg1).lockid. No output displayed and the prompt does not change. [Video description ends]

And so if we just run $lock to see what's in the variable, looks like it's got the lockid because that's what we asked for, that's the property that's stored in the variable.

[Video description begins] He executes the following command: $lock. The output reads: /subscriptions/048b82ac-4519-403b-ab05-6b4305502109/resourceGroups/Rg1/providers/Microsoft.Authorization/locks/Lock2. The prompt does not change. [Video description ends]

Then given that we have that it's at this point that we are able to remove that resource locks. We have a lockid. We can do that with remove-azresourcelock -lockid, and we'll just pass it my variable now $lock. And actually if I don't tell them anything, it asks me for confirmation which I'll Ctrl C to that and then I'll clear the screen and bring up that command again, I'm just going to add -force to suppress it asking me and after a moment looks like it's done.

[Video description begins] He executes the following command: remove-azresourcelock -lockid $lock -force. The output reads: True. The prompt does not change. [Video description ends]

We can verify this with get -azresourcelock.

[Video description begins] He executes the following command: get-azresourcelock. No output displayed and the prompt does not change. [Video description ends]

Previously it showed us lock2 for rg1, the resource group but now it shows nothing because it's been successfully removed.


Resource Locking and Templates
Not only can you use the CLI PowerShell and the portal to manage resource tags in Azure, but you can also apply tagging from an ARM template. ARM standing for Azure Resource Manager. I've got an example here in WordPad, where essentially what we're looking at here is the type.
This is Microsoft.Authorization/locks. I've got a name here. So I'm going to create a resource lock here, and I'm going to name it Rg3Lock. The level will be ReadOnly, and we can specify any additional notes.
What we don't see in here is the scope to which the resource lock will be applied. That happens at deployment time when the template is deployed.
So let's go ahead and see that. Here in the portal, I'm going to click Create a resource because I want to create a template deployment from my template.
So I'm going to search for template, I'll choose Template deployment.
I'll choose Create, there are a bunch of ways that this could be done, I could have created this template deployment from the CLI or PowerShell.
I've decided I want to do it this way. So I can choose for example, Build your own template in the editor, now we already have it so I can just click Load file.
So I've specified the template file that we looked at a moment ago in WordPad.
So it's going to create a lock called Rg3Lock. It's going to be ReadOnly. So I'm going to go ahead and Save that.
And it automatically pops up into the Custom deployment for that template where we can choose the Resource group where you want that applied.
Let's say Rg3, and I'm going to have to go down and agree to the terms and conditions and I can click Purchase. So now the template deployment has begun. In other words, the lock to resource group Rg3 is in the midst of being applied. Now once it says it's done, which it just did, we're going to go to the resource group and take a look at the locks. So in the Resource group navigation bar, I'm going to click down on Locks and lo and behold there's our lock Rg3 and it's set as Read-only.


Resource Tagging Overview
In Azure, we know that a resource is something that can be deployed in the cloud, whether it's a SQL database or whether it's a virtual machine, a storage account, a network interface, and so on.
Well, we can tag resources and what that really means we're doing is we're adding metadata to them. Now why would you want to do that? You want to add tagging to resources because it allows you to add meaningful additional information to them. Such as related to a department, that that resource might have been deployed by, or a client, that resource should be billed to, or a project it should be billed to, or a cost center.
You can also use policies in Azure to enforce tagging. For example, you could set a policy so that any new resources deployed let's say in a particular resource group will automatically have a cost center tag applied with a specific value. That can be automated. Each resource can have up to a maximum of 50 tags. Now not every single type of Azure resource will support tags, but the vast majority of what you're going to want to do it to, they will support it. The other thing about this is that resource group tags are not inherited. So if you add a tag to a resource group, that does not mean it will automatically flow down and set that tag for all of the resources in the resource group. If you want to do that, look at working with Azure policies that have a modify effect for tagging purposes. You can use the CLI to work with resource tagging.
In our first example, we've got az tag list that's being piped to the line filtering grep tool in UNIX and Linux. And we're asking to display the tagName property.

[Video description begins] The following command is displayed: az tag list | grep "tagName". [Video description ends]

What that will do is give you a list of all of the tags in the entire Azure subscription. You can create a tag with az tag create, here we're naming it DeptID.

[Video description begins] The following command is displayed: az tag create --name DeptID. [Video description ends]

We can also add tag values with az tag add-value.

[Video description begins] The following command is displayed: az tag add-value --name DeptID --value 1234. [Video description ends]

So here we're adding it to DeptID, the value is 1234. You can even apply to a specific resource such as az network vnet update.

[Video description begins] The following command is displayed: az network vnet update -g rg1 -n vnet1 --set tags.DepID=4555. [Video description ends]

So we're applying a tag to a specific VNet in a resource group called rg1. And the name of that is vnet1. And we're using --set tags. and then Dept ID equals in this case the values of 4555. Resource tagging is also possible using PowerShell.

[Video description begins] Azure Resource Tagging - PowerShell. [Video description ends]

In our first example, we're creating a variable called $storaccount. And it's essentially going to point to a storage account. Now we get that by running get-azresource.

[Video description begins] The following command is displayed: $storacct=get-azresource -resourcename storacct3345 -resourcegroupname rg3. [Video description ends]

We specify the name of the resource, in this case, the storage account name and the resource group it's deployed into. So then our variable can be used to refer to that storage account. And in our second example, that's exactly what's being done. We're calling upon our variable. Then we're calling upon .tags and .add, because we want to add the CostCenter tag with the value of YHZ to the storage account.

[Video description begins] The following command is displayed: $storacct.tags.add("CostCenter","YHZ"). [Video description ends]

Then to commit that to the resource to the storage account, we run set-azresource. We use the -tag parameter.
And in this case, we refer to the $storacct variable .tags property. And we use the -resourceid parameter and give the ID, the resource ID of our storage account variable to write to. And I'm using -force here just to suppress any messages that might pop-up asking you for sure here in PowerShell. The next thing I can do is retrieve resources.
Here, I'm using Get-AzResource with the -Tag parameter. And I refer to the tag within curly braces after the @ symbol. So in quotes, I've got CostCenter, it's the name of the tag, equals and then in quotes, I've got the value I'm looking for, YHZ. Now all of that is enclosed within open and close parentheses because if I don't do that, it's going to try to use .Name as a property of YHZ. That's not quite it. We need .Name to be a property of the return result of what executes first within the parentheses, in other words, retrieving the tags. We want to make sure we get the name of the resource. So what that command will really do is it's going to show us the names of all Azure resources in the subscription that have "CostCenter" = "YHZ". So it could potentially be a pretty long listing. In our last example, we can also remove tags.
So in this case, we've already got our storage account pointing to in this case to storage account. Doesn't have to be a storage account, could be pretty much any type of resource that supports tagging. But we're calling upon the variable .tags.remove. And in parentheses and double quotes, I'm just giving it the name of the tag I want to remove, in this case CostCenter.


Resource Tagging and the Portal
Tagging resources in Azure is useful because tags are metadata. It's key and value pairs up to 50 that you could add for each individual Azure resource. You might want to tie a resource to a cost center, or a department, or a project, or something like that. Which facilitates searching, grouping, and even looking at things on a per billing basis for specific tags.
So I'm going to go ahead here and get started in Azure by going to the All resources view where I'm going to open up an existing resource.
It doesn't matter which one it is, let's say I scroll down and open up a virtual machine.

[Video description begins] He clicks a resource name called "WinSrv2019-1" and the corresponding blade opens. It is divided into two parts: navigation pane and content pane. [Video description ends]

When you click on an Azure resource, in the navigation panel, you'll see Tags. And when you click Tags, you'll see any existing tags or key and value pairs that have been assigned to that resource. And you can make changes to them up to having 50 key and value pairs.

[Video description begins] He clicks an option called “Tags” and its corresponding page opens in the content pane. [Video description ends]

Currently this virtual machine has two. Project : ABC is the first tag and CostCenter with the value of YHZ is the second one. And I can even add a third one here. So for example, I might tie it to a department. So I'm going to put it Department. Now if I've already created that, as I start typing it'll show up.

[Video description begins] He enters Department in a text box under a column name called "Name". [Video description ends]

However, nothing's popping up so this is a brand new tag I'm creating. And I'm going to set the Value to IT.

[Video description begins] He enters IT in a text box under a column name called "Value". [Video description ends]

So we've now got a third tag that we are adding here to this particular resource. Now we can go back and remove any one of these at any point in time. However, I'm going to click Save. So now that we've got those listed, we see the third one has been added at the bottom. If I were to go to another resource, let's close out of this virtual machine. Let's just pick a storage account and let's look at the tags for it.

[Video description begins] He clicks a resource name called "storacct333325" in the All resources page and the corresponding blade opens. [Video description ends]

And when I click on Tags, I'll see whatever it's been tagged with already.

[Video description begins] He clicks the Tags option and its corresponding page opens. [Video description ends]

And bear in mind, Azure administrators can apply policies that can add default tags. So there might be times when you're creating a resource and you don't add tags. And after you check it, after it's been created, there are tags. That's because of a policy. Anyway, here we can see this storage account has CostCenter : YHZ. If I were to type department, we'll notice it already knows it exists. And in the same way, it knows it's already got a value that's been typed in for another resource. And that's fine, we can go ahead and work with that.

[Video description begins] He enters Department under the Name column and IT under the Value column. [Video description ends]

When I click that, it's kind of like a little filter, Now, notice that we've also got a little square icon also over here, and it allows me to show resources with this tag. So let's do it for the first one here, CostCenter : YHZ.

[Video description begins] A page called "Resource with tag CostCenter : YHZ" opens. It includes a table with five columns and several rows. The column headers are Name, Type, Resource group, Location, and Subscription. [Video description ends]

it'll show me resources that have been tagged with that item. So specifically, we can see that all of these items are listed here. And let's just kind of move over a little bit so we can see them all. So they're all listed here as being items that are tagged with that same value. So we can see at the top here, Resources with tag CostCenter : YHZ. Now when you're creating a new resource, for example, let's just get out of here, we're not going to save that. I'm going to click Create a resource.

[Video description begins] He closes the Resource with tag CostCenter : YHZ page. The New page opens. [Video description ends]

Let's say we were going to create a brand new storage account. It could be anything but let's say that's what it was.

[Video description begins] He enters Storage account in the Search box and selects the corresponding option. A blade called "Storage account - blob, file, table, queue" opens. [Video description ends]

Now when you're in the midst of creating a new resource in Azure, during the creation, whether in the GUI or at the command line, you can specify tags.

[Video description begins] He clicks a button called "Create" and a blade called "Create storage account" opens. It includes tabs called "Basics", "Networking", "Advanced", "Tags", and "Review + create". [Video description ends]

We can see the Tags part of the wizard right here.

[Video description begins] He clicks the Tags tab. [Video description ends]

And when you go there, it's going to look familiar, you can put in the name and value, up to 50 of them. Okay, so we can do that as well. Let's go back to our All resources view.

[Video description begins] The All resources page opens. [Video description ends]

Because another aspect of working with tags in the GUI here in the portal, is that you can modify a selection of objects in terms of tagging. What that means is if I were to, let's say, put check marks by a couple of these resources, I can then click the Assign tags button up at the top of the view.

[Video description begins] A blade called "Assign tags" opens. [Video description ends]

Now within here, I'll see each of the selected items listed and I can delete tags and make changes. But I can also add one up here. So for example, if I wanted to, I could put in a tag, let's call it Stage. And for Value I'm going to put in Testing.

[Video description begins] He enters Stage under the Name column header and Testing under the Value column header. [Video description ends]

So it's the testing stage that I'm applying to this and I'm going to go ahead and click Save.

[Video description begins] The blade closes. [Video description ends]

So if I look at any one of these items, let's say this storage account, this second one here that was part of our initial selection.
We can also see it says it assigned it to three resources. But let's just check this one anyway. If I go to Tags, I'll see whatever was already applied previous to my last action.
But I will also see that Stage was added with the value of Testing.


Resource Tagging and the CLI
The CLI can prove very handy when it comes to manipulating tags in an Azure environment. 
To get started here, I'm going to type in az tag list. Now when I do that, it should show me details about all of the tags in this entire subscription, but there's too much metadata here.
All I really want to see are the names of tags. So I'm going to clear the screen, I'm going to use the up arrow key to bring up that previous command.
And I'm going to use --query [ ] because it's an array or list of items. And for each of them, we want to see tagName, where Name has a capital N.
That's better. So now I can see the names of tags, not the values that have been applied in my entire subscription. I want to add a new one. So I'm going to run az tag create. And I want to create one, --name, called ClientID. We might want to do this if we want to track resources based on clients, for doing projects for clients, for billing purposes, for chargeback to clients.
So what I've done is created the tag called ClientID.
And we can verify this, of course, if we bring up, using the up arrow key, our az tag list command where we're querying for tagName.

[Video description begins] He executes the following command: az tag list --query [].tagName. The output displays the lists of tags. The prompt does not change. [Video description ends]

There's ClientID shown at the bottom of the list, perfect. Now I want to add a value for the ClientID tag and then we can apply it to a resource. So to add a value, I'm going to run az tag add-value --name, well, the name of the tag is ClientID and --value. I'm going to set it to a value of 1234.

[Video description begins] He executes the following command: az tag add-value --name ClientID --value 1234. The output displays the details of the value added to the tag. The prompt does not change. [Video description ends]

Now I want to apply that to a resource. So to do that, I'm going to use, let's say, az network vnet update. I'm going to apply this to a VNet, a virtual network, that's deployed in a group, -g, called rg1, resource group 1. -n for the name of the VNet, is Vnet1, and --set tags. in this case ClientID. And of course, I could also specify the value here, 1234, that I want to add to that VNet.

[Video description begins] He executes the following command: az network vnet update -g rg1 -n Vnet1 --set tags.ClientID=1234. [Video description ends]

So by adding the value up above, what we're really simply doing is making it available to be assigned to individual resources.

[Video description begins] He opens the Microsoft Azure web portal. A blade called "Vnet1 | Tags" is open. [Video description ends]

And if we flip over here into the portal where I've pulled up the tags for Vnet1, we indeed will see that ClientID with a value of 1234 has been successfully added.


Resource Tagging and PowerShell
You can use PowerShell cmdlets to manage tags in an Azure environment.
So to get started, I want to make sure I get a handle on a specific storage account that I've already created. And I want to store that in a variable that I'm going to call storacct. So we can see here $storacct. And I'm going to tell it I want to run get-azresource-resourcename. Here's the name of the storage account I have. And it's in a resource group called rg1. Now I want to do this because I want to apply tags to that storage account.

[Video description begins] He executes the following command: $storacct=get-azresource -resourcename storacct333325 -resourcegroupname rg1. No output is displayed and the prompt does not change. [Video description ends]

So now let's just run $storacct to make sure we have a handle on that storage account. Looks good and currently we can see the tags for it CostCenter YHZ.

[Video description begins] He executes the following command: $storacct. The output displays the details of the variable storacct. The prompt does not change. [Video description ends]

Now what I want to do is add something new. So I'm going to go ahead in terms tags and run $storacct. We have that variable the points to the $storacct.tags.add. And in parenthesis and I will start double quotes. I want to set the Stage key with the value of Development and I'm going to go ahead and press Enter.

[Video description begins] He executes the following command: $storacct.tags.add("Stage", "Development"). No output is displayed and the prompt does not change. [Video description ends]

Now let's just clear the screen with cls and use the up arrow key to bring up our $storacct variable. Notice that Stage and Development the key and value pair have been added as a tag for that storage account. I can also do other stuff like this.

[Video description begins] He executes the following command: $storacct. The output displays the details of the variable storacct. The prompt does not change. [Video description ends]

So in parenthesis get-azresource -tag. And I'm going to specify here an @ symbol with an open curly brace, and in quotes I'm going to say Stage and = Development put all of the each of these items in quotes. And the next thing I'm going to do is close off my curly bracket and my parentheses and .Name. What does this mean? Well, it means that what I want to do is I want to show the names of any Azure resources that have that listed tag name and value. So "Stage"="Development". When I press enter, we still don't see anything here.

[Video description begins] He executes the following command: (get-azresource -tag @{"Stage"="Development"}).Name. No output is displayed and the prompt does not change. [Video description ends]

Well, that's strange because when we looked at our variable, it returned Stage Development. Well, that's the variable. It's not been committed to Azure yet. So what we need to do is run set-azresource to apply the change -tag, and then $storeacct.tags the tags property. Because we know that the tags property here contains what we just modified plus what was already there to begin with. So, $storeacct.tags -resourceid give it the resource ID that's going to be $storeacct.resourceid. Great working with variables isn't it makes things much easier. I'll just use -force to suppress any questions. And after that's done, it will have committed that change to that resource.

[Video description begins] He executes the following command: set-azresource -tag $storacct.tags -resourceid $storacct.resourceid -force. The output displays the details of the changes made. The prompt does not change. [Video description ends]

So I'm going to clear the screen we're going to use the up arrow key to get-azresource once again. And now we can see our storage account storacct333325.

[Video description begins] He executes the following command: (get-azresource -tag @{"Stage"="Development"}).Name. The output reads: storacct333325. The prompt does not change. [Video description ends]

Indeed is tagged with "Stage"="Development".                    


Azure Monitoring Overview
In order to keep your Azure environment secure and running optimally, you should perform monitoring.
Now in order to monitor something to determine if something is abnormal, you need to know what is normal. And that's where monitoring baselines kick in. Whether it's for determining what normal activity looks like at the network level, for the amount of network transmissions, for example. What is normal when it comes to activity on a host. Such as how much memory is usually used within normal workload conditions, or how busy the CPU is. And that also goes for an application, which could be spread out across multiple virtual machine hosts. Monitoring baselines will vary from one company to another, even from one department within an organization to another. Depending on how technology is being used. So an anomaly from the normal usage could indicate a security incident. It could just be a normal spike in activity. But if we gather enough activity over time, we'll know that that occurs.
So a security baseline then can be used to detect anomalies. And performance baselines can also be used simply to detect that things are busy or that they have slowed down. And in response we might resize virtual machine instances. Or configure autoscaling accordingly to accommodate the increase or decrease in those workloads. So baseline anomalies could show up as busy CPU utilization. Which could be indicative beyond of just a busy workload of cryptocurrency mining, if the machine has been infected, or ransomware. If we have excessive network traffic way beyond normal that could be indicative of a distributed denial of service or a DDoS network attack. Or we might have device operating system changes while the hardware is the same. Now that would mean that we might have a Windows host that is all of a sudden a Linux host, but everything else about it looks the same. So that could be indicative of someone having infected the machine or maybe booted it from a USB drive into a different OS, and so on. The other thing to think about is system and data access outside of regular work hours at irregular times. So there are a lot of different aspects of Azure resources that we might monitor to determine if there's an anomaly of some kind.
Now Azure monitoring gives us a number of options to track this stuff, including centrally. So we can monitor Azure resource activity logs. Now these activity logs are essentially audit logs of management tasks applied to Azure resources. Such as starting and stopping a VM or reconfiguring a VM or a web app. We can also look at the Azure Performance Diagnostics Windows VM extension. If you enable performance diagnostics, then you're getting more details on metrics like CPU utilization and traffic in and out, and disk I/O activity, for monitoring purposes. You can also pin a lot of these items to custom dashboards. So that you can pull up a dashboard and see what's of relevance for you when it comes to monitoring your Azure environment. You can also work with Azure Application Insights if you want to track activity and performance metrics for a specific web app. So that's really what that one is about.
Here on the screen we have a screenshot of monitoring some performance metrics for an individual VM or virtual machine. So we can see the CPU average utilization, the network traffic total, the disk bytes total, the disk operations per second on average. These are important metrics to monitor. However, we can also monitor things centrally instead of doing this and going to an individual Azure resource, in this case a VM.
And that's where Log Analytics workspaces kick in. This is centralized monitoring of Azure log data and also performance metric data. So configuration and log data feeds into Azure Monitor from the Log Analytics workspace. You can also run log queries in the Log Analytics workspace. Or from Azure Monitor, again, because Azure Monitor gets a lot of its data from Log Analytics workspaces. Your alert notifications can be configured in the Log Analytics workspace.
Now, there are a number of data sources that Log Analytics workspaces draw upon. Including storage account logs, Azure activity logs, physical and virtual servers. And you can even link it to your existing System Center Operations Manager or SCOM environment, if you have one. Now by adding servers to the Log Analytics workspace. It means that their performance metrics and log data can be collected centrally in the Log Analytics workspace.


Individual Resource Monitoring
There's a wealth of information available for each and every Azure resource whether you're interested in monitoring the performance of an item or auditing who did what to it from a management perspective or viewing things like operating system log details for VMs. 
All of this is available here in the portal. So I'm going to start in the portal by clicking to open up an existing virtual machine.

[Video description begins] He clicks a virtual machine called "WinSrv2019-1" and the corresponding blade opens. It is divided into two parts: navigation pane and content pane. [Video description ends]

And the first thing we're going to do is click on the Activity log on the left.

[Video description begins] He clicks an option called "Activity log" in the navigation pane and the corresponding page opens in the content pane. It includes a table with six columns and three rows. The column headers are Operation name, Status, Time, Time Stamp, Subscription, and Event initiated by. [Video description ends]

This is a log that really only relates to the management of this resource in Azure. And so on the right the default Timespan is the Last 6 hours. Let's get more stuff shown here by changing that, let's say, to the Last month and I'll click Apply.

[Video description begins] He clicks a drop-down list box called "Timespan" and selects an option called "Last month". He clicks a button called "Apply". [Video description ends]

Now we'll see that there are quite a few other operations related to the management of this VM. When we filter in that way we can see the name of the operation, whether it succeeded or not, the date and time stamp, the subscription it applies to and the user that initiated it. We can also further filter this. So for example, for Event severity, let's say the only thing I'm really interested in are Critical and Error messages, I'm not interested in seeing Warning or Informational.

[Video description begins] He clicks a drop-down list box called "Event severity". [Video description ends]

So I can unselect those or deselect them and now I've got a really small filtered list. And I can click on any one of these specific activity log entries to get more detail.

[Video description begins] He clicks an Operation name called "VirtualMachines" and the corresponding blade opens. [Video description ends]

Now, we also have other options for monitoring here.

[Video description begins] He closes the blade. [Video description ends]

I'm going to scroll way down in the navigation bar down to the Monitoring section where I'm going to click on Metrics. This is more related to the performance in this case of the VM.

[Video description begins] The corresponding page opens in the content pane. [Video description ends]

So we can select a metric from the drop-down list. For example, I'll just go down in this list and choose Percentage CPU.

[Video description begins] He clicks a drop-down list box called "Metric" and selects an option called "Percentage CPU". [Video description ends]

Now the Percentage CPU item is added here and we can see its value. We can see it's been plotted against the timeline on the bottom, and the percentage going across the top, from the bottom to the top.

[Video description begins] He points to a graph. [Video description ends]

We can also add metrics, you have more than one thing shown at the same time.

[Video description begins] He clicks a button called "Add metric". The options called "Scope", "Metric Namespace", "Metric", and "Aggregation" are displayed. [Video description ends]

So I'm going to go ahead and maybe and add Disk Read Bytes/second. And when you do that it will be plotted.

[Video description begins] He clicks a drop-down list box called "Metric" and selects an option called "Data Disk Read Bytes/Sec (Deprecated)". [Video description ends]

You'll see it might have a value. So we can see the values are being plotted but notice in the legend it's a different color. So this could be very important as well.

[Video description begins] He points to the graph. [Video description ends]

So we can monitor these metrics to track how this is doing. So performing well, do we maybe need to resize the VM, maybe scale it up so it can handle the workload better? That type of thing. We can also go to Logs over on the left.

[Video description begins] He clicks an option called “Logs” and its corresponding page opens in the content pane. [Video description ends]

Now it's not enabled by default, so I'm going to go ahead and click the Enable button. Now when you do that, you're going to have to select the subscription and a Log Analytics workspace that you want this associated with. So I'm okay with the default selection for the Log Analytics workspace. So I'm going to go ahead and click Enable.

[Video description begins] He clicks a button called "Enable" and a message box called "Submiting deployment" is displayed. [Video description ends]

Once that's enabled and you're still in the Logs blade, over on the right you'll see that things have changed.

[Video description begins] A tab called "New Query 1" is displayed. It is divided into two parts: navigation pane and content pane. [Video description ends]

You've got a query builder tab at the top here, it's called New Query 1. So this is a log query and down the left, you have a bunch of table names that you can select from.

[Video description begins] He points to the navigation pane. [Video description ends]

 Now if you expand any of these table names, what you will be exposing are the fields or columns within those tables.

[Video description begins] He expands a table name called "SecurityEvent". [Video description ends]

And you can see the data type is string or whatever it happens to be depending on the nature of what you're looking at. You can actually start selecting items.

[Video description begins] He expands a table name called "AzureActivity". [Video description ends]

So for example, if I double-click on one of these items, such as a column, I could see it puts it in here over on the right.

[Video description begins] He double-clicks a column name called "ActivityStatus (string)". The ActivityStatus column name is displayed in a text box called "Type your query here or click one of the example queries to start" in the content pane. A section called "Get started with sample queries" is also displayed in the content pane. It includes tabs called "History", "Performance and availability", and "3 more". [Video description ends]

But of course you can also select from some example query. So if I go to Performance and availability, I could start scrolling down and saying maybe I want to view Virtual Machine available memory and I could run that.

[Video description begins] He clicks a button called "Run" in a section called "Virtual Machine available memory". A code snippet is displayed. [Video description ends]

It puts in the query statement here, where for example, the name of the table which is case sensitive is Perf. And then I'm piping that to where and I'm asking for TimeGenerated over an hour ago and so on and you can run the query by clicking Run. If there are no results, then you're going to get a message that says there are no results. Otherwise, you'll see some of the details. So this is one thing that we can do here, work with log queries within an individual resource. Let's go up to Diagnostic settings here for this Windows virtual machine.

[Video description begins] He clicks an option called “Diagnostic settings” and its corresponding page opens in the content pane. [Video description ends]

So I've got a storage account selected here for storage.

[Video description begins] He points to a storage account called "storacct333325" in a drop-down list box called "Diagnostics storage account". [Video description ends]

And I'm going to choose Enable guest-level monitoring.

[Video description begins] He clicks a button called "Enable guest-level monitoring". The corresponding page opens in the content pane. It includes tabs called "Overview", "Performance counters", "Logs", "Crash dumps", "Sinks", and "Agent". [Video description ends]

The next thing I can do is determine under Overview, for example, which performance counters I'm interested in gathering. There are some default selections.

[Video description begins] He clicks a link called "Configure performance counters" and the Performance counters tab opens. He points to a table with two columns and six rows. The column headers are Performance counter and Sample rate (seconds). [Video description ends]

I can go to Logs and determine which operating system logs I'm interested in and some details.

[Video description begins] He clicks the Logs tab. [Video description ends]

So for example, I'm interested in the Application log with Critical, Error, Warning types of events, severities. And I could do the same type of thing for the Security and System logs. And I can even ask for additional items like IIS web server logs if there is one available there.

[Video description begins] He selects a checkbox called "IIS logs" and a value called "wad-iis-logfiles" is displayed in a text box called "Storage container name". [Video description ends]

And I can save all of these settings.

[Video description begins] He clicks a button called "Save". [Video description ends]

So when you enable the diagnostic settings, you're really saying I want to start to get more details of the inner workings of the workloads running in those, well, in this case in this VM.
Log Analytics Workspaces

[Video description begins] Topic title: Log Analytics Workspaces. The presenter is Dan Lachance. [Video description ends]

In Azure, a Log Analytics workspace is a resource that you can create and configure in the Azure environment.

[Video description begins] The Microsoft Azure web portal opens. A blade called "All resources" is open. It includes a table with four columns and several rows. The column headers are Name, Type, Resource group, Location, and Subscription. [Video description ends]

To get started here in the portal, I'm going to look at my All resources view. And I'm going to filter it for objects that are Log Analytics workspaces because I already have some here.

[Video description begins] He clicks a drop-down list box called "Type" and deselects an option called "Select all". He further selects an option called "Log Analytics workspace". [Video description ends]

So I'm going to filter for Log Analytics workspaces, click outside of it. Here I can see I've got a couple of them. Now why would you have more than one Log Analytics workspace? Here I've got some for different regions or locations, Canada Central I see under the Location heading and East US.

[Video description begins] He points to the table. [Video description ends]

Well that's one reason, you might want to have your centralized logging through the Log Analytics workspace per region. But you could have multiple Log Analytic workspaces within the same region. Maybe because you have different monitoring requirements for different resources within the same region. So to get started to add a new Log Analytics workspace, I'm going to click the Add button.

[Video description begins] A blade called "New" opens. [Video description ends]

And I'm going to search up log analytic, and there it is.

[Video description begins] He clicks an option called "Log Analytics" and the corresponding blade opens. [Video description ends]

Now I'm going to select Log Analytics and choose Create.

[Video description begins] He clicks a button called "Create" and a blade called "Log Analytics workspace" opens. [Video description ends]

First thing I have to do is create a name for it or specify a name. So I'm going to call it LogAnalytics-2.

[Video description begins] He enters LogAnalytics-2 in a text box called "Log Analytics Workspace". [Video description ends]

I'm going to deploy this into an existing resource group.

[Video description begins] He clicks a drop-down list box called "Resource group" and selects an option called "Rg1". [Video description ends]

Now, up above, it's kind of outlined my name in red, in a red outline, because that name is taken. And so I'm going to put in some characters to make that a unique name and I'll kind of click outside of it. And now the name is unique.

[Video description begins] He enters LogAnalytics-2yhz76 in the Log Analytics Workspace text box. [Video description ends]

So make sure you adhere to your naming standards within your organization when you change some of these names. I'm going to specify the location where I want this specific Log Analytics workspace. So I'm going to choose Canada Central.

[Video description begins] He clicks a drop-down list box called "Location" and selects an option called "Canada Central". [Video description ends]

I'm going leave it with my Pay-as-you-go subscription for the pricing tier and I'm going to choose OK.

[Video description begins] He clicks a button called "OK". The All resources blade opens. [Video description ends]

And now back here in the All resources view, I can see my newly created Log Analytics workspace.

[Video description begins] He points to LogAnalytics-2yhz76 in the table. [Video description ends]

So I'm going to go ahead and click on it to open it up. Because one of the first things that you really should contend with is which data sources are connected. To your newly created Log Analytics workspace.

[Video description begins] He clicks LogAnalytics-2yhz76 under the Name column header and the corresponding blade opens. It is divided into two parts: navigation pane and content pane. [Video description ends]

Because remember, this serves as a centralized performance metric and log data feed. Where's that coming from? Well, we can scroll down and go under Workspace Data Sources. Here we can click Virtual machines and we're going to see all of the virtual machines that we've got deployed.

[Video description begins] The corresponding page opens in the content pane. It includes a table with six columns and several rows. The column headers are Name, Log Analytics Connection, OS, Subscription, Resource group, and Location. [Video description ends]

But I can see here that they are connected to other workspaces.

[Video description begins] He points to the Log Analytics Connection column. [Video description ends]

So I could go in and click on a specific virtual machine and disconnect it from that workspace, and then connect it to this one.

[Video description begins] He clicks a resource name called "WinSrv2019-1" and the corresponding blade opens. [Video description ends]

Now, they may not already be connected to other Log Analytics workspaces if you don't have any already defined.

[Video description begins] He clicks a button called "Disconnect" and a dialog box called "Disconnect" opens. He clicks a button called "Yes" and the dialog box closes. [Video description ends]

That would be one thing that we would do.

[Video description begins] He switches back to the LogAnalytics-2yhz76 | virtual machines blade. [Video description ends]

The other thing is to look at Storage account logs and add storage account logs as well.

[Video description begins] He clicks an option called "Storage account logs" in the navigation pane and the corresponding page opens in the content pane. [Video description ends]

And if you go to Azure Activity log, you'll also be able to link a subscription or connect your subscription here into your Log Analytics workspace.

[Video description begins] He clicks an option called "Azure Activity log" in the navigation pane and the corresponding page opens in the content pane. It includes a table with two columns and one row. The column headers are Subscription and Log Analytics Connection. [Video description ends]

So that that type of activity, that would be the management of Azure resources, shows up centrally here in your Log Analytics workspace.

[Video description begins] He clicks a subscription called "Pay-As-You-Go" and the corresponding blade opens. He clicks a button called "Connect". [Video description ends]

Also, if you go in the navigation bar in your workspace to Workspace summary.

[Video description begins] He closes the blade and returns to the LogAnalytics-2yhz76 | Azure Activity log blade. [Video description ends]

Here you can add components such as Network Performance Monitor.

[Video description begins] He clicks an option called "Workspace summary" in the navigation pane and a blade called "Overview" opens. [Video description ends]

So if I were to click Add, I could search in the Azure Marketplace for Network Performance Monitor.

[Video description begins] He clicks a button called "Add" and a blade called "Marketplace" opens. It is divided into two parts: navigation pane and content pane. [Video description ends]

And I would add this one, this is from Microsoft.

[Video description begins] He selects an option called "Network Performance Monitor" and the corresponding page opens in the content pane. [Video description ends]

 If I wanted to be able to monitor connectivity, let's say between virtual machine endpoints or different subnets in my environment.


Log Analytics Workspace Data Sources
A Log Analytics workspace in Azure is created automatically.
It is automatically created for the region in which you deploy resources. So notice here in my example, I have two default workspaces, one for the Canada Central region because I've deployed resources there. And also another for Eastern US because I've also deployed resources there.
So you can build your own manual Log Analytics workspace or work with the ones that are created automatically. You can think of it as a centralized way as the name implies to analyze logged information. So instead of going to view the log details for each and every Azure resource, instead you can have it collected in one location. So, for example, let's open up one of these default Log Analytics workspaces.
What's important is determining the data sources attached to the workspace. So, you can see that when you open up the workspace, if you scroll down in the navigation bar on the left. And you go to the Workspace Data Sources section. You can see that we can click on Virtual machines to pull up that blade.
This will give me a list of all of my VMs and I'll see which ones are attached to this workspace. As opposed to other workspaces or just not connected to any workspace at all.
So we have a number of them here that are connected. Now you can select and click on an individual, in this case, virtual machine, and either disconnect or connect it at any point in time.
Now Connect is unavailable because this VM AppServer2 is already connected to this Log Analytics workspace. 
But let's say we went to this other virtual machine which is showing us Not connected to any workspace, well, then I have the option to click Connect.

[Video description begins] He clicks a row entry called "WinSrv2019-2" under the Name column header and the corresponding blade opens. [Video description ends]

So we've got a number of options available from that perspective.

[Video description begins] He closes the blade. [Video description ends]

 And by connecting the virtual machine here, you are allowing yourself to have a centralized place here in the Log Analytics workspace. To view all of the log information for all of these attached items.

[Video description begins] He points to the Name column. [Video description ends]

Now those are just Virtual machines. Other data sources include Storage accounts logs.

[Video description begins] He clicks an option called "Storage accounts logs" in the navigation pane and the corresponding page opens in the content pane. [Video description ends]

So in the same way you can go there and you can click Add if there are none there already added.

[Video description begins] He clicks a button called "Add" and a blade called "Add storage account log" opens. [Video description ends]

And you can specify storage accounts that you want to add to this centralized Log Analytics workspace.

[Video description begins] He clicks an option called "Storage account Please select a storage account" and a blade called "Choose storage account" opens. [Video description ends]

So if I were to select a Storage account, I can then specify the Data Type.

[Video description begins] He selects a storage account called "storacct333325" and the Choose storage account blade closes. [Video description ends]

So what type of stuff is stored in that storage account in terms of logging that you want it connected here.

[Video description begins] He clicks an option called "Data Type Please select a data type" and a blade called "Data Type" opens. [Video description ends]

So maybe, for example, I know I've got some IIS logs stored there.

[Video description begins] He selects an option called "IIS logs" and the Data Type blade closes. [Video description ends]

So I could go ahead and select that and add it here.
You can also take a look at Azure activity logs.
Now activity logs are essentially kind of like audit logs that give you information about the management of Azure resources themselves. As opposed to what's happening within them, such as for a virtual machine. And so you can link or connect your subscriptions. 
So if I go to my subscription, I could choose Connect to connect that here to have that information here as well.
So you have a number of different data sources then so that you can centrally collect logged information from your Azure environment.


Log Queries
In Azure, it's important to have the skills to properly create log queries and also to be able to interpret the results for the general overall well being and improved performance, perhaps, of your workloads running in Azure. Now you can work with log queries for an individual resource.
For example, I can open up an individual virtual machine and in the navigation bar on the left, if I scroll all the way down, under Monitoring, I can then go to Logs.
Now from here I can start to conduct log queries.
So I can start typing in things where I can refer over on the left here to table names. There's a table, for example, called Event, and if I expand that I can see the fields within it, I can start referring to them.
So for example, if I want to see everything in the Event table, I can simply say Event and I can continue on and tell it I want to count, or sort, and so on.
But if all I want to do is just take a look at that table, then I could just run that query.
And if there are results, I would see them here. And you also have the option of using a number of Example queries.
If I click that up at the top, so for example, maybe I'll look at Performance and availability and I could scroll through and there are numerous items here.
So such as Virtual Machine free disk space, when I click Run, it puts those query statements in here up above.
And I can go ahead and run the query. Of course, I can select the Time range.
It doesn't have to be the Last 24 hours, maybe the Last 7 days, and that type of thing.
So when you're working with these types of queries, that's what you can do.
Now, you can also do this from the perspective if I go Home here of a Log Analytics workspace in Azure.
So if I open up a specific Log Analytics workspace, then I can go to Logs, and I can pretty much do the same type of thing.
Now, when you first enable logging in your Azure environment, it might take time before it starts to populate this and you can start to use it.
And that's why up here I've got another browser window open, where to learn how to work with log queries, this is very useful. You've got a Demo environment made available by Microsoft.
Now when you select it, you can sign in using your normal Azure credentials, and then start to work with log queries.

So we could see on the left, we're in the Demo environment where we can see a number of interesting categories. 

[Video description begins] He expands an option called "Security" in the navigation pane. [Video description ends]

For example, if I go under Security, then I'll start to see a number of table names. These are table names. So for example, there's SecurityAlert. If I expand that, I then see the fields or columns if you wish within the SecurityAlert table.

[Video description begins] He expands a table name called "SecurityAlert". [Video description ends]

So interesting. So if I start typing in, watch it, let's put in securityalert, but I'm going to put it in all lowercase letters.

[Video description begins] In the content pane, he enters securityalert in the Type your query here or click one of the example queries to start text box. He clicks the Run button. [Video description ends]

If I try to run this query, I'm going to get a SYNTAX ERROR. And that's because the table names are case sensitive. So if I were to put in SecurityAlert in proper or initial caps and then run it, now we have some results showing up down there. Now when you're constructing these log queries, you can start to type things in, I'm going to put in a space. I'm going to type in a vertical pipe, which is a pipe symbol. I want to take the result of what's on the left and feed it into something on the right such as counting the number of occurrences or ordering them or summarizing them or doing something of that nature. So let's say, for example, that we want to run a search. So I'm going to type in the word search in and then I'm going to specify the name of the table. And we know that the name of the table is going to be case sensitive. So SecurityAlert. It would tell it I'm looking for ssh. And I could even, if I really wanted to, I could pipe it and tell it I want to only take, let's say, 5 entries.

[Video description begins] He enters search in (SecurityAlert) "ssh" | take 5 in the Type your query here or click one of the example queries to start text box. He clicks the Run button. [Video description ends]

And then, of course, what I'm going to do is click Run to run that query. We can see the result of the query is now showing down below. We've got some security alerts for Failed SSH brute force attacks. In your environment, you'll be able to click the Save button to save the query so you can run it in the future. Now, this is not a complicated query that we've got here. It's a one liner, but sometimes it can get quite complex and you're going to want to reuse them as opposed to recreating them every time. You'll find them by going into the Query explorer under Saved Queries.

[Video description begins] He clicks an option called "Query explorer" and the corresponding blade opens. [Video description ends]

You can also go into Azure Monitor. So Azure Monitor up at the top, I'll just click Monitor.

[Video description begins] A blade called "Monitor | Overview" opens. It is divided into two parts: navigation pane and content pane. [Video description ends]

Monitor is simply a way to bring together a lot of your different log information throughout your entire subscription, for example. So let's say here in Monitor, I were to click on Logs over on the left.

[Video description begins] He clicks an option called "Logs". A blade called "Select a scope" opens. It includes a table with three columns and several rows. The column headers are Scope, Resource type, and Location. [Video description ends]

Or from here I can select a scope. So let's say, I select my Pay-As-You-Go subscription and I click Apply.

[Video description begins] He clicks a button called "Apply" and the blade closes. A blade called "Monitor | Logs" opens. It includes the New Query 1 tab. [Video description ends]

And so now we're in the very familiar interface where we can begin running our queries. We can also navigate different types of tables. And of course we can see the columns so we can start building our queries and working with the results and saving them and getting to them from the Query explorer.
Dashboard Queries

[Video description begins] Topic title: Dashboard Queries. The presenter is Dan Lachance. [Video description ends]

You can run Azure log queries from within specific resources or from a Log Analytics workspace, or even from Azure Monitor.

[Video description begins] The Microsoft Azure web portal opens. [Video description ends]

So I'm going to go into Monitor by searching for that in the portal here in the top search bar and I'll choose Monitor.

[Video description begins] He clicks an option called "Monitor" and a blade called "Monitor | Overview" opens. It is divided into two parts: navigation pane and content pane. [Video description ends]

Azure Monitor brings everything together in one location. So that you can query Logs for items, for example, in the scope of your entire subscription, or it could be a resource group.

[Video description begins] He clicks an option called "Logs" and the corresponding page opens in the content pane. The New Query 1 tab is open in the content pane. [Video description ends]

But at any rate here, I've got a default workspace Log Analytics workspace object selected here.

[Video description begins] He clicks a link called "Select Scope" and the Select a scope blade opens. [Video description ends]

I could choose Select Scope and change that up if I so chose, but I'm going to leave it as it is because what I want to do is just run a basic query here.

[Video description begins] He closes the blade. [Video description ends]

I'm going to look in the Heartbeat table and let's say we run it.

[Video description begins] He enters Heartbeat in the Type your query here or click one of the example queries to start text box. He clicks the Run button. [Video description ends]

Well, there are no results found for the Last 24 hours, but how about we go back 7 days and run that again?

[Video description begins] He clicks the Time range drop-down list box and selects the Last 7 days option. He clicks the Run button. [Video description ends]

Think of a Heartbeat as being a "I am alive" type of message sent by computers in Azure. And we can see down below, we do have some activity related to that, including showing the ComputerIP addresses. Now, we know that we can save log queries, I could click the little Save button here.

[Video description begins] A blade called "Save" opens. [Video description ends]

And I can give this a name and save it as either a Query or a Function.

[Video description begins] He clicks a drop-down list box called "Save as". [Video description ends]

If you save it as a Function, then you could call that from another query using the short name of the function. But at any rate, and then you can specify a Category. Now, that's fine, but we can also pin this to a dashboard.

[Video description begins] He closes the Save blade. [Video description ends]

So I'm going to go ahead and click the Pin to dashboard button here.

[Video description begins] A blade called "Pin to another dashboard" opens. It includes tabs called "Select existing" and "Create new". [Video description ends]

We could choose an existing one or create a new one, I'm going to create a new one.

[Video description begins] He clicks the Create new tab. [Video description ends]

And I'm going to call it Dashboard1.

[Video description begins] He enters Dashboard1 in a text box called "Dashboard name". [Video description ends]

It's going to be for my Pay-As-You-Go subscription and I can specify the Location, let's say Canada Central for this.

[Video description begins] He clicks a drop-down list box called "Location" and selects an option called "Canada Central". [Video description ends]

And then I'm going to choose Apply.

[Video description begins] He clicks a button called "Apply" and the blade closes. The home page of the Microsoft Azure opens. [Video description ends]

Now, here in the portal, you can search for dashboard at any time up in the bar and I'm going to choose Shared dashboards.

[Video description begins] A blade called "Shared dashboard" opens. It includes a table with four columns and one row. The column headers are Name, Go to dashboard, Location, and Subscription. [Video description ends]

And I can see Dashboard1 listed here, so I'm going to click to open that up.

[Video description begins] He clicks a row entry called "Dashboard1" and the corresponding blade opens. [Video description ends]

However, it says No data for the given query. And if I try to refresh the update, still no joy. Now, that's because it's the Past 24 hours by default, so there's no data to show for that. So let's choose the Past 7 days, I'll click Apply.

[Video description begins] He clicks a drop-down list box called "UTC Time" and selects an option called "Past 7 days". [Video description ends]

And after a moment we should see that we have our result for Heartbeat messages sent from computers. Now at this point, it says This dashboard has unpublished changes. We just changed the time range filter. So I'm going to go ahead and choose Publish changes.

Video description begins] He clicks a button called "Publish changes". [Video description ends]

So this way, we can put the types of resultant log query information that's relevant to us at the time on a dashboard for quick access.
    
                    
Performance Metrics
Using performance metrics and monitoring them in Azure helps you optimize the performance of resources. For things like virtual machines or for web applications. If you're using, for example, Application Insights to track the performance of a web app.

[Video description begins] The Microsoft Azure web portal opens. [Video description ends]

Let's open up an existing virtual machine here in the portal to view its individual performance metrics. 

[Video description begins] He clicks a virtual machine called "WinSrv2019-1" and the corresponding blade opens. It is divided into two parts: navigation pane and content pane. [Video description ends]

Now we can do that by scrolling down in the navigation bar or the properties for that VM. All the way down under the Monitoring section where we can click on Metrics.

[Video description begins] The corresponding page opens in the content pane. [Video description ends]

Now over here on the right, we can select a metric from the drop-down list. So for example, I'm going to go down, let's say into the P's and choose Percentage CPU. And we can see that the CPU performance metric has been mapped on a chart.

[Video description begins] He clicks a drop-down list box called "Metric" and selects an option called "Percentage CPU". [Video description ends]

We can see the percentages going up on the left. And it's plotted against a timeline going across the bottom from left to right.

[Video description begins] He points to the graph. [Video description ends]

But you can also click the Add metric button to add more than one metric on a single graph. So for example, maybe I'm interested in some other metric like Disk Write Bytes if I'm interested in disk performance.

[Video description begins] He clicks the Metric drop-down list box and selects an option called "Disk Write Bytes". [Video description ends]

So now I've got both items plotted. And I can see by the legend that in this particular case, the Disk Write Bytes is shown in red. So I can track that performance metric separately from my Percentage CPU. If I hover over any of those metrics, it allows me to zoom in on that specific metric. Because it's highlighted and everything else is dimmed on the graph. We can also pin this to a dashboard so that we have an easy convenient way to look at this. Instead of coming in each time we're interested in this and setting it up from scratch. 

[Video description begins] He clicks an option called "Overview" in the navigation pane and the corresponding page opens in the content pane. [Video description ends]

Now if I go back to the Overview blade for this VM over on the right, if I scroll down. 

[Video description begins] The content pane includes graphs called "CPU (average)", "Network (total)", "Disk bytes (total)", and "Disk operations/sec (average)". [Video description ends]

I can also see some standard performance metrics, which by default shows me activity for the last hour. But I could choose, let's say last 7 days.

[Video description begins] He selects an option called "7 days". [Video description ends]

Where I can see the CPU usage average, the network traffic total, I can see the disk bytes total, disk operations per second. So we've got a lot of these items that are here automatically by default. But let me search here in the search bar in the portal for monitor.

[Video description begins] He clicks the Monitor option and the Monitor blade opens. It is divided into two parts: navigation pane and content pane. [Video description ends]

Azure Monitor is a centralized tool that allows you to also view performance metrics from here, instead of from an individual resource.

[Video description begins] He selects an option called "Metrics" in the navigation pane and the corresponding page opens in the content pane. [Video description ends]

Now from here I have to select a scope.

[Video description begins] He opens the Select a scope blade. it includes tabs called "Browse" and "Recent". The Browse tab is selected. It includes a table with three columns and several rows. The column headers are Scope, Resource type, and Location. [Video description ends]

So this is different because we're not already in a resource like a VM, so it doesn't know what to show us. We have to select a scope. So I can drill down within a subscription and then ultimately within a resource group.

[Video description begins] He points to a subscription called "Pay-As-You-Go" under the Scope column header. [Video description ends]

And I could even select, for example, a Log Analytics workspace.

[Video description begins] He expands a resource group called "defaultresourcegroup-cca". [Video description ends]

So what we could do here is we have the ability because notice that we can expand and collapse our subscriptions. This is a way for you to be able to monitor performance metrics across different subscriptions by adding different scopes. So I'm going to add a Log Analytics workspace here and I'll click Apply.

[Video description begins] He clicks a button called "Apply" and the Select a scope blade closes. [Video description ends]

Now what you have to think about is the data sources attached to that Log Analytics workspace. So the specific virtual machines or storage account logs. Because from there you'll be able to then determine which specific metrics you might be interested in. 

[Video description begins] He clicks a drop-down list box called "Metric" and selects an option called "Disk Writes/sec". [Video description ends]

So for example, if I were to choose, let's say Disk Writes/sec, then I will have some information plotted that is available based on all of the information that's made available to that Log Analytics workspace.


Action Groups and Alert Rules
Instead of going to each and every resource in Azure to monitor the performance, you can configure instead alerts. Alerts can send you notifications through your configuration of what are called action groups. And this way, you are notified when there are issues based on your configured thresholds, instead of you having to go through and peruse all of your Azure resources, which is much more time consuming.

[Video description begins] The Microsoft Azure web portal opens. [Video description ends]

So let's get started with this. First thing I want to do here is open up an existing Log Analytics workspace.

[Video description begins] He clicks a Log Analytics workspace called "LogAnalytics-2yhz76" and the corresponding blade opens. It is divided into two parts: navigation pane and content pane. [Video description ends]

The reason I'm doing this is because a Log Analytics workspace is a centralized logging hub. Where if I scroll down in the navigation bar, we have a number of different types of data sources that can feed their performance metric and log data into this Log Analytics workspace. And so as a result, we can configure some alerting here within the Log Analytics workspace. So if I scroll down under the Monitoring section in the left-hand navigator, there's Alerts.

[Video description begins] He clicks an option called "Alerts" in the navigation pane and the corresponding page opens in the content pane. [Video description ends]

Now these are alerts that will be specific to this Log Analytics workspace. So before I create an alert rule, I'm going to first click on Manage actions.

[Video description begins] He clicks a button called "Manage actions" and the corresponding blade opens. It includes a table with five columns and one row. The column headers are Action group name, Short name, Resource group, Status, and Actions. [Video description ends]

When I do that, I can create a new action group, I can add an action group. There might be some that are here already based on what you might have configured previously, but I'm going to add a new action group.

[Video description begins] He clicks a button called "Add action group" and a blade called "Add action group" opens. [Video description ends]

And this action group is going to be used for notification for administrators. I'm going to call it AdminNotify.

[Video description begins] He enters AdminNotify in a text box called "Action group name". [Video description ends]

The short name will be the same because the Short name field is required. The next thing down below is I'm going to add an action type, you can add multiple action types to this action group. We can see here we can trigger an Automation Runbook or an Azure Function, or we can have an e-mail message sent or in my case I want an SMS text message sent. 

[Video description begins] He clicks a drop-down list box called "Action Type" and selects an option called "Email/SMS/Push/Voice". A blade called "Email/SMS/Push/Voice" opens. [Video description ends]

So I'm going to select that item, that's going to open up a new blade where I'm going to turn on the check mark for SMS and I'm going to specify a phone number.

[Video description begins] The Email/SMS/Push/Voice blade closes. [Video description ends]

Now the next thing I need to do is supply a name, so I'm going to call it TextITDirector.

[Video description begins] He enters TextITDirector in a text box called "Action name". [Video description ends]

And then I'm going to click OK. So I've got my action group configuration created and it now shows up in the list, it says AdminNotify.

[Video description begins] He clicks a button called "OK" and the Add action group blade closes. [Video description ends]

Let's go back into the Alerts for our Log Analytics workspace. And in the Alerts blade or view, I'm going to click New alert rule.

[Video description begins] He clicks a button called "New alert rule" and a blade called "Create rule" opens. [Video description ends]

I want to create an alert to be notified when something happens. In this case, specifically be notified through an SMS text message based on the phone number we've configured. So the resource here in the alert rule is already specified. It's a specific Log Analytics workspace. It could be based on something else. I mean we could have done this, we could have configured an alert for a specific virtual machine for example. But in this case, the resource is the Log Analytics workspace. Now we have to add a condition. So under CONDITION, I will click Add.

[Video description begins] He clicks a button called "Add" and a blade called "Configure signal logic" opens. It includes a table with three columns and several rows. The column headers are Signal name, Signal type, and Monitor service. [Video description ends]

So for the Monitor service in the upper right in that drop-down list, I'm going to choose Platform. I'm going to see platform-specific items and I'm going to filter the list for processor and there we go, % Processor Time.

[Video description begins] He clicks a drop-down list box called "Monitor service" and selects an option called "Platform". [Video description ends]

So I'm going to select that item to configure a condition.

[Video description begins] He clicks a row entry % Processor Time under the Signal name column header. [Video description ends]

I want to look for busy or overburdened processor utilization. Then I'm going to scroll down and I can select a specific dimension if I want to filter or zoom into a specific Computer or an ObjectName and so on.

[Video description begins] He enters 80 in a text box called "Threshold value". [Video description ends]

But I don't, I just want it overall. So what I want to do is essentially I want to be notified when we've got an 80% Greater than, 80% on Average of CPU utilization. Now we can see the frequency of evaluating this type of condition which is going to be every minute. And we can see the Aggregation granularity (Period) is set to 5 minutes. So I'm going to go ahead and click Done.

[Video description begins] He clicks a button called "Done" and the Configure signal logic blade closes. [Video description ends]

So we've now got our condition whenever the CPU processor utilization is above a certain amount. Then we have to go down and apply this to an action group. We don't have an action group selected, but we just created one recently. So I'm going to go ahead and click on Add.

[Video description begins] He clicks a button called "Add" and a blade called "Select an action group to attach to this alert rule" opens. It includes a table with two columns and two rows. The column headers are Action group name and Contain actions. [Video description ends]

There's the AdminNotify action group where we've got 1 SMS text message that will be sent, and I'm going to go ahead and choose Select.

[Video description begins] He selects a checkbox for a row entry called "AdminNotify" under the Action group column header and clicks a button called "Select". The blade closes. [Video description ends]

Then all the way down at the bottom, I have to give this a name. So I'm going to call this alert rule BusyCPU, and I'm going to scroll down further and just click outside of that, and then I can click Create alert rule.
Now if we have any issues related to that alert rule, they will show up here in the Alerts blade or the Alerts view.
Now we can also use our action groups and configure alerts for an individual resource as we've alluded to.
So let's say I opened up an individual virtual machine here in the portal.
What I could do is scroll down in its navigation bar on the left, and go down under Monitoring and there's Alerts.
When I go into Alerts, it's the same type of interface that we just saw.
For example if I click Manage alert rules, I will see any alert rules created for this specific resource of which there are none. Now I could click New alert rule, and I could go through and configure the same type of thing we did.
The difference being that the resource is a specific VM as opposed to a Log Analytics workspace. So I could go through the same types of motions and add a condition for it. 
And when it comes to the action groups, if I were to click Add, then I would see my global list of action groups including AdminNotify.


Application Insights
One common use of Microsoft Azure is the deployment of customized web applications. And so developers will always be interested in monitoring how the app is being used and how it's performing. And we can do that by enabling Application Insights.
So here in the portal, to do that, I'm going to create a new web application.
And during the creation I'm going to make sure I enable Application Insights, you can also turn it on after the fact.
So when I go to create a web app, there are some common things I need to fill in.
Including the resource group it will be deployed into, a name for it.
So I'm just going to put in a unique name here, custom name.
And I'm going to use a code-based application, I'll just choose here, let's say ASP.NET.
I'm going to deploy this in Canada Central as a region.
And it's going to create a new application service plan, App Service Plan. That's fine, it determines the underlying horsepower and the pricing tier, I'm going to accept the default for the sizing. I'm going to click Next on monitoring, so Next: Monitoring.
This is where we want to make sure that Application Insights is enabled. And it is, it's set to Yes. And it's going to create a new Application Insights resource. And here, it's pretty much got the name of my web application. That's fine, perfect. 
So I'm going to go ahead and choose Next, and continue all the way through accepting defaults by clicking the Next button.
Finally, I'll click the Create button to create this web app where App Insights is actually enabled now.
We can now see our deployment is complete, I'm going to click Go to resource to go into the web application.
Where in the left-hand navigation bar, if I scroll down under the Settings section, I'll see Application Insights. I'm going to click to open up that blade.
We're over on the right, I can see it's enabled, this is where you can enable or disable it. And I can see that it's connected to my Application Insights resource. So there's a separate resource that's created and there's a link to it here, which I will click on.
In the Overview blade of the App Insights object, so that's what we're looking at now, over on the right. I can see some performance metrics such as Failed requests for the app, Server response time, Server requests, and overall Availability. 
If I click Live Metrics over on the left, after a moment I'll get some new live metrics related to my application. So Incoming Requests, Request Duration, failure rates, and so on. So for developers, this is going to be absolutely crucial so that they might know what to tweak within the application to optimize performance.


Network Performance Monitor
In Azure, the Network Performance Monitor tool allows you to monitor and identify network problems. Whether they're related to firewall issues or maybe they're related to routing configuration errors.
Either way, here in a Log Analytics workspace, when you want to work with the Network Performance Monitor, you have to add it here. Here's what that means. If I scroll down in the left-hand navigation bar for this Log Analytics workspace, I can then click on Workspace summary over on the left.
Now you're not going to see the Network Performance Monitor listed here by default. It's showing up here because I've already added it.  
What you would normally do is click the Add button up at the top and you would search for Network Performance Monitor.
And you could add it by selecting it from the marketplace, here it is. Network Performance Monitor from Microsoft, but I've already got that done. So I'm going to go back here to the Overview where the Network Performance Monitor panel is listed here.
So, when you first go into that, you're going to be configuring it. So I'm going to go ahead and click on the Configure link up at the top.
And then on the left I'm going to click SETUP.
This is what you're going to see the first time you come in. It wants you to install the OMS agents, the monitoring agents within your hosts. Now if you added virtual machines to this Log Analytics workspace. They automatically already have the Microsoft monitoring agent extension installed. So it's already done. You can also tweak and configure performance monitoring.
You can also tweak and configure service connectivity monitoring such as for Office 365, Microsoft Dynamics.
You can also monitor ExpressRoute dedicated circuit connections.
So over on the left, I'm going to click NETWORKS.
I've already added a couple of networks here. I've got my default network and I can see the subnetwork range for that VNet is 10.0.1.0. But I've also already added VNet9 here. You can click the Add network button and just fill in the details for the network name. And you'll be able to select an unallocated subnet that it's detected down below here. So I've done that and I've called it VNet9. 
IThen if I click on SUBNETWORKS over on the left, 'll see the subnets that stem from those virtual networks.  
And if I click on NODES, I can see here I've got three virtual machines in Azure. They're up and running. The AGENT STATUS shows as being Healthy. Now these three virtual machines in my case are added to this Log Analytics workspace. And as we've mentioned, they automatically get the monitoring agent installed, so they're good and ready to go. 
And if I click PERFORMANCE MONITOR on the left, I can click add a rule.
Now when I add a rule over on the right, I can select a network, I can select a subnet, and I can choose connectivity to another subnet.
I can add exceptions and I can tell it I want to use ICMP versus TCP to test the connectivity.
And I can determine when it will generate an alert if the connectivity between those subnets is not available. So the default is to autodetect sudden changes. But we can say if there is a loss, a packet condition loss, greater than or equal to a certain percentage. Or latency, network latency, speed greater than or equal to a certain number of milliseconds. So network latency means network slow down issues. So we can have that trigger. So once we've got that done, then our rule will show up. And if I go back to the overview here for my workspace summary.
That's when, when you come into Network Performance Monitor, you get to see here that you've got some problems.

[Video description begins] He opens the DefaultWorkspace-048b82ac-4519-403b-ab05-6b4305502109-CCA blade. [Video description ends]

Potentially, hopefully not. So we know that within a Log Analytics workspace. If we scroll down and look at the workspace data sources that virtual machines can serve as a data source.

[Video description begins] He clicks an option called "Virtual machines" and the corresponding page opens in the content pane. [Video description ends]

And I've got a couple of them here, WinSrv2019-1, -2 and 3, they're added to this workspace. Of course, we can just click on it to open it up and connect or disconnect it.

[Video description begins] He clicks a Virtual machine called "WinSrv2019-1" and the corresponding blade opens. [Video description ends]

But once you actually connect a virtual machine to a workspace, the Microsoft monitoring agent is automatically installed in the VM.

[Video description begins] He closes the blade. [Video description ends]

And that way the VM can report back to this Log Analytics workspace. So let's just flip over and take a look at one of those virtual machines.

[Video description begins] He opens a new Microsoft Azure web portal. The Virtual machines blade is open. He clicks the WinSrv2019-1 virtual machine and the corresponding blade opens. It is divided into two parts: navigation pane and content pane. [Video description ends]

If I actually click to open it up, and if we take a look at the virtual machine extensions.

[Video description begins] He clicks an option called 'Extensions" in the navigation pane and the corresponding page opens in the content pane. it includes a table with three columns and three rows. The column headers are Name, Type, and Version. [Video description ends]

What will have been added because it won't have been there before is the Microsoft Azure monitoring dependency agent. That gets installed when you connect or link that VM to a workspace. Now in the case of Network Performance Monitoring, that's going to be important.

[Video description begins] He switches back to the DefaultWorkspace-048b82ac-4519-403b-ab05-6b4305502109-CCA | Virtual machines blade in the previous Microsoft Azure web portal. [Video description ends]

If we take a look at the result of our configuration. If we go under Workspace summary here in the Log Analytics workspace.

[Video description begins] He clicks the Workspace summary option in the navigation pane and the Overview blade opens. [Video description ends]

We could see that now that it's had time for those servers to start reporting back information about network connectivity. We're going to start seeing some potential alerts. I can see there's an alert here. There's 1 of 1 subnetwork link that is considered unhealthy. 

[Video description begins] He clicks the Network Performance Monitor option and the Network Performance Monitor blade opens. [Video description ends]

So if I click on that panel to open it up, then I can read more details about exactly what the issue is. So we can see that that health event was generated by a rule called Rule1. And if I kind of click on that rule to see what it's about, we've got a 100% transmission loss.

[Video description begins] He clicks a link called "Rule 1" and a blade called "Affected Subnetworks Link" opens. [Video description ends]

And we can see it's between subnets within the rule that were specified. And in this case, those subnets are the 10.0.1.0 subnet, and the 13.0.1.0 subnet. There's a link on the right that says View affected node links. So I could also click on that to get even further detail.

[Video description begins] A blade called "Node Links" opens. [Video description ends]

And from here I can see the node links where on the left I have the name of a virtual machine. And it's pointing to another one listed to the right of it. And I can see the IP address interfaces, and I can see in this case we have a 100% packet loss. Now, that often might be due to routing problems between subnets and so on. But this is one of the overall purposes of using Network Performance Monitor or NPM in Azure. To identify these types of network connectivity issues.



Network Watcher
Before you can troubleshoot network connectivity issues in Azure, you need to be aware of the network configuration. You've got to know what's there. How many VNets, subnets, VNet peering is enabled and so on.
So here in the portal, I'm going to search for network and I'm going to select Network Watcher from the list.
One of the things I can do here is click on Topology over in the left-hand navigation bar to open up the Topology blade.
Now on the right, it's got my subscription automatically selected from the Resource Group drop-down list. I'm going to choose a resource group I'm interested in here.
And I can also select a VNet to further filter my topology map.
It draws a topology map in a hierarchy, where at the top, we have our virtual network. In this case, it's called VNet1 under which we then see the subnets. And this is part of knowing what you have. If you're called in to troubleshoot something and you didn't set it up, it's helpful to know what's there. So we can see we have a number of subnets, including a GatewaySubnet, an AzureFireWallSubnet, an AzureBastionSubnet. And under each subnet we can then see the associated network interfaces and ultimately the public IP addresses associated with those interfaces and of course the virtual machines. So this is one of the things we can do with the Network Watcher tool, is learn a bit about our topology in the Azure environment. Over on the left, I can also click on Connection monitor.
So I can click the Add button over on the right to add a connection monitor.
I'm going to call this Monitor1.
And I'm going to select a virtual machine here that would be a virtual machine that is the source I want to monitor from and then I want to select a destination virtual machine.
I can also specify a port number on which I want that connectivity to be checked.
So I'll put in Port 80 and I'll just click Add to add that connection monitor.
And we can now see the monitor has been added to the list and under the Status column it says it is currently running.
Now we can actually click on that connection monitor configuration and that'll open up another panel down below where we can scroll down and see some details over the last hour, six hour all the way up to the last 30 days. And down below according to the legend, we can see that we've got percentage of probes that have failed is 100. That's not good. Well, that could be due to a number of reasons. Perhaps the target virtual machine isn't reachable due to routing problems, but if they're in the same subnet, it's not a routing issue. Or it could be a network security group preventing connectivity to a port. Or perhaps Port 80 simply isn't in a listening state on that machine, there's no web server. So there are plenty of reasons that could happen, but we can identify that this is happening here using Network Watcher. We can also run a Packet capture as we can see over here on the left, we can view our Effective security rules, network security group security rule.
So from here we can select the subscription, a resource group and ultimately a virtual machine.
So when I do that I can see a network interface for that virtual machine and the association with the network security group here at the subnet level that says as opposed to linked directly to the network interface, and we can see any rules that might be applicable.
We can also click on Packet capture on the left and click the Add button to add a packet capturing session.
Sometimes you'll create a packet capturing session because you want to be able to actually examine the detailed specific network traffic that is occurring on a network.
Now specifically what you're going to do is to choose the target virtual machine that you're interested in and you can select to store the resultant packet file name, the packet capture file name in a storage account. Or you can have it stored in a file within the virtual machine in question, the target virtual machine that we have to select above or you can have it stored in both places. The packet capture file will use a .cap format. So you can open it up with standard tools like Wireshark.

                    
Azure Subscription Overview
There is a relationship between Azure AD tenants and Azure subscriptions. 
Pictured in our diagram on the left, we see our Azure AD tenant. Azure AD or Azure Active Directory is a centralized directory service in the cloud. And it allows us to create user accounts for authentication, organize them into groups, assign permissions. We can register devices in Azure AD, so users can sign in on those devices with their Azure AD credentials. That's essentially what it is. It's an identity provider. And we can associate a subscription with our Azure AD tenant, listed here as Subscription 1.
A subscription is really a way that we get features that allow us, for example, to deploy resources in Azure. It's also used for billing purposes. But what you can do is you can add multiple subscriptions to your Azure AD tenant. However, the opposite is not true. You can't have a given subscription used by multiple AD tenants. So we see here that subscriptions are related to billing.
Now there are some limits to what you can do within an Azure subscription, such as how many resources can be deployed and so on. As an example, our first item here is the number of subscriptions per Azure AD tenant. This is one of those items where there is no limit. But there is a number of resource tags that can be specified to an Azure resource, and it maxes out at a value of 50. The maximum number of group owners maxes out at 100. The maximum number of storage accounts per region maxes out at 250. Now, this is only to list a tiny portion of some of these limits. There are many other ones that are published online, clearly, in the Microsoft Azure documentation.
So we have the option with our subscription to also increase any of these limits should they be a little bit too constraining. You can do this once you sign into the Azure portal by creating a customer support request. Now limits for some things, such as the number of vCPUs, virtual CPUs available for a given virtual machine instance, those limits are quoted per Azure region. Now, you also have to bear in mind that if you're using an Azure free trial subscription, that you won't have the option of creating a customer support request, at least not in it succeeding in increasing any of those limits.
The other thing to think about is that when it comes Azure subscriptions, don't forget about how it is related to both the Azure AD tenant and also your Azure account in the first place. So you can have your Azure account in which you build your Azure AD tenants, and of course, you can have multiple subscriptions. Billing is done separately for each of your subscriptions. And if you do have a free try, you can actually convert it to a paid subscription.
Now there are a number of different types of Azure subscriptions, such as pay-as-you-go, where all of your resource usage is tracked and you pay based on what you use. But then depending on the type of support you need, will determine if you select some of the other types of subscriptions, like Professional Direct support or Developer support. Developer support would allow you to get support but only during business hours, not 24/7. Then we also have Standard support. So, if you do need full support, 24/7, then you would look at choosing the appropriate type of Azure subscription, such as Professional Direct.


Azure Subscriptions and the Portal
You can view your Azure subscriptions in the Azure portal. 
You can view your Azure subscriptions in the Azure portal. One way to do this is by searching for subscriptions in the search bar at the top center which I will do.
Now bear in mind that when you search up subscriptions you will see any subscriptions associated with your current Azure AD tenant, which is shown here as Quick24x7. So I can see I have a Pay-As-You-Go active subscription. I can even see the Current cost.
Now in the upper right, if I click on my sign in account information area and click Switch directory and, if I choose some other Azure AD tenant, let's say EarthFarm in this example.
Then when I go to take a look at subscriptions, I can expect to see something different potentially.
So because I've visited subscriptions recently, I can just click it from Azure services, of course, I could once again search for it in the top center. Either way, I want to look at the subscriptions for this different Azure AD tenant. Notice it says, "You don't have any subscriptions". So at this point, we have the option of clicking Add where we'll be presented with a list of subscription options.
So at this point, I'm just going to authenticate so I can get to that screen. So now I get the option to SELECT AN OFFER.
If I want to add a Pay-As-You-Go subscription or Pay-As-You-Go Dev/Test, Developer support, Professional Direct support, and Standard support where I can see some of the details about these. So we have some options here. And, if I were to choose one of these, it would then continue on to the point where I have to make sure I add a payment method, and so on. But I'm going to close out of that. And I'm going to switch back to my first initial directory that in this case would be the Quick24x7 Azure AD tenant where I know, I have an active subscription.

[Video description begins] He clicks the account details section and then clicks the "Switch directory" option. The "Directory + subscription" blade opens. He selects the following directory: Quick24x7. The Microsoft Azure portal gets refreshed. [Video description ends]

And once again, I'm going to go look in the subscriptions associated with that Azure AD tenant. Now I'm going to click directly on that existing subscription.

[Video description begins] He selects the "Subscriptions" option. The "Subscriptions" blade opens. There is one row entry in the table. [Video description ends]

Now I'm going to click directly on that existing subscription. 

[Video description begins] He clicks the row entry, which includes: Subscription name: Pay-As-You-Go and Current cost: CA$1.48. A blade called "Pay-As-You-Go" opens. It is divided into two parts: navigation pane and content pane. In the navigation pane, an option labeled "Overview" is selected and its corresponding page is open in the content pane. [Video description ends]

Because when you do that, it opens up a plethora of options in the navigation bar on the left. For example, we can go to Cost analysis to analyze costs, to see exactly for example, where the lion's share of our charges are coming from.

[Video description begins] He selects an option called "Cost analysis" in the navigation pane and its corresponding page opens in the content pane. [Video description ends]

We could click on Budgets, so we can configure alert notifications when our costs reach a certain point.

[Video description begins] He selects an option called "Budgets" in the navigation pane and its corresponding page opens in the content pane. [Video description ends]

We can even go through and see our Invoices over on the left under the Billing section. But at the same time, we also have some other things that we can do, when I go back to the Overview part of this.

[Video description begins] He selects the "Overview" option in the navigation pane and its corresponding page opens in the content pane. It includes the following buttons: Manage, Cancel subscription, Rename, and Change directory. [Video description ends]

We have some buttons across the top. I can cancel the subscription. I can Rename it, so, if I want to rename it from Pay-As-You-Go to something different, I can do that. I can Change directory. That means I can associate this subscription with a different Azure AD tenant. So I've got a number of options. So, I can even click on Manage to open up a new browser window where I can further manage my Azure subscription. So we have a summary for our Pay-As-You-Go subscription, where we're looking currently at the OVERVIEW.

[Video description begins] The following page opens in a new tab: Summary for Pay-As-You-Go. It includes the following tabs: OVERVIEW and BILLING HISTORY. The OVERVIEW tab is selected. [Video description ends]

And we can see a lot of options available on the right to Manage payment methods or to Download usage details for the subscription or to change the subscription address information. Or I want to switch to a different type of subscription offer. Again, I have some other options here such as canceling the subscription and so on.


Azure Subscriptions and the CLI
You can use the Azure CLI to learn about Azure subscriptions and also to determine which subscription is active. To get started here in the Azure portal, I'm going to launch the Cloud Shell.

[Video description begins] The Microsoft Azure portal is open. [Video description ends]

Now in the Cloud Shell, I'm going to start by running az account list.

[Video description begins] He clicks a button labeled "Cloud Shell" in the first part of the screen. A PowerShell window opens. The following prompt is displayed: PS /home/danlachance72>. [Video description ends]

And when I press Enter, it'll return some details.

[Video description begins] He executes the following command: az account list. The output displays details of the azure account. The details include cloud name, id, and tenant id. The prompt does not change. [Video description ends]

So we can see the name of the cloud, AzureCloud, as opposed to Azure Cloud for Government or anything like that. And we can also see the id. Now, it doesn't say subscription ID, but this is the id of our current Azure subscription. We can also see our Azure AD tenant ID. Let's examine the subscription ID for a second by jumping into the portal to take a look at that. So, notice here it starts with 048b and ends with 2109. So let's just minimize the shell here. Let's go in to Subscriptions, let's see what we've got attached to our current AZ tenant.

[Video description begins] In the Microsoft Azure portal, the "Subscriptions" blade opens. The table has one row entry. He points to the following row entry, which includes: Subscription name: Pay-As-You-Go and Current cost: CA$1.48. [Video description ends]

Now it should be a Pay-As-You-Go subscription. And notice the Subscription ID indeed starts with 048b and ends with 2109. So we can learn a bit of that information from the az account list command in the CLI.

[Video description begins] He points to the entry under the "Subscription ID" column header. He switches back to the PowerShell window. [Video description ends]

Let's clear the screen. Let's also run az account set --subscription. And here, I'm going to put in the name of it which is Pay-As-You-Go, each word separated by a dash. Now in my case, it doesn't really matter that I do that.

[Video description begins] He executes the following command: cls. No output returns and the prompt does not change. He executes the following command: az account set --subscription "Pay-As-You-Go". No output returns and the prompt does not change. [Video description ends]

Because if we go back and take a look, we've only got a single subscription here associated with our Azure AD tenant. Which is shown here by name in the form of Quick24x7.

[Video description begins] He switches back to the Microsoft Azure portal. He points to the following row entry, which includes: Subscription name: Pay-As-You-Go. He switches back to the PowerShell window. [Video description ends]

But when you have multiple subscriptions, this can be an important command. Essentially you're setting the context to that subscription. And so following commands after you do that will run in the context of that set or selected subscription. The other thing to bear in mind is that you can also, instead of setting the subscription when you have multiple subscriptions, you can also do it per command. What I mean by that as an example, is let's say we were going to use az vm create to create new VM. And normally you would specify things like --resource-group and then Rg1, let's say.

And then maybe the name, let's call it Linux1, and then maybe the --image would be based on something Ubuntu. But the key here is that we can also use the --subscription command line parameter. And so, for this individual single command, you can say, well, I want this tied to the Pay-As-You-Go, just type that in, subscription. So you can do that if you know you have to work with a number of resources and different subscriptions. You might choose to just do it at the command-line instead of keeping on setting it as up above. It really depends on what you want to do and how many commands you have to issue. But either way, it's important to have this knowledge if you're going to be working with Azure subscriptions through the CLI.


Azure Subscriptions and PowerShell
When you're working in PowerShell, you might be working with an Azure AD tenant that is associated with multiple subscriptions. And, so you can control the subscription that is going to be used as you issue PowerShell cmdlets. Such as the deployment of resources like virtual machines. To get started here in the portal, I'm going to launch the Cloud Shell, and I'm in PowerShell here.
And I go to start by running get-command. And I'll put in asterisk subscription. So basically, I'm trying to discover which cmdlets are available that relate to subscriptions.
And there are bunch of them as you can see. For example, Get-AzSubscription. Okay, so if we were to do that, get-azsubscription, when we press Enter, we get some returned information.
We can see that we have a Pay-As-You-Go subscription, which is currently active and being used. So, if we start deploying virtual machines and storage accounts and so on, it's going to be tied to this currently active subscription. We can see the subscription ID. We can also see the Azure Active Directory tenant with which the subscription is associated.
Now, when you have multiple subscriptions available for your Azure AD tenant, you may want to be able to switch between them. And you can do that using select-azurermsubscription. So for example, in quotes here I could do it by name, pay-as-you-go, close the quotes.
What this means is, I'm setting that as the current context or active subscription. Any commands that follow will be tied to it. Such as deploying virtual machines, storage accounts and so on. And I can verify that, that's the current context by running get-azurermcontext.
And we can see it returns that we are using our Pay-As-You-Go subscription. And of course, we can see the subscription identifier being listed there as well along with our Azure AD tenant ID. So now that we've done that, any PowerShell cmdlets that I run from this point forward in this session will be applied to that subscription.


Management Group Overview
Azure management groups are really all about centralized governance. Now we can apply this to multiple subscriptions, it allows us to organize subscriptions within a management group. Think if it as a hierarchy. Because at the top, you have your tenant root group. Under which you can then create multiple management groups and organize your subscriptions accordingly within them. Now you would organize them for policy and compliance reasons.

For example, you might have a policy that requires SQL database encryption. And you want to check all SQL database instances in multiple subscriptions. So, you might organize those subscriptions into a management group and then assign that policy to the management group. You can have up to six levels deep of subordinate management groups. If you so need that change. So down here, we see we have the management group hierarchy.

[Video description begins] Management Group Hierarchy. A diagram is displayed. [Video description ends]

At the top you have your tenant Root Management Group, by default. And underneath it on the left we have Management Group 1 where we could organize subscriptions. We see here Subscription 1 and Subscription 2. But then on the right we have another management group, Management Group 2, under which we have a different subscription, Subscription 3. So we can apply or assign policies to Management Group 1.

And whatever that policy says should happen, such as checking for SQL database encryption, will flow down and be inherited. And be applied to all SQL database deployments in Subscription 1, and Subscription 2 in all resource groups. And the same thing would be true, if we applied a policy to Management Group 2, it would only apply to, in this case, Subscription 3. Now, we've really only got one level in our hierarchy here of management groups that we've created. Bear in mind, you could have up to six. So, the way that this works is we would add subscriptions as per usualto our Azure account and associate them with Azure AD tenants.

[Video description begins] Azure Management Groups. [Video description ends]

We can then create one or more management groups. Then we can move subscriptions under the appropriate management groups. And then we can apply our governance options, in other words, assign policies to management groups. Which in turn means that the subscriptions in the management groups will inherit that policy assignment.


Configuring a Management Group
If your organization's use of Azure includes the use of multiple Azure subscriptions it can be a little bit cumbersome to apply permissions at the policy level to resources in multiple subscriptions.
For example, if you want to limit something such as virtual machine types that can be deployed in certain regions. Instead of doing that per subscription, if you have the same requirements for the subscriptions. You might organize those subscriptions first into a management group and apply that policy to the management group. It'll flow down and be inherited by all of the subscriptions. So it works well in that sense. So let's go ahead and see how that works in the portal. I'm going to go ahead and search the portal for management and I'll choose Management groups.
Now you always will have your default Tenant Root Group under which subscriptions exist. Here I can see my Pay-As-You-Go subscription.
But you can organize a hierarchy, kind of like how you would organize a hierarchy of organizational units or a use in on-premises Active Directory, to organize resources. In this case, we would be creating management groups to organize our subscriptions. Now even though, I only have a single subscription, I'm still going to go through create a management group and then move that subscription into that management group part of the hierarchy. The first thing I'm going to do. I'm going to click Add management group in the upper left.
I need an ID for it. I'm going to call it mgmt1111 and I'm going to call this MgmtGroup1, then I'm going to click Save.
Now, if you've got multiple subscriptions, let's say tied to a particular business unit, you might name your management group in relation to that business unit name. 
Or if it's for particular project, maybe name the management group the name of the project or something along those lines. After a moment, we'll see that our management group down below is listed.

[Video description begins] A new row entry gets added to the table, which includes: Name: MgmtGroup1. [Video description ends]

And if I click on it and open it up, there's nothing in it because we haven't moved any subscriptions there yet. So I'm going to go back to my Tenant Root Group where I see my subscription

[Video description begins] He clicks the row entry under the Name column: MgmtGroup1. A section called "MgmtGroup1" appears in place of the "Tenant Root group" section. [Video description ends]

Pay-As-You-Go. And over on the far right, I'm going to click the more context menu, so the three dots and I'm going to choose Move. It's as simple as choosing the target management group that you want to move the subscription under.

[Video description begins] A blade called "Move" opens. It includes a drop-down list box labeled "New parent management group" and a button labeled "Save". [Video description ends]

Well, there's only one there MgmtGroup1, that we've just created a moment to go.

[Video description begins] He selects the following option in the "New parent management group" drop-down list box: MgmtGroup1. [Video description ends]

So I'm going to select that and choose Save.

[Video description begins] The table now has only one row entry, which includes: Name: MgmtGroup1. [Video description ends]

In after a moment the subscription disappears here from the Tenant Root Group and if I drilled on into MgmtGroup1, well we're going to see that our subscription is now listed there.

[Video description begins] He clicks the row entry, which includes:Name: MgmtGroup1. The section "MgmtGroup1" section appears in place of the "Tenant Root group" section. It includes a table with four columns and one row. The row entry includes: Name: Pay-As-You-Go. [Video description ends]

So the reason we would do this is, so that we can essentially apply centralized governance across multiple subscriptions in Azure. Let's see how that would work. So let me search for policy up here in the search bar. I'll choose Policy.

[Video description begins] A blade called "Policy" opens. It is divided into two parts: navigation pane and content pane. In the navigation pane, an option labeled "Overview" is selected and its corresponding page is open in the content pane. [Video description ends]

So what I'm going to do is take a look at assigning a policy to a management group. So I'm going to click Assignments over on the left. Any assignments that we already have will be shown.

[Video description begins] He selects an option called "Assignments" in the navigation pane and its corresponding page opens in the content pane. It includes a button labeled "Assign policy". [Video description ends]

I'm going to click the Assign policy button. Now the first thing we'd have to deal with is the Scope.

[Video description begins] A blade called "Assign policy" opens. It is divided into two sections. The first section includes steps: Basics, Parameters, Remediation, and Review + Create. The "Basics" step is selected and its corresponding page is open in the second section. It includes a "Policy definition" text box and a "Launch policy definition picker" button adjacent to it. It also includes a "Scope" text box. [Video description ends]

Where do you want this policy assigned? Well, let's go down and choose a policy definition, so we at least have something to think about here. Maybe I'll search for encrypt.

[Video description begins] He clicks the "Launch policy definition picker" button. A blade called "Available definitions" opens. It includes a search box and a button labeled "Select". [Video description ends]

And I want to make sure a disk encryption is applied on virtual machines. 

[Video description begins] He types "encrypt" in the search box and a list of 13 policy definitions appears. [Video description ends]

Now if your organization has six policies, well, then you potentially would have to configure this six times for each policy scope. The scope would be the subscription level. But here we can go one level above that, because subscriptions can be organized into management groups. So I'm going to select that policy.

[Video description begins] He selects the following policy from the list: Disk encryption should be applied on virtual machines. He then clicks the "Select" button. The "Available Definitions" blade closes. [Video description ends]

 And up above, notice it automatically assumes that we want to apply this policy definition and scour VMS looking for disk encryption within only the Pay-As-You-Go subscription.

[Video description begins] The following text gets populated in the "Scope" text box. Adjacent to this there is a "Launch scope selector" button. He clicks the button and a "Scope" blade opens. It includes two drop-down list boxes labeled "Subscription" and "Resource Group" and a button labeled "Select". It also includes a "Management Group" section under which there is an option called "MgmtGroup1". [Video description ends]

But I'm going to click the scope selector button over on the right. Now I could choose a different subscription, if I had others or even on a Resource group within the subscription where I want this policy applied, but that's not what we're talking about here. We're talking about management groups which we see at the top. So here's MgmtGroup1, I can select it, and then choose Select. And we are now applying this policy definition to scour all subscriptions under MgmtGroup1, looking for machines where disk encryption has not been applied. They'll then show up in compliance reports.


Azure Cost Analysis
One important aspect of cloud computing is being able to manage costs, even though it's often pay-as-you-go, you get charged for your resource consumption. You want to make sure that you are tracking it and identifying where most of those charges are coming from. So we can do that by looking at Azure cost analysis.
To get started here in the portal, I'm going to go into Subscriptions, because billing occurs at the subscription level.
So I've got a Pay-As-You-Go subscription listed here, I can see the Current cost, and I can see that it's Active.

[Video description begins] He points to the following row entry, which includes: Subscription name: Pay-As-You-Go, Current cost: CA$1.48, and Status: Active. [Video description ends]

So I'm going to click directly on the subscription.
Because when I do that, I get this new navigation bar on the left, and one of the things I see is Cost analysis, which is precisely what I want to do right now.
Knowing that I have a specific dollar amount based on my Azure usage is not enough. I want to know how it's broken down. So here for example, we can see it's Canadian dollars. It's only $1 and 48 cents. And we can see that it's charted here. I'll just scroll little bit over to the right according to days of the month as we can see, and it looks like the usage has been increasing since about March 4th. Now, if I scroll down a little bit, we can also see the Service name breakdown. Well, where is that money being spent? Is it virtual machines? Is it storage? Is it databases? Well, we can see by looking under Service name at this graph, that we've got the bulk of it coming from SQL database.
Little bit coming from virtual machines and storage. And we can also then see it's broken down here by Location, well, which regions. We might have different Azure administrators using our Azure account to deploy resources in different Azure regions. So I can see the cost here per region that looks like all of the cost is stemming from the US East region. Now, depending on how you use resource groups to organize related Azure resources it will determine how useful it is to look at the cost per resource group.
Often many organizations will create resource groups for specific apps that might have multiple components like a web server type of app. And it might have some custom code. It might have a back-end database. All of those resources might be organised in one resource group and then you can see the charges per resource group. So basically, in that example, you'd be able to see the charges per web application. Or you might have resource groups for different departments, if that make sense in your organization or different projects, and then deploy resources into them accordingly. And again, you'll then be able to see the cost breakdown per resource group. It really depends on what your requirements are. And you can also click the Export button to export this information as a PNG type of graphic file or as Excel data or as a CSV file.
And then you can download the charts. You can also schedule the export of this information on a periodic basis maybe to a storage account for business analysts that might require this type of cost breakdown.
Now, we can also get a little more granular at the top by clicking Cost by resource.
Now, why is this useful? Because it's showing us the individual Azure resources, like specific SQL servers that were deployed specific virtual machines, disks for virtual machines, storage accounts, and so on.
And we have a cost associated with it over in the right hand column.
So it's just a way to really drill right down to the specific deployed resources that are incurring costs in your Azure account through your subscription.


Azure Budgets
While it's important to analyze costs and pore over the numbers, it's also equally important to save time and get notified when costs on a monthly basis exceed a certain value. And that's where Azure budgets come in as being useful.
So I'm going to click here in the portal on Subscriptions. I see, I have a Pay-As-You-Go subscription, which I'm going to click on.
Now we know that we can click on Cost analysis, and of course, that is very important.
But we're talking here about getting notified when a certain threshold value is exceeded. So for that, we're going to go to Budgets over here on the left.
Now we don't have any budget shown on the right.
So I'm going to go ahead and click Add. The first thing you have to think about is the scope to which you want the budget applied. What do you want to look at costs for, do you want to look at it for your entire subscription?
I can click Change scope and from here, I could switch to a different directory.

[Video description begins] A blade called "Select scope" opens. It includes a button labeled "Cancel" and a list of items. The list contains the following node: Quick24x7 (root). [Video description ends]

Right now, I'm using the Quick24x7 Azure AD tenant. And we could also drill down, for example, under our root management group for our tenant. So I can click that.

[Video description begins] He clicks the node "Quick24x7 (root)" and a subnode called "MgmtGroup1" appears. [Video description ends]

I can then click down on a management group, perhaps that's the level where I want to apply my budget.

[Video description begins] He clicks the subnode "MgmtGroup1" and a subnode called "Pay-As-You-Go" appears. [Video description ends]

But I can also click on the management group and then go down under my subscription, and even go down into a specific resource group.

[Video description begins] He clicks the subnode "Pay-As-You-Go" and several subnodes appear. [Video description ends]

So you have all of these scopes that you can apply your budget to. I'm just going to Cancel out of there. We're going to leave it directly on our Pay-As-You-Go subscription.

[Video description begins] Two drop-down list boxes appear adjacent to the "Add filter" button. [Video description ends]

I could also click Add filter, because maybe what I want to do is filter by something specific. So for example, I could specify that I want to look at a type of service I want to filter on. Or maybe a ResourceLocation, so we can choose a specific region if we wanted to filter on that.

[Video description begins] In the first drop-down list box he selects the "ResourceLocation" option. [Video description ends]

However, I'm going to click the x to remove the filter, I don't want to apply that.

[Video description begins] He removes the filters. [Video description ends]

Next thing I need to do here is, I need to specify a unique name for the budget.

[Video description begins] The "Create budget" page also includes a section called "BUDGET DETAILS". This section includes a text box labeled "Name", a drop-down list box labeled "Reset period", and another text box labeled "Amount ($)". [Video description ends]

So I'm going to call this Budget1.

[Video description begins] He types the following text in the "name" text box: Budget1. [Video description ends]

Now the Reset period will be on a monthly basis, but I could change that to whatever time period makes the most sense for me. I could set an Expiration date.

[Video description begins] The following option is preselected in the "Reset period" drop-down list box: Billing month. [Video description ends]

I'm going to leave those default settings, and I'm going to set the budget amount. For example, I want to know once we're exceeding $500 a month. Now to help along with this, down below, I can see last month's costs. And I can see the past six months' cost, and the maximum monthly forecast cost. So based on those small values, perhaps 500 is a little large. So maybe for example, if we get above a 100, which might be indicative of abnormal cloud usage in our particular case, then we can put that value in.

[Video description begins] He types the following text in the "Amount ($)" text box: 100. [Video description ends]

Now having done that, I'm going to scroll down and click on the Next> button. Now up at the top, if I scroll back up, we can set alerts.

[Video description begins] A page called "Set alerts" opens. It includes a table with several columns and one row entry. The column headers include "% of budget" and "Action group". Under the "% of budget" column header the row entry is a text box. Under the "Action group" column header the row entry is a drop-down list box. Under the table there is a link called "Manage action group". [Video description ends]

So when we get to a percentage of that value, let's see when we get to 80% of our $100, then we want to have something happen.

[Video description begins] He types the following text in the row entry under the "% of budget" column header: 80. [Video description ends]

So we can work with an Action group. Now the Action group allows me to specify things like, what you want to occur. Now, do you want to trigger some kind of code, or do you want to trigger some kind of a notification? And I even have a Manage action group option here. If I click on that, it'll take me in where I can see what I could do, what could be triggered when 80% of our budget is reached.

[Video description begins] A blade called "Manage actions" opens. It includes a button labeled "Add action group" and a table with several columns and one row. The column headers include "Action group name" and "Short name". [Video description ends]

So I could click Add action group, maybe what I want to do send something like an SMS text message.

[Video description begins] A blade called "Add action group" opens. It includes two text boxes labeled "Action group name" and "Short name" and a button labeled "OK". [Video description ends]

So I'm going to call this AG1 for action group 1. Same thing for the Short name, which is a required field, as indicated by the red asterisk.

[Video description begins] He types the following text in the "Action group name" and "Short name" text boxes: AG1. [Video description ends]

And down below, what I want to do is Select an action type.

[Video description begins] The blade also includes a table with several columns and one row. The column headers include "Action name" and "Action type". The row entry in the "Action name" column is a text box. The row entry in the "Action type" column is a drop-down list box. [Video description ends]

In this case, it's going to be Email/SMS/Push/Voice.

[Video description begins] He selects the following option in the drop-down list box in the "Action type" column: Email/SMS/Push/Voice. A blade called "Email/SMS/Push/Voice" opens. It includes an "OK" button and a radio button labeled "SMS". He selects the radio button and the following text boxes get enabled: Country code and Phone number. [Video description ends]

And let's say that I want to send SMS text notifications. So it's country code, and I could just fill in the number. After I've done that, I would then go down and click OK. Now, of course, it wants me to fill in a valid phone number. So we'll just change it into something else. All 5s in a phone number is actually reserved and used for works of fiction like movies and television shows. So I'm just going to go ahead and leave that as it is for SMS. So we're just basically adding this specific type of notification. And I'm just going to call this TextMsgNotify. This is in my action group AG1, and I'll click OK.

[Video description begins] He types the following text in the text box in the "Action name" column: TextMsgNotify. [Video description ends]

And essentially, we want to be able to use that within our budget.

[Video description begins] The table on the "Manage actions" blade now has two row entries. [Video description ends]

So it's showing up in the list. I'm just going to go ahead and select it to get back to where we were in configuring our notifications.

[Video description begins] He clicks the new row entry, which includes: Action group name: AG1. A blade called "AG1" opens. [Video description ends]

So I'm just going to scroll back here, we've got AG1, and let's just go back here. So that's where we want this to be showing up.

[Video description begins] He navigates back to the "Set alerts" page in the "Pay-As-You-Go" blade. He points to the drop-down list box in the "Action group" column of the table. He then selects the "AG1" option in the drop-down list box. [Video description ends]

And after a moment, you might have to go to the previous screen and back, you'll see the group. So here it is, AG1. Down below, I can also specify, of course, the recipients' email. So I'm just going to scroll over to the right so I can see my scroll bar, there it is.
So maybe, I've got a group called admins@quick24x7.com, and I want them to receive notifications, so in addition to our SMS text messaging. Okay, so having done that, I'm just good to go down and create the budget.
And there you have it, the budget creation succeeded, we now have our budget called Budget1.
And we can expect to be notified when we get to 80% of our budgeted value in the currency specified for the subscription, in this case, CA$100.00.


Azure Invoices
While the use of cloud computing can mean less capital expenditures for IT services. Such as, not having to acquire a lot of on-premises physical computing hardware. We still have to be able to track charges in the cost on a per-use basis by reviewing invoices.
So to get started here in the Azure portal, I'm going to click on Subscriptions.
Now, the subscription of course is tied to an Azure AD tenant which is shown here as being Quick24x7. My subscription is called Pay-As-You-Go. I'm going to go ahead and click on it to open up this navigation bar which gives me options related to my subscription.
One of which, if I scroll down under Billing, is Invoices.
Now, we can see on the right that we have the Last 3 months worth of invoices shown. We can see the Billing Periods, starting and ending. We can see the date of the invoice. And we can also see the Amount. And we can see the Type, in this case it's for Azure Services. Now we also, if we scroll to the right, have the option of downloading each of these. Now, if I click on the download link, it's a CSV file format download or it could be a PDF.

[Video description begins] He clicks the download link of the third row entry and its corresponding blade opens. [Video description ends]

Now, this could be important for accounting reasons and certainly for business expense or taxation reasons. So this is something that we can do by looking at the invoices. But notice also that each of these specific dollar amounts for each invoice is a hyperlink, it's blue.

[Video description begins] He points to the row entries in the "Amount" column. [Video description ends]

And so, if I were to click directly on it, I could actually jump into the Cost analysis for that particular invoice.

[Video description begins] He clicks the third row entry in the "Amount" column and a blade called "Cost analysis" opens. It includes a table with several columns and several rows. The column headers include "Service name", "Service tier", and "Cost". The blade also includes a date drop-down list box. [Video description ends]

So I can see for example, looks like premium solid state drive or ssd managed disks. Were really the bulk of the cost for that particular invoice within that time frame.

[Video description begins] He points to the first row entry in the table. [Video description ends]

Followed by, it looks like, virtual machines. So we can see how this breaks down. We can even filter it.

[Video description begins] He points to the second row entry in the table. [Video description ends]

If I want to click on Filter items, we could start typing things in and then filtering based on that.

[Video description begins] He points to a text box labeled "Filter items". [Video description ends]

So for example, if I put in ssd, all we're doing now is looking at SSD charges related to the time frame listed up above.

[Video description begins] He types "ssd" in the "Filter items" text box and the row entries in the table get filtered. [Video description ends]

So I'm just going to go ahead and click the X to close out of that. Now, it's one thing to come here and view the invoices. But we want to try to avoid having to do things in the sense of thinking of doing it. We want to automate things. And we can click the Email Invoice option up at the top.

[Video description begins] A blade called "Email invoice" opens. It includes a button labeled "Opt In". [Video description ends]

Currently it says, You are not receiving emailed invoices. Well, that's something I want to do. So I'm going to click on Opt In to make that happen.

[Video description begins] A blade called "Email statement notice" opens. It includes a button labeled "Agree". [Video description ends]

I acknowledge that it's going to be sent via non-encrypted email. That's fine, I Agree.

[Video description begins] The following pop-up box appears: Opt-in Complete. He closes the "Email invoice" blade. [Video description ends]

So this could be an important aspect of your configuration when it comes to having your invoices emailed to you automatically. The other thing to think about is we have this Access Invoice button up at the top. Now, this is currently On.

[Video description begins] A blade called "Access to invoice" opens. [Video description ends]

 And it would apply for example to users in your subscription that would have roles such as the the billing reader role. So we have that option available as well.

[Video description begins] He closes the "Access to invoice" blade. [Video description ends]

Also notice that the default here, Timespan is listed as being 3 months. But you can click on that and change it.
So for example, I can set it to the Last year if that's what I want to see.
And sure enough, we now see our invoices for the Last year.


Azure Resource Groups and the Portal
In Microsoft Azure, a resource group is a way to organize related resources together, such as creating a resource group for a web application and deploying all of the underlying resources that make that web app work within the resource group. Or maybe creating a resource group for a department. And when that department in the organization deploys resources, they deploy them into that resource group, or you might do it for a project. Either way, it allows us to track billing for resources in that resource group. It also allows us to track usage of items or see deployments within that resource group.
So here in the portal, let's get started by creating a resource group, we're going to do that by beginning within the Resource groups view. So in the upper left, I'll open up the navigator and I'll click Resource groups.
And you're going to see any existing resource groups, you'll see any subscriptions that they may be tied to, and their geographical location.
Now, if you click on a specific resource group and open up its properties blade, you'll be able to see things like Tags, you could tag it.
You can also see any deployments that were made into that resource group and the state of them, whether they succeeded or whether they failed. 
You can also even see Cost analysis and Cost alerts and Budgets per resource group, so at the resource group level.
However, in this case, we're going to create a new resource group, so back here at my main Azure portal page, I'll click Create a resource.
Now from here, I'm just going to search for resource group, and there it is, Resource group. So, I'm going to go ahead and click the Create button, and then I have to fill in a few little details.
Basically I have to give it a name and specify the region where I want to create it.
And, of course, tie it to a particular Subscription, of which I have only one, the Pay-As-You-Go subscription.

[Video description begins] He selects the "Pay-As-You-Go" option in the "Subscription" drop-down list box. [Video description ends]

I'm going to call this Rg2, Resource group 2, and it's going to be, let's see, in a different location, I'm going to put this one in Canada Central.

[Video description begins] He types the following text in the "Resource group" text box: Rg2. [Video description ends]

I'm doing that because I know that most of my resources will be deployed in that same type of region.

[Video description begins] He selects the "(Canada) Canada Central" option in the "Region" drop-down list box. [Video description ends]

Then I'll click next for tags.

[Video description begins] The "Tags" step gets selected in the first section and its corresponding page opens in the second section. It includes a table with three columns and one row and a button labeled "Next : Review + create >". The column headers include Name and Value. The row entries under both these column headers are text boxes. [Video description ends]

Now we could specify a tag key and value pair. For example, if this is going to be tied to a project, we can specify a Project and a Value, let's say project ABC.

[Video description begins] He types the following text in the row entry in the "Name" column: Project. He types the following text in the row entry in the "Value" column: ABC. [Video description ends]

 But bear in mind, depending on how you plan on using this, you might just name the resource group project ABC, so really depends how you want to use it.

[Video description begins] The "Review + create" step gets selected in the first section and its corresponding page opens in the second section. It includes a button labeled "Create". [Video description ends]

At any rate, I'm going to click the next button, validation is passed, I'm going to click Create, and after a moment it will create our resource group.

[Video description begins] The following pop-up box appears: Resource group created. It includes a button labeled "Go to resource group". [Video description ends]

I'm going to click the Go to resource group link.

[Video description begins] A blade called "Rg2" opens. It is divided into two parts: navigation pane and content pane. In the navigation pane, an option labeled "Overview" is selected and its corresponding page is open in the content pane. [Video description ends]

Well, actually, before we do that, let's go back to the Resource groups view, just to shows up there.

[Video description begins] He navigates to the "Resource groups" blade. [Video description ends]

We know it will, so we just have to, click Refresh, maybe a few times, and wait a moment and then we'll see resource group show up, resource group 2, Rg2 show up.

[Video description begins] A new row entry for Rg2 gets added to the table. He clicks this row entry and the "Rg2" blade opens again. [Video description ends]

We can click on it and then start to explore it.

[Video description begins] He selects an option called "Deployments" in the navigation pane and its corresponding page opens in the content pane. It includes a table with several columns and no rows. [Video description ends]

Now, of course, it's not really being used at this point, you could go under Deployments and you would see that there's no deployments that have been sent here because it's newly created. But when you deploy new resources, for example, if I were to go, let's say to the All resources view, not that we have to do it this way, but we can.

[Video description begins] He opens the navigator and selects an option called "All resources". The "All resources" blade opens. It includes a button labeled "Add". [Video description ends]

And, if I were to click the Add button, let's say we want to add a virtual machine, Windows Server 2016 Datacenter.

[Video description begins] A blade called "New" opens. He selects an option called "Windows Server 2016 Datacenter". A blade called "Create a virtual machine" opens. It includes a "Resource group" drop-down list box. [Video description ends]

Part of that deployment is going to be specifying the resource group into which we want to deploy it. So, I can see I've got a drop-down list here for resource groups, and I could specify the Resource group, in this case, Rg2, where I want this resource deployed.


Azure Resource Groups and the CLI
In this demonstration, I'm going to use the Azure CLI to manage Azure resource groups.
But first, here in the portal, I've navigated to the Resource groups view where I can see, I currently have two resource groups.

[Video description begins] He clicks the second row entry, which includes: Name: Rg1. A blade called "Rg1" opens. It is divided into two parts: navigation pane and content pane. In the navigation pane, an option labeled "Overview" is selected and its corresponding page is open in the content pane. He selects an option called "Deployments" in the navigation pane and its corresponding page opens in the content pane. It includes a table with several columns and two rows. The column headers include "Deployment name" and "Status". [Video description ends]

And if I click on any one of them to open them up, I could click on Deployments to open up that blade to see any items that were deployed into that resource group. Whether it Succeeded or whether it failed.

[Video description begins] He points to the "Status" column. [Video description ends]

And I can even perform a Cost analysis against the resource deployments inside of this resource group and so on.

[Video description begins] He selects an option called "Cost analysis" in the navigation pane and its corresponding page opens in the content pane. [Video description ends]

So let's go to the CLI and let's start managing resource groups. The first thing I'll do is run az group -h.

[Video description begins] He opens the command prompt window. The following prompt is displayed: D: \>. [Video description ends]

Now on help, I'm working with resource groups.

[Video description begins] He executes the following command: az group -h. The output displays a list of groups, subgroups, and commands. The prompt does not change. [Video description ends]

And it does say here that this allows me to Manage resource groups and template deployments. Perfect. So the next thing I'm going to do is get the next level command, which in this case to create a resource group would be create, so az group create. Now, if I need more help, I can run az group create -h to learn more about any parameters that I might need to pass on the command line to work with this. So such as --location or -l to specify the location or the region.

[Video description begins] He clears the screen. He executes the following command: az group create -h. The output displays a list of arguments and global arguments. The prompt does not change. [Video description ends]

And it even says, if you want to know how to type in those items, you could see the values by typing in az account list-locations. Of course, we'll have to specify the name and so on. So I'm going to go ahead and clear the screen with cls and I'm going to do this. I'm going to run az group create -l for location, in my case canadaeast. And I'm going to call this resource group -n Rg2.

[Video description begins] He executes the following command: az group create -l canadaeast -n Rg2. The output displays that the provisioning succeeded. The prompt does not change. [Video description ends]

Now after I've done that, I should get some returned JSON output which is indicative of the fact the provisioning succeeded, which it says it did. So I'm going to go ahead and run az group to list my resource groups.

[Video description begins] He executes the following command: az group list. The output displays a list of resource groups and their properties. The prompt does not change. [Video description ends]

However, it lists all of the properties and it's a little hard to digest that output. So what I could do is run az group list, I could pipe it to the grep line filtering tool. And I could tell it I'm looking for the name property.

[Video description begins] He clears the screen. He executes the following command: az group list | grep name. The output reads: 'grep' is not recognized as an internal or external command, operable program or batch file. The prompt does not change. [Video description ends]

But here it says 'grep' is not recognized. Well, that's because I'm running the Azure CLI locally on my Windows machine as opposed to within a Cloud Shell. This is not a Linux host. I don't have the Linux subsystem for Windows installed, there's no way to grep this. So what I could do is also pipe that instead to the Windows find command. Now, in this case I'd have to specify that the name be within quotations in order for that to work correctly.

[Video description begins] He executes the following command: az group list | find "name". The output displays the names of 3 resource groups. The prompt does not change. [Video description ends]

And once I do that, it will show me just the names of the accounts. Now the next thing I could do also is use the az group list, I could use the --query parameter. This is built into the Azure CLI, it's probably the best way to do it. And because we have an array of items, in this case, we have three resource groups, we have to refer to the fact that we have more than one. And I can specify that we have an array or a collection of them by specifying open and close square brackets. Then I separate that reference from the property, in this case, name with a dot so .name. And now we'll see just the names of those specific resource groups.

[Video description begins] He executes the following command: az group list --query [].name. The output displays the names of 3 resource groups within square brackets. The prompt does not change. [Video description ends]

Now the thing is though, you can also delete a resource group. For example, here I'm going to run az group delete, and in this case, -n for name. Let's delete our first one, resource group 1, Rg1. But let's go back and check it out in the portal before we actually press Enter.

[Video description begins] He switches back to the Microsoft Azure portal. [Video description ends]

So back here in the portal, I want to go Home and I'm going to go to the All resources view. And I see that I've got two storage account here deployed in the Rg1 Resource group.

[Video description begins] He opens the "All resources" blade. It includes a table with several columns and three rows. He points to the second and third row entries. [Video description ends]

Okay, so they still exist. Now I could have seen that of course by going into Rg1, the Resource group, and then going into Deployments. I would see that those two storage accounts had successfully been deployed here. All right, having that in mind, let's go back to the CLI.

[Video description begins] He switches back to the command prompt window. [Video description ends]

And I'm going to press Enter to delete resource group 1 or Rg1, are you sure you want to do it?

[Video description begins] He executes the following command: az group delete -n Rg1. The screen prompts to confirm if you want to perform this operation. [Video description ends]

Yes, put in the letter y, and I'll press Enter, and it says it's Running. Now even while that's in the midst of running here back here in the portal, I've refreshed my All resources view. And notice that our two storage accounts have been removed.

[Video description begins] He switches back to the Microsoft Azure portal. The table on the "All resources" blade now has only one row entry. [Video description ends]

So the message here is clear, when you delete a resource group, you're also removing all of the resources deployed into it.

Azure Resource Groups and PowerShell

[Video description begins] Topic title: Azure Resource Groups and PowerShell. The presenter is Dan Lachance. [Video description ends]

In this demonstration, I'm going to use PowerShell to create an Azure resource group.

[Video description begins] The PowerShell window is open. The following prompt is displayed: PS /home/danlachance72>. [Video description ends]

So to get started here, I'm going to run get-command in my Cloud Shell, and I'm going to use an * followed by the text resourcegroup. And then after that, I'm going to put in another *. So in other words, showing PowerShell cmdlets that contain the text resource group in their name. And we can see that we have quite a few of them.

[Video description begins] He executes the following command: get-command *resourcegroup*. The output displays a list of cmdlets that contain 'resource group' in their name. The prompt does not change. [Video description ends]

I'm interested in building a new one, and I can see we have the New-AzureRmResourceGroup PowerShell cmdlet, so I'm going to go ahead and use that. And, I am going to clear the screen, I'm going to run new-azurermresourcegroup. I'm going to specify the name. In this case, I want to build a resource group called Rg2, resource group 2. And I'm going to set the location with -location in this case to the canada east region. So I'm going to use the new-azurermresourcegroup cmdlet -name. I want to call this Rg1 for resource group 1, and -location, I'm going to set in quotes to canada east. I'm using quotes because there's a space between canada and east within that region name, and I'll press Enter.

[Video description begins] He executes the following command: new-azurermresourcegroup -name Rg1 -location "canada east". The output displays that the provisioning has succeeded. The prompt does not change. [Video description ends]

After a moment we can see the ProvisioningState of having created resource group one or Rg1, is that it Succeeded. We can verify this by retrieving information get-azurermresourcegroup. When we do that it returns our resource groups including the one that we just created, Rg1.

[Video description begins] He executes the following command: get-azurermresourcegroup. The output displays the three resource groups and information about them. The prompt does not change. [Video description ends]

Notice the property tied to that is ResourceGroupName at least as it's labeled here. So I'm going to clear the screen, we're going to use the up arrow key to bring up our get command line. I'm going to pipe this to select and we are going to tell we want to select only the resourcegroupname property. So then all we are seeing are the names of our specific resource groups.

[Video description begins] He executes the following command: get-azurermresourcegroup | select resourcegroupname. The output displays three resource group names. The prompt does not change. [Video description ends]

Now we also have the option of removing a resource group. But before we do that, why don't we minimize our Cloud Shell here in the portal, and let's go to the Resource groups view where we will see any resource groups, there are three here.

[Video description begins] He switches to the Microsoft Azure portal. He opens the "Resource groups" blade. It includes a table with several columns and three rows. He points to the second and third row entries. [Video description ends]

Including Rg1 and Rg2. So what I want to do is issue a command to delete Rg2 using PowerShell. So back in our command shell, we're going to go ahead and do that by using the remove-azurermresourcegroup cmdlet. And I'm going to tell it the name in this case is going to be Rg2. It says are you sure you want to remove that resource group?

[Video description begins] He executes the following command: remove-azurermresourcegroup -name Rg2. The screen prompts to confirm the removal of the resource group 'Rg2'. [Video description ends]

I'll type in the letter y for yes, just bear in mind that when you are removing a resource group, you are also removing the resources deployed into it.

Moving Azure Resources

[Video description begins] Topic title: Moving Azure Resources. The presenter is Dan Lachance. [Video description ends]

You can use the portal to move Azure resources from one resource group to another. And remember that resource groups allow us to organize related cloud components, such as all of those underlying items required to support a web app. Or maybe we simply want to deploy virtual machines into a resource group called Project X, and so that we can track it by project, including at the building level. Either way, let's go ahead and do a move.

[Video description begins] The Microsoft Azure portal is open. [Video description ends]

To get started here, let's go to the Resource groups view. I've got two resource groups, Rg1 and Rg3.

[Video description begins] In the "Azure services" section he clicks the "Resource groups" option. The "Resource groups" blade opens. It includes a table with three columns and three rows. The column headers are Name, Subscription, and Location. He points to the second and third row entries, which include: Name: Rg1 and Name: Rg2. [Video description ends]

Let's go look at our Storage accounts, because we're going to move a storage account from one resource group to another.

[Video description begins] He navigates to the home page. In the "Azure services" section he clicks an option called "Storage accounts". A blade called "Storage accounts" opens. It includes a table with several columns and two rows. The column headers include Name, Resource group, and Location. [Video description ends]

It doesn't have to be a storage account, that just happens to be what we're using as our example. So I've got a storage account, and we can see right here, it's in a Resource group named Rg1, we're going to move it to Rg3.

[Video description begins] He points to the second row entry, which includes: Name: storacct33445, Resource group: Rg1, and Location: Canada Central. [Video description ends]

We might do this as part of a reorganization effort. So I'm going to click on the name of the storage account to open up its details.

[Video description begins] He clicks the second row entry and a blade called "storacct33445" opens. It is divided into two parts: navigation pane and content pane. In the navigation pane, an option labeled "Overview" is selected and its corresponding page is open in the content pane. It includes a button labeled "Move". [Video description ends]

And in the Overview blade, I have a Move button. So I could choose Move and move it to another resource group within the current subscription, or in another subscription.

[Video description begins] He clicks the "Move" button and two options appear: Move to another resource group and Move to another subscription. [Video description ends]

I'm going to choose Move to another resource group.

[Video description begins] A blade called "Move resources" opens. It includes a drop-down list box labeled "Resource group" and a button labeled "OK". [Video description ends]

All I have to do here at the bottom is specify the target Resource group that I would like to move this item to, the Storage account. So I'm going to select Rg3.

[Video description begins] He selects the "Rg3" option in the "Resource group" drop-down list box. [Video description ends]

I'll turn on the checkmark that says, I understand that tools and scripts associated with move resources might not work because I'm moving it to a different location. And I also might have to update them with the new resource ID.

[Video description begins] He switches to a new tab in the browser. The Microsoft Azure portal is open. The "storacct33445" blade is open. An option called "Properties" is selected in the navigation pane and its corresponding page is open in the content pane. It includes a field labeled "Storage account resource ID". [Video description ends]

So I've opened up another browser window here for my storage account, the one that we're moving, and I've gone to the Properties blade, where we can see the Storage account resource ID. Now, we're going to go ahead and verify that it is changed after we move it to our new resource group. Notice that part of that account resource ID includes the resource group name in the path. So let's go back over, we've checked that checkmark. Let's click OK to actually perform the move. Just make sure you're patient as the move occurs, especially if you're moving more than one resource at a time.

[Video description begins] He switches to the previous tab where the "Move resources" blade is open in the Microsoft Azure portal. He clicks the "OK" button. [Video description ends]

So if I click my notification bell icon in the upper right, we can still see it's moving that storage account resource. While that's happening, let's go back into our Resource groups view. And I'm going to open up an existing resource group, because what you can also do is choose to move at the resource group level.

[Video description begins] He opens the "Resource groups" blade. He selects the second row entry, which includes: Name: Rg1. The "Rg1" blade opens. It is divided into two parts: navigation pane and content pane. In the navigation pane, an option labeled "Overview" is selected and its corresponding page is open in the content pane. It includes a button labeled "Move". [Video description ends]

What does this do? This will allow you to move all of the deployments associated with the resource group.

[Video description begins] He clicks the "Move" button and two options appear: Move to another resource group and Move to another subscription. He selects the "Move to another resource group" option. A blade called "Move resources" opens. It includes a drop-down list box labeled "Resource group" and a button labeled "OK". It also includes a table with two columns and one row. The column headers include "Resources to move" and "Type". The row entry includes, Name: storacct33445. [Video description ends]

And we can see currently, it still registers that our storage account is a part of this resource group. If you had many resources deployed here, they would all be listed. And you can see, you can select or deselect the ones and choose the target resource group to move them to. So you can do it at the resource group level or from the individual resource level.

[Video description begins] He closes the "Move resources" blade. [Video description ends]

Okay, before too long, we'll see that the moving of the resource is now complete. So we looked at the original storage account ID prior to the move. So the ID itself will not be changed, this numeric value, it starts with the 048b, it ends with 2109. I've opened up another web browser window after the move, so looking at the same resource, and the ID itself in terms of the numeric value portion has not changed. What's changed is the reference in the overall resource ID for the storage account. The reference to the resource group, here it's Rg3, and originally, it existed in Rg1. So as was suggested when we were doing this, you know, if you have any programmatic code or scripts that refer to the old resource ID, make sure they change to the new one.


Resource Group Deployments
You can view past resource deployments into an Azure resource group by opening up its properties in the portal, which we're going to do here. 
So to start with, let's go to the Resource groups view where we're going to see the resource groups within this subscription.

[Video description begins] In the "Azure services" section he clicks the "Resource groups" option. The "Resource groups" blade opens. It includes a table with three columns and three rows. The column headers are Name, Subscription, and Location. [Video description ends]

So for example, Rg1, resource group 1. If I click to open that resource group in the Overview blade, I'll see any resources currently deployed in that resource group.

[Video description begins] He clicks the second row entry, which includes: Name: Rg1. The "Rg1" blade opens. In the navigation pane, an option labeled "Overview" is selected and its corresponding page is open in the content pane. It includes a table with two columns and no rows. The column headers are Name and Type. It also includes a button labeled "Redeploy". [Video description ends]

Now here it says there are No resources to display. However, if I click on the Deployments item in the navigation bar, I can see that there have been deployments to this resource group in the past. So either those resources were deleted, or they were moved to another resource group.

[Video description begins] He selects an option called "Deployments" in the navigation pane and its corresponding page opens in the content pane. It includes a table with several columns and two rows. The column headers include "Deployment name" and "Status". [Video description ends]

So let's close this resource group for a moment and let's go into our second resource group here called Rg3.

[Video description begins] He navigates to the home page and opens a blade called "Rg3". It is divided into two parts: navigation pane and content pane. In the navigation pane, an option labeled "Overview" is selected and its corresponding page is open in the content pane. It includes a table with three columns and one row. [Video description ends]

So again in the Overview part of that, we do see there is an active object here within this resource group. It's a storage account.

[Video description begins] He points to the row entry, which includes: Name: storacct33445 and Location: Canada Central. [Video description ends]

And in the same way, if we go to the Deployments part, we'll see see that there are no deployments listed to this.

[Video description begins] He selects an option called "Deployments" in the navigation pane and its corresponding page opens in the content pane. It includes a table with several columns and no rows. The column headers include "Deployment name" and "Status". [Video description ends]

Well, how can that be when we can see there's a storage account currently assigned to Rg3? That would be because it must have been moved from another one. So let's go back into our initial resource group, Rg1, let's go the Deployments section.

[Video description begins] He navigates to the home page and opens "Rg1" blade. He selects an option called "Deployments" in the navigation pane and its corresponding page opens in the content pane. [Video description ends]

Now here I can see that there was a template deployment for one or more resources. We don't quite know yet, into this resource group on a specific date and time.

[Video description begins] He points to the first row entry, which includes: Deployment name: Microsoft.Template. He clicks the row entry, which includes: Deployment name: Microsoft.Template. A blade called "Microsoft.Template" opens. It is divided into two parts: navigation pane and content pane. In the navigation pane, an option labeled "Overview" is selected and its corresponding page is open in the content pane. It includes a "download" link. [Video description ends]

Now if I click on the link for that template, I can actually Download the details related to that template, it's a zip file.

[Video description begins] The zip file opens in the file explorer window. It includes a file called "deployment.json". [Video description ends]

I'm just going to choose Open to open it up directly, and it going to open up the deployment.json file. This gives you the details about what in that template was deployed to the resource group.

[Video description begins] The file contains several lines of code. [Video description ends]

Unless we scroll down through here, it looks like it was a storage account, that looks like the only thing that was deployed here. So we can learn that quite easily by viewing that information.

[Video description begins] He closes the deployment.json file. He switches back to the browser. [Video description ends]

Now what's equally interesting about that, if I go back here to the Deployments, is if I select an existing deployment.

[Video description begins] He navigates back to the Deployments page in the "Rg1" blade. [Video description ends]

So we're here have a deployment of the storage account into this resource group. We have a Redeploy button up at the top.

[Video description begins] He selects the second row entry in the table, which includes: Deployment name: Microsoft.StorageAccount. [Video description ends]

And it means what it says, based on the selection, you can deploy that item again. Now you would only do that if it doesn't already exist. So for example, I'm going to click Redeploy. So this is what you would normally see if you were deploying from a template.

[Video description begins] A blade called "Custom deployment" opens. It includes a drop-down list box labeled "Resource group", a text box labeled "Storage Account Name", and a button labeled "Purchase". The following text is populated in the "Storage Account Name" text box: storacct33445. [Video description ends]

So I can select a Resource group where I want to deploy this item. So for example, Rg3 or I can create a new resource group, whatever the case might be. Now interestingly, even though it was originally deployed into Rg1, this storage account was moved to another resource group. And so it doesn't actually exist here anymore. So I'm going to deploy it back into Rg1. What I'm doing is creating a new storage account from that original deployment. I would do that if I want to use a lot of the settings from it as opposed to deploying a brand new storage account from scratch.

[Video description begins] He selects the "Rg1" option in the "Resource group" drop-down list box. [Video description ends]

It's the only reason you would do this. So assuming I'm okay with all of these settings as per my original deployment. Then down at the bottom, I could choose that I agree to the terms and conditions stated above. The only thing I'll have to account for though is the name of the storage account. If that storage account is still being used somewhere, then the name isn't unique. So I'll just add a 2, let's say to the end of it, to make sure that the Storage Account Name is unique. I'll choose Purchase.
And let's see if it validated, excellent. So the deployment is currently in progress. What we're doing is redeploying a storage account into this resource group based on a past deployment. Of course, the original storage account is no longer here. It's in Rg3. And after a moment, if I go look at my notification bell icon in the upper right, it looks like the resource deployment succeeded. Let's go back and look at the deployments here for our resource group.
And let's take a look at the Overview here where we can see active current items here. And we can see that there is now a storage account that was deployed into Rg1 and we redeployed it from a past deployment.


Resource Group Cost Analysis
In Azure, you can view and track your costs based at the subscription level.
So for example, here in the portal if I go to my Subscriptions, and if I click on an active subscription, when I open it up, I'll have the option of clicking Cost analysis over on the left.
And then I'll see all the costs associated with this subscription. Of course, I can change the time period or time frame for which that is representative of, but we have the option of doing that. But what we're talking about here is doing a cost analysis at the resource group level. Now think about how you might use a resource group in Azure, you might use it for a project, so you might have a project called Project X. So you'd create a resource group with that same name and deploy project resources into it. That way you have a single unit of management in the resource group and also for tracking costs. Let's take a look at that.
So I'm going to go into my Resource groups view here in Azure, and I'm going to open up an existing resource group I've got named Rg1, so I'll click on it.
And what I want to do is scroll down in the navigation bar and click on Cost analysis to open that blade.
So what's going to happen is we're going to see a cost breakdown for resources deployed only into this resource group. And we can see it's coming up with the numbers listed here. So we have our standard charts where we can scroll down below and see it broken down by service. So it looks like we've got SQL databases eating up the lion share of the cost in this particular case for this time frame, the location here, Canada East. So we have all the normal stuff that we would normally see we can even filter. I could add a filter here for anything that I'm interested in such as a specific service type or Service name in this case. So I could open up the list and choose that I'm only interested in sql database.
And I could filter based only on sql database. So then the cost analysis will update to show me only that. And as usual, we also have the option of exporting. So for example, I could choose to Export.
Let's see a PNG graphic file. Let's go ahead and do that. And I'll click Download charts. And once that's done, I'll just click Open down at the bottom of the screen. And we can see here it's opened it up in Paint on my machine, but we essentially have the same type of information that we can see visually directly in the Azure portal. Let's go back and export that as, let's say a, document in the format of Excel. So I'm going to choose Excel and choose Download data. And then I'll just go ahead and click on Open. So when you open it in Excel, you're going to have two sheets. You could have a worksheet, which is the summary that you're looking at here and also the actual data itself.
So not only can we work with our cost analysis at this level at the resource group level, but we can also go into Cost alerts over on the left and Add an alert and notification when the costs for resources deployed into this resource group get to a certain level.
So I could add a filter. I'm just going to leave it on Rg1, I'm not going to change the scope. And I'm going to call this Rg1Budgets1.
Now, the idea here is that we want to be alerted when costs exceed a certain value. So I can specify the period. I'm going to leave it on Billing month but I could specify quarter here, and so on. And I'm going to set the amount here to 50. So as I scroll down, I can see here that the max over the past five months has been about $25 specifically in Canadian dollars.
So, it depends on your subscription and how it's configured for the currency. So that's been specified. So now that I've done that, I'm going to go ahead and click on Next>. So, we scroll back up to the top.
Basically, I'm going to say when we get to 75% of our budgeted amount, I want to use an existing Action group if we have any, in order to send a notification. Now if we don't have any existing action groups that are available in the list, then we can click the Manage action group link.
Down below, we can also specify an alert recipient email address, such as for a group, which I've specified here. And then I can just click Create.
So I didn't create an Action Group, I could have, if I wanted as an alternative alert notification method like SMS text or something like that. So at this point, we now have a budget created. So, if I go into the Budgets.
Portion here, I can see our budget is listed here for the resource group. So the key is that we can work with cost analysis at the resource group level.


Resource Group Budgets
In Azure, you create budgets so that you can be notified when a certain percentage of a given value has been reached. For example, if you set a budget for $500 per month, you might want to be notified when you get to 80% of that $500.
So I can go in and take a look to make sure that issues such as leaving virtual machines or databases running by mistake hasn't occurred, and that's why you have an increase in cost. So we can do this at the subscription level.
If I were to go into an Azure subscription, I can click on the subscription to open it up, and I can click Budgets and manage the budgets from there.
But what we're talking about in this particular case is doing same type of thing but at the resource group level.
So it only applies to charges for resources deployed to a specific resource group. So in my Resource groups view, I'm going to click on a resource group I have called Rg1.
And in the Overview blade over on the right, I can see any resources currently deployed there. In this case, it's only a single storage account. However, as I scroll down in the navigation bar for the resource group, I can see Cost analysis, Cost alerts, and Budgets. Well, Cost alerts allows me to add an alert which ends up creating a budget. I'm just going to go here to the Budgets view. I don't have any budgets currently.
So I'm going to go ahead and click the Add button to add a new budget. Now remember again, the budget is really about sending a numeric threshold value for costs.

[Video description begins] A page called "Create a budget" opens. It includes a button labeled "Next >" and a section called "BUDGET SCOPING". In this section there is a Scope label, adjacent to which the "Rg1" option appears. Under this option there is a link called "Change scope". Under this link there is a button labeled "Add filter". [Video description ends]

And then setting up some kind of an alert notification mechanism. So Rg1 is the current scope. I'm not going to change that. I could click Add filter, if I want to filter within the resource group by something else.

[Video description begins] Two drop-down list boxes appear adjacent to the "Add filter" button. [Video description ends]

So maybe for example, by ServiceName. Maybe, I'm only interested in looking at sql database costs within Rg1 and sending alerts for that, so I could do that. However, I'm going to remove that filter by clicking the little x.

[Video description begins] The "Create budget" page also includes a section called "BUDGET DETAILS". This section includes a text box labeled "Name", a drop-down list box labeled "Reset period", and another text box labeled "Amount ($)". [Video description ends]

And down below, I'm going to call this Rg1Budget1All, indicating it's for all costs, not by particular service or anything like that.

[Video description begins] He types "Rg1Budget1All" in the "Name" text box. [Video description ends]

I'm going to leave it on billing month, but you can change the period to be something different, like monthly, maybe you only want to track this and be notified from a quarterly perspective or annual. But I want it done every Billing month.

[Video description begins] The following option is preselected in the "Reset period" drop-down list box: Billing month. [Video description ends]

I can see the start and ending date for that. I'll leave those set as they are, so two years into the future, pretty much. I'm going to set my BUDGET AMOUNT to 500, so $500 and that will be in the currency specified with my subscription, in my case, Canadian dollars.

[Video description begins] He types the following text in the "Amount ($)" text box: 500. [Video description ends]

I can see my past five month maximum costs, which can help me sometimes gauge what I should be putting in for my budget amount. However, I'm going to leave mine at $500. Could go down to the bottom, I'm going to click Next>.

[Video description begins] A page called "Set alerts" opens. It includes a table with several columns and one row entry. The column headers include "% of budget" and "Action group". Under the "% of budget" column header the row entry is a text box. Under the "Action group" column header the row entry is a drop-down list box. Under the table there is a link called "Manage action group". [Video description ends]

And I'll scroll back up here because I can specify the percentage of that budget amount, then I want to trigger an alert. So let's say it's 80% of that $500, which works out as we can see here to be $400.

[Video description begins] He types the following text in the row entry under the "% of budget" column header: 80. [Video description ends]

I could select an existing Action group, if I have one, I don't, or I could create one by going to Manage action group. Action groups let you define targets that should receive things like notifications. Whether it's through email, or SMS text messages, or push notifications and so on. However, I already have the option built-in here when I'm creating a budget to send an alert message to a group. So I'm going to specify a group here for my organization. And they were the ones that will receive a notification when we get to 80% of our budget on a monthly billing basis.

[Video description begins] He types the following text in a text box labeled "Alert recipients": admins@quick24x7.com. [Video description ends]

And having done that, I'm going to go ahead and click on Create. So it's going to validate my selections, after which it will create the budget.

[Video description begins] He clicks a button labeled "Create". [Video description ends]

After a moment, we get a notification in the upper right that the Budget was created. And here, in the Rg1, navigation panel under the Budgets blade, we can see our budget now exists.

[Video description begins] A new row entry gets added to the table on the "Budgets" page of the "Rg1" blade. [Video description ends]

So at any point in time, we can click on the Name of the budget and open it up and either edit it to change any of the items within it, such as the Amount, or we can delete the budget.


Azure ARM Template Editor
Azure Resource Manager templates, otherwise called ARM, for Azure Resource Manager, allow you to define your resources as code. It's often referred to as Infrastructure as Code.
So you could use a template or a blueprint to specify that you want to create a storage account, a virtual machine, a web application, a public IP address, all of these things together. It allows for the automation for the deployment and management of resources. So here in the portal, I can create a template deployment by choosing Create a resource, and I could type in template, and I'm going to select Template deployment.
Now a template is technically just a text file that uses json syntax.
Now from this screen, we can select from Common templates that are available here in Azure.
So to create a Linux virtual machine, Windows virtual machine, a web app, a SQL database. You could also, down below, select a GitHub quickstart template from the list. So whether you want to start working with things like Azure container services or kubernetes, which is kind of an orchestration platform for containerized applications. Or we might go down and choose things like an Azure DNS zone that we want to create. It could be any type of resource, a backup vault to be created, content delivery networks, on and on and on. Or you could Build your own template in the editor. When I do that, it takes me into an editor environment where we have the base skeletal format for the JSON.
Now we can also specify Variables. If you want to allow for template reusability, you shouldn't be hard coding values, things like storage account names or virtual machine names. Instead, those should be variables, and you can specify those parameters to pass in values to those variables. Now, at this point, we could load an existing file. When I choose Load file, it allows me to search for file on-premises, on my local computer that I'm doing this from, that is a template that I want to bring in here. Or I could choose Quickstart template, for example.
I'm going to go through and select just a very simple template. How about we search for storage, and we'll take a look here for storage account. Now, what I want to do is basically create a very basic storage account using a template, so that we can at least see the code here. So I'll choose storage-account-create, from the template list, OK.
And what it's done is populated all of the json syntax here in my ARM template for the creation of a storage account.
Now notice there are some variables here. A variable is being defined here for the storageAccountName. And, If I click Variables over here on the left and expand it by clicking little triangle, I can see storageAccountName.

[Video description begins] He highlights the following line of code, code starts: "name": "[variables('storageAccountName')]". Code ends. [Video description ends]

Of course, when I click it, it takes me to that line. So I can use this template editor to tweak what I've just essentially imported from a Quickstart template. I can make changes, if I know what I'm doing. And once I'm happy with this, I can actually save it. So if I click Save, at this point it's saved my changes here in the GUI. And what I can then do is actually run a deployment from that template.

[Video description begins] The "Custom deployment" blade includes a drop-down list box labeled "Resource group" and a drop-down list box labeled "Storage Account Type". [Video description ends]

So, for example, I want to deploy a storage account into Rg1, that's a Resource group.

[Video description begins] He selects the "Rg1" option in the "Resource group" drop-down list box. [Video description ends]

And based on the template definition will determine what you need to specify. If pretty much everything is hardwired and there are no variables, then you might not have much to specify at all. But here we can specify the Storage Account Type. And the Location will be determined by looking at the Resource group up above, and calling upon its .location property.

[Video description begins] He selects the "Standard_LRS" option in the "Storage Account Type" drop-down list box. [Video description ends]

So that's going to be taken care of. Notice what's missing is the name. What will the name of the storage account be? Well, in the template the storage account name is going to be determined by concatenating some text items together. Let's just go back here for a moment in our web browser, and let's step through what we just did to create that template. We created a Template deployment, we chose Create, we wanted to use the template editor here in the GUI, and we clicked on Quickstart template. And essentially what we searched for here was storage. We want to create a storage account using the template. So, storage-account-create, we did OK. Now if we take a look here at the code within the template, when it comes to dealing with the storage account name, it's concatenating the word store, so that's going to be the prefix. Then it's going to generate a unique string from the resource group ID. And so, that is how the name will be derived.

[Video description begins] He highlights the following line of code, code starts: "storageAccountName": "[concat('store', uniquestring(resourceGroup().id))]". Code ends. [Video description ends]

Okay, let's get back to where we were. Let's Save that. Let's deploy this into Rg1. And let's go ahead and agree with it and click Purchase.

[Video description begins] He clicks a button labeled "Purchase". [Video description ends]

And after a moment, our template deployment has succeeded for a storage account. So we can go to the resource group, that's one way to navigate here. And in the Overview blade, we'll see any items deployed in this location. Now we might have to click Refresh, a time or two until we see new items. Here's our new storage account. Notice, it's got store as part of the prefix of the name followed by what looks like some kind of a unique string. Now the same thing would appear, of course, if we were to go to the Storage accounts view. Creating a storage account is the same, regardless of how you actually do it, the end result is the same. So our storage account is now showing up as having been created from a template that we pulled up in the template editor.

                    
Azure AD Overview
Azure Active Directory is otherwise called Azure AD or sometimes AAD, but it all means the same thing. It means that we have an Active Directory instance in the Azure Cloud. It's managed. We don't have to set up a server and install the domain, controller, components, and so on. So what this means is that we have a centralized identity provider in the cloud. It can contain users, groups, application registrations, and security principles. Security principles are often used to make sure that software components have specific permissions to needed cloud resources. You can also link Azure Active Directory to your on-premises Active Directory if you wish. There are many configurations such that users authenticate to cloud apps using their familiar on-prem apps, and password changes are synchronized between both locations.
You can manage Azure Active Directory and everything within it using the GUI. So using the portal, you can also use command-line management tools, like PowerShell cmdlets, and the Azure CLI. Identity in Access Management or IAM, is all about authentication in authorization. So authentication is the proving of identity. Single factor authentication, for users for instance, would include items in the same category, such as something you know as a username and password would be. So it's single factor. But multi-factor meshes categories. So username and password fall under the something you know category, but the possession of a smartcard falls under the something you have category. Hence, we would have Multifactor Authentication or MFA in that instance.
The authorization is controlled access to resources that occurs after successful authentication, such as having the appropriate permissions to a SharePoint site, or perhaps the ability to deploy specific virtual machines only within a specific geographical region. So it's permissions or policies that get assigned to groups. So with Identity and Access Management or IAM, we are talking about controlling the authentication and then the authorization related to users and groups and even devices, such as Windows 10 computers joined to Azure AD, or Android smartphones registered with Azure AD for centralized control. And we know that IAM also deals with software permissions, specifically in the form of security principles.
So Azure AD then is a centralized repository of credentials, you could say, among other things. There are other security things that we have to consider, like RBAC roles. RBAC stands for Role Based Access Control. A role is a collection of related permissions, such as the ability to manage Azure virtual machines. And we could assign that role to certain users, or groups, that would apply to either the entire subscription in Azure, or a resource group, or just a single virtual machine for that matter. Conditional access is an important option. You can build policies that basically check conditions that must be met before allowing access to something.
So an example is that, if we have a sales associate that needs access to some kind of a Sales Cloud based application, then they can only do that, they can only access it if they sign in using Multifactor Authentication. Then we've got access reviews. This is something that you can schedule or run whenever you wish to take a look at things like group memberships in Azure AD, or permissions granted to enterprise applications registered in Azure AD. Because sometimes these permissions are granted and left, even though they may no longer be required, and that presents a security risk. So access reviews are good from a security perspective.
Then there's Privileged Identity Management, otherwise called PIM, P-I-M. The purpose of PIM is really to only provide administrative access to administrators when they need it. So you could think of this as, just-in-time or J-I-T, JIT administrative access. And of course, we can enable Multifactor Authentication or MFA to enhance user sign in security. So for instance, instead of Azure AD users only being required to enter a username and password, in addition to that, they might have to enter a six-digit PIN that gets texted to their smartphone.


Azure AD and the Portal
To properly manage Microsoft Azure, it's important to have a clear understanding of the association of an Azure AD tenant and a subscription. Now, an Azure AD tenant is essentially an instance of Azure Active Directory in the cloud, where you have users and groups, and devices and so on.

[Video description begins] A web portal labeled "Home - Microsoft Azure" opens. It is divided into two parts: menu bar and content pane. The menu bar includes a search box and some icons such as, Settings, Help, and User's login information. The content pane is divided into three sections labeled "Azure services", "Navigate", and "Tools". [Video description ends]

And you can associate a subscription with a tenant, for example, here in the portal in the upper right along with my sign in information, I can see the name of the Azure AD tenant I'm currently switched to it's called QUICK24X7.

[Video description begins] He points to the User's login information labeled "danlachance72@hotmail.com QUICK24X7". An information box opens which contains information labeled "Name", "Email", "Directory", and "Domain". [Video description ends]

And so here, I can click Subscriptions on my screen, I can also search for subscriptions if it wasn't there, to view any subscriptions associated with this Azure AD tenant. And I see I've got one it's a Pay-As-You-Go subscription. So I'm just going to click Home here in the upper left.

[Video description begins] He points to an option labeled "Subscriptions" in the Azure services section. Then he types sub in the search box and its search result includes a link labeled "Subscriptions". He clicks the Subscription link and its corresponding blade opens. It includes a subscriptions table with multiple columns and a row. The column headers include Subscription name and Status. Their respective row entries are Pay-As-You-Go and Active. [Video description ends]

So if I were to view for example, All resources, it takes me to the All resources view but I have not yet created anything so I don't really see anything, but at least it did take me to the view. Now let me switch over to a different Azure AD tenant.

[Video description begins] The Home - Microsoft Azure web portal opens. He clicks an option labeled "All resources" in the Azure services section and its corresponding blade opens. It includes an all resources table with multiple columns and no rows. The column headers include Name and Type. [Video description ends]

So I'm going to click in the upper right and choose Switch directory, and maybe I'll choose the one by the name of EarthFarm.

[Video description begins] He clicks the User's information and a drop-down box with two sections displays. The first section contains a user ID and two links labeled "My Microsoft account" and "Switch directory". He clicks the Switch directory link and its corresponding blade labeled "Directory + subscription" opens. It includes a tab labeled "All Directories" which is selected by default. It contains a search box and a list of directories. Some of the directories are labeled "Default Directory" and "EarthFarm". [Video description ends]

So this is a separate Azure AD tenant or separate instance of Azure AD Directory Services.

[Video description begins] The Home - Microsoft Azure web portal with the EARTHFARM AD tenant opens. It is divided into various sections. Some of the sections are labeled "Azure services" and "Navigate". The Navigate section includes an option labeled "Subscriptions". [Video description ends]

Now when I take a look here, I have a different looking screen. And if I were to try, for example, to look about why don't we start by trying to see which subscriptions are associated with this tenant. So when I go to Subscriptions for EarthFarm, there are none although I do have the ability to add one, let me just go back Home.

[Video description begins] He clicks the Subscriptions option and its corresponding blade opens. It includes a button labeled "Add" and the subscriptions table. [Video description ends]

If I were to try to go to the All resources view, well, it just won't let me do it. Because you need to at least have a subscription associated with the Azure AD tenant to be able to do anything.

[Video description begins] The Home - Microsoft Azure web portal opens. He clicks the All resources option in the Azure services section. A web page labeled "Welcome to Azure" opens. It includes buttons labeled "Start", "View" and "Explore". [Video description ends]

So let's switch back to our active tenant, but when I say that what I really mean is the one that has an associated subscription, that was Quick24x7. 

[Video description begins] He clicks the User's information. Then he clicks the Switch directory link and the Directory + subscription blade opens. Then in the All Directories tab, he selects a directory labeled "Quick24x7" from the directory list. The Home - Microsoft Azure web portal opens. [Video description ends]

Now when I look at Quick24x7, we can go to Azure Active Directory from the main screen, we could also search for it and choose it from the resultant list.

[Video description begins] He points to an option labeled "Azure Active Directory" in the Azure services section. Then he types azure in the search box displayed in the menu bar and its result includes a link labeled "Azure Active Directory". He points to the Azure Active Directory link. [Video description ends]

I could click on my left-hand navigation bar to open it up, and scroll down and choose Azure Active Directory, it doesn't matter. But at this point I can start actually doing something meaningful with Azure AD.

[Video description begins] A navigation pane opens. It is divided into various sections labeled "All Services" and "FAVORITES". The FAVORITES section includes an option labeled "Azure Active Directory". He clicks the Azure Active Directory option and its corresponding blade labeled "Quick24x7 | Overview" opens. It is divided into two sections: navigation pane and content pane. The navigation pane includes an option labeled "Overview". The Overview option is selected by default and its corresponding blade is displayed in the content pane. [Video description ends]

For example, I could go to the Users view, I can see any existing users, or begin creating users, or inviting users, or bulk creating them from a CSV file.

[Video description begins] The navigation pane includes a section labeled "Manage" which further includes an option labeled "Users". He clicks the Users option and its corresponding blade labeled "Users | All users" opens. It is divided into two sections: navigation pane and content pane. The navigation pane includes an option labeled "All users" and its corresponding blade is displayed in the content pane. It includes buttons labeled "New user", "Bulk create", and "Bulk invite". [Video description ends]

I'll just click back on Quick24x7 in the breadcrumb trail in the upper left, I can also view Groups and also Devices.

[Video description begins] He opens the Quick24x7 | Overview blade. Then he points to options labeled "Groups" and "Devices" under the Manage section in the navigation pane. Then he clicks the Devices option and its corresponding blade opens. It is divided into two sections: navigation pane and content pane. The navigation pane includes an option labeled "All devices" and its corresponding blade is displayed in the content pane. [Video description ends]

So Azure AD then is a centralized cloud-based identity provider that can have one or more Azure subscriptions associated with it.


Azure AD and the CLI
While you can use the Azure portal to manage and navigate through your Azure AD tenant, you can also do that using the Azure CLI.

[Video description begins] The Quick24x7 | Overview blade opens in the Home - Microsoft Azure web portal. [Video description ends]

In this case in the portal, I'm going to click the Cloud Shell icon at the top where I'm going to run CLI commands.

[Video description begins] He clicks an icon labeled "Cloud Shell" in the menu bar and a PowerShell command prompt displays in the web portal. The PS /home/danlachance72> prompt is displayed. [Video description ends]

The first thing I'm going to do is run az account list and I'll press Enter.

[Video description begins] He executes the az account list command. The output displays several properties of the live.com#danlachance72@hotmail.com user account. The prompt remains the same. [Video description ends]

So the first thing I see is the homeTenantId, so it starts here with 96421. Now as a matter of fact, if I just minimize that, we can see that 96421 is actually the tenant ID for my Azure AD tenant which is named, Quick24x7.

[Video description begins] He highlights home Tenant Id user account property starting with 96421 in the output. Then he minimizes the PowerShell command prompt and the Quick24x7 | Overview blade displays. He highlights an information labeled "Tenant ID" in the content pane. [Video description ends]

So we can see that information. As we go further down, we can also see the name of the subscription associated with that Azure AD tenant, because there can be one or more subscriptions.

[Video description begins] He opens the PowerShell command prompt. Then he highlights Pay-As-You-Go subscription property of the user account in the output. [Video description ends]

So I'm going to go ahead and minimize Cloud Shell for a second. And I'm going to search up subscriptions in the bar at the top center here. And when I do that, I'll be able to see which Subscriptions are associated with the Quick24x7 tenant. There's one, it's called Pay-As-You-Go.

[Video description begins] He types sub in the search box displayed in the menu bar and clicks the Subscriptions link in the result. Its corresponding Subscriptions blade opens which includes the subscriptions table in the content pane. He points to the Pay-As-You-Go row entry under the Subscription name column header. [Video description ends]

We can see the Subscription ID for that is 048b82 and so on. Well, let's go back and take a look here.

[Video description begins] He opens the PowerShell command prompt. [Video description ends]

We can also see Pay-As-You-Go is shown here. The state of our subscription is that it's Enabled, okay. So this looks good. We're getting a bit of information simply from the az account list about our Azure AD tenant. I'm going to go ahead and just clear the screen with cls. Let's take a look at a few other things that we could do.

[Video description begins] He executes the cls command and the screen gets clear. The prompt remains the same. [Video description ends]

For example, I'm going to run az space ad space -h for help. What can I do in Azure Active Directory here from the CLI?

[Video description begins] He executes the az ad -h command. The output displays a list of Group's command and Subgroups' keywords with their definitions. The Group's command is labeled "az ad". The Subgroups' keywords are labeled "app", "group", "signed-in-user", "sp", and "user". The prompt remains the same. [Video description ends]

So we can manage applications that are registered, groups. We can get information about the signed-in-user. We can manage service principals which is often used when you have software components that need authorization to resources in Azure, like storage accounts for instance. And we can manage of course Azure AD users. So if I were to run az ad user -h, tells me the next level commands about users I can work with.

[Video description begins] He executes the az ad user -h command. The output displays a list of commands with their definitions. The Group's command is labeled "az ad user". The other commands are labeled "create", "delete", "get-member-groups", "list", "show", and "update". The prompt remains the same. [Video description ends]

So create, delete, get-member-groups, list, show, update, and so on. So there's a lot we can learn from within the help system. So for example, if I were to run az ad signed-inuser -h, just talks a little bit about what that would do.

[Video description begins] He clears the screen. The prompt remains the same. Then he executes the az ad signed-inuser -h command. An error message displays. [Video description ends]

Well, looks like I have the wrong name here, so signed-in-user. So make sure you have the command syntax spelled out correctly, that's a little bit better.

[Video description begins] He executes the az ad signed-in-user -h command. The output displays three commands labeled "az ad signed-in-user -h", "list-owned-objects", and "show". The prompt remains the same. [Video description ends]

So show graph information about the current signed-in user in the CLI, okay, so we can either run list-owned-objects after that or show. Let's just do show. So I'm going to use the up arrow key and our full command that is going to be az ad signed-in-user show. Just to get some information about who we're currently signed in as here in the CLI.

[Video description begins] He highlights a definition of the az ad signed-in-user command. Then he points to the show command. Then he clears the screen. The prompt remains the same. Then he executes the az ad signed-in-user show command and its output displays several properties of the user account. The prompt remains the same. [Video description ends]

So as we scroll up, it's a lot of details because it's showing me the properties of my user account. So things like the companyName, the country, department, employeeId, displayName, givenName, all of those types of things. And as we go further and further down, we can also see all the details all the way down. So it's just showing me details about the user that I'm currently signed in as here in the CLI. Now of course, we can do other things here, navigating through our Azure AD tenant for example, az ad group list. So this will show me all my groups, but the problem if you consider it a problem is that it's telling me too much. It's giving me all of the detail. I'm really only interested in the displayName property.

[Video description begins] He clears the screen. The prompt remains the same. Then he executes the az ad group list command. The output displays a list of user account properties. The prompt remains the same. [Video description ends]

So what can we do about that? We can do a few things. One thing I could do is run az ad group list again and pipe that to grep. That's the grep line filtering tool built into Linux. And I can tell it what I want to see, and it's case sensitive by default. So I want to see the displayName, name with capital N, I can ask for that and that seems to work. Those are the names of my Azure AD groups.

[Video description begins] He executes the following command: az ad group list | grep displayName. The output displays four user account properties that are labeled "EastAdmins", "Off365Group" "All Enabled Users", and "Group1". The prompt remains the same. [Video description ends]

I can also alternatively use the --query parameter built in to the Azure CLI. So for example, I could do az ad group list, and instead of grep and grep is fine. But instead of that I could use --query and I can tell it I want to see the displayName. 

[Video description begins] He executes the following command: az ad group list --query displayName. No output displays. The prompt remains the same. [Video description ends]

Now the problem is that it won't work by default because what we have is a collection of items. We have an array of items and those items are the multiple groups. So we have to tell it here in our syntax after query, open and close square bracket. In other words, array element dot and for each item I want to see the displayName property. And when I do that, I get what I expect, the names of the groups.

[Video description begins] He executes the following command: az ad group list --query [].displayName. The output displays the same display names without the displayName label. The prompt remains the same. [Video description ends]

And it's a little bit cleaner, if you take a look at than what do you get when you use a grep line filtering. Because grep displays everything on the line, so displayName colon all that stuff. All we're seeing here are the actual value. So depending on what your need is, it might be easier to parse this text down below that results from using --query than it would from trying to parse the text that results up above here by piping to grep.
