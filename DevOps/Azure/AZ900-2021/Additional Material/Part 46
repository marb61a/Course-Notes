                    AZ900 Microsoft Azure Cloud Fundamentals 2021
                    Additional Material Course Notes Part 46


Subscription Assignment
  - You can use the Azure portal to assign subscriptions to a different Azure AD tenant.
    - Here in the portal, we are already signed in to a tenant with the name of QUICK24X7
    - If we take a look at the Subscriptions for that tenant, we can see that there are none.
  - However, we could add one, but we already have a subscription that's active
    - That is associated with a different Azure AD tenant that we no longer want to use
    - We can move it over to this one, let's flip over to another Azure AD tenant where that subscription resides
    - We'll click on my sign in information in the upper right here on the portal, click Switch directory
    - Under All Directories, we are going to switch over to one called FakeCo that we've pre-created
    - This one has a subscription, let's click on Subscriptions, just to take a peek.
    - It's a Pay-As-You-Go subscription, which we want to move that over.
  - We are going to click on it to open up its details
    - Notice that we have a Change directory link at the top when viewing the details of that subscription.
  - From the drop down list, we are going to choose the target tenant, the Azure AD tenant we want to move to
    - We've selected it from the list, and then we are going to click the Change button.
  - Then we'll have a message, that tells us the subscription was moved to the new directory and to switch to the new directory to see it
    - We are going to go ahead and click on my sign in information in the upper right
    - And we are going to click Switch directory, and switch to the target, in this case, Quick24x7
    - Remember, when we started this there were no subscriptions associated here, let's go to Subscriptions, and let's take a peek. 
    - If you don't see the newly moved subscription, all you need to do is just sign out, close your browser and come back in, and it'll be there.


Smart Lockout
  - One way to mitigate brute force password attacks is to ensure that user accounts get locked out after a specific number of incorrect password attempts.
    - In Azure AD that's called the smart lockout feature. So we're going to take a look at that
    - In the portal, we've navigated to my Azure AD tenant
    - The next thing that we want to do is take a look at the smart lockout feature
  - We can do that by going down under Security.
    - Then we go into Authentication methods and go to the Password protection menu option in the left-hand navigator.
  - You'll see a few things on the right here like a Custom banned password list and so on
    - But we've also got Lockout threshold which is set currently to a value of 10
    - We are going to reduce that to a value of 3. So this means that we want the account to be locked
    - A user account to be locked after three incorrect login attempts, now for how long?
  - The default here is 60 seconds we are going to increase that to 120
    - For 120 seconds, we have to have no password attempts before it can be tried again
    - Ideally the user will log in successfully if they know the correct password this time.
  - Otherwise, after three attempts again it gets locked out again 120 seconds
    - This is a great, simple, and easy way to countermeasure brute force password attacks, go ahead and Save the setting.
  - When a user is signing in, let's say they enter the incorrect password a number of times
    - We are just going to keep going through, they think they know the password but of course they just don't know
    - Notice that we eventually get a message after the third time that says Your account is temporarily locked to prevent unauthorized use
    - The user would have to wait a minimum of 120 seconds before even trying again to get in, assuming that they know the correct password.                    

                    
Azure AD Groups and the Portal
  - Managing user permissions, such as to which enterprise apps they have access to, can be cumbersome when you do it on a per user basis
    - Can do it at the group level, too. Organizing users into groups, assigning permissions to the groups
    - So what we're going to do here in the portal is create an Azure AD group and add some members
    - To get started, we've already navigated the portal to my Azure AD tenant, where we'll then click Groups in the left hand navigator.
  - We can see any existing groups, we've already got a Dynamic group where a membership is determined dynamically by looking at user attributes
    - We've also got a standard statically Assigned group, which we'll be creating here
    - We are going to click New Group at the top, the example group is going to be called EastAdmins.
    - The group type will be Security, as opposed to Office 365,
    - The name will be EastAdmins, we can put in a Group Description
    - The Membership type here is set by default to Assigned, and that's what we want to do.
  - What that means is that you're adding the members of the group manually
    - As opposed to a Dynamic User group where you specify rules that contain one or more expressions 
    - That determine whether the user is a member of the group or not.
    - Well, in this case, it's just going to be Assigned.
  - Down under Members we are going to click No members selected, and add some members.
    - Now the members can even be existing groups.
    - Here we've got a dynamic group called All Enabled Users that we could add as a member.
    - If we look for the word group, we've also got a static assigned group called Group1 that could also be a member of the group.
    - Groups can be nested in other words. However, that's not what we are going to do here.
    - We are just going to add a couple of standard user accounts that we've created in Azure AD.
  - We are going to type in, for example, Lucas add this user, Lucas Brenner down here under Selected items
    - We are also going to add user Jen Hill, so we'll add her down below.
    - So those are the members of this group.
    - We will go ahead and click on Select and Create.
    - Now, we can now see after a moment, and we have our Successfully created group notification in the upper right.
  - We'll notice that we have our EastAdmins group and that Azure has assigned an object Id.
    - To Security group it's Assigned, and if we click on it at any point in time
    - We can go back and see the members of the group, and can also of course change the members of the group.
  - We could select somebody here and Remove them, we could Add members and even do a bulk import of members if we have a CSV file formatted correctly.
    - We could also go to group owners if we want to determine who should have the ability to control the group
    - To manage it, in terms of adding and removing members.
    - For example, if we click Add owners, we can do that so add user Codey Blackwell as the owner of the group.
  - Click Select, and there's user Codey Blackwell. So at this point we now have created a new group by the name of EastAdmins
    - Its purpose is to really facilitate the assignment of permissions.


Azure AD Groups and the CLI
  - Azure AD groups can be created and managed at the command line using the as your CLI
    - Which we are going to spawn here in the portal by clicking on the Cloud Shell icon.
    - Now, it says that our Cloud Shell has timed out, which indicates we are previously connected. 
    - We are just going to click the Reconnect button to relaunch the Cloud Shell.
  - The first thing we're going to have to do is figure out what the command syntax will be in the CLI 
    - So that we can create and also that we can manage groups in the cloud, after a moment, we're good to go.
    - We are going to clear, we reconnected to our Cloud Shell session.
  - Start by running az ad -h for help, because we don't know what the next level command is, we see that we have group.
    - Following that we can do az ad group, we know that part of the syntax, and then -h after that.
    - And then we'll see what we can do about groups.
  - We can work with members, owners, we can create a group, we can delete a group, we can get member groups
    - We can list groups in Azure AD or show details about an individual group, a lot of options here.
    - So let's take a look at how they actually work.
