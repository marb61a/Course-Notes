                    AZ900 Microsoft Azure Cloud Fundamentals 2021
                    Additional Material Course Notes Part 36


Azure Resource Groups and the CLI (Cont)
  - However, it lists all of the properties and it's a little hard to digest that output
    - What we could do is run az group list and pipe it to the grep line filtering tool
    - Then we could tell it I'm looking for the name property.
  - But here it says 'grep' is not recognized, that's because we are running the Azure CLI locally on my Windows machine as opposed to within a Cloud Shell
    - This is not a Linux host and we don't have the Linux subsystem for Windows installed, there's no way to grep this
    - What we could do is also pipe that instead to the Windows find command
    - Now, in this case we would have to specify that the name be within quotations in order for that to work correctly.
  - Once we do that, it will show me just the names of the accounts
    - The next thing we could do also is use the az group list, we could use the --query parameter
    - This is built into the Azure CLI, it's probably the best way to do it
    - Because we have an array of items, in this case, we have three resource groups, we have to refer to the fact that we have more than one
    - We can specify that we have an array or a collection of them by specifying open and close square brackets
    - Then we separate that reference from the property, in this case, name with a dot so .name
    - Now we'll see just the names of those specific resource groups.
  - The thing is though, you can also delete a resource group
    - For example, here we are going to run az group delete, and in this case, -n for name
    - Let's delete our first one, resource group 1, Rg1
    - Go back and check it out in the portal before we actually press Enter.
  - Back in the portal, we want to go Home and we are going to go to the All resources view
    - We see that we've got two storage account here deployed in the Rg1 Resource group.
  - Okay, so they still exist, we could have seen that of course by going into Rg1, the Resource group, and then going into Deployments
    - We would see that those two storage accounts had successfully been deployed here, go back to the CLI.
    - We are going to press Enter to delete resource group 1 or Rg1, are you sure you want to do it?
  - Yes, put in the letter y, and press Enter, and it says it's Running
    - Now even while that's in the midst of running here back here in the portal, we've refreshed my All resources view
    - Notice that our two storage accounts have been removed.
    - So the message here is clear, when you delete a resource group, you're also removing all of the resources deployed into it.


Azure Resource Groups and PowerShell
  - We are going to use PowerShell to create an Azure resource group.
    - To get started we are going to run get-command in my Cloud Shell, and are going to use an * followed by the text resourcegroup
    - Then after that, we are going to put in another *
    - In other words, showing PowerShell cmdlets that contain the text resource group in their name and we can see that we have quite a few of them.
  - We are interested in building a new one, and we can see we have the New-AzureRmResourceGroup PowerShell cmdlet
    - We are going to use that and we are going to clear the screen
    - We are going to run new-azurermresourcegroup and are going to specify the name
      - In this case, we want to build a resource group called Rg2, resource group 2
      - We are going to set the location with -location and we can set to anything regionwise that we have
      - We are going to use the new-azurermresourcegroup cmdlet -name
      - We want to call this Rg1 for resource group 1, and -location, again we can set to anything but must be in quotes
      - We need to use quotes when there's a space between the parts within that region name, and press Enter.
  - After a moment we can see the ProvisioningState of having created resource group one or Rg1, is that it Succeeded
    - We can verify this by retrieving information get-azurermresourcegroup
    - When we do that it returns our resource groups including the one that we just created, Rg1.
  - Notice the property tied to that is ResourceGroupName at least as it's labeled here
    - We are going to clear the screen, we're going to use the up arrow key to bring up our get command line
    - We are going to pipe this to select and we are going to tell we want to select only the resourcegroupname property
    - Then all we are seeing are the names of our specific resource groups.
  - Now we also have the option of removing a resource group
    - Before we do that, why don't we minimize our Cloud Shell here in the portal
    - Go to the Resource groups view where we will see any resource groups, there are three here.
  - Including Rg1 and Rg2, what we want to do is issue a command to delete Rg2 using PowerShell
    - Back in our command shell, we're going to go ahead and do that by using the remove-azurermresourcegroup cmdlet
    - We are going to tell it the name in this case is going to be Rg2. It says are you sure you want to remove that resource group?
    - We'll type in the letter y for yes, just bear in mind that when you are removing a resource group, you are also removing the resources deployed into it.


Moving Azure Resources
  - You can use the portal to move Azure resources from one resource group to another
    - Remember that resource groups allow us to organize related cloud components
    - Such as all of those underlying items required to support a web app
    - Or maybe we simply want to deploy virtual machines into a resource group called Project X
    - So that we can track it by project, including at the building level
  - To get started here, let's go to the Resource groups view, we've got two resource groups, Rg1 and Rg3.
    - Go look at our Storage accounts, because we're going to move a storage account from one resource group to another.
  - It doesn't have to be a storage account, that just happens to be what we're using as our example
    - We've got a storage account, and we can see right here, it's in a Resource group named Rg1, we're going to move it to Rg3.
    - We might do this as part of a reorganization effort, click on the name of the storage account to open up its details.
  - In the Overview blade, we have a Move button
    - We could choose Move and move it to another resource group within the current subscription, or in another subscription.
    - We are going to choose Move to another resource group.
    - All we have to do here at the bottom is specify the target Resource group that we would like to move this item to, the Storage account
    - For this example we are going to select Rg3.
  - We'll turn on the checkmark that says, we understand that tools and scripts associated with move resources might not work 
    - Because we are moving it to a different location, we also might have to update them with the new resource ID.
  - We've opened up another browser window here for my storage account, the one that we're moving and gone to the Properties blade
    - Where we can see the Storage account resource ID
    - We're going to go ahead and verify that it is changed after we move it to our new resource group
    - Notice that part of that account resource ID includes the resource group name in the path
    - So let's go back over, we've checked that checkmark, click OK to actually perform the move
    - Just make sure you're patient as the move occurs, especially if you're moving more than one resource at a time.
  - If we click the notification bell icon in the upper right, we can still see it's moving that storage account resource
    - While that's happening, go back into our Resource groups view and open up an existing resource group
    - Because what you can also do is choose to move at the resource group level.
    - What does this do? This will allow you to move all of the deployments associated with the resource group.
  - We can see currently, it still registers that our storage account is a part of this resource group
    - If you had many resources deployed here, they would all be listed
    - You can see, you can select or deselect the ones and choose the target resource group to move them to
    - You can do it at the resource group level or from the individual resource level.
  - Okay, before too long, we'll see that the moving of the resource is now complete
    - So we looked at the original storage account ID prior to the move
    - The ID itself will not be changed, this numeric value, it starts with the 048b, it ends with 2109
    - We've opened up another web browser window after the move, so looking at the same resource
    - And the ID itself in terms of the numeric value portion has not changed
    - What's changed is the reference in the overall resource ID for the storage account
    - The reference to the resource group, here it's Rg3, and originally, it existed in Rg1
    - As was suggested when we were doing this, you know, if you have any programmatic code or scripts that refer to the old resource ID
    - Always make sure they change to the new one.
