                    AZ900 Microsoft Azure Cloud Fundamentals 2021
                    Additional Material Course Notes Part 11
                    
                    
Azure Subscription Overview
There is a relationship between Azure AD tenants and Azure subscriptions. 
Pictured in our diagram on the left, we see our Azure AD tenant. Azure AD or Azure Active Directory is a centralized directory service in the cloud. And it allows us to create user accounts for authentication, organize them into groups, assign permissions. We can register devices in Azure AD, so users can sign in on those devices with their Azure AD credentials. That's essentially what it is. It's an identity provider. And we can associate a subscription with our Azure AD tenant, listed here as Subscription 1.

A subscription is really a way that we get features that allow us, for example, to deploy resources in Azure. It's also used for billing purposes. But what you can do is you can add multiple subscriptions to your Azure AD tenant. However, the opposite is not true. You can't have a given subscription used by multiple AD tenants. So we see here that subscriptions are related to billing.

[Video description begins] Azure Subscription Limits. [Video description ends]

Now there are some limits to what you can do within an Azure subscription, such as how many resources can be deployed and so on. As an example, our first item here is the number of subscriptions per Azure AD tenant. This is one of those items where there is no limit. But there is a number of resource tags that can be specified to an Azure resource, and it maxes out at a value of 50. The maximum number of group owners maxes out at 100. The maximum number of storage accounts per region maxes out at 250. Now, this is only to list a tiny portion of some of these limits. There are many other ones that are published online, clearly, in the Microsoft Azure documentation.

[Video description begins] Azure Subscriptions. [Video description ends]

So we have the option with our subscription to also increase any of these limits should they be a little bit too constraining. You can do this once you sign into the Azure portal by creating a customer support request. Now limits for some things, such as the number of vCPUs, virtual CPUs available for a given virtual machine instance, those limits are quoted per Azure region. Now, you also have to bear in mind that if you're using an Azure free trial subscription, that you won't have the option of creating a customer support request, at least not in it succeeding in increasing any of those limits.

The other thing to think about is that when it comes Azure subscriptions, don't forget about how it is related to both the Azure AD tenant and also your Azure account in the first place. So you can have your Azure account in which you build your Azure AD tenants, and of course, you can have multiple subscriptions. Billing is done separately for each of your subscriptions. And if you do have a free try, you can actually convert it to a paid subscription.

[Video description begins] Azure Subscription Types. [Video description ends]

Now there are a number of different types of Azure subscriptions, such as pay-as-you-go, where all of your resource usage is tracked and you pay based on what you use. But then depending on the type of support you need, will determine if you select some of the other types of subscriptions, like Professional Direct support or Developer support. Developer support would allow you to get support but only during business hours, not 24/7. Then we also have Standard support. So, if you do need full support, 24/7, then you would look at choosing the appropriate type of Azure subscription, such as Professional Direct.


Azure Subscriptions and the Portal
You can view your Azure subscriptions in the Azure portal. 

[Video description begins] The Microsoft Azure portal is open. It is divided into two parts. The first part includes a search box and a navigator button and the second part is a content pane. [Video description ends]

You can view your Azure subscriptions in the Azure portal. One way to do this is by searching for subscriptions in the search bar at the top center which I will do.

[Video description begins] A blade called "Subscriptions" opens. It includes a button labeled "Add" and a table with several columns and one row. The column headers include "Subscription name", "Subscription ID", and "Current cost". Under the blade name, there is text: Quick24x7. [Video description ends]

Now bear in mind that when you search up subscriptions you will see any subscriptions associated with your current Azure AD tenant, which is shown here as Quick24x7. So I can see I have a Pay-As-You-Go active subscription. I can even see the Current cost.

[Video description begins] He points to the following row entry, which includes: Subscription name: Pay-As-You-Go and Current cost: CA$1.48. [Video description ends]

Now in the upper right, if I click on my sign in account information area and click Switch directory and, if I choose some other Azure AD tenant, let's say EarthFarm in this example.

[Video description begins] A blade called "Directory + subscription" opens. It includes a section called 'Switch directory" under which there is a list of all the directories. He selects the following directory: EarthFarm. [Video description ends]

Then when I go to take a look at subscriptions, I can expect to see something different potentially.

[Video description begins] The Microsoft Azure portal gets refreshed. In a section called "Azure services" he selects the "Subscriptions" option. The "Subscriptions" blade opens. There are no row entries in the table. [Video description ends]

So because I've visited subscriptions recently, I can just click it from Azure services, of course, I could once again search for it in the top center. Either way, I want to look at the subscriptions for this different Azure AD tenant. Notice it says, "You don't have any subscriptions". So at this point, we have the option of clicking Add where we'll be presented with a list of subscription options.

[Video description begins] He clicks the "Add" button. The login page opens in a new tab. [Video description ends]

So at this point, I'm just going to authenticate so I can get to that screen. So now I get the option to SELECT AN OFFER.

[Video description begins] A page called "Add subscription" opens. It includes a list of offers. [Video description ends]

If I want to add a Pay-As-You-Go subscription or Pay-As-You-Go Dev/Test, Developer support, Professional Direct support, and Standard support where I can see some of the details about these. So we have some options here. And, if I were to choose one of these, it would then continue on to the point where I have to make sure I add a payment method, and so on. But I'm going to close out of that. And I'm going to switch back to my first initial directory that in this case would be the Quick24x7 Azure AD tenant where I know, I have an active subscription.

[Video description begins] He clicks the account details section and then clicks the "Switch directory" option. The "Directory + subscription" blade opens. He selects the following directory: Quick24x7. The Microsoft Azure portal gets refreshed. [Video description ends]

And once again, I'm going to go look in the subscriptions associated with that Azure AD tenant. Now I'm going to click directly on that existing subscription.

[Video description begins] He selects the "Subscriptions" option. The "Subscriptions" blade opens. There is one row entry in the table. [Video description ends]

Now I'm going to click directly on that existing subscription. 

[Video description begins] He clicks the row entry, which includes: Subscription name: Pay-As-You-Go and Current cost: CA$1.48. A blade called "Pay-As-You-Go" opens. It is divided into two parts: navigation pane and content pane. In the navigation pane, an option labeled "Overview" is selected and its corresponding page is open in the content pane. [Video description ends]

Because when you do that, it opens up a plethora of options in the navigation bar on the left. For example, we can go to Cost analysis to analyze costs, to see exactly for example, where the lion's share of our charges are coming from.

[Video description begins] He selects an option called "Cost analysis" in the navigation pane and its corresponding page opens in the content pane. [Video description ends]

We could click on Budgets, so we can configure alert notifications when our costs reach a certain point.

[Video description begins] He selects an option called "Budgets" in the navigation pane and its corresponding page opens in the content pane. [Video description ends]

We can even go through and see our Invoices over on the left under the Billing section. But at the same time, we also have some other things that we can do, when I go back to the Overview part of this.

[Video description begins] He selects the "Overview" option in the navigation pane and its corresponding page opens in the content pane. It includes the following buttons: Manage, Cancel subscription, Rename, and Change directory. [Video description ends]

We have some buttons across the top. I can cancel the subscription. I can Rename it, so, if I want to rename it from Pay-As-You-Go to something different, I can do that. I can Change directory. That means I can associate this subscription with a different Azure AD tenant. So I've got a number of options. So, I can even click on Manage to open up a new browser window where I can further manage my Azure subscription. So we have a summary for our Pay-As-You-Go subscription, where we're looking currently at the OVERVIEW.

[Video description begins] The following page opens in a new tab: Summary for Pay-As-You-Go. It includes the following tabs: OVERVIEW and BILLING HISTORY. The OVERVIEW tab is selected. [Video description ends]

And we can see a lot of options available on the right to Manage payment methods or to Download usage details for the subscription or to change the subscription address information. Or I want to switch to a different type of subscription offer. Again, I have some other options here such as canceling the subscription and so on.


Azure Subscriptions and the CLI
You can use the Azure CLI to learn about Azure subscriptions and also to determine which subscription is active. To get started here in the Azure portal, I'm going to launch the Cloud Shell.

[Video description begins] The Microsoft Azure portal is open. [Video description ends]

Now in the Cloud Shell, I'm going to start by running az account list.

[Video description begins] He clicks a button labeled "Cloud Shell" in the first part of the screen. A PowerShell window opens. The following prompt is displayed: PS /home/danlachance72>. [Video description ends]

And when I press Enter, it'll return some details.

[Video description begins] He executes the following command: az account list. The output displays details of the azure account. The details include cloud name, id, and tenant id. The prompt does not change. [Video description ends]

So we can see the name of the cloud, AzureCloud, as opposed to Azure Cloud for Government or anything like that. And we can also see the id. Now, it doesn't say subscription ID, but this is the id of our current Azure subscription. We can also see our Azure AD tenant ID. Let's examine the subscription ID for a second by jumping into the portal to take a look at that. So, notice here it starts with 048b and ends with 2109. So let's just minimize the shell here. Let's go in to Subscriptions, let's see what we've got attached to our current AZ tenant.

[Video description begins] In the Microsoft Azure portal, the "Subscriptions" blade opens. The table has one row entry. He points to the following row entry, which includes: Subscription name: Pay-As-You-Go and Current cost: CA$1.48. [Video description ends]

Now it should be a Pay-As-You-Go subscription. And notice the Subscription ID indeed starts with 048b and ends with 2109. So we can learn a bit of that information from the az account list command in the CLI.

[Video description begins] He points to the entry under the "Subscription ID" column header. He switches back to the PowerShell window. [Video description ends]

Let's clear the screen. Let's also run az account set --subscription. And here, I'm going to put in the name of it which is Pay-As-You-Go, each word separated by a dash. Now in my case, it doesn't really matter that I do that.

[Video description begins] He executes the following command: cls. No output returns and the prompt does not change. He executes the following command: az account set --subscription "Pay-As-You-Go". No output returns and the prompt does not change. [Video description ends]

Because if we go back and take a look, we've only got a single subscription here associated with our Azure AD tenant. Which is shown here by name in the form of Quick24x7.

[Video description begins] He switches back to the Microsoft Azure portal. He points to the following row entry, which includes: Subscription name: Pay-As-You-Go. He switches back to the PowerShell window. [Video description ends]

But when you have multiple subscriptions, this can be an important command. Essentially you're setting the context to that subscription. And so following commands after you do that will run in the context of that set or selected subscription. The other thing to bear in mind is that you can also, instead of setting the subscription when you have multiple subscriptions, you can also do it per command. What I mean by that as an example, is let's say we were going to use az vm create to create new VM. And normally you would specify things like --resource-group and then Rg1, let's say.

And then maybe the name, let's call it Linux1, and then maybe the --image would be based on something Ubuntu. But the key here is that we can also use the --subscription command line parameter. And so, for this individual single command, you can say, well, I want this tied to the Pay-As-You-Go, just type that in, subscription. So you can do that if you know you have to work with a number of resources and different subscriptions. You might choose to just do it at the command-line instead of keeping on setting it as up above. It really depends on what you want to do and how many commands you have to issue. But either way, it's important to have this knowledge if you're going to be working with Azure subscriptions through the CLI.

Azure Subscriptions and PowerShell

[Video description begins] Topic title: Azure Subscriptions and PowerShell. The presenter is Dan Lachance. [Video description ends]

When you're working in PowerShell, you might be working with an Azure AD tenant that is associated with multiple subscriptions. And, so you can control the subscription that is going to be used as you issue PowerShell cmdlets. Such as the deployment of resources like virtual machines. To get started here in the portal, I'm going to launch the Cloud Shell, and I'm in PowerShell here.

[Video description begins] The Microsoft Azure portal is open. He opens the PowerShell window. The following prompt is displayed: PS /home/danlachance72>. [Video description ends]

And I go to start by running get-command. And I'll put in asterisk subscription. So basically, I'm trying to discover which cmdlets are available that relate to subscriptions.

[Video description begins] He executes the following command: get-command *subscription*. The output displays a list of cmdlets . [Video description ends]

And there are bunch of them as you can see. For example, Get-AzSubscription. Okay, so if we were to do that, get-azsubscription, when we press Enter, we get some returned information.

[Video description begins] He executes the following command: cls. No output returns and the prompt does not change. He executes the following command: get-azsubscription. The output displays a table with four columns and one row. The column headers include Name, Id, TenantId, and State. The row entry includes, Name: Pay-As-You-Go. The prompt does not change. [Video description ends]

We can see that we have a Pay-As-You-Go subscription, which is currently active and being used. So, if we start deploying virtual machines and storage accounts and so on, it's going to be tied to this currently active subscription. We can see the subscription ID. We can also see the Azure Active Directory tenant with which the subscription is associated.

[Video description begins] He points to the row entries under the "Id" and "TenantId" column headers. [Video description ends]

Now, when you have multiple subscriptions available for your Azure AD tenant, you may want to be able to switch between them. And you can do that using select-azurermsubscription. So for example, in quotes here I could do it by name, pay-as-you-go, close the quotes.

[Video description begins] He executes the following command: select-azurermsubscription "pay-as-you-go". The output displays a table with five columns and one row. The column headers include Name, Account, and SubscriptionName. The row entry includes, Name: Pay-As-You-Go. The prompt does not change. [Video description ends]

What this means is, I'm setting that as the current context or active subscription. Any commands that follow will be tied to it. Such as deploying virtual machines, storage accounts and so on. And I can verify that, that's the current context by running get-azurermcontext.

[Video description begins] He executes the following command: get-azurermcontext. The output displays a table with five columns and one row. The column headers include Name, Account, and TenantId. The row entry includes, Name: Pay-As-You-Go. The prompt does not change. [Video description ends]

And we can see it returns that we are using our Pay-As-You-Go subscription. And of course, we can see the subscription identifier being listed there as well along with our Azure AD tenant ID. So now that we've done that, any PowerShell cmdlets that I run from this point forward in this session will be applied to that subscription.

Management Group Overview

[Video description begins] Topic title: Management Group Overview. The presenter is Dan Lachance. [Video description ends]

Azure management groups are really all about centralized governance. Now we can apply this to multiple subscriptions, it allows us to organize subscriptions within a management group. Think if it as a hierarchy. Because at the top, you have your tenant root group. Under which you can then create multiple management groups and organize your subscriptions accordingly within them. Now you would organize them for policy and compliance reasons.

For example, you might have a policy that requires SQL database encryption. And you want to check all SQL database instances in multiple subscriptions. So, you might organize those subscriptions into a management group and then assign that policy to the management group. You can have up to six levels deep of subordinate management groups. If you so need that change. So down here, we see we have the management group hierarchy.

[Video description begins] Management Group Hierarchy. A diagram is displayed. [Video description ends]

At the top you have your tenant Root Management Group, by default. And underneath it on the left we have Management Group 1 where we could organize subscriptions. We see here Subscription 1 and Subscription 2. But then on the right we have another management group, Management Group 2, under which we have a different subscription, Subscription 3. So we can apply or assign policies to Management Group 1.

And whatever that policy says should happen, such as checking for SQL database encryption, will flow down and be inherited. And be applied to all SQL database deployments in Subscription 1, and Subscription 2 in all resource groups. And the same thing would be true, if we applied a policy to Management Group 2, it would only apply to, in this case, Subscription 3. Now, we've really only got one level in our hierarchy here of management groups that we've created. Bear in mind, you could have up to six. So, the way that this works is we would add subscriptions as per usualto our Azure account and associate them with Azure AD tenants.

[Video description begins] Azure Management Groups. [Video description ends]

We can then create one or more management groups. Then we can move subscriptions under the appropriate management groups. And then we can apply our governance options, in other words, assign policies to management groups. Which in turn means that the subscriptions in the management groups will inherit that policy assignment.

Configuring a Management Group

[Video description begins] Topic title: Configuring a Management Group. The presenter is Dan Lachance. [Video description ends]

If your organization's use of Azure includes the use of multiple Azure subscriptions it can be a little bit cumbersome to apply permissions at the policy level to resources in multiple subscriptions.

[Video description begins] The Microsoft Azure portal is open. [Video description ends]

For example, if you want to limit something such as virtual machine types that can be deployed in certain regions. Instead of doing that per subscription, if you have the same requirements for the subscriptions. You might organize those subscriptions first into a management group and apply that policy to the management group. It'll flow down and be inherited by all of the subscriptions. So it works well in that sense. So let's go ahead and see how that works in the portal. I'm going to go ahead and search the portal for management and I'll choose Management groups.

[Video description begins] A blade called "Management groups" opens. It includes a button labeled "Add management group" and a section called "Tenant Root Group", and in this section there is a table with four columns and one row. The column headers include "Name" and "Type". [Video description ends]

Now you always will have your default Tenant Root Group under which subscriptions exist. Here I can see my Pay-As-You-Go subscription.

[Video description begins] He points to the row entry, which includes: Name: Pay-As-You-Go. [Video description ends]

But you can organize a hierarchy, kind of like how you would organize a hierarchy of organizational units or a use in on-premises Active Directory, to organize resources. In this case, we would be creating management groups to organize our subscriptions. Now even though, I only have a single subscription, I'm still going to go through create a management group and then move that subscription into that management group part of the hierarchy. The first thing I'm going to do. I'm going to click Add management group in the upper left.

[Video description begins] A blade called "Add management group" opens. It includes two radio buttons labeled "Create new" and "Use existing", and two text boxes labeled "Management group ID" and "Management group display name". It also includes a button labeled "Save". [Video description ends]

I need an ID for it. I'm going to call it mgmt1111 and I'm going to call this MgmtGroup1, then I'm going to click Save.

[Video description begins] He types the following text in the "Management group ID" text box: mgmt1111. [Video description ends]

Now, if you've got multiple subscriptions, let's say tied to a particular business unit, you might name your management group in relation to that business unit name. 

[Video description begins] He types the following text in the "Management group display name" text box: MgmtGroup1. [Video description ends]

Or if it's for particular project, maybe name the management group the name of the project or something along those lines. After a moment, we'll see that our management group down below is listed.

[Video description begins] A new row entry gets added to the table, which includes: Name: MgmtGroup1. [Video description ends]

And if I click on it and open it up, there's nothing in it because we haven't moved any subscriptions there yet. So I'm going to go back to my Tenant Root Group where I see my subscription

[Video description begins] He clicks the row entry under the Name column: MgmtGroup1. A section called "MgmtGroup1" appears in place of the "Tenant Root group" section. [Video description ends]

Pay-As-You-Go. And over on the far right, I'm going to click the more context menu, so the three dots and I'm going to choose Move. It's as simple as choosing the target management group that you want to move the subscription under.

[Video description begins] A blade called "Move" opens. It includes a drop-down list box labeled "New parent management group" and a button labeled "Save". [Video description ends]

Well, there's only one there MgmtGroup1, that we've just created a moment to go.

[Video description begins] He selects the following option in the "New parent management group" drop-down list box: MgmtGroup1. [Video description ends]

So I'm going to select that and choose Save.

[Video description begins] The table now has only one row entry, which includes: Name: MgmtGroup1. [Video description ends]

In after a moment the subscription disappears here from the Tenant Root Group and if I drilled on into MgmtGroup1, well we're going to see that our subscription is now listed there.

[Video description begins] He clicks the row entry, which includes:Name: MgmtGroup1. The section "MgmtGroup1" section appears in place of the "Tenant Root group" section. It includes a table with four columns and one row. The row entry includes: Name: Pay-As-You-Go. [Video description ends]

So the reason we would do this is, so that we can essentially apply centralized governance across multiple subscriptions in Azure. Let's see how that would work. So let me search for policy up here in the search bar. I'll choose Policy.

[Video description begins] A blade called "Policy" opens. It is divided into two parts: navigation pane and content pane. In the navigation pane, an option labeled "Overview" is selected and its corresponding page is open in the content pane. [Video description ends]

So what I'm going to do is take a look at assigning a policy to a management group. So I'm going to click Assignments over on the left. Any assignments that we already have will be shown.

[Video description begins] He selects an option called "Assignments" in the navigation pane and its corresponding page opens in the content pane. It includes a button labeled "Assign policy". [Video description ends]

I'm going to click the Assign policy button. Now the first thing we'd have to deal with is the Scope.

[Video description begins] A blade called "Assign policy" opens. It is divided into two sections. The first section includes steps: Basics, Parameters, Remediation, and Review + Create. The "Basics" step is selected and its corresponding page is open in the second section. It includes a "Policy definition" text box and a "Launch policy definition picker" button adjacent to it. It also includes a "Scope" text box. [Video description ends]

Where do you want this policy assigned? Well, let's go down and choose a policy definition, so we at least have something to think about here. Maybe I'll search for encrypt.

[Video description begins] He clicks the "Launch policy definition picker" button. A blade called "Available definitions" opens. It includes a search box and a button labeled "Select". [Video description ends]

And I want to make sure a disk encryption is applied on virtual machines. 

[Video description begins] He types "encrypt" in the search box and a list of 13 policy definitions appears. [Video description ends]

Now if your organization has six policies, well, then you potentially would have to configure this six times for each policy scope. The scope would be the subscription level. But here we can go one level above that, because subscriptions can be organized into management groups. So I'm going to select that policy.

[Video description begins] He selects the following policy from the list: Disk encryption should be applied on virtual machines. He then clicks the "Select" button. The "Available Definitions" blade closes. [Video description ends]

 And up above, notice it automatically assumes that we want to apply this policy definition and scour VMS looking for disk encryption within only the Pay-As-You-Go subscription.

[Video description begins] The following text gets populated in the "Scope" text box. Adjacent to this there is a "Launch scope selector" button. He clicks the button and a "Scope" blade opens. It includes two drop-down list boxes labeled "Subscription" and "Resource Group" and a button labeled "Select". It also includes a "Management Group" section under which there is an option called "MgmtGroup1". [Video description ends]

But I'm going to click the scope selector button over on the right. Now I could choose a different subscription, if I had others or even on a Resource group within the subscription where I want this policy applied, but that's not what we're talking about here. We're talking about management groups which we see at the top. So here's MgmtGroup1, I can select it, and then choose Select. And we are now applying this policy definition to scour all subscriptions under MgmtGroup1, looking for machines where disk encryption has not been applied. They'll then show up in compliance reports.

[Video description begins] The following text gets populated in the "Scope" text box: MgmtGroup1. [Video description ends]

Azure Cost Analysis

[Video description begins] Topic title: Azure Cost Analysis. The presenter is Dan Lachance. [Video description ends]

One important aspect of cloud computing is being able to manage costs, even though it's often pay-as-you-go, you get charged for your resource consumption. You want to make sure that you are tracking it and identifying where most of those charges are coming from. So we can do that by looking at Azure cost analysis.

[Video description begins] The Microsoft Azure portal is open. [Video description ends]

To get started here in the portal, I'm going to go into Subscriptions, because billing occurs at the subscription level.

[Video description begins] In a section called "Azure services", he selects the "Subscriptions" option. The "Subscriptions" blade opens. It includes a button labeled "Add" and a table with several columns and one row. The column headers include "Subscription name", "Status", and "Current cost". [Video description ends]

So I've got a Pay-As-You-Go subscription listed here, I can see the Current cost, and I can see that it's Active.

[Video description begins] He points to the following row entry, which includes: Subscription name: Pay-As-You-Go, Current cost: CA$1.48, and Status: Active. [Video description ends]

So I'm going to click directly on the subscription.

[Video description begins] He clicks the row entry under the "Subscription name" column: Pay-As-You-Go. A blade called "Pay-As-You-Go" opens. It is divided into two parts: navigation pane and content pane. In the navigation pane, an option labeled "Overview" is selected and its corresponding page is open in the content pane. [Video description ends]

Because when I do that, I get this new navigation bar on the left, and one of the things I see is Cost analysis, which is precisely what I want to do right now.

[Video description begins] He selects an option called "Cost analysis" in the navigation pane and its corresponding page opens in the content pane. It includes two buttons labeled "Export" and "Cost by resource" and a graph showing accumulated cost and forecast cost. The x axis show the dates and the y axis shows the cost in CA$. The page also includes three pie charts labeled "Service name", "Location", and "Resource group name". [Video description ends]

Knowing that I have a specific dollar amount based on my Azure usage is not enough. I want to know how it's broken down. So here for example, we can see it's Canadian dollars. It's only $1 and 48 cents. And we can see that it's charted here. I'll just scroll little bit over to the right according to days of the month as we can see, and it looks like the usage has been increasing since about March 4th. Now, if I scroll down a little bit, we can also see the Service name breakdown. Well, where is that money being spent? Is it virtual machines? Is it storage? Is it databases? Well, we can see by looking under Service name at this graph, that we've got the bulk of it coming from SQL database.

Little bit coming from virtual machines and storage. And we can also then see it's broken down here by Location, well, which regions. We might have different Azure administrators using our Azure account to deploy resources in different Azure regions. So I can see the cost here per region that looks like all of the cost is stemming from the US East region. Now, depending on how you use resource groups to organize related Azure resources it will determine how useful it is to look at the cost per resource group.

Often many organizations will create resource groups for specific apps that might have multiple components like a web server type of app. And it might have some custom code. It might have a back-end database. All of those resources might be organised in one resource group and then you can see the charges per resource group. So basically, in that example, you'd be able to see the charges per web application. Or you might have resource groups for different departments, if that make sense in your organization or different projects, and then deploy resources into them accordingly. And again, you'll then be able to see the cost breakdown per resource group. It really depends on what your requirements are. And you can also click the Export button to export this information as a PNG type of graphic file or as Excel data or as a CSV file.

[Video description begins] A blade called "Export" opens. [Video description ends]

And then you can download the charts. You can also schedule the export of this information on a periodic basis maybe to a storage account for business analysts that might require this type of cost breakdown.

[Video description begins] He closes the "Export" blade. [Video description ends]

Now, we can also get a little more granular at the top by clicking Cost by resource.

[Video description begins] He clicks the "Cost by resource" button and its corresponding page opens in the content pane. It includes a table with several columns and several rows. The column headers include "Resource", "Resource type", and "Cost". [Video description ends]

Now, why is this useful? Because it's showing us the individual Azure resources, like specific SQL servers that were deployed specific virtual machines, disks for virtual machines, storage accounts, and so on.

[Video description begins] He points to the row entries in the "Resource type" column. [Video description ends]

And we have a cost associated with it over in the right hand column.

[Video description begins] He points to the row entries in the "Cost" column. [Video description ends]

So it's just a way to really drill right down to the specific deployed resources that are incurring costs in your Azure account through your subscription.

Azure Budgets

[Video description begins] Topic title: Azure Budgets. The presenter is Dan Lachance . [Video description ends]

While it's important to analyze costs and pore over the numbers, it's also equally important to save time and get notified when costs on a monthly basis exceed a certain value. And that's where Azure budgets come in as being useful.

[Video description begins] The Microsoft Azure portal is open. [Video description ends]

So I'm going to click here in the portal on Subscriptions. I see, I have a Pay-As-You-Go subscription, which I'm going to click on.

[Video description begins] In the "Azure services" section, he selects the "Subscriptions" option. The "Subscriptions" blade opens. It includes a button labeled "Add" and a table with several columns and one row. The column headers include "Subscription name", "Status", and "Current cost". [Video description ends]

Now we know that we can click on Cost analysis, and of course, that is very important.

[Video description begins] He clicks the row entry under the "Subscription name" column: Pay-As-You-Go. A blade called "Pay-As-You-Go" opens. It is divided into two parts: navigation pane and content pane. In the navigation pane, an option labeled "Overview" is selected and its corresponding page is open in the content pane. [Video description ends]

But we're talking here about getting notified when a certain threshold value is exceeded. So for that, we're going to go to Budgets over here on the left.

[Video description begins] He selects an option called "Cost analysis" in the navigation pane and its corresponding page opens in the content pane. [Video description ends]

Now we don't have any budget shown on the right.

[Video description begins] He selects an option called "Budgets" in the navigation pane and its corresponding page opens in the content pane. It includes a button labeled "Add" and a table with several columns and no rows. The column headers include "Name", and "Scope". [Video description ends]

So I'm going to go ahead and click Add. The first thing you have to think about is the scope to which you want the budget applied. What do you want to look at costs for, do you want to look at it for your entire subscription?

[Video description begins] A page called "Create a budget" opens. It includes a button labeled "Next" and a section called "BUDGET SCOPING". In this section there is a Scope label, adjacent to which the "Pay-As-You-Go" option appears. Under this option there is a link called "Change scope". Under this link there is a button labeled "add filter". [Video description ends]

I can click Change scope and from here, I could switch to a different directory.

[Video description begins] A blade called "Select scope" opens. It includes a button labeled "Cancel" and a list of items. The list contains the following node: Quick24x7 (root). [Video description ends]

Right now, I'm using the Quick24x7 Azure AD tenant. And we could also drill down, for example, under our root management group for our tenant. So I can click that.

[Video description begins] He clicks the node "Quick24x7 (root)" and a subnode called "MgmtGroup1" appears. [Video description ends]

I can then click down on a management group, perhaps that's the level where I want to apply my budget.

[Video description begins] He clicks the subnode "MgmtGroup1" and a subnode called "Pay-As-You-Go" appears. [Video description ends]

But I can also click on the management group and then go down under my subscription, and even go down into a specific resource group.

[Video description begins] He clicks the subnode "Pay-As-You-Go" and several subnodes appear. [Video description ends]

So you have all of these scopes that you can apply your budget to. I'm just going to Cancel out of there. We're going to leave it directly on our Pay-As-You-Go subscription.

[Video description begins] Two drop-down list boxes appear adjacent to the "Add filter" button. [Video description ends]

I could also click Add filter, because maybe what I want to do is filter by something specific. So for example, I could specify that I want to look at a type of service I want to filter on. Or maybe a ResourceLocation, so we can choose a specific region if we wanted to filter on that.

[Video description begins] In the first drop-down list box he selects the "ResourceLocation" option. [Video description ends]

However, I'm going to click the x to remove the filter, I don't want to apply that.

[Video description begins] He removes the filters. [Video description ends]

Next thing I need to do here is, I need to specify a unique name for the budget.

[Video description begins] The "Create budget" page also includes a section called "BUDGET DETAILS". This section includes a text box labeled "Name", a drop-down list box labeled "Reset period", and another text box labeled "Amount ($)". [Video description ends]

So I'm going to call this Budget1.

[Video description begins] He types the following text in the "name" text box: Budget1. [Video description ends]

Now the Reset period will be on a monthly basis, but I could change that to whatever time period makes the most sense for me. I could set an Expiration date.

[Video description begins] The following option is preselected in the "Reset period" drop-down list box: Billing month. [Video description ends]

I'm going to leave those default settings, and I'm going to set the budget amount. For example, I want to know once we're exceeding $500 a month. Now to help along with this, down below, I can see last month's costs. And I can see the past six months' cost, and the maximum monthly forecast cost. So based on those small values, perhaps 500 is a little large. So maybe for example, if we get above a 100, which might be indicative of abnormal cloud usage in our particular case, then we can put that value in.

[Video description begins] He types the following text in the "Amount ($)" text box: 100. [Video description ends]

Now having done that, I'm going to scroll down and click on the Next> button. Now up at the top, if I scroll back up, we can set alerts.

[Video description begins] A page called "Set alerts" opens. It includes a table with several columns and one row entry. The column headers include "% of budget" and "Action group". Under the "% of budget" column header the row entry is a text box. Under the "Action group" column header the row entry is a drop-down list box. Under the table there is a link called "Manage action group". [Video description ends]

So when we get to a percentage of that value, let's see when we get to 80% of our $100, then we want to have something happen.

[Video description begins] He types the following text in the row entry under the "% of budget" column header: 80. [Video description ends]

So we can work with an Action group. Now the Action group allows me to specify things like, what you want to occur. Now, do you want to trigger some kind of code, or do you want to trigger some kind of a notification? And I even have a Manage action group option here. If I click on that, it'll take me in where I can see what I could do, what could be triggered when 80% of our budget is reached.

[Video description begins] A blade called "Manage actions" opens. It includes a button labeled "Add action group" and a table with several columns and one row. The column headers include "Action group name" and "Short name". [Video description ends]

So I could click Add action group, maybe what I want to do send something like an SMS text message.

[Video description begins] A blade called "Add action group" opens. It includes two text boxes labeled "Action group name" and "Short name" and a button labeled "OK". [Video description ends]

So I'm going to call this AG1 for action group 1. Same thing for the Short name, which is a required field, as indicated by the red asterisk.

[Video description begins] He types the following text in the "Action group name" and "Short name" text boxes: AG1. [Video description ends]

And down below, what I want to do is Select an action type.

[Video description begins] The blade also includes a table with several columns and one row. The column headers include "Action name" and "Action type". The row entry in the "Action name" column is a text box. The row entry in the "Action type" column is a drop-down list box. [Video description ends]

In this case, it's going to be Email/SMS/Push/Voice.

[Video description begins] He selects the following option in the drop-down list box in the "Action type" column: Email/SMS/Push/Voice. A blade called "Email/SMS/Push/Voice" opens. It includes an "OK" button and a radio button labeled "SMS". He selects the radio button and the following text boxes get enabled: Country code and Phone number. [Video description ends]

And let's say that I want to send SMS text notifications. So it's country code, and I could just fill in the number. After I've done that, I would then go down and click OK. Now, of course, it wants me to fill in a valid phone number. So we'll just change it into something else. All 5s in a phone number is actually reserved and used for works of fiction like movies and television shows. So I'm just going to go ahead and leave that as it is for SMS. So we're just basically adding this specific type of notification. And I'm just going to call this TextMsgNotify. This is in my action group AG1, and I'll click OK.

[Video description begins] He types the following text in the text box in the "Action name" column: TextMsgNotify. [Video description ends]

And essentially, we want to be able to use that within our budget.

[Video description begins] The table on the "Manage actions" blade now has two row entries. [Video description ends]

So it's showing up in the list. I'm just going to go ahead and select it to get back to where we were in configuring our notifications.

[Video description begins] He clicks the new row entry, which includes: Action group name: AG1. A blade called "AG1" opens. [Video description ends]

So I'm just going to scroll back here, we've got AG1, and let's just go back here. So that's where we want this to be showing up.

[Video description begins] He navigates back to the "Set alerts" page in the "Pay-As-You-Go" blade. He points to the drop-down list box in the "Action group" column of the table. He then selects the "AG1" option in the drop-down list box. [Video description ends]

And after a moment, you might have to go to the previous screen and back, you'll see the group. So here it is, AG1. Down below, I can also specify, of course, the recipients' email. So I'm just going to scroll over to the right so I can see my scroll bar, there it is.

[Video description begins] The "Set alerts" page also includes a text-box labeled "Alert recipients". [Video description ends]

So maybe, I've got a group called admins@quick24x7.com, and I want them to receive notifications, so in addition to our SMS text messaging. Okay, so having done that, I'm just good to go down and create the budget.

[Video description begins] He types the following text in the "Alert recipients" text box: admins@quick24x7.com. [Video description ends]

And there you have it, the budget creation succeeded, we now have our budget called Budget1.

[Video description begins] He clicks a button labeled "Create". [Video description ends]

And we can expect to be notified when we get to 80% of our budgeted value in the currency specified for the subscription, in this case, CA$100.00.

[Video description begins] On the "Budgets" page of the "Pay-As-You-Go" blade, a new row entry gets added to the table, which includes: Name: Budget1 and Budget: CA$100.00. [Video description ends]

Azure Invoices

[Video description begins] Topic title: Azure Invoices. The presenter is Dan Lachance. [Video description ends]

While the use of cloud computing can mean less capital expenditures for IT services. Such as, not having to acquire a lot of on-premises physical computing hardware. We still have to be able to track charges in the cost on a per-use basis by reviewing invoices.

[Video description begins] The Microsoft Azure portal is open. [Video description ends]

So to get started here in the Azure portal, I'm going to click on Subscriptions.

[Video description begins] In the "Azure services" section, he selects the "Subscriptions" option. The "Subscriptions" blade opens. It includes a button labeled "Add" and a table with several columns and one row. The column headers include "Subscription name", "Status", and "Current cost". [Video description ends]

Now, the subscription of course is tied to an Azure AD tenant which is shown here as being Quick24x7. My subscription is called Pay-As-You-Go. I'm going to go ahead and click on it to open up this navigation bar which gives me options related to my subscription.

[Video description begins] He clicks the row entry under the "Subscription name" column: Pay-As-You-Go. A blade called "Pay-As-You-Go" opens. It is divided into two parts: navigation pane and content pane. In the navigation pane, an option labeled "Overview" is selected and its corresponding page is open in the content pane. [Video description ends]

One of which, if I scroll down under Billing, is Invoices.

[Video description begins] He selects an option called "Cost analysis" in the navigation pane and its corresponding page opens in the content pane. It includes two buttons labeled "Email Invoice" and "Access Invoice" and a table with four columns and three row entries. The column headers are: Billing Period, Invoice date, Amount, Type, and Download. The page also includes a "Timespan" drop-down list box, in which the following option is selected: Last 3 months. [Video description ends]

Now, we can see on the right that we have the Last 3 months worth of invoices shown. We can see the Billing Periods, starting and ending. We can see the date of the invoice. And we can also see the Amount. And we can see the Type, in this case it's for Azure Services. Now we also, if we scroll to the right, have the option of downloading each of these. Now, if I click on the download link, it's a CSV file format download or it could be a PDF.

[Video description begins] He clicks the download link of the third row entry and its corresponding blade opens. [Video description ends]

Now, this could be important for accounting reasons and certainly for business expense or taxation reasons. So this is something that we can do by looking at the invoices. But notice also that each of these specific dollar amounts for each invoice is a hyperlink, it's blue.

[Video description begins] He points to the row entries in the "Amount" column. [Video description ends]

And so, if I were to click directly on it, I could actually jump into the Cost analysis for that particular invoice.

[Video description begins] He clicks the third row entry in the "Amount" column and a blade called "Cost analysis" opens. It includes a table with several columns and several rows. The column headers include "Service name", "Service tier", and "Cost". The blade also includes a date drop-down list box. [Video description ends]

So I can see for example, looks like premium solid state drive or ssd managed disks. Were really the bulk of the cost for that particular invoice within that time frame.

[Video description begins] He points to the first row entry in the table. [Video description ends]

Followed by, it looks like, virtual machines. So we can see how this breaks down. We can even filter it.

[Video description begins] He points to the second row entry in the table. [Video description ends]

If I want to click on Filter items, we could start typing things in and then filtering based on that.

[Video description begins] He points to a text box labeled "Filter items". [Video description ends]

So for example, if I put in ssd, all we're doing now is looking at SSD charges related to the time frame listed up above.

[Video description begins] He types "ssd" in the "Filter items" text box and the row entries in the table get filtered. [Video description ends]

So I'm just going to go ahead and click the X to close out of that. Now, it's one thing to come here and view the invoices. But we want to try to avoid having to do things in the sense of thinking of doing it. We want to automate things. And we can click the Email Invoice option up at the top.

[Video description begins] A blade called "Email invoice" opens. It includes a button labeled "Opt In". [Video description ends]

Currently it says, You are not receiving emailed invoices. Well, that's something I want to do. So I'm going to click on Opt In to make that happen.

[Video description begins] A blade called "Email statement notice" opens. It includes a button labeled "Agree". [Video description ends]

I acknowledge that it's going to be sent via non-encrypted email. That's fine, I Agree.

[Video description begins] The following pop-up box appears: Opt-in Complete. He closes the "Email invoice" blade. [Video description ends]

So this could be an important aspect of your configuration when it comes to having your invoices emailed to you automatically. The other thing to think about is we have this Access Invoice button up at the top. Now, this is currently On.

[Video description begins] A blade called "Access to invoice" opens. [Video description ends]

 And it would apply for example to users in your subscription that would have roles such as the the billing reader role. So we have that option available as well.

[Video description begins] He closes the "Access to invoice" blade. [Video description ends]

Also notice that the default here, Timespan is listed as being 3 months. But you can click on that and change it.

[Video description begins] He points to the "Timespan" drop-down list box. [Video description ends]

So for example, I can set it to the Last year if that's what I want to see.

[Video description begins] He selects the "Last year" option in the "Timespan" drop-down list box. The table now shows a list of last years invoices. [Video description ends]

And sure enough, we now see our invoices for the Last year.

Azure Resource Groups and the Portal

[Video description begins] Topic title: Azure Resource Groups and the Portal. The presenter is Dan Lachance. [Video description ends]

In Microsoft Azure, a resource group is a way to organize related resources together, such as creating a resource group for a web application and deploying all of the underlying resources that make that web app work within the resource group. Or maybe creating a resource group for a department. And when that department in the organization deploys resources, they deploy them into that resource group, or you might do it for a project. Either way, it allows us to track billing for resources in that resource group. It also allows us to track usage of items or see deployments within that resource group.

[Video description begins] The Microsoft Azure portal is open. [Video description ends]

So here in the portal, let's get started by creating a resource group, we're going to do that by beginning within the Resource groups view. So in the upper left, I'll open up the navigator and I'll click Resource groups.

[Video description begins] A blade called "Resource groups" opens. It includes a button labeled "Add" and a table with three columns and several rows. The column headers are: Name, Subscription, and Location. [Video description ends]

And you're going to see any existing resource groups, you'll see any subscriptions that they may be tied to, and their geographical location.

[Video description begins] He clicks the row entry, which includes: Name: RG1. A blade called "RG1" opens. It is divided into two parts: navigation pane and content pane. In the navigation pane, an option labeled "Overview" is selected and its corresponding page is open in the content pane. [Video description ends]

Now, if you click on a specific resource group and open up its properties blade, you'll be able to see things like Tags, you could tag it.

[Video description begins] He selects an option called "Deployments" in the navigation pane and its corresponding page opens in the content pane. It includes a table with several columns and several rows. The column headers include "Deployment name" and "Status".

You can also see any deployments that were made into that resource group and the state of them, whether they succeeded or whether they failed. 

[Video description begins] He points to the "Status" column. [Video description ends]

You can also even see Cost analysis and Cost alerts and Budgets per resource group, so at the resource group level.

[Video description begins] He closes the "RG1" and "Resource groups" blades. [Video description ends]

However, in this case, we're going to create a new resource group, so back here at my main Azure portal page, I'll click Create a resource.

[Video description begins] In the "Azure services" section, he selects the "Create a resource" option. A blade called "New" opens. It includes a search box. [Video description ends]

Now from here, I'm just going to search for resource group, and there it is, Resource group. So, I'm going to go ahead and click the Create button, and then I have to fill in a few little details.

[Video description begins] A blade called "Resource group" opens. It includes a button labeled "Create". [Video description ends]

Basically I have to give it a name and specify the region where I want to create it.

[Video description begins] A blade called "Create a resource group" opens. It is divided into two sections. The first section includes the following steps: Basics, Tags, and Review + create. The "Basics" step is selected and its corresponding page opens in the second section. It includes a drop-down list box labeled "Subscription", a text box labeled "Resource group", a drop-down list box labeled "Region", and a button labeled "Next : Tags >". [Video description ends]

And, of course, tie it to a particular Subscription, of which I have only one, the Pay-As-You-Go subscription.

[Video description begins] He selects the "Pay-As-You-Go" option in the "Subscription" drop-down list box. [Video description ends]

I'm going to call this Rg2, Resource group 2, and it's going to be, let's see, in a different location, I'm going to put this one in Canada Central.

[Video description begins] He types the following text in the "Resource group" text box: Rg2. [Video description ends]

I'm doing that because I know that most of my resources will be deployed in that same type of region.

[Video description begins] He selects the "(Canada) Canada Central" option in the "Region" drop-down list box. [Video description ends]

Then I'll click next for tags.

[Video description begins] The "Tags" step gets selected in the first section and its corresponding page opens in the second section. It includes a table with three columns and one row and a button labeled "Next : Review + create >". The column headers include Name and Value. The row entries under both these column headers are text boxes. [Video description ends]

Now we could specify a tag key and value pair. For example, if this is going to be tied to a project, we can specify a Project and a Value, let's say project ABC.

[Video description begins] He types the following text in the row entry in the "Name" column: Project. He types the following text in the row entry in the "Value" column: ABC. [Video description ends]

 But bear in mind, depending on how you plan on using this, you might just name the resource group project ABC, so really depends how you want to use it.

[Video description begins] The "Review + create" step gets selected in the first section and its corresponding page opens in the second section. It includes a button labeled "Create". [Video description ends]

At any rate, I'm going to click the next button, validation is passed, I'm going to click Create, and after a moment it will create our resource group.

[Video description begins] The following pop-up box appears: Resource group created. It includes a button labeled "Go to resource group". [Video description ends]

I'm going to click the Go to resource group link.

[Video description begins] A blade called "Rg2" opens. It is divided into two parts: navigation pane and content pane. In the navigation pane, an option labeled "Overview" is selected and its corresponding page is open in the content pane. [Video description ends]

Well, actually, before we do that, let's go back to the Resource groups view, just to shows up there.

[Video description begins] He navigates to the "Resource groups" blade. [Video description ends]

We know it will, so we just have to, click Refresh, maybe a few times, and wait a moment and then we'll see resource group show up, resource group 2, Rg2 show up.

[Video description begins] A new row entry for Rg2 gets added to the table. He clicks this row entry and the "Rg2" blade opens again. [Video description ends]

We can click on it and then start to explore it.

[Video description begins] He selects an option called "Deployments" in the navigation pane and its corresponding page opens in the content pane. It includes a table with several columns and no rows. [Video description ends]

Now, of course, it's not really being used at this point, you could go under Deployments and you would see that there's no deployments that have been sent here because it's newly created. But when you deploy new resources, for example, if I were to go, let's say to the All resources view, not that we have to do it this way, but we can.

[Video description begins] He opens the navigator and selects an option called "All resources". The "All resources" blade opens. It includes a button labeled "Add". [Video description ends]

And, if I were to click the Add button, let's say we want to add a virtual machine, Windows Server 2016 Datacenter.

[Video description begins] A blade called "New" opens. He selects an option called "Windows Server 2016 Datacenter". A blade called "Create a virtual machine" opens. It includes a "Resource group" drop-down list box. [Video description ends]

Part of that deployment is going to be specifying the resource group into which we want to deploy it. So, I can see I've got a drop-down list here for resource groups, and I could specify the Resource group, in this case, Rg2, where I want this resource deployed.

[Video description begins] He selects the "Rg2" option in the "Resource group" drop-down list box. [Video description ends]

Azure Resource Groups and the CLI

[Video description begins] Topic title: Azure Resource Groups and the CLI. The presenter is Dan Lachance. [Video description ends]

In this demonstration, I'm going to use the Azure CLI to manage Azure resource groups.

[Video description begins] The Microsoft Azure portal is open. A blade called "Resource groups" opens. It includes a table with three columns and two rows. The column headers are Name, Subscription, and Location. [Video description ends]

But first, here in the portal, I've navigated to the Resource groups view where I can see, I currently have two resource groups.

[Video description begins] He clicks the second row entry, which includes: Name: Rg1. A blade called "Rg1" opens. It is divided into two parts: navigation pane and content pane. In the navigation pane, an option labeled "Overview" is selected and its corresponding page is open in the content pane. He selects an option called "Deployments" in the navigation pane and its corresponding page opens in the content pane. It includes a table with several columns and two rows. The column headers include "Deployment name" and "Status". [Video description ends]

And if I click on any one of them to open them up, I could click on Deployments to open up that blade to see any items that were deployed into that resource group. Whether it Succeeded or whether it failed.

[Video description begins] He points to the "Status" column. [Video description ends]

And I can even perform a Cost analysis against the resource deployments inside of this resource group and so on.

[Video description begins] He selects an option called "Cost analysis" in the navigation pane and its corresponding page opens in the content pane. [Video description ends]

So let's go to the CLI and let's start managing resource groups. The first thing I'll do is run az group -h.

[Video description begins] He opens the command prompt window. The following prompt is displayed: D: \>. [Video description ends]

Now on help, I'm working with resource groups.

[Video description begins] He executes the following command: az group -h. The output displays a list of groups, subgroups, and commands. The prompt does not change. [Video description ends]

And it does say here that this allows me to Manage resource groups and template deployments. Perfect. So the next thing I'm going to do is get the next level command, which in this case to create a resource group would be create, so az group create. Now, if I need more help, I can run az group create -h to learn more about any parameters that I might need to pass on the command line to work with this. So such as --location or -l to specify the location or the region.

[Video description begins] He clears the screen. He executes the following command: az group create -h. The output displays a list of arguments and global arguments. The prompt does not change. [Video description ends]

And it even says, if you want to know how to type in those items, you could see the values by typing in az account list-locations. Of course, we'll have to specify the name and so on. So I'm going to go ahead and clear the screen with cls and I'm going to do this. I'm going to run az group create -l for location, in my case canadaeast. And I'm going to call this resource group -n Rg2.

[Video description begins] He executes the following command: az group create -l canadaeast -n Rg2. The output displays that the provisioning succeeded. The prompt does not change. [Video description ends]

Now after I've done that, I should get some returned JSON output which is indicative of the fact the provisioning succeeded, which it says it did. So I'm going to go ahead and run az group to list my resource groups.

[Video description begins] He executes the following command: az group list. The output displays a list of resource groups and their properties. The prompt does not change. [Video description ends]

However, it lists all of the properties and it's a little hard to digest that output. So what I could do is run az group list, I could pipe it to the grep line filtering tool. And I could tell it I'm looking for the name property.

[Video description begins] He clears the screen. He executes the following command: az group list | grep name. The output reads: 'grep' is not recognized as an internal or external command, operable program or batch file. The prompt does not change. [Video description ends]

But here it says 'grep' is not recognized. Well, that's because I'm running the Azure CLI locally on my Windows machine as opposed to within a Cloud Shell. This is not a Linux host. I don't have the Linux subsystem for Windows installed, there's no way to grep this. So what I could do is also pipe that instead to the Windows find command. Now, in this case I'd have to specify that the name be within quotations in order for that to work correctly.

[Video description begins] He executes the following command: az group list | find "name". The output displays the names of 3 resource groups. The prompt does not change. [Video description ends]

And once I do that, it will show me just the names of the accounts. Now the next thing I could do also is use the az group list, I could use the --query parameter. This is built into the Azure CLI, it's probably the best way to do it. And because we have an array of items, in this case, we have three resource groups, we have to refer to the fact that we have more than one. And I can specify that we have an array or a collection of them by specifying open and close square brackets. Then I separate that reference from the property, in this case, name with a dot so .name. And now we'll see just the names of those specific resource groups.

[Video description begins] He executes the following command: az group list --query [].name. The output displays the names of 3 resource groups within square brackets. The prompt does not change. [Video description ends]

Now the thing is though, you can also delete a resource group. For example, here I'm going to run az group delete, and in this case, -n for name. Let's delete our first one, resource group 1, Rg1. But let's go back and check it out in the portal before we actually press Enter.

[Video description begins] He switches back to the Microsoft Azure portal. [Video description ends]

So back here in the portal, I want to go Home and I'm going to go to the All resources view. And I see that I've got two storage account here deployed in the Rg1 Resource group.

[Video description begins] He opens the "All resources" blade. It includes a table with several columns and three rows. He points to the second and third row entries. [Video description ends]

Okay, so they still exist. Now I could have seen that of course by going into Rg1, the Resource group, and then going into Deployments. I would see that those two storage accounts had successfully been deployed here. All right, having that in mind, let's go back to the CLI.

[Video description begins] He switches back to the command prompt window. [Video description ends]

And I'm going to press Enter to delete resource group 1 or Rg1, are you sure you want to do it?

[Video description begins] He executes the following command: az group delete -n Rg1. The screen prompts to confirm if you want to perform this operation. [Video description ends]

Yes, put in the letter y, and I'll press Enter, and it says it's Running. Now even while that's in the midst of running here back here in the portal, I've refreshed my All resources view. And notice that our two storage accounts have been removed.

[Video description begins] He switches back to the Microsoft Azure portal. The table on the "All resources" blade now has only one row entry. [Video description ends]

So the message here is clear, when you delete a resource group, you're also removing all of the resources deployed into it.

Azure Resource Groups and PowerShell

[Video description begins] Topic title: Azure Resource Groups and PowerShell. The presenter is Dan Lachance. [Video description ends]

In this demonstration, I'm going to use PowerShell to create an Azure resource group.

[Video description begins] The PowerShell window is open. The following prompt is displayed: PS /home/danlachance72>. [Video description ends]

So to get started here, I'm going to run get-command in my Cloud Shell, and I'm going to use an * followed by the text resourcegroup. And then after that, I'm going to put in another *. So in other words, showing PowerShell cmdlets that contain the text resource group in their name. And we can see that we have quite a few of them.

[Video description begins] He executes the following command: get-command *resourcegroup*. The output displays a list of cmdlets that contain 'resource group' in their name. The prompt does not change. [Video description ends]

I'm interested in building a new one, and I can see we have the New-AzureRmResourceGroup PowerShell cmdlet, so I'm going to go ahead and use that. And, I am going to clear the screen, I'm going to run new-azurermresourcegroup. I'm going to specify the name. In this case, I want to build a resource group called Rg2, resource group 2. And I'm going to set the location with -location in this case to the canada east region. So I'm going to use the new-azurermresourcegroup cmdlet -name. I want to call this Rg1 for resource group 1, and -location, I'm going to set in quotes to canada east. I'm using quotes because there's a space between canada and east within that region name, and I'll press Enter.

[Video description begins] He executes the following command: new-azurermresourcegroup -name Rg1 -location "canada east". The output displays that the provisioning has succeeded. The prompt does not change. [Video description ends]

After a moment we can see the ProvisioningState of having created resource group one or Rg1, is that it Succeeded. We can verify this by retrieving information get-azurermresourcegroup. When we do that it returns our resource groups including the one that we just created, Rg1.

[Video description begins] He executes the following command: get-azurermresourcegroup. The output displays the three resource groups and information about them. The prompt does not change. [Video description ends]

Notice the property tied to that is ResourceGroupName at least as it's labeled here. So I'm going to clear the screen, we're going to use the up arrow key to bring up our get command line. I'm going to pipe this to select and we are going to tell we want to select only the resourcegroupname property. So then all we are seeing are the names of our specific resource groups.

[Video description begins] He executes the following command: get-azurermresourcegroup | select resourcegroupname. The output displays three resource group names. The prompt does not change. [Video description ends]

Now we also have the option of removing a resource group. But before we do that, why don't we minimize our Cloud Shell here in the portal, and let's go to the Resource groups view where we will see any resource groups, there are three here.

[Video description begins] He switches to the Microsoft Azure portal. He opens the "Resource groups" blade. It includes a table with several columns and three rows. He points to the second and third row entries. [Video description ends]

Including Rg1 and Rg2. So what I want to do is issue a command to delete Rg2 using PowerShell. So back in our command shell, we're going to go ahead and do that by using the remove-azurermresourcegroup cmdlet. And I'm going to tell it the name in this case is going to be Rg2. It says are you sure you want to remove that resource group?

[Video description begins] He executes the following command: remove-azurermresourcegroup -name Rg2. The screen prompts to confirm the removal of the resource group 'Rg2'. [Video description ends]

I'll type in the letter y for yes, just bear in mind that when you are removing a resource group, you are also removing the resources deployed into it.

Moving Azure Resources

[Video description begins] Topic title: Moving Azure Resources. The presenter is Dan Lachance. [Video description ends]

You can use the portal to move Azure resources from one resource group to another. And remember that resource groups allow us to organize related cloud components, such as all of those underlying items required to support a web app. Or maybe we simply want to deploy virtual machines into a resource group called Project X, and so that we can track it by project, including at the building level. Either way, let's go ahead and do a move.

[Video description begins] The Microsoft Azure portal is open. [Video description ends]

To get started here, let's go to the Resource groups view. I've got two resource groups, Rg1 and Rg3.

[Video description begins] In the "Azure services" section he clicks the "Resource groups" option. The "Resource groups" blade opens. It includes a table with three columns and three rows. The column headers are Name, Subscription, and Location. He points to the second and third row entries, which include: Name: Rg1 and Name: Rg2. [Video description ends]

Let's go look at our Storage accounts, because we're going to move a storage account from one resource group to another.

[Video description begins] He navigates to the home page. In the "Azure services" section he clicks an option called "Storage accounts". A blade called "Storage accounts" opens. It includes a table with several columns and two rows. The column headers include Name, Resource group, and Location. [Video description ends]

It doesn't have to be a storage account, that just happens to be what we're using as our example. So I've got a storage account, and we can see right here, it's in a Resource group named Rg1, we're going to move it to Rg3.

[Video description begins] He points to the second row entry, which includes: Name: storacct33445, Resource group: Rg1, and Location: Canada Central. [Video description ends]

We might do this as part of a reorganization effort. So I'm going to click on the name of the storage account to open up its details.

[Video description begins] He clicks the second row entry and a blade called "storacct33445" opens. It is divided into two parts: navigation pane and content pane. In the navigation pane, an option labeled "Overview" is selected and its corresponding page is open in the content pane. It includes a button labeled "Move". [Video description ends]

And in the Overview blade, I have a Move button. So I could choose Move and move it to another resource group within the current subscription, or in another subscription.

[Video description begins] He clicks the "Move" button and two options appear: Move to another resource group and Move to another subscription. [Video description ends]

I'm going to choose Move to another resource group.

[Video description begins] A blade called "Move resources" opens. It includes a drop-down list box labeled "Resource group" and a button labeled "OK". [Video description ends]

All I have to do here at the bottom is specify the target Resource group that I would like to move this item to, the Storage account. So I'm going to select Rg3.

[Video description begins] He selects the "Rg3" option in the "Resource group" drop-down list box. [Video description ends]

I'll turn on the checkmark that says, I understand that tools and scripts associated with move resources might not work because I'm moving it to a different location. And I also might have to update them with the new resource ID.

[Video description begins] He switches to a new tab in the browser. The Microsoft Azure portal is open. The "storacct33445" blade is open. An option called "Properties" is selected in the navigation pane and its corresponding page is open in the content pane. It includes a field labeled "Storage account resource ID". [Video description ends]

So I've opened up another browser window here for my storage account, the one that we're moving, and I've gone to the Properties blade, where we can see the Storage account resource ID. Now, we're going to go ahead and verify that it is changed after we move it to our new resource group. Notice that part of that account resource ID includes the resource group name in the path. So let's go back over, we've checked that checkmark. Let's click OK to actually perform the move. Just make sure you're patient as the move occurs, especially if you're moving more than one resource at a time.

[Video description begins] He switches to the previous tab where the "Move resources" blade is open in the Microsoft Azure portal. He clicks the "OK" button. [Video description ends]

So if I click my notification bell icon in the upper right, we can still see it's moving that storage account resource. While that's happening, let's go back into our Resource groups view. And I'm going to open up an existing resource group, because what you can also do is choose to move at the resource group level.

[Video description begins] He opens the "Resource groups" blade. He selects the second row entry, which includes: Name: Rg1. The "Rg1" blade opens. It is divided into two parts: navigation pane and content pane. In the navigation pane, an option labeled "Overview" is selected and its corresponding page is open in the content pane. It includes a button labeled "Move". [Video description ends]

What does this do? This will allow you to move all of the deployments associated with the resource group.

[Video description begins] He clicks the "Move" button and two options appear: Move to another resource group and Move to another subscription. He selects the "Move to another resource group" option. A blade called "Move resources" opens. It includes a drop-down list box labeled "Resource group" and a button labeled "OK". It also includes a table with two columns and one row. The column headers include "Resources to move" and "Type". The row entry includes, Name: storacct33445. [Video description ends]

And we can see currently, it still registers that our storage account is a part of this resource group. If you had many resources deployed here, they would all be listed. And you can see, you can select or deselect the ones and choose the target resource group to move them to. So you can do it at the resource group level or from the individual resource level.

[Video description begins] He closes the "Move resources" blade. [Video description ends]

Okay, before too long, we'll see that the moving of the resource is now complete. So we looked at the original storage account ID prior to the move. So the ID itself will not be changed, this numeric value, it starts with the 048b, it ends with 2109. I've opened up another web browser window after the move, so looking at the same resource, and the ID itself in terms of the numeric value portion has not changed. What's changed is the reference in the overall resource ID for the storage account. The reference to the resource group, here it's Rg3, and originally, it existed in Rg1. So as was suggested when we were doing this, you know, if you have any programmatic code or scripts that refer to the old resource ID, make sure they change to the new one.

Resource Group Deployments

[Video description begins] Topic title: Resource Group Deployments. The presenter is Dan Lachance. [Video description ends]

You can view past resource deployments into an Azure resource group by opening up its properties in the portal, which we're going to do here. 

[Video description begins] The Microsoft Azure portal is open. [Video description ends]

So to start with, let's go to the Resource groups view where we're going to see the resource groups within this subscription.

[Video description begins] In the "Azure services" section he clicks the "Resource groups" option. The "Resource groups" blade opens. It includes a table with three columns and three rows. The column headers are Name, Subscription, and Location. [Video description ends]

So for example, Rg1, resource group 1. If I click to open that resource group in the Overview blade, I'll see any resources currently deployed in that resource group.

[Video description begins] He clicks the second row entry, which includes: Name: Rg1. The "Rg1" blade opens. In the navigation pane, an option labeled "Overview" is selected and its corresponding page is open in the content pane. It includes a table with two columns and no rows. The column headers are Name and Type. It also includes a button labeled "Redeploy". [Video description ends]

Now here it says there are No resources to display. However, if I click on the Deployments item in the navigation bar, I can see that there have been deployments to this resource group in the past. So either those resources were deleted, or they were moved to another resource group.

[Video description begins] He selects an option called "Deployments" in the navigation pane and its corresponding page opens in the content pane. It includes a table with several columns and two rows. The column headers include "Deployment name" and "Status". [Video description ends]

So let's close this resource group for a moment and let's go into our second resource group here called Rg3.

[Video description begins] He navigates to the home page and opens a blade called "Rg3". It is divided into two parts: navigation pane and content pane. In the navigation pane, an option labeled "Overview" is selected and its corresponding page is open in the content pane. It includes a table with three columns and one row. [Video description ends]

So again in the Overview part of that, we do see there is an active object here within this resource group. It's a storage account.

[Video description begins] He points to the row entry, which includes: Name: storacct33445 and Location: Canada Central. [Video description ends]

And in the same way, if we go to the Deployments part, we'll see see that there are no deployments listed to this.

[Video description begins] He selects an option called "Deployments" in the navigation pane and its corresponding page opens in the content pane. It includes a table with several columns and no rows. The column headers include "Deployment name" and "Status". [Video description ends]

Well, how can that be when we can see there's a storage account currently assigned to Rg3? That would be because it must have been moved from another one. So let's go back into our initial resource group, Rg1, let's go the Deployments section.

[Video description begins] He navigates to the home page and opens "Rg1" blade. He selects an option called "Deployments" in the navigation pane and its corresponding page opens in the content pane. [Video description ends]

Now here I can see that there was a template deployment for one or more resources. We don't quite know yet, into this resource group on a specific date and time.

[Video description begins] He points to the first row entry, which includes: Deployment name: Microsoft.Template. He clicks the row entry, which includes: Deployment name: Microsoft.Template. A blade called "Microsoft.Template" opens. It is divided into two parts: navigation pane and content pane. In the navigation pane, an option labeled "Overview" is selected and its corresponding page is open in the content pane. It includes a "download" link. [Video description ends]

Now if I click on the link for that template, I can actually Download the details related to that template, it's a zip file.

[Video description begins] The zip file opens in the file explorer window. It includes a file called "deployment.json". [Video description ends]

I'm just going to choose Open to open it up directly, and it going to open up the deployment.json file. This gives you the details about what in that template was deployed to the resource group.

[Video description begins] The file contains several lines of code. [Video description ends]

Unless we scroll down through here, it looks like it was a storage account, that looks like the only thing that was deployed here. So we can learn that quite easily by viewing that information.

[Video description begins] He closes the deployment.json file. He switches back to the browser. [Video description ends]

Now what's equally interesting about that, if I go back here to the Deployments, is if I select an existing deployment.

[Video description begins] He navigates back to the Deployments page in the "Rg1" blade. [Video description ends]

So we're here have a deployment of the storage account into this resource group. We have a Redeploy button up at the top.

[Video description begins] He selects the second row entry in the table, which includes: Deployment name: Microsoft.StorageAccount. [Video description ends]

And it means what it says, based on the selection, you can deploy that item again. Now you would only do that if it doesn't already exist. So for example, I'm going to click Redeploy. So this is what you would normally see if you were deploying from a template.

[Video description begins] A blade called "Custom deployment" opens. It includes a drop-down list box labeled "Resource group", a text box labeled "Storage Account Name", and a button labeled "Purchase". The following text is populated in the "Storage Account Name" text box: storacct33445. [Video description ends]

So I can select a Resource group where I want to deploy this item. So for example, Rg3 or I can create a new resource group, whatever the case might be. Now interestingly, even though it was originally deployed into Rg1, this storage account was moved to another resource group. And so it doesn't actually exist here anymore. So I'm going to deploy it back into Rg1. What I'm doing is creating a new storage account from that original deployment. I would do that if I want to use a lot of the settings from it as opposed to deploying a brand new storage account from scratch.

[Video description begins] He selects the "Rg1" option in the "Resource group" drop-down list box. [Video description ends]

It's the only reason you would do this. So assuming I'm okay with all of these settings as per my original deployment. Then down at the bottom, I could choose that I agree to the terms and conditions stated above. The only thing I'll have to account for though is the name of the storage account. If that storage account is still being used somewhere, then the name isn't unique. So I'll just add a 2, let's say to the end of it, to make sure that the Storage Account Name is unique. I'll choose Purchase.

[Video description begins] He enters the following text in the "Storage Account Name" text box: storacct334452. [Video description ends]

And let's see if it validated, excellent. So the deployment is currently in progress. What we're doing is redeploying a storage account into this resource group based on a past deployment. Of course, the original storage account is no longer here. It's in Rg3. And after a moment, if I go look at my notification bell icon in the upper right, it looks like the resource deployment succeeded. Let's go back and look at the deployments here for our resource group.

[Video description begins] He navigates to the Deployments page in the "Rg1" blade. [Video description ends]

And let's take a look at the Overview here where we can see active current items here. And we can see that there is now a storage account that was deployed into Rg1 and we redeployed it from a past deployment.

[Video description begins] He selects the Overview option in the navigation pane and its corresponding page opens in the content pane. The table now has one row entry, which includes: Name: storacct334452. [Video description ends]

Resource Group Cost Analysis

[Video description begins] Topic title: Resource Group Cost Analysis. The presenter is Dan Lachance. [Video description ends]

In Azure, you can view and track your costs based at the subscription level.

[Video description begins] The Microsoft Azure portal is open. In the "Azure services" section he clicks the "Subscriptions" option. The "Subscriptions" blade opens. It includes a table with several columns and one row. The column headers are Subscription name, Current cost, and Status. He clicks the row entry, which includes: Subscription name: Pay-As-You-Go. The "Pay-As-You-Go" blade opens. It is divided into two parts: navigation pane and content pane. In the navigation pane, an option labeled "Overview" is selected and its corresponding page is open in the content pane. [Video description ends]

So for example, here in the portal if I go to my Subscriptions, and if I click on an active subscription, when I open it up, I'll have the option of clicking Cost analysis over on the left.

[Video description begins] He selects an option called "Cost analysis" in the navigation pane and its corresponding page opens in the content pane. It includes a drop-down list box labeled "Invoice". [Video description ends]

And then I'll see all the costs associated with this subscription. Of course, I can change the time period or time frame for which that is representative of, but we have the option of doing that. But what we're talking about here is doing a cost analysis at the resource group level. Now think about how you might use a resource group in Azure, you might use it for a project, so you might have a project called Project X. So you'd create a resource group with that same name and deploy project resources into it. That way you have a single unit of management in the resource group and also for tracking costs. Let's take a look at that.

[Video description begins] He navigates to the home page. In the "Azure services" section, he selects the "Resource groups" option. The "Resource groups" blade opens. It includes a table with three columns and three rows. The column headers are Name, Subscription, and Location. [Video description ends]

So I'm going to go into my Resource groups view here in Azure, and I'm going to open up an existing resource group I've got named Rg1, so I'll click on it.

[Video description begins] He clicks the second row entry, which includes: Name: Rg1. The "Rg1" blade opens. It is divided into two parts: navigation pane and content pane. In the navigation pane, an option labeled "Overview" is selected and its corresponding page is open in the content pane. [Video description ends]

And what I want to do is scroll down in the navigation bar and click on Cost analysis to open that blade.

[Video description begins] He selects an option called "Cost analysis" in the navigation pane and its corresponding page opens in the content pane. It includes a button labeled "Export" and a graph showing accumulated cost. The x axis shows the dates and the y axis shows the cost in CA$. The page also includes three pie charts labeled "Service name", "Location", and "Resource group name". It also includes an "Add filter" button. [Video description ends]

So what's going to happen is we're going to see a cost breakdown for resources deployed only into this resource group. And we can see it's coming up with the numbers listed here. So we have our standard charts where we can scroll down below and see it broken down by service. So it looks like we've got SQL databases eating up the lion share of the cost in this particular case for this time frame, the location here, Canada East. So we have all the normal stuff that we would normally see we can even filter. I could add a filter here for anything that I'm interested in such as a specific service type or Service name in this case. So I could open up the list and choose that I'm only interested in sql database.

[Video description begins] He clicks the "Add filter" button and two drop-down list boxes appear. He chooses the "service name" option in the first drop-down list box and the " sql database" option in the second drop-down list box. The graph gets updated. [Video description ends]

And I could filter based only on sql database. So then the cost analysis will update to show me only that. And as usual, we also have the option of exporting. So for example, I could choose to Export.

[Video description begins] He clicks the "Export" button and a blade called "Export" opens. It includes a button labeled "Download charts". [Video description ends]

Let's see a PNG graphic file. Let's go ahead and do that. And I'll click Download charts. And once that's done, I'll just click Open down at the bottom of the screen. And we can see here it's opened it up in Paint on my machine, but we essentially have the same type of information that we can see visually directly in the Azure portal. Let's go back and export that as, let's say a, document in the format of Excel. So I'm going to choose Excel and choose Download data. And then I'll just go ahead and click on Open. So when you open it in Excel, you're going to have two sheets. You could have a worksheet, which is the summary that you're looking at here and also the actual data itself.

[Video description begins] He selects an option called "Cost alerts" in the navigation pane and its corresponding page opens in the content pane. It includes a button labeled "Add". [Video description ends]

So not only can we work with our cost analysis at this level at the resource group level, but we can also go into Cost alerts over on the left and Add an alert and notification when the costs for resources deployed into this resource group get to a certain level.

[Video description begins] He clicks the "Add" button. A page called "Create a budget" opens. It includes a text box labeled "Name", a drop-down list box labeled "Reset period", a text box labeled "Amount", and a button labeled "Next >". The "Billing month" option is selected in the "Reset period" drop-down list box. [Video description ends]

So I could add a filter. I'm just going to leave it on Rg1, I'm not going to change the scope. And I'm going to call this Rg1Budgets1.

[Video description begins] He types "Rg1Budgets1" in the "Name" text box. [Video description ends]

Now, the idea here is that we want to be alerted when costs exceed a certain value. So I can specify the period. I'm going to leave it on Billing month but I could specify quarter here, and so on. And I'm going to set the amount here to 50. So as I scroll down, I can see here that the max over the past five months has been about $25 specifically in Canadian dollars.

[Video description begins] He types "50" in the "Amount" text box. [Video description ends]

So, it depends on your subscription and how it's configured for the currency. So that's been specified. So now that I've done that, I'm going to go ahead and click on Next>. So, we scroll back up to the top.

[Video description begins] A page called "Set alerts" opens. It includes a button labeled "Create" and a table with several columns and one row entry. The column headers include "% of budget" and "Action group". Under the "% of budget" column header the row entry is a text box. Under the "Action group" column header the row entry is a drop-down list box. Under the table there is a link called "Manage action group". [Video description ends]

Basically, I'm going to say when we get to 75% of our budgeted amount, I want to use an existing Action group if we have any, in order to send a notification. Now if we don't have any existing action groups that are available in the list, then we can click the Manage action group link.

[Video description begins] He types the following text in the row entry under the "% of budget" column header: 75. [Video description ends]

Down below, we can also specify an alert recipient email address, such as for a group, which I've specified here. And then I can just click Create.

[Video description begins] He types the following text in a text box labeled "Alert recipients": admins@quick24x7.com. [Video description ends]

So I didn't create an Action Group, I could have, if I wanted as an alternative alert notification method like SMS text or something like that. So at this point, we now have a budget created. So, if I go into the Budgets.

[Video description begins] He selects an option called "Budgets" in the navigation pane and its corresponding page opens in the content pane. It includes a table with several columns and one row. The column headers are Name and Scope. He points to the row entry, which includes: Name: Rg1Budgets1. [Video description ends]

Portion here, I can see our budget is listed here for the resource group. So the key is that we can work with cost analysis at the resource group level.

Resource Group Budgets

[Video description begins] Topic title: Resource Group Budgets. The presenter is Dan Lachance. [Video description ends]

In Azure, you create budgets so that you can be notified when a certain percentage of a given value has been reached. For example, if you set a budget for $500 per month, you might want to be notified when you get to 80% of that $500.

[Video description begins] The Microsoft Azure portal is open. [Video description ends]

So I can go in and take a look to make sure that issues such as leaving virtual machines or databases running by mistake hasn't occurred, and that's why you have an increase in cost. So we can do this at the subscription level.

[Video description begins] In the "Azure services" section, he selects the "Subscriptions" option. The "Subscriptions" blade opens. It includes a button labeled "Add" and a table with several columns and one row. The column headers include "Subscription name", "Status", and "Current cost". [Video description ends]

If I were to go into an Azure subscription, I can click on the subscription to open it up, and I can click Budgets and manage the budgets from there.

[Video description begins] He clicks the row entry under the "Subscription name" column: Pay-As-You-Go. A blade called "Pay-As-You-Go" opens. In the navigation pane, an option labeled "Overview" is selected and its corresponding page is open in the content pane. He selects an option called "Budgets" in the navigation pane and its corresponding page opens in the content pane. [Video description ends]

But what we're talking about in this particular case is doing same type of thing but at the resource group level.

[Video description begins] He navigates to the home page. In the "Azure services" section he clicks an option called "Resource groups". A blade called "Resource groups" opens. It includes a table with three columns and three rows. The column headers include Name, Subscription, and Location. [Video description ends]

So it only applies to charges for resources deployed to a specific resource group. So in my Resource groups view, I'm going to click on a resource group I have called Rg1.

[Video description begins] He clicks the second row entry, which includes: Name: Rg1. The "Rg1" blade opens. In the navigation pane, an option labeled "Overview" is selected and its corresponding page is open in the content pane. It includes a table with two columns and one row. The column headers include "Name" and "Type". The row entry includes, Name: storacct334452. [Video description ends]

And in the Overview blade over on the right, I can see any resources currently deployed there. In this case, it's only a single storage account. However, as I scroll down in the navigation bar for the resource group, I can see Cost analysis, Cost alerts, and Budgets. Well, Cost alerts allows me to add an alert which ends up creating a budget. I'm just going to go here to the Budgets view. I don't have any budgets currently.

[Video description begins] He selects an option called "Budgets" in the navigation pane and its corresponding page opens in the content pane. It includes a table with several columns and no rows. The column headers are Name and Scope. It also includes a button labeled "Add". [Video description ends]

So I'm going to go ahead and click the Add button to add a new budget. Now remember again, the budget is really about sending a numeric threshold value for costs.

[Video description begins] A page called "Create a budget" opens. It includes a button labeled "Next >" and a section called "BUDGET SCOPING". In this section there is a Scope label, adjacent to which the "Rg1" option appears. Under this option there is a link called "Change scope". Under this link there is a button labeled "Add filter". [Video description ends]

And then setting up some kind of an alert notification mechanism. So Rg1 is the current scope. I'm not going to change that. I could click Add filter, if I want to filter within the resource group by something else.

[Video description begins] Two drop-down list boxes appear adjacent to the "Add filter" button. [Video description ends]

So maybe for example, by ServiceName. Maybe, I'm only interested in looking at sql database costs within Rg1 and sending alerts for that, so I could do that. However, I'm going to remove that filter by clicking the little x.

[Video description begins] The "Create budget" page also includes a section called "BUDGET DETAILS". This section includes a text box labeled "Name", a drop-down list box labeled "Reset period", and another text box labeled "Amount ($)". [Video description ends]

And down below, I'm going to call this Rg1Budget1All, indicating it's for all costs, not by particular service or anything like that.

[Video description begins] He types "Rg1Budget1All" in the "Name" text box. [Video description ends]

I'm going to leave it on billing month, but you can change the period to be something different, like monthly, maybe you only want to track this and be notified from a quarterly perspective or annual. But I want it done every Billing month.

[Video description begins] The following option is preselected in the "Reset period" drop-down list box: Billing month. [Video description ends]

I can see the start and ending date for that. I'll leave those set as they are, so two years into the future, pretty much. I'm going to set my BUDGET AMOUNT to 500, so $500 and that will be in the currency specified with my subscription, in my case, Canadian dollars.

[Video description begins] He types the following text in the "Amount ($)" text box: 500. [Video description ends]

I can see my past five month maximum costs, which can help me sometimes gauge what I should be putting in for my budget amount. However, I'm going to leave mine at $500. Could go down to the bottom, I'm going to click Next>.

[Video description begins] A page called "Set alerts" opens. It includes a table with several columns and one row entry. The column headers include "% of budget" and "Action group". Under the "% of budget" column header the row entry is a text box. Under the "Action group" column header the row entry is a drop-down list box. Under the table there is a link called "Manage action group". [Video description ends]

And I'll scroll back up here because I can specify the percentage of that budget amount, then I want to trigger an alert. So let's say it's 80% of that $500, which works out as we can see here to be $400.

[Video description begins] He types the following text in the row entry under the "% of budget" column header: 80. [Video description ends]

I could select an existing Action group, if I have one, I don't, or I could create one by going to Manage action group. Action groups let you define targets that should receive things like notifications. Whether it's through email, or SMS text messages, or push notifications and so on. However, I already have the option built-in here when I'm creating a budget to send an alert message to a group. So I'm going to specify a group here for my organization. And they were the ones that will receive a notification when we get to 80% of our budget on a monthly billing basis.

[Video description begins] He types the following text in a text box labeled "Alert recipients": admins@quick24x7.com. [Video description ends]

And having done that, I'm going to go ahead and click on Create. So it's going to validate my selections, after which it will create the budget.

[Video description begins] He clicks a button labeled "Create". [Video description ends]

After a moment, we get a notification in the upper right that the Budget was created. And here, in the Rg1, navigation panel under the Budgets blade, we can see our budget now exists.

[Video description begins] A new row entry gets added to the table on the "Budgets" page of the "Rg1" blade. [Video description ends]

So at any point in time, we can click on the Name of the budget and open it up and either edit it to change any of the items within it, such as the Amount, or we can delete the budget.

[Video description begins] A blade called "Rg1Budget1All" appears. It includes two buttons labeled "Edit budget" and "Delete budget". [Video description ends]

Azure ARM Template Editor

[Video description begins] Topic title: Azure ARM Template Editor. The presenter is Dan Lachance . [Video description ends]

Azure Resource Manager templates, otherwise called ARM, for Azure Resource Manager, allow you to define your resources as code. It's often referred to as Infrastructure as Code.

[Video description begins] The Microsoft Azure portal is open. [Video description ends]

So you could use a template or a blueprint to specify that you want to create a storage account, a virtual machine, a web application, a public IP address, all of these things together. It allows for the automation for the deployment and management of resources. So here in the portal, I can create a template deployment by choosing Create a resource, and I could type in template, and I'm going to select Template deployment.

[Video description begins] A blade called "New" opens. [Video description ends]

Now a template is technically just a text file that uses json syntax.

[Video description begins] A blade called "Template deployment" opens. It includes a button labeled "Create". [Video description ends]

Now from this screen, we can select from Common templates that are available here in Azure.

[Video description begins] A blade called "Custom deployment" opens. It includes a "Build your own template in the editor" link. [Video description ends]

So to create a Linux virtual machine, Windows virtual machine, a web app, a SQL database. You could also, down below, select a GitHub quickstart template from the list. So whether you want to start working with things like Azure container services or kubernetes, which is kind of an orchestration platform for containerized applications. Or we might go down and choose things like an Azure DNS zone that we want to create. It could be any type of resource, a backup vault to be created, content delivery networks, on and on and on. Or you could Build your own template in the editor. When I do that, it takes me into an editor environment where we have the base skeletal format for the JSON.

[Video description begins] He clicks the "Build your own template in the editor" link and a blade called "Edit template" opens. The blade is divided into three sections, The first section contains four buttons labeled: Add resource, Quickstart template, Load file, and Download. The second section includes "Parameters", "Variables", and "Resources" nodes. The third section is an editor. [Video description ends]

Now we can also specify Variables. If you want to allow for template reusability, you shouldn't be hard coding values, things like storage account names or virtual machine names. Instead, those should be variables, and you can specify those parameters to pass in values to those variables. Now, at this point, we could load an existing file. When I choose Load file, it allows me to search for file on-premises, on my local computer that I'm doing this from, that is a template that I want to bring in here. Or I could choose Quickstart template, for example.

[Video description begins] He clicks the "Quickstart template" button and a "Select a template" drop-down list box appears and a button labeled "OK". [Video description ends]

I'm going to go through and select just a very simple template. How about we search for storage, and we'll take a look here for storage account. Now, what I want to do is basically create a very basic storage account using a template, so that we can at least see the code here. So I'll choose storage-account-create, from the template list, OK.

[Video description begins] He selects the "101-storage-account-create" option in the "Select a template" drop-down list box. He then clicks the "OK" button. [Video description ends]

And what it's done is populated all of the json syntax here in my ARM template for the creation of a storage account.

[Video description begins] Several lines of code get populated in the editor. [Video description ends]

Now notice there are some variables here. A variable is being defined here for the storageAccountName. And, If I click Variables over here on the left and expand it by clicking little triangle, I can see storageAccountName.

[Video description begins] He highlights the following line of code, code starts: "name": "[variables('storageAccountName')]". Code ends. [Video description ends]

Of course, when I click it, it takes me to that line. So I can use this template editor to tweak what I've just essentially imported from a Quickstart template. I can make changes, if I know what I'm doing. And once I'm happy with this, I can actually save it. So if I click Save, at this point it's saved my changes here in the GUI. And what I can then do is actually run a deployment from that template.

[Video description begins] The "Custom deployment" blade includes a drop-down list box labeled "Resource group" and a drop-down list box labeled "Storage Account Type". [Video description ends]

So, for example, I want to deploy a storage account into Rg1, that's a Resource group.

[Video description begins] He selects the "Rg1" option in the "Resource group" drop-down list box. [Video description ends]

And based on the template definition will determine what you need to specify. If pretty much everything is hardwired and there are no variables, then you might not have much to specify at all. But here we can specify the Storage Account Type. And the Location will be determined by looking at the Resource group up above, and calling upon its .location property.

[Video description begins] He selects the "Standard_LRS" option in the "Storage Account Type" drop-down list box. [Video description ends]

So that's going to be taken care of. Notice what's missing is the name. What will the name of the storage account be? Well, in the template the storage account name is going to be determined by concatenating some text items together. Let's just go back here for a moment in our web browser, and let's step through what we just did to create that template. We created a Template deployment, we chose Create, we wanted to use the template editor here in the GUI, and we clicked on Quickstart template. And essentially what we searched for here was storage. We want to create a storage account using the template. So, storage-account-create, we did OK. Now if we take a look here at the code within the template, when it comes to dealing with the storage account name, it's concatenating the word store, so that's going to be the prefix. Then it's going to generate a unique string from the resource group ID. And so, that is how the name will be derived.

[Video description begins] He highlights the following line of code, code starts: "storageAccountName": "[concat('store', uniquestring(resourceGroup().id))]". Code ends. [Video description ends]

Okay, let's get back to where we were. Let's Save that. Let's deploy this into Rg1. And let's go ahead and agree with it and click Purchase.

[Video description begins] He clicks a button labeled "Purchase". [Video description ends]

And after a moment, our template deployment has succeeded for a storage account. So we can go to the resource group, that's one way to navigate here. And in the Overview blade, we'll see any items deployed in this location. Now we might have to click Refresh, a time or two until we see new items. Here's our new storage account. Notice, it's got store as part of the prefix of the name followed by what looks like some kind of a unique string. Now the same thing would appear, of course, if we were to go to the Storage accounts view. Creating a storage account is the same, regardless of how you actually do it, the end result is the same. So our storage account is now showing up as having been created from a template that we pulled up in the template editor.
