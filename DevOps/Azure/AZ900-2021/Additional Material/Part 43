                    AZ900 Microsoft Azure Cloud Fundamentals 2021
                    Additional Material Course Notes Part 43


Azure Bulk User Invite
  - In Azure AD, inviting users is different than creating them
    - When you create a user, you create them directly so that, they actually exist in the Azure AD tenant
    - But when you invite a user, you're inviting an external account, usually by sending an invitation email message
    - We're going to take a look at how to perform a bulk user invite in Azure AD.
  - To get started, let's flip over to Azure Active Directory, then what we're going to do is go to the Users view
    - When we're in the All users view, we have a Bulk invite option.
    - However, if we click on it, it opens up another page that talks about the fact, that the feature has been temporarily disabled. 
    - Instead you should look at some PowerShell solutions for doing that, which is exactly what we're going to do here.
  - To do a bulk invite, you need to have a CSV file that's formulated in this manner.
    - With the Name column at the top, and then the InvitedUserEmailAddress following it to the right, under which you then populate your data
    - We are doing this in Microsoft Excel, which is fine
    - You can use any application, just make sure you save it as a CSV
    - Having done that, we can then flip over to PowerShell and use this file to perform the bulk invite
    - It's not really a bulk invite, there's only one entry in here, but it really is the same thing whether you've got one or a thousand.
  - Then creating a variable called users, variables in PowerShell are always prefixed with the dollar sign
    - The users variable will store the result of running import-csv
    - We are going to specify the location and name of the file that we just looked at, the CSV file.
  - Then we are creating a variable called custom underscore message or msg
    - That is going to be a result of instantiating a new object of type Microsoft.Open.MSGraph.Model.InvitedUserMessageInfo, it's quite a mouthful.
  - The next thing we're doing for that instantiated object variable custom_msg is we're calling upon the dot custom message body property
    - It's going to have a little custom welcome message, says, Hello. You are invited to the Quick24x7 organization
  - Then we need a loop, because we need to process all of the entries in the import file, whether it's one, which is in our case, or a 1,000
    - We are using a foreach loop, and in parentheses, we are creating a temporary placeholder variable here
    - We are calling $email, could be called anything, that's what we're going to use to reference each entry in the imported CSV file within the loop
    - That is going to be gathered from looking at the $users variable above
    - Which would contain, again, either one or thousands of users, whatever's in the file
    - Within the loop we've got the opening and closing curly braces, then we are calling upon New-AzureADMSInvitation
    - We are using a number of parameters, -InvitedUserEmailAddress
    - We call upon the $email variable. That's our looping variable, that will contain the current entry from the CSV file
    - We are also calling upon the .InvitedUserEmailAddress property, which is really just a column header in the CSV file
    - Doing the same type of thing for the DisplayName, we aresetting a redirect url for that user to myapps.microsoft.com
    - Setting the InvitedUserMessageInfo to our custom_msg variable, and SendInvitationMessage is being set to $true.
  - Having done that, let's go ahead and run the script by clicking the Run Script button up at the top
    - Now, if I haven't already signed in in this PowerShell ISE session, we'll be prompted to sign in with our Azure account credentials
    - We are going to go ahead and do that.
  - After a moment, we'll see that it looks like the script has executed and the message has been sent
    - It says the Status is PendingAcceptance. Let's start by taking a look at our Azure AD tenant in the portal to see if this user even shows up there.
    - In the Portal, we are already looking at the All users view in Azure AD.
  - Just click Refresh. And there's our Fake User account, fakeuser173@hotmail.com
    - Let's just check that person's email address, or email account rather, to make sure they received the invitation.
  - Here in their account, we have an invitation, a Microsoft Invitations, we can see here Hello
    - You are invited to the Quick24x7 organization. So it looks good, the user has been invited
    - They would just continue following through the process by clicking the Get Started button, which we'll do here
    - It will then prompt them to Accept. So it's gone to the Access Panel for applications for that user.


Multifactor Authentication
  - Multifactor Authentication, otherwise known as MFA, enhances user sign in security
    - How does it do this? If we are logging in with a username and a password, isn't that MFA?
    - It's two things, it's not because it's one category. It's something you know
    - So the idea here is to use additional authentication factors
    - Such as requiring the possession of a smart card in addition to username and password
    - Or maybe having a pin sent as an SMS text message to a phone in addition to a username and password, you have to possess the phone
    - That would constitute Multifactor Authentication.
  - So out-of-band authentication codes means that, some kind of authentication code is being sent through an alternate mechanism
    - You might be using a web browser to try to authenticate to Azure
    - You might need to specify username and password in that browser, and that's fine
    - But as MFA might be configured, you might be sent a six-digit PIN to your phone through an SMS text message that you would then also have to enter
    - It's out of band, because it's not being transmitted through the web browser
    - Some other communication mechanism. So then, this is more secure than only a username and password
    - Which can be guessed or brute forced by malicious users
    - Multifactor Authentication then combines two or more categories, so something you know plus something you have
    - Or it could be something you know, like a username and password, plus something you are, like a fingerprint scan
    - Or it could be something you have, like a smart card, and something you do, like a certain type of gesture-based authentication on a touchscreen
    - So with Multifactor Authentication, or MFA, whatever the configuration is, all of the factors get validated at the same time. 
  - And you can also use the Microsoft Authenticator app, as a form of Multifactor Authentication where codes are sent
    - It's an MFA software app and alternatively, you could just use whatever app is used for texting on your smart phone 
    - As another mechanism to receive a six-digit PIN that would be used in conjunction with the username and password to fulfill MFA requirements
    - So in the case of some MFA software apps, you might get a six-digit PIN that is only good for 30 seconds
    - Whereas if you opt for an SMS text messaging mechanism, then it would send you the six-digit PIN that doesn't expire within 30 seconds
    - Users therefore have a number of options available.


Azure User MFA
  - You can use the Azure portal to enable MFA or Multifactor Authentication for Azure AD users
    - You would do this to enhance sign in security, instead of just a username and password to get into Azure, they would need another factor
    - Such as a six-digit PIN sent to an authenticator app on a smartphone.
  - We are going to enable MFA for user Codey Blackwell here in Azure AD
    - We are looking at my list of all users in my Azure AD Tenant. Notice across the top we have a series of buttons
    - One of the things that we can do here, if we click the three dots or the More button, is we'll see other options including Multi-Factor Authentication
    - You might not need to click the three dot button if your screen resolution is set such that everything can be spread across the screen
    - Either way, click Multi-Factor Authentication, when we do that it opens up a new window, it'll show us our users.
  - We can look into the MULTI-FACTOR AUTH STATUS column to see if it's Enabled or Disabled or actually being enforced.
    - If the user has signed in, since it's been Enabled. So for user Codey Blackwell, clearly it's Disabled
    - We are going to turn on the check mark for Codey Blackwell.
    - Over on the right we are going to click the Enable link.
  - We will click enable multi-factor auth. And after a moment it's done, it says Updates successful
    - We'll click Close. And notice that the MULTI-FACTOR AUTH STATUS column for Codey now shows Enabled
    - What we're going to do is, we're going to log in as user Codey Blackwell
    - We are going to go ahead and connect to the My Apps type of panel here in Azure.
  - That means I'm going to try to connect to account.activedirectory.windowsazure.com/
    - Where we are going to Sign in as our user, cblackwell@, and then our DNS domain name for our Azure AD tenant
    - We'll click Next. Of course, we are going to have to put in a password
    - We'll do that, and it says, more information is required
    - That makes sense because we've now just enabled MFA for this account
    - Go ahead and click Next, it wants some Additional security verification information.
