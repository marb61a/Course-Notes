                    AZ900 Microsoft Azure Cloud Fundamentals 2021
                    Additional Material Course Notes Part 26


Resource Tagging and the Portal(Cont)
  - Currently this virtual machine has two. Project : ABC is the first tag and CostCenter with the value of YHZ is the second one
    - We can even add a third one here. for example, we might tie it to a department
    - We are going to put it Department, if we've already created that, as we start typing it'll show up.
    - However, nothing's popping up so this is a brand new tag we are creating, we are going to set the Value to IT.
  - We've now got a third tag that we are adding here to this particular resource. Now we can go back and remove any one of these at any point in time. However, I'm going to click Save. So now that we've got those listed, we see the third one has been added at the bottom. If I were to go to another resource, let's close out of this virtual machine. Let's just pick a storage account and let's look at the tags for it.
    - When I click on Tags, I'll see whatever it's been tagged with already.
  - Bear in mind, Azure administrators can apply policies that can add default tags. So there might be times when you're creating a resource and you don't add tags. And after you check it, after it's been created, there are tags. That's because of a policy. Anyway, here we can see this storage account has CostCenter : YHZ. If I were to type department, we'll notice it already knows it exists. And in the same way, it knows it's already got a value that's been typed in for another resource. And that's fine, we can go ahead and work with that.
When I click that, it's kind of like a little filter, Now, notice that we've also got a little square icon also over here, and it allows me to show resources with this tag. So let's do it for the first one here, CostCenter : YHZ.
it'll show me resources that have been tagged with that item. So specifically, we can see that all of these items are listed here. And let's just kind of move over a little bit so we can see them all. So they're all listed here as being items that are tagged with that same value. So we can see at the top here, Resources with tag CostCenter : YHZ. Now when you're creating a new resource, for example, let's just get out of here, we're not going to save that. I'm going to click Create a resource.
Let's say we were going to create a brand new storage account. It could be anything but let's say that's what it was.
Now when you're in the midst of creating a new resource in Azure, during the creation, whether in the GUI or at the command line, you can specify tags.
We can see the Tags part of the wizard right here.
And when you go there, it's going to look familiar, you can put in the name and value, up to 50 of them. Okay, so we can do that as well. Let's go back to our All resources view.
Because another aspect of working with tags in the GUI here in the portal, is that you can modify a selection of objects in terms of tagging. What that means is if I were to, let's say, put check marks by a couple of these resources, I can then click the Assign tags button up at the top of the view.
Now within here, I'll see each of the selected items listed and I can delete tags and make changes. But I can also add one up here. So for example, if I wanted to, I could put in a tag, let's call it Stage. And for Value I'm going to put in Testing.
So it's the testing stage that I'm applying to this and I'm going to go ahead and click Save.
So if I look at any one of these items, let's say this storage account, this second one here that was part of our initial selection.
  - We can also see it says it assigned it to three resources. But let's just check this one anyway. If I go to Tags, I'll see whatever was already applied previous to my last action.
    - But we will also see that Stage was added with the value of Testing.


Resource Tagging and the CLI
  - The CLI can prove very handy when it comes to manipulating tags in an Azure environment. 
    - To get started here, I'm going to type in az tag list. Now when I do that, it should show me details about all of the tags in this entire subscription, but there's too much metadata here.
    - All we really want to see are the names of tags, so clear the screen, use the up arrow key to bring up that previous command.
And I'm going to use --query [ ] because it's an array or list of items. And for each of them, we want to see tagName, where Name has a capital N.
That's better. So now I can see the names of tags, not the values that have been applied in my entire subscription. I want to add a new one. So I'm going to run az tag create. And I want to create one, --name, called ClientID. We might want to do this if we want to track resources based on clients, for doing projects for clients, for billing purposes, for chargeback to clients.
So what I've done is created the tag called ClientID.
And we can verify this, of course, if we bring up, using the up arrow key, our az tag list command where we're querying for tagName.
There's ClientID shown at the bottom of the list, perfect. Now I want to add a value for the ClientID tag and then we can apply it to a resource. So to add a value, I'm going to run az tag add-value --name, well, the name of the tag is ClientID and --value. I'm going to set it to a value of 1234.
  - We want to apply that to a resource. So to do that, I'm going to use, let's say, az network vnet update. I'm going to apply this to a VNet, a virtual network, that's deployed in a group, -g, called rg1, resource group 1. -n for the name of the VNet, is Vnet1, and --set tags. in this case ClientID. And of course, I could also specify the value here, 1234, that I want to add to that VNet.
    - By adding the value up above, what we're really simply doing is making it available to be assigned to individual resources.
  - If we flip over here into the portal where I've pulled up the tags for Vnet1, we indeed will see that ClientID with a value of 1234 has been successfully added.


Resource Tagging and PowerShell
  - You can use PowerShell cmdlets to manage tags in an Azure environment.
    - To get started, I want to make sure I get a handle on a specific storage account that I've already created. And I want to store that in a variable that I'm going to call storacct. So we can see here $storacct. And I'm going to tell it I want to run get-azresource-resourcename. Here's the name of the storage account I have. And it's in a resource group called rg1. Now I want to do this because I want to apply tags to that storage account.
    - Now let's just run $storacct to make sure we have a handle on that storage account. Looks good and currently we can see the tags for it CostCenter YHZ.
  - Now what I want to do is add something new. So I'm going to go ahead in terms tags and run $storacct. We have that variable the points to the $storacct.tags.add. And in parenthesis and I will start double quotes. I want to set the Stage key with the value of Development and I'm going to go ahead and press Enter.
  - Now let's just clear the screen with cls and use the up arrow key to bring up our $storacct variable
    - Notice that Stage and Development the key and value pair have been added as a tag for that storage account, we can also do other stuff like this.
  - In parenthesis get-azresource -tag, we are going to specify here an @ symbol with an open curly brace
    - In quotes we are going to say Stage and = Development put all of the each of these items in quotes
    - The next thing we are going to do is close off my curly bracket and my parentheses and .Name
    - What does this mean? Well, it means that what we want to do is to show the names of any Azure resources that have that listed tag name and value
    - So "Stage"="Development", when we press enter, we still don't see anything here.
  - Well, that's strange because when we looked at our variable, it returned Stage Development
    - Well, that's the variable, it's not been committed to Azure yet
    - What we need to do is run set-azresource to apply the change -tag, and then $storeacct.tags the tags property
    - Because we know that the tags property here contains what we just modified plus what was already there to begin with
    - So, $storeacct.tags -resourceid give it the resource ID that's going to be $storeacct.resourceid
    - Great working with variables isn't it makes things much easier
    - We'll just use -force to suppress any questions, after that's done, it will have committed that change to that resource.
  - We are going to clear the screen we're going to use the up arrow key to get-azresource once again, we can see our storage account storacct333325.
    - Indeed is tagged with "Stage"="Development".                    


Azure Monitoring Overview
  - In order to keep your Azure environment secure and running optimally, you should perform monitoring.
    - In order to monitor something to determine if something is abnormal, you need to know what is normal
    - That's where monitoring baselines kick in, whether it's for determining what normal activity looks like at the network level
    - For the amount of network transmissions, for example, what is normal when it comes to activity on a host
    - Such as how much memory is usually used within normal workload conditions, or how busy the CPU is
    - That also goes for an application, which could be spread out across multiple virtual machine hosts
    - Monitoring baselines will vary from one company to another, even from one department within an organization to another
    - Depending on how technology is being used. So an anomaly from the normal usage could indicate a security incident
    - It could just be a normal spike in activity, but if we gather enough activity over time, we'll know that that occurs.
  - So a security baseline then can be used to detect anomalies
    - Performance baselines can also be used simply to detect that things are busy or that they have slowed down
    - In response we might resize virtual machine instances
    - Or configure autoscaling accordingly to accommodate the increase or decrease in those workloads
    - So baseline anomalies could show up as busy CPU utilization
    - Which could be indicative beyond of just a busy workload of cryptocurrency mining, if the machine has been infected, or ransomware
    - If we have excessive network traffic way beyond normal that could be indicative of a distributed denial of service or a DDoS network attack
    - Or we might have device operating system changes while the hardware is the same
    - Now that would mean that we might have a Windows host that is all of a sudden a Linux host, but everything else about it looks the same
    - So that could be indicative of someone having infected the machine or maybe booted it from a USB drive into a different OS, and so on
    - The other thing to think about is system and data access outside of regular work hours at irregular times
    - So there are a lot of different aspects of Azure resources that we might monitor to determine if there's an anomaly of some kind.
  - Now Azure monitoring gives us a number of options to track this stuff, including centrally. So we can monitor Azure resource activity logs. Now these activity logs are essentially audit logs of management tasks applied to Azure resources. Such as starting and stopping a VM or reconfiguring a VM or a web app. We can also look at the Azure Performance Diagnostics Windows VM extension. If you enable performance diagnostics, then you're getting more details on metrics like CPU utilization and traffic in and out, and disk I/O activity, for monitoring purposes. You can also pin a lot of these items to custom dashboards. So that you can pull up a dashboard and see what's of relevance for you when it comes to monitoring your Azure environment. You can also work with Azure Application Insights if you want to track activity and performance metrics for a specific web app. So that's really what that one is about.
  - Here on the screen we have a screenshot of monitoring some performance metrics for an individual VM or virtual machine. So we can see the CPU average utilization, the network traffic total, the disk bytes total, the disk operations per second on average. These are important metrics to monitor. However, we can also monitor things centrally instead of doing this and going to an individual Azure resource, in this case a VM.
  - That's where Log Analytics workspaces kick in. This is centralized monitoring of Azure log data and also performance metric data. So configuration and log data feeds into Azure Monitor from the Log Analytics workspace. You can also run log queries in the Log Analytics workspace. Or from Azure Monitor, again, because Azure Monitor gets a lot of its data from Log Analytics workspaces. Your alert notifications can be configured in the Log Analytics workspace.
  - Now, there are a number of data sources that Log Analytics workspaces draw upon
    - Including storage account logs, Azure activity logs, physical and virtual servers
    - And you can even link it to your existing System Center Operations Manager or SCOM environment, if you have one
    - By adding servers to the Log Analytics workspace
    - It means that their performance metrics and log data can be collected centrally in the Log Analytics workspace.


Individual Resource Monitoring
  - There's a wealth of information available for each and every Azure resource whether you're interested in monitoring the performance of an item or auditing who did what to it from a management perspective or viewing things like operating system log details for VMs. 
All of this is available here in the portal. So I'm going to start in the portal by clicking to open up an existing virtual machine.
And the first thing we're going to do is click on the Activity log on the left.
This is a log that really only relates to the management of this resource in Azure. And so on the right the default Timespan is the Last 6 hours. Let's get more stuff shown here by changing that, let's say, to the Last month and I'll click Apply.
Now we'll see that there are quite a few other operations related to the management of this VM. When we filter in that way we can see the name of the operation, whether it succeeded or not, the date and time stamp, the subscription it applies to and the user that initiated it. We can also further filter this. So for example, for Event severity, let's say the only thing I'm really interested in are Critical and Error messages, I'm not interested in seeing Warning or Informational.
So I can unselect those or deselect them and now I've got a really small filtered list. And I can click on any one of these specific activity log entries to get more detail.
Now, we also have other options for monitoring here.
I'm going to scroll way down in the navigation bar down to the Monitoring section where I'm going to click on Metrics. This is more related to the performance in this case of the VM.
So we can select a metric from the drop-down list. For example, I'll just go down in this list and choose Percentage CPU.
Now the Percentage CPU item is added here and we can see its value. We can see it's been plotted against the timeline on the bottom, and the percentage going across the top, from the bottom to the top.
We can also add metrics, you have more than one thing shown at the same time.
So I'm going to go ahead and maybe and add Disk Read Bytes/second. And when you do that it will be plotted.
You'll see it might have a value. So we can see the values are being plotted but notice in the legend it's a different color. So this could be very important as well.
So we can monitor these metrics to track how this is doing. So performing well, do we maybe need to resize the VM, maybe scale it up so it can handle the workload better? That type of thing. We can also go to Logs over on the left.
Now it's not enabled by default, so I'm going to go ahead and click the Enable button. Now when you do that, you're going to have to select the subscription and a Log Analytics workspace that you want this associated with. So I'm okay with the default selection for the Log Analytics workspace. So I'm going to go ahead and click Enable.
Once that's enabled and you're still in the Logs blade, over on the right you'll see that things have changed.
You've got a query builder tab at the top here, it's called New Query 1. So this is a log query and down the left, you have a bunch of table names that you can select from.
 Now if you expand any of these table names, what you will be exposing are the fields or columns within those tables.
And you can see the data type is string or whatever it happens to be depending on the nature of what you're looking at. You can actually start selecting items.
So for example, if I double-click on one of these items, such as a column, I could see it puts it in here over on the right.
But of course you can also select from some example query. So if I go to Performance and availability, I could start scrolling down and saying maybe I want to view Virtual Machine available memory and I could run that.
It puts in the query statement here, where for example, the name of the table which is case sensitive is Perf. And then I'm piping that to where and I'm asking for TimeGenerated over an hour ago and so on and you can run the query by clicking Run. If there are no results, then you're going to get a message that says there are no results. Otherwise, you'll see some of the details. So this is one thing that we can do here, work with log queries within an individual resource. Let's go up to Diagnostic settings here for this Windows virtual machine.
So I've got a storage account selected here for storage.
And I'm going to choose Enable guest-level monitoring.
The next thing I can do is determine under Overview, for example, which performance counters I'm interested in gathering. There are some default selections.
I can go to Logs and determine which operating system logs I'm interested in and some details.
So for example, I'm interested in the Application log with Critical, Error, Warning types of events, severities. And I could do the same type of thing for the Security and System logs. And I can even ask for additional items like IIS web server logs if there is one available there.
And I can save all of these settings.
So when you enable the diagnostic settings, you're really saying I want to start to get more details of the inner workings of the workloads running in those, well, in this case in this VM.


Log Analytics Workspaces
In Azure, a Log Analytics workspace is a resource that you can create and configure in the Azure environment.
To get started here in the portal, I'm going to look at my All resources view. And I'm going to filter it for objects that are Log Analytics workspaces because I already have some here.
So I'm going to filter for Log Analytics workspaces, click outside of it. Here I can see I've got a couple of them. Now why would you have more than one Log Analytics workspace? Here I've got some for different regions or locations, Canada Central I see under the Location heading and East US.
Well that's one reason, you might want to have your centralized logging through the Log Analytics workspace per region. But you could have multiple Log Analytic workspaces within the same region. Maybe because you have different monitoring requirements for different resources within the same region. So to get started to add a new Log Analytics workspace, I'm going to click the Add button.
And I'm going to search up log analytic, and there it is.
Now I'm going to select Log Analytics and choose Create.
First thing I have to do is create a name for it or specify a name. So I'm going to call it LogAnalytics-2.
I'm going to deploy this into an existing resource group.
Now, up above, it's kind of outlined my name in red, in a red outline, because that name is taken. And so I'm going to put in some characters to make that a unique name and I'll kind of click outside of it. And now the name is unique.
So make sure you adhere to your naming standards within your organization when you change some of these names. I'm going to specify the location where I want this specific Log Analytics workspace. So I'm going to choose Canada Central.
I'm going leave it with my Pay-as-you-go subscription for the pricing tier and I'm going to choose OK.
And now back here in the All resources view, I can see my newly created Log Analytics workspace.
So I'm going to go ahead and click on it to open it up. Because one of the first things that you really should contend with is which data sources are connected. To your newly created Log Analytics workspace.
Because remember, this serves as a centralized performance metric and log data feed. Where's that coming from? Well, we can scroll down and go under Workspace Data Sources. Here we can click Virtual machines and we're going to see all of the virtual machines that we've got deployed.
But I can see here that they are connected to other workspaces.
So I could go in and click on a specific virtual machine and disconnect it from that workspace, and then connect it to this one.
Now, they may not already be connected to other Log Analytics workspaces if you don't have any already defined.
That would be one thing that we would do.
The other thing is to look at Storage account logs and add storage account logs as well.
And if you go to Azure Activity log, you'll also be able to link a subscription or connect your subscription here into your Log Analytics workspace.
So that that type of activity, that would be the management of Azure resources, shows up centrally here in your Log Analytics workspace.
Also, if you go in the navigation bar in your workspace to Workspace summary.
Here you can add components such as Network Performance Monitor.
So if I were to click Add, I could search in the Azure Marketplace for Network Performance Monitor.
And I would add this one, this is from Microsoft.
If I wanted to be able to monitor connectivity, let's say between virtual machine endpoints or different subnets in my environment.


Log Analytics Workspace Data Sources
A Log Analytics workspace in Azure is created automatically.
It is automatically created for the region in which you deploy resources. So notice here in my example, I have two default workspaces, one for the Canada Central region because I've deployed resources there. And also another for Eastern US because I've also deployed resources there.
So you can build your own manual Log Analytics workspace or work with the ones that are created automatically. You can think of it as a centralized way as the name implies to analyze logged information. So instead of going to view the log details for each and every Azure resource, instead you can have it collected in one location. So, for example, let's open up one of these default Log Analytics workspaces.
What's important is determining the data sources attached to the workspace. So, you can see that when you open up the workspace, if you scroll down in the navigation bar on the left. And you go to the Workspace Data Sources section. You can see that we can click on Virtual machines to pull up that blade.
This will give me a list of all of my VMs and I'll see which ones are attached to this workspace. As opposed to other workspaces or just not connected to any workspace at all.
So we have a number of them here that are connected. Now you can select and click on an individual, in this case, virtual machine, and either disconnect or connect it at any point in time.
Now Connect is unavailable because this VM AppServer2 is already connected to this Log Analytics workspace. 
But let's say we went to this other virtual machine which is showing us Not connected to any workspace, well, then I have the option to click Connect.
So we've got a number of options available from that perspective.
And by connecting the virtual machine here, you are allowing yourself to have a centralized place here in the Log Analytics workspace. To view all of the log information for all of these attached items.
Now those are just Virtual machines. Other data sources include Storage accounts logs.

[Video description begins] He clicks an option called "Storage accounts logs" in the navigation pane and the corresponding page opens in the content pane. [Video description ends]

So in the same way you can go there and you can click Add if there are none there already added.

[Video description begins] He clicks a button called "Add" and a blade called "Add storage account log" opens. [Video description ends]

And you can specify storage accounts that you want to add to this centralized Log Analytics workspace.

[Video description begins] He clicks an option called "Storage account Please select a storage account" and a blade called "Choose storage account" opens. [Video description ends]

So if I were to select a Storage account, I can then specify the Data Type.
So what type of stuff is stored in that storage account in terms of logging that you want it connected here.
So maybe, for example, I know I've got some IIS logs stored there.
So I could go ahead and select that and add it here.
You can also take a look at Azure activity logs.
Now activity logs are essentially kind of like audit logs that give you information about the management of Azure resources themselves. As opposed to what's happening within them, such as for a virtual machine. And so you can link or connect your subscriptions. 
So if I go to my subscription, I could choose Connect to connect that here to have that information here as well.
So you have a number of different data sources then so that you can centrally collect logged information from your Azure environment.


Log Queries
In Azure, it's important to have the skills to properly create log queries and also to be able to interpret the results for the general overall well being and improved performance, perhaps, of your workloads running in Azure. Now you can work with log queries for an individual resource.
For example, I can open up an individual virtual machine and in the navigation bar on the left, if I scroll all the way down, under Monitoring, I can then go to Logs.
Now from here I can start to conduct log queries.
So I can start typing in things where I can refer over on the left here to table names. There's a table, for example, called Event, and if I expand that I can see the fields within it, I can start referring to them.
So for example, if I want to see everything in the Event table, I can simply say Event and I can continue on and tell it I want to count, or sort, and so on.
But if all I want to do is just take a look at that table, then I could just run that query.
And if there are results, I would see them here. And you also have the option of using a number of Example queries.
If I click that up at the top, so for example, maybe I'll look at Performance and availability and I could scroll through and there are numerous items here.
So such as Virtual Machine free disk space, when I click Run, it puts those query statements in here up above.
And I can go ahead and run the query. Of course, I can select the Time range.
It doesn't have to be the Last 24 hours, maybe the Last 7 days, and that type of thing.
So when you're working with these types of queries, that's what you can do.
Now, you can also do this from the perspective if I go Home here of a Log Analytics workspace in Azure.
So if I open up a specific Log Analytics workspace, then I can go to Logs, and I can pretty much do the same type of thing.
Now, when you first enable logging in your Azure environment, it might take time before it starts to populate this and you can start to use it.
And that's why up here I've got another browser window open, where to learn how to work with log queries, this is very useful. You've got a Demo environment made available by Microsoft.
Now when you select it, you can sign in using your normal Azure credentials, and then start to work with log queries.
So we could see on the left, we're in the Demo environment where we can see a number of interesting categories. 
For example, if I go under Security, then I'll start to see a number of table names. These are table names. So for example, there's SecurityAlert. If I expand that, I then see the fields or columns if you wish within the SecurityAlert table.
So interesting. So if I start typing in, watch it, let's put in securityalert, but I'm going to put it in all lowercase letters.
If I try to run this query, I'm going to get a SYNTAX ERROR. And that's because the table names are case sensitive. So if I were to put in SecurityAlert in proper or initial caps and then run it, now we have some results showing up down there. Now when you're constructing these log queries, you can start to type things in, I'm going to put in a space. I'm going to type in a vertical pipe, which is a pipe symbol. I want to take the result of what's on the left and feed it into something on the right such as counting the number of occurrences or ordering them or summarizing them or doing something of that nature. So let's say, for example, that we want to run a search. So I'm going to type in the word search in and then I'm going to specify the name of the table. And we know that the name of the table is going to be case sensitive. So SecurityAlert. It would tell it I'm looking for ssh. And I could even, if I really wanted to, I could pipe it and tell it I want to only take, let's say, 5 entries.
And then, of course, what I'm going to do is click Run to run that query. We can see the result of the query is now showing down below. We've got some security alerts for Failed SSH brute force attacks. In your environment, you'll be able to click the Save button to save the query so you can run it in the future. Now, this is not a complicated query that we've got here. It's a one liner, but sometimes it can get quite complex and you're going to want to reuse them as opposed to recreating them every time. You'll find them by going into the Query explorer under Saved Queries.
You can also go into Azure Monitor. So Azure Monitor up at the top, I'll just click Monitor.
Monitor is simply a way to bring together a lot of your different log information throughout your entire subscription, for example. So let's say here in Monitor, I were to click on Logs over on the left.
Or from here I can select a scope. So let's say, I select my Pay-As-You-Go subscription and I click Apply.
And so now we're in the very familiar interface where we can begin running our queries. We can also navigate different types of tables. And of course we can see the columns so we can start building our queries and working with the results and saving them and getting to them from the Query explorer.


Dashboard Queries
You can run Azure log queries from within specific resources or from a Log Analytics workspace, or even from Azure Monitor.
So I'm going to go into Monitor by searching for that in the portal here in the top search bar and I'll choose Monitor.
Azure Monitor brings everything together in one location. So that you can query Logs for items, for example, in the scope of your entire subscription, or it could be a resource group.
But at any rate here, I've got a default workspace Log Analytics workspace object selected here.
I could choose Select Scope and change that up if I so chose, but I'm going to leave it as it is because what I want to do is just run a basic query here.
I'm going to look in the Heartbeat table and let's say we run it.
Well, there are no results found for the Last 24 hours, but how about we go back 7 days and run that again?
Think of a Heartbeat as being a "I am alive" type of message sent by computers in Azure. And we can see down below, we do have some activity related to that, including showing the ComputerIP addresses. Now, we know that we can save log queries, I could click the little Save button here.
And I can give this a name and save it as either a Query or a Function.
If you save it as a Function, then you could call that from another query using the short name of the function. But at any rate, and then you can specify a Category. Now, that's fine, but we can also pin this to a dashboard.
So I'm going to go ahead and click the Pin to dashboard button here.
We could choose an existing one or create a new one, I'm going to create a new one.
And I'm going to call it Dashboard1.
It's going to be for my Pay-As-You-Go subscription and I can specify the Location, let's say Canada Central for this.
And then I'm going to choose Apply.

[Video description begins] He clicks a button called "Apply" and the blade closes. The home page of the Microsoft Azure opens. [Video description ends]

Now, here in the portal, you can search for dashboard at any time up in the bar and I'm going to choose Shared dashboards.

[Video description begins] A blade called "Shared dashboard" opens. It includes a table with four columns and one row. The column headers are Name, Go to dashboard, Location, and Subscription. [Video description ends]

And I can see Dashboard1 listed here, so I'm going to click to open that up.

[Video description begins] He clicks a row entry called "Dashboard1" and the corresponding blade opens. [Video description ends]

However, it says No data for the given query. And if I try to refresh the update, still no joy. Now, that's because it's the Past 24 hours by default, so there's no data to show for that. So let's choose the Past 7 days, I'll click Apply.

[Video description begins] He clicks a drop-down list box called "UTC Time" and selects an option called "Past 7 days". [Video description ends]

And after a moment we should see that we have our result for Heartbeat messages sent from computers. Now at this point, it says This dashboard has unpublished changes. We just changed the time range filter. So I'm going to go ahead and choose Publish changes.

Video description begins] He clicks a button called "Publish changes". [Video description ends]

So this way, we can put the types of resultant log query information that's relevant to us at the time on a dashboard for quick access.
    
                    
Performance Metrics
Using performance metrics and monitoring them in Azure helps you optimize the performance of resources. For things like virtual machines or for web applications. If you're using, for example, Application Insights to track the performance of a web app.

[Video description begins] The Microsoft Azure web portal opens. [Video description ends]

Let's open up an existing virtual machine here in the portal to view its individual performance metrics. 

[Video description begins] He clicks a virtual machine called "WinSrv2019-1" and the corresponding blade opens. It is divided into two parts: navigation pane and content pane. [Video description ends]

Now we can do that by scrolling down in the navigation bar or the properties for that VM. All the way down under the Monitoring section where we can click on Metrics.

[Video description begins] The corresponding page opens in the content pane. [Video description ends]

Now over here on the right, we can select a metric from the drop-down list. So for example, I'm going to go down, let's say into the P's and choose Percentage CPU. And we can see that the CPU performance metric has been mapped on a chart.

[Video description begins] He clicks a drop-down list box called "Metric" and selects an option called "Percentage CPU". [Video description ends]

We can see the percentages going up on the left. And it's plotted against a timeline going across the bottom from left to right.

[Video description begins] He points to the graph. [Video description ends]

But you can also click the Add metric button to add more than one metric on a single graph. So for example, maybe I'm interested in some other metric like Disk Write Bytes if I'm interested in disk performance.

[Video description begins] He clicks the Metric drop-down list box and selects an option called "Disk Write Bytes". [Video description ends]

So now I've got both items plotted. And I can see by the legend that in this particular case, the Disk Write Bytes is shown in red. So I can track that performance metric separately from my Percentage CPU. If I hover over any of those metrics, it allows me to zoom in on that specific metric. Because it's highlighted and everything else is dimmed on the graph. We can also pin this to a dashboard so that we have an easy convenient way to look at this. Instead of coming in each time we're interested in this and setting it up from scratch. 

[Video description begins] He clicks an option called "Overview" in the navigation pane and the corresponding page opens in the content pane. [Video description ends]

Now if I go back to the Overview blade for this VM over on the right, if I scroll down. 

[Video description begins] The content pane includes graphs called "CPU (average)", "Network (total)", "Disk bytes (total)", and "Disk operations/sec (average)". [Video description ends]

I can also see some standard performance metrics, which by default shows me activity for the last hour. But I could choose, let's say last 7 days.

[Video description begins] He selects an option called "7 days". [Video description ends]

Where I can see the CPU usage average, the network traffic total, I can see the disk bytes total, disk operations per second. So we've got a lot of these items that are here automatically by default. But let me search here in the search bar in the portal for monitor.

[Video description begins] He clicks the Monitor option and the Monitor blade opens. It is divided into two parts: navigation pane and content pane. [Video description ends]

Azure Monitor is a centralized tool that allows you to also view performance metrics from here, instead of from an individual resource.

[Video description begins] He selects an option called "Metrics" in the navigation pane and the corresponding page opens in the content pane. [Video description ends]

Now from here I have to select a scope.

[Video description begins] He opens the Select a scope blade. it includes tabs called "Browse" and "Recent". The Browse tab is selected. It includes a table with three columns and several rows. The column headers are Scope, Resource type, and Location. [Video description ends]

So this is different because we're not already in a resource like a VM, so it doesn't know what to show us. We have to select a scope. So I can drill down within a subscription and then ultimately within a resource group.

[Video description begins] He points to a subscription called "Pay-As-You-Go" under the Scope column header. [Video description ends]

And I could even select, for example, a Log Analytics workspace.

[Video description begins] He expands a resource group called "defaultresourcegroup-cca". [Video description ends]

So what we could do here is we have the ability because notice that we can expand and collapse our subscriptions. This is a way for you to be able to monitor performance metrics across different subscriptions by adding different scopes. So I'm going to add a Log Analytics workspace here and I'll click Apply.

[Video description begins] He clicks a button called "Apply" and the Select a scope blade closes. [Video description ends]

Now what you have to think about is the data sources attached to that Log Analytics workspace. So the specific virtual machines or storage account logs. Because from there you'll be able to then determine which specific metrics you might be interested in. 

[Video description begins] He clicks a drop-down list box called "Metric" and selects an option called "Disk Writes/sec". [Video description ends]

So for example, if I were to choose, let's say Disk Writes/sec, then I will have some information plotted that is available based on all of the information that's made available to that Log Analytics workspace.


Action Groups and Alert Rules
Instead of going to each and every resource in Azure to monitor the performance, you can configure instead alerts. Alerts can send you notifications through your configuration of what are called action groups. And this way, you are notified when there are issues based on your configured thresholds, instead of you having to go through and peruse all of your Azure resources, which is much more time consuming.

[Video description begins] The Microsoft Azure web portal opens. [Video description ends]

So let's get started with this. First thing I want to do here is open up an existing Log Analytics workspace.

[Video description begins] He clicks a Log Analytics workspace called "LogAnalytics-2yhz76" and the corresponding blade opens. It is divided into two parts: navigation pane and content pane. [Video description ends]

The reason I'm doing this is because a Log Analytics workspace is a centralized logging hub. Where if I scroll down in the navigation bar, we have a number of different types of data sources that can feed their performance metric and log data into this Log Analytics workspace. And so as a result, we can configure some alerting here within the Log Analytics workspace. So if I scroll down under the Monitoring section in the left-hand navigator, there's Alerts.

[Video description begins] He clicks an option called "Alerts" in the navigation pane and the corresponding page opens in the content pane. [Video description ends]

Now these are alerts that will be specific to this Log Analytics workspace. So before I create an alert rule, I'm going to first click on Manage actions.

[Video description begins] He clicks a button called "Manage actions" and the corresponding blade opens. It includes a table with five columns and one row. The column headers are Action group name, Short name, Resource group, Status, and Actions. [Video description ends]

When I do that, I can create a new action group, I can add an action group. There might be some that are here already based on what you might have configured previously, but I'm going to add a new action group.

[Video description begins] He clicks a button called "Add action group" and a blade called "Add action group" opens. [Video description ends]

And this action group is going to be used for notification for administrators. I'm going to call it AdminNotify.

[Video description begins] He enters AdminNotify in a text box called "Action group name". [Video description ends]

The short name will be the same because the Short name field is required. The next thing down below is I'm going to add an action type, you can add multiple action types to this action group. We can see here we can trigger an Automation Runbook or an Azure Function, or we can have an e-mail message sent or in my case I want an SMS text message sent. 

[Video description begins] He clicks a drop-down list box called "Action Type" and selects an option called "Email/SMS/Push/Voice". A blade called "Email/SMS/Push/Voice" opens. [Video description ends]

So I'm going to select that item, that's going to open up a new blade where I'm going to turn on the check mark for SMS and I'm going to specify a phone number.

[Video description begins] The Email/SMS/Push/Voice blade closes. [Video description ends]

Now the next thing I need to do is supply a name, so I'm going to call it TextITDirector.

[Video description begins] He enters TextITDirector in a text box called "Action name". [Video description ends]

And then I'm going to click OK. So I've got my action group configuration created and it now shows up in the list, it says AdminNotify.
Let's go back into the Alerts for our Log Analytics workspace. And in the Alerts blade or view, I'm going to click New alert rule.
I want to create an alert to be notified when something happens. In this case, specifically be notified through an SMS text message based on the phone number we've configured. So the resource here in the alert rule is already specified. It's a specific Log Analytics workspace. It could be based on something else. I mean we could have done this, we could have configured an alert for a specific virtual machine for example. But in this case, the resource is the Log Analytics workspace. Now we have to add a condition. So under CONDITION, I will click Add.
So for the Monitor service in the upper right in that drop-down list, I'm going to choose Platform. I'm going to see platform-specific items and I'm going to filter the list for processor and there we go, % Processor Time.
So I'm going to select that item to configure a condition.
I want to look for busy or overburdened processor utilization. Then I'm going to scroll down and I can select a specific dimension if I want to filter or zoom into a specific Computer or an ObjectName and so on.
But I don't, I just want it overall. So what I want to do is essentially I want to be notified when we've got an 80% Greater than, 80% on Average of CPU utilization. Now we can see the frequency of evaluating this type of condition which is going to be every minute. And we can see the Aggregation granularity (Period) is set to 5 minutes. So I'm going to go ahead and click Done.
So we've now got our condition whenever the CPU processor utilization is above a certain amount. Then we have to go down and apply this to an action group. We don't have an action group selected, but we just created one recently. So I'm going to go ahead and click on Add.
There's the AdminNotify action group where we've got 1 SMS text message that will be sent, and I'm going to go ahead and choose Select.
Then all the way down at the bottom, I have to give this a name. So I'm going to call this alert rule BusyCPU, and I'm going to scroll down further and just click outside of that, and then I can click Create alert rule.
Now if we have any issues related to that alert rule, they will show up here in the Alerts blade or the Alerts view.
Now we can also use our action groups and configure alerts for an individual resource as we've alluded to.
So let's say I opened up an individual virtual machine here in the portal.
What I could do is scroll down in its navigation bar on the left, and go down under Monitoring and there's Alerts.
When I go into Alerts, it's the same type of interface that we just saw.
For example if I click Manage alert rules, I will see any alert rules created for this specific resource of which there are none. Now I could click New alert rule, and I could go through and configure the same type of thing we did.
The difference being that the resource is a specific VM as opposed to a Log Analytics workspace. So I could go through the same types of motions and add a condition for it. 
And when it comes to the action groups, if I were to click Add, then I would see my global list of action groups including AdminNotify.


Application Insights
One common use of Microsoft Azure is the deployment of customized web applications. And so developers will always be interested in monitoring how the app is being used and how it's performing. And we can do that by enabling Application Insights.
So here in the portal, to do that, I'm going to create a new web application.
And during the creation I'm going to make sure I enable Application Insights, you can also turn it on after the fact.
So when I go to create a web app, there are some common things I need to fill in.
Including the resource group it will be deployed into, a name for it.
So I'm just going to put in a unique name here, custom name.
And I'm going to use a code-based application, I'll just choose here, let's say ASP.NET.
I'm going to deploy this in Canada Central as a region.
And it's going to create a new application service plan, App Service Plan. That's fine, it determines the underlying horsepower and the pricing tier, I'm going to accept the default for the sizing. I'm going to click Next on monitoring, so Next: Monitoring.
This is where we want to make sure that Application Insights is enabled. And it is, it's set to Yes. And it's going to create a new Application Insights resource. And here, it's pretty much got the name of my web application. That's fine, perfect. 
So I'm going to go ahead and choose Next, and continue all the way through accepting defaults by clicking the Next button.
Finally, I'll click the Create button to create this web app where App Insights is actually enabled now.
We can now see our deployment is complete, I'm going to click Go to resource to go into the web application.
Where in the left-hand navigation bar, if I scroll down under the Settings section, I'll see Application Insights. I'm going to click to open up that blade.
We're over on the right, I can see it's enabled, this is where you can enable or disable it. And I can see that it's connected to my Application Insights resource. So there's a separate resource that's created and there's a link to it here, which I will click on.
In the Overview blade of the App Insights object, so that's what we're looking at now, over on the right. I can see some performance metrics such as Failed requests for the app, Server response time, Server requests, and overall Availability. 
If I click Live Metrics over on the left, after a moment I'll get some new live metrics related to my application. So Incoming Requests, Request Duration, failure rates, and so on. So for developers, this is going to be absolutely crucial so that they might know what to tweak within the application to optimize performance.


Network Performance Monitor
In Azure, the Network Performance Monitor tool allows you to monitor and identify network problems. Whether they're related to firewall issues or maybe they're related to routing configuration errors.
Either way, here in a Log Analytics workspace, when you want to work with the Network Performance Monitor, you have to add it here. Here's what that means. If I scroll down in the left-hand navigation bar for this Log Analytics workspace, I can then click on Workspace summary over on the left.
Now you're not going to see the Network Performance Monitor listed here by default. It's showing up here because I've already added it.  
What you would normally do is click the Add button up at the top and you would search for Network Performance Monitor.
And you could add it by selecting it from the marketplace, here it is. Network Performance Monitor from Microsoft, but I've already got that done. So I'm going to go back here to the Overview where the Network Performance Monitor panel is listed here.
So, when you first go into that, you're going to be configuring it. So I'm going to go ahead and click on the Configure link up at the top.
And then on the left I'm going to click SETUP.
This is what you're going to see the first time you come in. It wants you to install the OMS agents, the monitoring agents within your hosts. Now if you added virtual machines to this Log Analytics workspace. They automatically already have the Microsoft monitoring agent extension installed. So it's already done. You can also tweak and configure performance monitoring.
You can also tweak and configure service connectivity monitoring such as for Office 365, Microsoft Dynamics.
You can also monitor ExpressRoute dedicated circuit connections.
So over on the left, I'm going to click NETWORKS.
I've already added a couple of networks here. I've got my default network and I can see the subnetwork range for that VNet is 10.0.1.0. But I've also already added VNet9 here. You can click the Add network button and just fill in the details for the network name. And you'll be able to select an unallocated subnet that it's detected down below here. So I've done that and I've called it VNet9. 
IThen if I click on SUBNETWORKS over on the left, 'll see the subnets that stem from those virtual networks.  
And if I click on NODES, I can see here I've got three virtual machines in Azure. They're up and running. The AGENT STATUS shows as being Healthy. Now these three virtual machines in my case are added to this Log Analytics workspace. And as we've mentioned, they automatically get the monitoring agent installed, so they're good and ready to go. 
And if I click PERFORMANCE MONITOR on the left, I can click add a rule.
Now when I add a rule over on the right, I can select a network, I can select a subnet, and I can choose connectivity to another subnet.
I can add exceptions and I can tell it I want to use ICMP versus TCP to test the connectivity.
And I can determine when it will generate an alert if the connectivity between those subnets is not available. So the default is to autodetect sudden changes. But we can say if there is a loss, a packet condition loss, greater than or equal to a certain percentage. Or latency, network latency, speed greater than or equal to a certain number of milliseconds. So network latency means network slow down issues. So we can have that trigger. So once we've got that done, then our rule will show up. And if I go back to the overview here for my workspace summary.
That's when, when you come into Network Performance Monitor, you get to see here that you've got some problems.

[Video description begins] He opens the DefaultWorkspace-048b82ac-4519-403b-ab05-6b4305502109-CCA blade. [Video description ends]

Potentially, hopefully not. So we know that within a Log Analytics workspace. If we scroll down and look at the workspace data sources that virtual machines can serve as a data source.

[Video description begins] He clicks an option called "Virtual machines" and the corresponding page opens in the content pane. [Video description ends]

And I've got a couple of them here, WinSrv2019-1, -2 and 3, they're added to this workspace. Of course, we can just click on it to open it up and connect or disconnect it.

[Video description begins] He clicks a Virtual machine called "WinSrv2019-1" and the corresponding blade opens. [Video description ends]

But once you actually connect a virtual machine to a workspace, the Microsoft monitoring agent is automatically installed in the VM.

[Video description begins] He closes the blade. [Video description ends]

And that way the VM can report back to this Log Analytics workspace. So let's just flip over and take a look at one of those virtual machines.

[Video description begins] He opens a new Microsoft Azure web portal. The Virtual machines blade is open. He clicks the WinSrv2019-1 virtual machine and the corresponding blade opens. It is divided into two parts: navigation pane and content pane. [Video description ends]

If I actually click to open it up, and if we take a look at the virtual machine extensions.

[Video description begins] He clicks an option called 'Extensions" in the navigation pane and the corresponding page opens in the content pane. it includes a table with three columns and three rows. The column headers are Name, Type, and Version. [Video description ends]

What will have been added because it won't have been there before is the Microsoft Azure monitoring dependency agent. That gets installed when you connect or link that VM to a workspace. Now in the case of Network Performance Monitoring, that's going to be important.

[Video description begins] He switches back to the DefaultWorkspace-048b82ac-4519-403b-ab05-6b4305502109-CCA | Virtual machines blade in the previous Microsoft Azure web portal. [Video description ends]

If we take a look at the result of our configuration. If we go under Workspace summary here in the Log Analytics workspace.

[Video description begins] He clicks the Workspace summary option in the navigation pane and the Overview blade opens. [Video description ends]

We could see that now that it's had time for those servers to start reporting back information about network connectivity. We're going to start seeing some potential alerts. I can see there's an alert here. There's 1 of 1 subnetwork link that is considered unhealthy. 

[Video description begins] He clicks the Network Performance Monitor option and the Network Performance Monitor blade opens. [Video description ends]

So if I click on that panel to open it up, then I can read more details about exactly what the issue is. So we can see that that health event was generated by a rule called Rule1. And if I kind of click on that rule to see what it's about, we've got a 100% transmission loss.

[Video description begins] He clicks a link called "Rule 1" and a blade called "Affected Subnetworks Link" opens. [Video description ends]

And we can see it's between subnets within the rule that were specified. And in this case, those subnets are the 10.0.1.0 subnet, and the 13.0.1.0 subnet. There's a link on the right that says View affected node links. So I could also click on that to get even further detail.

[Video description begins] A blade called "Node Links" opens. [Video description ends]

And from here I can see the node links where on the left I have the name of a virtual machine. And it's pointing to another one listed to the right of it. And I can see the IP address interfaces, and I can see in this case we have a 100% packet loss. Now, that often might be due to routing problems between subnets and so on. But this is one of the overall purposes of using Network Performance Monitor or NPM in Azure. To identify these types of network connectivity issues.


Network Watcher
Before you can troubleshoot network connectivity issues in Azure, you need to be aware of the network configuration. You've got to know what's there. How many VNets, subnets, VNet peering is enabled and so on.
So here in the portal, I'm going to search for network and I'm going to select Network Watcher from the list.
One of the things I can do here is click on Topology over in the left-hand navigation bar to open up the Topology blade.
Now on the right, it's got my subscription automatically selected from the Resource Group drop-down list. I'm going to choose a resource group I'm interested in here.
And I can also select a VNet to further filter my topology map.
It draws a topology map in a hierarchy, where at the top, we have our virtual network. In this case, it's called VNet1 under which we then see the subnets. And this is part of knowing what you have. If you're called in to troubleshoot something and you didn't set it up, it's helpful to know what's there. So we can see we have a number of subnets, including a GatewaySubnet, an AzureFireWallSubnet, an AzureBastionSubnet. And under each subnet we can then see the associated network interfaces and ultimately the public IP addresses associated with those interfaces and of course the virtual machines. So this is one of the things we can do with the Network Watcher tool, is learn a bit about our topology in the Azure environment. Over on the left, I can also click on Connection monitor.
So I can click the Add button over on the right to add a connection monitor.
I'm going to call this Monitor1.
And I'm going to select a virtual machine here that would be a virtual machine that is the source I want to monitor from and then I want to select a destination virtual machine.
I can also specify a port number on which I want that connectivity to be checked.
So I'll put in Port 80 and I'll just click Add to add that connection monitor.
And we can now see the monitor has been added to the list and under the Status column it says it is currently running.
Now we can actually click on that connection monitor configuration and that'll open up another panel down below where we can scroll down and see some details over the last hour, six hour all the way up to the last 30 days. And down below according to the legend, we can see that we've got percentage of probes that have failed is 100. That's not good. Well, that could be due to a number of reasons. Perhaps the target virtual machine isn't reachable due to routing problems, but if they're in the same subnet, it's not a routing issue. Or it could be a network security group preventing connectivity to a port. Or perhaps Port 80 simply isn't in a listening state on that machine, there's no web server. So there are plenty of reasons that could happen, but we can identify that this is happening here using Network Watcher. We can also run a Packet capture as we can see over here on the left, we can view our Effective security rules, network security group security rule.
So from here we can select the subscription, a resource group and ultimately a virtual machine.
So when I do that I can see a network interface for that virtual machine and the association with the network security group here at the subnet level that says as opposed to linked directly to the network interface, and we can see any rules that might be applicable.
We can also click on Packet capture on the left and click the Add button to add a packet capturing session.
Sometimes you'll create a packet capturing session because you want to be able to actually examine the detailed specific network traffic that is occurring on a network.
Now specifically what you're going to do is to choose the target virtual machine that you're interested in and you can select to store the resultant packet file name, the packet capture file name in a storage account. Or you can have it stored in a file within the virtual machine in question, the target virtual machine that we have to select above or you can have it stored in both places. The packet capture file will use a .cap format. So you can open it up with standard tools like Wireshark.

                    
Azure Subscription Overview
There is a relationship between Azure AD tenants and Azure subscriptions. 
Pictured in our diagram on the left, we see our Azure AD tenant. Azure AD or Azure Active Directory is a centralized directory service in the cloud. And it allows us to create user accounts for authentication, organize them into groups, assign permissions. We can register devices in Azure AD, so users can sign in on those devices with their Azure AD credentials. That's essentially what it is. It's an identity provider. And we can associate a subscription with our Azure AD tenant, listed here as Subscription 1.
A subscription is really a way that we get features that allow us, for example, to deploy resources in Azure. It's also used for billing purposes. But what you can do is you can add multiple subscriptions to your Azure AD tenant. However, the opposite is not true. You can't have a given subscription used by multiple AD tenants. So we see here that subscriptions are related to billing.
Now there are some limits to what you can do within an Azure subscription, such as how many resources can be deployed and so on. As an example, our first item here is the number of subscriptions per Azure AD tenant. This is one of those items where there is no limit. But there is a number of resource tags that can be specified to an Azure resource, and it maxes out at a value of 50. The maximum number of group owners maxes out at 100. The maximum number of storage accounts per region maxes out at 250. Now, this is only to list a tiny portion of some of these limits. There are many other ones that are published online, clearly, in the Microsoft Azure documentation.
So we have the option with our subscription to also increase any of these limits should they be a little bit too constraining. You can do this once you sign into the Azure portal by creating a customer support request. Now limits for some things, such as the number of vCPUs, virtual CPUs available for a given virtual machine instance, those limits are quoted per Azure region. Now, you also have to bear in mind that if you're using an Azure free trial subscription, that you won't have the option of creating a customer support request, at least not in it succeeding in increasing any of those limits.
The other thing to think about is that when it comes Azure subscriptions, don't forget about how it is related to both the Azure AD tenant and also your Azure account in the first place. So you can have your Azure account in which you build your Azure AD tenants, and of course, you can have multiple subscriptions. Billing is done separately for each of your subscriptions. And if you do have a free try, you can actually convert it to a paid subscription.
Now there are a number of different types of Azure subscriptions, such as pay-as-you-go, where all of your resource usage is tracked and you pay based on what you use. But then depending on the type of support you need, will determine if you select some of the other types of subscriptions, like Professional Direct support or Developer support. Developer support would allow you to get support but only during business hours, not 24/7. Then we also have Standard support. So, if you do need full support, 24/7, then you would look at choosing the appropriate type of Azure subscription, such as Professional Direct.


Azure Subscriptions and the Portal
You can view your Azure subscriptions in the Azure portal. 
You can view your Azure subscriptions in the Azure portal. One way to do this is by searching for subscriptions in the search bar at the top center which I will do.
Now bear in mind that when you search up subscriptions you will see any subscriptions associated with your current Azure AD tenant, which is shown here as Quick24x7. So I can see I have a Pay-As-You-Go active subscription. I can even see the Current cost.
Now in the upper right, if I click on my sign in account information area and click Switch directory and, if I choose some other Azure AD tenant, let's say EarthFarm in this example.
Then when I go to take a look at subscriptions, I can expect to see something different potentially.
So because I've visited subscriptions recently, I can just click it from Azure services, of course, I could once again search for it in the top center. Either way, I want to look at the subscriptions for this different Azure AD tenant. Notice it says, "You don't have any subscriptions". So at this point, we have the option of clicking Add where we'll be presented with a list of subscription options.
So at this point, I'm just going to authenticate so I can get to that screen. So now I get the option to SELECT AN OFFER.
If I want to add a Pay-As-You-Go subscription or Pay-As-You-Go Dev/Test, Developer support, Professional Direct support, and Standard support where I can see some of the details about these. So we have some options here. And, if I were to choose one of these, it would then continue on to the point where I have to make sure I add a payment method, and so on. But I'm going to close out of that. And I'm going to switch back to my first initial directory that in this case would be the Quick24x7 Azure AD tenant where I know, I have an active subscription.
And once again, I'm going to go look in the subscriptions associated with that Azure AD tenant. Now I'm going to click directly on that existing subscription.
Now I'm going to click directly on that existing subscription. 
Because when you do that, it opens up a plethora of options in the navigation bar on the left. For example, we can go to Cost analysis to analyze costs, to see exactly for example, where the lion's share of our charges are coming from.
We could click on Budgets, so we can configure alert notifications when our costs reach a certain point.
We can even go through and see our Invoices over on the left under the Billing section. But at the same time, we also have some other things that we can do, when I go back to the Overview part of this.
We have some buttons across the top. I can cancel the subscription. I can Rename it, so, if I want to rename it from Pay-As-You-Go to something different, I can do that. I can Change directory. That means I can associate this subscription with a different Azure AD tenant. So I've got a number of options. So, I can even click on Manage to open up a new browser window where I can further manage my Azure subscription. So we have a summary for our Pay-As-You-Go subscription, where we're looking currently at the OVERVIEW.
And we can see a lot of options available on the right to Manage payment methods or to Download usage details for the subscription or to change the subscription address information. Or I want to switch to a different type of subscription offer. Again, I have some other options here such as canceling the subscription and so on.


Azure Subscriptions and the CLI
You can use the Azure CLI to learn about Azure subscriptions and also to determine which subscription is active. To get started here in the Azure portal, I'm going to launch the Cloud Shell.
Now in the Cloud Shell, I'm going to start by running az account list.
And when I press Enter, it'll return some details.
So we can see the name of the cloud, AzureCloud, as opposed to Azure Cloud for Government or anything like that. And we can also see the id. Now, it doesn't say subscription ID, but this is the id of our current Azure subscription. We can also see our Azure AD tenant ID. Let's examine the subscription ID for a second by jumping into the portal to take a look at that. So, notice here it starts with 048b and ends with 2109. So let's just minimize the shell here. Let's go in to Subscriptions, let's see what we've got attached to our current AZ tenant.
Now it should be a Pay-As-You-Go subscription. And notice the Subscription ID indeed starts with 048b and ends with 2109. So we can learn a bit of that information from the az account list command in the CLI.
Let's clear the screen. Let's also run az account set --subscription. And here, I'm going to put in the name of it which is Pay-As-You-Go, each word separated by a dash. Now in my case, it doesn't really matter that I do that.
Because if we go back and take a look, we've only got a single subscription here associated with our Azure AD tenant. Which is shown here by name in the form of Quick24x7.
But when you have multiple subscriptions, this can be an important command. Essentially you're setting the context to that subscription. And so following commands after you do that will run in the context of that set or selected subscription. The other thing to bear in mind is that you can also, instead of setting the subscription when you have multiple subscriptions, you can also do it per command. What I mean by that as an example, is let's say we were going to use az vm create to create new VM. And normally you would specify things like --resource-group and then Rg1, let's say.
And then maybe the name, let's call it Linux1, and then maybe the --image would be based on something Ubuntu. But the key here is that we can also use the --subscription command line parameter. And so, for this individual single command, you can say, well, I want this tied to the Pay-As-You-Go, just type that in, subscription. So you can do that if you know you have to work with a number of resources and different subscriptions. You might choose to just do it at the command-line instead of keeping on setting it as up above. It really depends on what you want to do and how many commands you have to issue. But either way, it's important to have this knowledge if you're going to be working with Azure subscriptions through the CLI.


Azure Subscriptions and PowerShell
When you're working in PowerShell, you might be working with an Azure AD tenant that is associated with multiple subscriptions. And, so you can control the subscription that is going to be used as you issue PowerShell cmdlets. Such as the deployment of resources like virtual machines. To get started here in the portal, I'm going to launch the Cloud Shell, and I'm in PowerShell here.
And I go to start by running get-command. And I'll put in asterisk subscription. So basically, I'm trying to discover which cmdlets are available that relate to subscriptions.
And there are bunch of them as you can see. For example, Get-AzSubscription. Okay, so if we were to do that, get-azsubscription, when we press Enter, we get some returned information.
We can see that we have a Pay-As-You-Go subscription, which is currently active and being used. So, if we start deploying virtual machines and storage accounts and so on, it's going to be tied to this currently active subscription. We can see the subscription ID. We can also see the Azure Active Directory tenant with which the subscription is associated.
Now, when you have multiple subscriptions available for your Azure AD tenant, you may want to be able to switch between them. And you can do that using select-azurermsubscription. So for example, in quotes here I could do it by name, pay-as-you-go, close the quotes.
What this means is, I'm setting that as the current context or active subscription. Any commands that follow will be tied to it. Such as deploying virtual machines, storage accounts and so on. And I can verify that, that's the current context by running get-azurermcontext.
And we can see it returns that we are using our Pay-As-You-Go subscription. And of course, we can see the subscription identifier being listed there as well along with our Azure AD tenant ID. So now that we've done that, any PowerShell cmdlets that I run from this point forward in this session will be applied to that subscription.


Management Group Overview
Azure management groups are really all about centralized governance. Now we can apply this to multiple subscriptions, it allows us to organize subscriptions within a management group. Think if it as a hierarchy. Because at the top, you have your tenant root group. Under which you can then create multiple management groups and organize your subscriptions accordingly within them. Now you would organize them for policy and compliance reasons.
For example, you might have a policy that requires SQL database encryption. And you want to check all SQL database instances in multiple subscriptions. So, you might organize those subscriptions into a management group and then assign that policy to the management group. You can have up to six levels deep of subordinate management groups. If you so need that change. So down here, we see we have the management group hierarchy.
At the top you have your tenant Root Management Group, by default. And underneath it on the left we have Management Group 1 where we could organize subscriptions. We see here Subscription 1 and Subscription 2. But then on the right we have another management group, Management Group 2, under which we have a different subscription, Subscription 3. So we can apply or assign policies to Management Group 1.
And whatever that policy says should happen, such as checking for SQL database encryption, will flow down and be inherited. And be applied to all SQL database deployments in Subscription 1, and Subscription 2 in all resource groups. And the same thing would be true, if we applied a policy to Management Group 2, it would only apply to, in this case, Subscription 3. Now, we've really only got one level in our hierarchy here of management groups that we've created. Bear in mind, you could have up to six. So, the way that this works is we would add subscriptions as per usualto our Azure account and associate them with Azure AD tenants.
We can then create one or more management groups. Then we can move subscriptions under the appropriate management groups. And then we can apply our governance options, in other words, assign policies to management groups. Which in turn means that the subscriptions in the management groups will inherit that policy assignment.


Configuring a Management Group
If your organization's use of Azure includes the use of multiple Azure subscriptions it can be a little bit cumbersome to apply permissions at the policy level to resources in multiple subscriptions.
For example, if you want to limit something such as virtual machine types that can be deployed in certain regions. Instead of doing that per subscription, if you have the same requirements for the subscriptions. You might organize those subscriptions first into a management group and apply that policy to the management group. It'll flow down and be inherited by all of the subscriptions. So it works well in that sense. So let's go ahead and see how that works in the portal. I'm going to go ahead and search the portal for management and I'll choose Management groups.
Now you always will have your default Tenant Root Group under which subscriptions exist. Here I can see my Pay-As-You-Go subscription.
But you can organize a hierarchy, kind of like how you would organize a hierarchy of organizational units or a use in on-premises Active Directory, to organize resources. In this case, we would be creating management groups to organize our subscriptions. Now even though, I only have a single subscription, I'm still going to go through create a management group and then move that subscription into that management group part of the hierarchy. The first thing I'm going to do. I'm going to click Add management group in the upper left.
I need an ID for it. I'm going to call it mgmt1111 and I'm going to call this MgmtGroup1, then I'm going to click Save.
Now, if you've got multiple subscriptions, let's say tied to a particular business unit, you might name your management group in relation to that business unit name. 
Or if it's for particular project, maybe name the management group the name of the project or something along those lines. After a moment, we'll see that our management group down below is listed.

[Video description begins] A new row entry gets added to the table, which includes: Name: MgmtGroup1. [Video description ends]

And if I click on it and open it up, there's nothing in it because we haven't moved any subscriptions there yet. So I'm going to go back to my Tenant Root Group where I see my subscription

[Video description begins] He clicks the row entry under the Name column: MgmtGroup1. A section called "MgmtGroup1" appears in place of the "Tenant Root group" section. [Video description ends]

Pay-As-You-Go. And over on the far right, I'm going to click the more context menu, so the three dots and I'm going to choose Move. It's as simple as choosing the target management group that you want to move the subscription under.

[Video description begins] A blade called "Move" opens. It includes a drop-down list box labeled "New parent management group" and a button labeled "Save". [Video description ends]

Well, there's only one there MgmtGroup1, that we've just created a moment to go.

[Video description begins] He selects the following option in the "New parent management group" drop-down list box: MgmtGroup1. [Video description ends]

So I'm going to select that and choose Save.

[Video description begins] The table now has only one row entry, which includes: Name: MgmtGroup1. [Video description ends]

In after a moment the subscription disappears here from the Tenant Root Group and if I drilled on into MgmtGroup1, well we're going to see that our subscription is now listed there.

[Video description begins] He clicks the row entry, which includes:Name: MgmtGroup1. The section "MgmtGroup1" section appears in place of the "Tenant Root group" section. It includes a table with four columns and one row. The row entry includes: Name: Pay-As-You-Go. [Video description ends]

So the reason we would do this is, so that we can essentially apply centralized governance across multiple subscriptions in Azure. Let's see how that would work. So let me search for policy up here in the search bar. I'll choose Policy.

[Video description begins] A blade called "Policy" opens. It is divided into two parts: navigation pane and content pane. In the navigation pane, an option labeled "Overview" is selected and its corresponding page is open in the content pane. [Video description ends]

So what I'm going to do is take a look at assigning a policy to a management group. So I'm going to click Assignments over on the left. Any assignments that we already have will be shown.

[Video description begins] He selects an option called "Assignments" in the navigation pane and its corresponding page opens in the content pane. It includes a button labeled "Assign policy". [Video description ends]

I'm going to click the Assign policy button. Now the first thing we'd have to deal with is the Scope.

[Video description begins] A blade called "Assign policy" opens. It is divided into two sections. The first section includes steps: Basics, Parameters, Remediation, and Review + Create. The "Basics" step is selected and its corresponding page is open in the second section. It includes a "Policy definition" text box and a "Launch policy definition picker" button adjacent to it. It also includes a "Scope" text box. [Video description ends]

Where do you want this policy assigned? Well, let's go down and choose a policy definition, so we at least have something to think about here. Maybe I'll search for encrypt.

[Video description begins] He clicks the "Launch policy definition picker" button. A blade called "Available definitions" opens. It includes a search box and a button labeled "Select". [Video description ends]

And I want to make sure a disk encryption is applied on virtual machines. 

[Video description begins] He types "encrypt" in the search box and a list of 13 policy definitions appears. [Video description ends]

Now if your organization has six policies, well, then you potentially would have to configure this six times for each policy scope. The scope would be the subscription level. But here we can go one level above that, because subscriptions can be organized into management groups. So I'm going to select that policy.

[Video description begins] He selects the following policy from the list: Disk encryption should be applied on virtual machines. He then clicks the "Select" button. The "Available Definitions" blade closes. [Video description ends]

 And up above, notice it automatically assumes that we want to apply this policy definition and scour VMS looking for disk encryption within only the Pay-As-You-Go subscription.

[Video description begins] The following text gets populated in the "Scope" text box. Adjacent to this there is a "Launch scope selector" button. He clicks the button and a "Scope" blade opens. It includes two drop-down list boxes labeled "Subscription" and "Resource Group" and a button labeled "Select". It also includes a "Management Group" section under which there is an option called "MgmtGroup1". [Video description ends]

But I'm going to click the scope selector button over on the right. Now I could choose a different subscription, if I had others or even on a Resource group within the subscription where I want this policy applied, but that's not what we're talking about here. We're talking about management groups which we see at the top. So here's MgmtGroup1, I can select it, and then choose Select. And we are now applying this policy definition to scour all subscriptions under MgmtGroup1, looking for machines where disk encryption has not been applied. They'll then show up in compliance reports.


Azure Cost Analysis
One important aspect of cloud computing is being able to manage costs, even though it's often pay-as-you-go, you get charged for your resource consumption. You want to make sure that you are tracking it and identifying where most of those charges are coming from. So we can do that by looking at Azure cost analysis.
To get started here in the portal, I'm going to go into Subscriptions, because billing occurs at the subscription level.
So I've got a Pay-As-You-Go subscription listed here, I can see the Current cost, and I can see that it's Active.

[Video description begins] He points to the following row entry, which includes: Subscription name: Pay-As-You-Go, Current cost: CA$1.48, and Status: Active. [Video description ends]

So I'm going to click directly on the subscription.
Because when I do that, I get this new navigation bar on the left, and one of the things I see is Cost analysis, which is precisely what I want to do right now.
Knowing that I have a specific dollar amount based on my Azure usage is not enough. I want to know how it's broken down. So here for example, we can see it's Canadian dollars. It's only $1 and 48 cents. And we can see that it's charted here. I'll just scroll little bit over to the right according to days of the month as we can see, and it looks like the usage has been increasing since about March 4th. Now, if I scroll down a little bit, we can also see the Service name breakdown. Well, where is that money being spent? Is it virtual machines? Is it storage? Is it databases? Well, we can see by looking under Service name at this graph, that we've got the bulk of it coming from SQL database.
Little bit coming from virtual machines and storage. And we can also then see it's broken down here by Location, well, which regions. We might have different Azure administrators using our Azure account to deploy resources in different Azure regions. So I can see the cost here per region that looks like all of the cost is stemming from the US East region. Now, depending on how you use resource groups to organize related Azure resources it will determine how useful it is to look at the cost per resource group.
Often many organizations will create resource groups for specific apps that might have multiple components like a web server type of app. And it might have some custom code. It might have a back-end database. All of those resources might be organised in one resource group and then you can see the charges per resource group. So basically, in that example, you'd be able to see the charges per web application. Or you might have resource groups for different departments, if that make sense in your organization or different projects, and then deploy resources into them accordingly. And again, you'll then be able to see the cost breakdown per resource group. It really depends on what your requirements are. And you can also click the Export button to export this information as a PNG type of graphic file or as Excel data or as a CSV file.
And then you can download the charts. You can also schedule the export of this information on a periodic basis maybe to a storage account for business analysts that might require this type of cost breakdown.
Now, we can also get a little more granular at the top by clicking Cost by resource.
Now, why is this useful? Because it's showing us the individual Azure resources, like specific SQL servers that were deployed specific virtual machines, disks for virtual machines, storage accounts, and so on.
And we have a cost associated with it over in the right hand column.
So it's just a way to really drill right down to the specific deployed resources that are incurring costs in your Azure account through your subscription.


Azure Budgets
While it's important to analyze costs and pore over the numbers, it's also equally important to save time and get notified when costs on a monthly basis exceed a certain value. And that's where Azure budgets come in as being useful.
So I'm going to click here in the portal on Subscriptions. I see, I have a Pay-As-You-Go subscription, which I'm going to click on.
Now we know that we can click on Cost analysis, and of course, that is very important.
But we're talking here about getting notified when a certain threshold value is exceeded. So for that, we're going to go to Budgets over here on the left.
Now we don't have any budget shown on the right.
So I'm going to go ahead and click Add. The first thing you have to think about is the scope to which you want the budget applied. What do you want to look at costs for, do you want to look at it for your entire subscription?
I can click Change scope and from here, I could switch to a different directory.

[Video description begins] A blade called "Select scope" opens. It includes a button labeled "Cancel" and a list of items. The list contains the following node: Quick24x7 (root). [Video description ends]

Right now, I'm using the Quick24x7 Azure AD tenant. And we could also drill down, for example, under our root management group for our tenant. So I can click that.

[Video description begins] He clicks the node "Quick24x7 (root)" and a subnode called "MgmtGroup1" appears. [Video description ends]

I can then click down on a management group, perhaps that's the level where I want to apply my budget.

[Video description begins] He clicks the subnode "MgmtGroup1" and a subnode called "Pay-As-You-Go" appears. [Video description ends]

But I can also click on the management group and then go down under my subscription, and even go down into a specific resource group.

[Video description begins] He clicks the subnode "Pay-As-You-Go" and several subnodes appear. [Video description ends]

So you have all of these scopes that you can apply your budget to. I'm just going to Cancel out of there. We're going to leave it directly on our Pay-As-You-Go subscription.

[Video description begins] Two drop-down list boxes appear adjacent to the "Add filter" button. [Video description ends]

I could also click Add filter, because maybe what I want to do is filter by something specific. So for example, I could specify that I want to look at a type of service I want to filter on. Or maybe a ResourceLocation, so we can choose a specific region if we wanted to filter on that.

[Video description begins] In the first drop-down list box he selects the "ResourceLocation" option. [Video description ends]

However, I'm going to click the x to remove the filter, I don't want to apply that.

[Video description begins] He removes the filters. [Video description ends]

Next thing I need to do here is, I need to specify a unique name for the budget.

[Video description begins] The "Create budget" page also includes a section called "BUDGET DETAILS". This section includes a text box labeled "Name", a drop-down list box labeled "Reset period", and another text box labeled "Amount ($)". [Video description ends]

So I'm going to call this Budget1.

[Video description begins] He types the following text in the "name" text box: Budget1. [Video description ends]

Now the Reset period will be on a monthly basis, but I could change that to whatever time period makes the most sense for me. I could set an Expiration date.

[Video description begins] The following option is preselected in the "Reset period" drop-down list box: Billing month. [Video description ends]

I'm going to leave those default settings, and I'm going to set the budget amount. For example, I want to know once we're exceeding $500 a month. Now to help along with this, down below, I can see last month's costs. And I can see the past six months' cost, and the maximum monthly forecast cost. So based on those small values, perhaps 500 is a little large. So maybe for example, if we get above a 100, which might be indicative of abnormal cloud usage in our particular case, then we can put that value in.

[Video description begins] He types the following text in the "Amount ($)" text box: 100. [Video description ends]

Now having done that, I'm going to scroll down and click on the Next> button. Now up at the top, if I scroll back up, we can set alerts.

[Video description begins] A page called "Set alerts" opens. It includes a table with several columns and one row entry. The column headers include "% of budget" and "Action group". Under the "% of budget" column header the row entry is a text box. Under the "Action group" column header the row entry is a drop-down list box. Under the table there is a link called "Manage action group". [Video description ends]

So when we get to a percentage of that value, let's see when we get to 80% of our $100, then we want to have something happen.

[Video description begins] He types the following text in the row entry under the "% of budget" column header: 80. [Video description ends]

So we can work with an Action group. Now the Action group allows me to specify things like, what you want to occur. Now, do you want to trigger some kind of code, or do you want to trigger some kind of a notification? And I even have a Manage action group option here. If I click on that, it'll take me in where I can see what I could do, what could be triggered when 80% of our budget is reached.

[Video description begins] A blade called "Manage actions" opens. It includes a button labeled "Add action group" and a table with several columns and one row. The column headers include "Action group name" and "Short name". [Video description ends]

So I could click Add action group, maybe what I want to do send something like an SMS text message.

[Video description begins] A blade called "Add action group" opens. It includes two text boxes labeled "Action group name" and "Short name" and a button labeled "OK". [Video description ends]

So I'm going to call this AG1 for action group 1. Same thing for the Short name, which is a required field, as indicated by the red asterisk.

[Video description begins] He types the following text in the "Action group name" and "Short name" text boxes: AG1. [Video description ends]

And down below, what I want to do is Select an action type.

[Video description begins] The blade also includes a table with several columns and one row. The column headers include "Action name" and "Action type". The row entry in the "Action name" column is a text box. The row entry in the "Action type" column is a drop-down list box. [Video description ends]

In this case, it's going to be Email/SMS/Push/Voice.

[Video description begins] He selects the following option in the drop-down list box in the "Action type" column: Email/SMS/Push/Voice. A blade called "Email/SMS/Push/Voice" opens. It includes an "OK" button and a radio button labeled "SMS". He selects the radio button and the following text boxes get enabled: Country code and Phone number. [Video description ends]

And let's say that I want to send SMS text notifications. So it's country code, and I could just fill in the number. After I've done that, I would then go down and click OK. Now, of course, it wants me to fill in a valid phone number. So we'll just change it into something else. All 5s in a phone number is actually reserved and used for works of fiction like movies and television shows. So I'm just going to go ahead and leave that as it is for SMS. So we're just basically adding this specific type of notification. And I'm just going to call this TextMsgNotify. This is in my action group AG1, and I'll click OK.

[Video description begins] He types the following text in the text box in the "Action name" column: TextMsgNotify. [Video description ends]

And essentially, we want to be able to use that within our budget.

[Video description begins] The table on the "Manage actions" blade now has two row entries. [Video description ends]

So it's showing up in the list. I'm just going to go ahead and select it to get back to where we were in configuring our notifications.

[Video description begins] He clicks the new row entry, which includes: Action group name: AG1. A blade called "AG1" opens. [Video description ends]

So I'm just going to scroll back here, we've got AG1, and let's just go back here. So that's where we want this to be showing up.

[Video description begins] He navigates back to the "Set alerts" page in the "Pay-As-You-Go" blade. He points to the drop-down list box in the "Action group" column of the table. He then selects the "AG1" option in the drop-down list box. [Video description ends]

And after a moment, you might have to go to the previous screen and back, you'll see the group. So here it is, AG1. Down below, I can also specify, of course, the recipients' email. So I'm just going to scroll over to the right so I can see my scroll bar, there it is.
So maybe, I've got a group called admins@quick24x7.com, and I want them to receive notifications, so in addition to our SMS text messaging. Okay, so having done that, I'm just good to go down and create the budget.
And there you have it, the budget creation succeeded, we now have our budget called Budget1.
And we can expect to be notified when we get to 80% of our budgeted value in the currency specified for the subscription, in this case, CA$100.00.


Azure Invoices
While the use of cloud computing can mean less capital expenditures for IT services. Such as, not having to acquire a lot of on-premises physical computing hardware. We still have to be able to track charges in the cost on a per-use basis by reviewing invoices.
So to get started here in the Azure portal, I'm going to click on Subscriptions.
Now, the subscription of course is tied to an Azure AD tenant which is shown here as being Quick24x7. My subscription is called Pay-As-You-Go. I'm going to go ahead and click on it to open up this navigation bar which gives me options related to my subscription.
One of which, if I scroll down under Billing, is Invoices.
Now, we can see on the right that we have the Last 3 months worth of invoices shown. We can see the Billing Periods, starting and ending. We can see the date of the invoice. And we can also see the Amount. And we can see the Type, in this case it's for Azure Services. Now we also, if we scroll to the right, have the option of downloading each of these. Now, if I click on the download link, it's a CSV file format download or it could be a PDF.

[Video description begins] He clicks the download link of the third row entry and its corresponding blade opens. [Video description ends]

Now, this could be important for accounting reasons and certainly for business expense or taxation reasons. So this is something that we can do by looking at the invoices. But notice also that each of these specific dollar amounts for each invoice is a hyperlink, it's blue.

[Video description begins] He points to the row entries in the "Amount" column. [Video description ends]

And so, if I were to click directly on it, I could actually jump into the Cost analysis for that particular invoice.

[Video description begins] He clicks the third row entry in the "Amount" column and a blade called "Cost analysis" opens. It includes a table with several columns and several rows. The column headers include "Service name", "Service tier", and "Cost". The blade also includes a date drop-down list box. [Video description ends]

So I can see for example, looks like premium solid state drive or ssd managed disks. Were really the bulk of the cost for that particular invoice within that time frame.

[Video description begins] He points to the first row entry in the table. [Video description ends]

Followed by, it looks like, virtual machines. So we can see how this breaks down. We can even filter it.

[Video description begins] He points to the second row entry in the table. [Video description ends]

If I want to click on Filter items, we could start typing things in and then filtering based on that.

[Video description begins] He points to a text box labeled "Filter items". [Video description ends]

So for example, if I put in ssd, all we're doing now is looking at SSD charges related to the time frame listed up above.

[Video description begins] He types "ssd" in the "Filter items" text box and the row entries in the table get filtered. [Video description ends]

So I'm just going to go ahead and click the X to close out of that. Now, it's one thing to come here and view the invoices. But we want to try to avoid having to do things in the sense of thinking of doing it. We want to automate things. And we can click the Email Invoice option up at the top.

[Video description begins] A blade called "Email invoice" opens. It includes a button labeled "Opt In". [Video description ends]

Currently it says, You are not receiving emailed invoices. Well, that's something I want to do. So I'm going to click on Opt In to make that happen.

[Video description begins] A blade called "Email statement notice" opens. It includes a button labeled "Agree". [Video description ends]

I acknowledge that it's going to be sent via non-encrypted email. That's fine, I Agree.

[Video description begins] The following pop-up box appears: Opt-in Complete. He closes the "Email invoice" blade. [Video description ends]

So this could be an important aspect of your configuration when it comes to having your invoices emailed to you automatically. The other thing to think about is we have this Access Invoice button up at the top. Now, this is currently On.

[Video description begins] A blade called "Access to invoice" opens. [Video description ends]

 And it would apply for example to users in your subscription that would have roles such as the the billing reader role. So we have that option available as well.

[Video description begins] He closes the "Access to invoice" blade. [Video description ends]

Also notice that the default here, Timespan is listed as being 3 months. But you can click on that and change it.
So for example, I can set it to the Last year if that's what I want to see.
And sure enough, we now see our invoices for the Last year.


Azure Resource Groups and the Portal
In Microsoft Azure, a resource group is a way to organize related resources together, such as creating a resource group for a web application and deploying all of the underlying resources that make that web app work within the resource group. Or maybe creating a resource group for a department. And when that department in the organization deploys resources, they deploy them into that resource group, or you might do it for a project. Either way, it allows us to track billing for resources in that resource group. It also allows us to track usage of items or see deployments within that resource group.
So here in the portal, let's get started by creating a resource group, we're going to do that by beginning within the Resource groups view. So in the upper left, I'll open up the navigator and I'll click Resource groups.
And you're going to see any existing resource groups, you'll see any subscriptions that they may be tied to, and their geographical location.
Now, if you click on a specific resource group and open up its properties blade, you'll be able to see things like Tags, you could tag it.
You can also see any deployments that were made into that resource group and the state of them, whether they succeeded or whether they failed. 
You can also even see Cost analysis and Cost alerts and Budgets per resource group, so at the resource group level.
However, in this case, we're going to create a new resource group, so back here at my main Azure portal page, I'll click Create a resource.
Now from here, I'm just going to search for resource group, and there it is, Resource group. So, I'm going to go ahead and click the Create button, and then I have to fill in a few little details.
Basically I have to give it a name and specify the region where I want to create it.
And, of course, tie it to a particular Subscription, of which I have only one, the Pay-As-You-Go subscription.

[Video description begins] He selects the "Pay-As-You-Go" option in the "Subscription" drop-down list box. [Video description ends]

I'm going to call this Rg2, Resource group 2, and it's going to be, let's see, in a different location, I'm going to put this one in Canada Central.

[Video description begins] He types the following text in the "Resource group" text box: Rg2. [Video description ends]

I'm doing that because I know that most of my resources will be deployed in that same type of region.

[Video description begins] He selects the "(Canada) Canada Central" option in the "Region" drop-down list box. [Video description ends]

Then I'll click next for tags.

[Video description begins] The "Tags" step gets selected in the first section and its corresponding page opens in the second section. It includes a table with three columns and one row and a button labeled "Next : Review + create >". The column headers include Name and Value. The row entries under both these column headers are text boxes. [Video description ends]

Now we could specify a tag key and value pair. For example, if this is going to be tied to a project, we can specify a Project and a Value, let's say project ABC.

[Video description begins] He types the following text in the row entry in the "Name" column: Project. He types the following text in the row entry in the "Value" column: ABC. [Video description ends]

 But bear in mind, depending on how you plan on using this, you might just name the resource group project ABC, so really depends how you want to use it.

[Video description begins] The "Review + create" step gets selected in the first section and its corresponding page opens in the second section. It includes a button labeled "Create". [Video description ends]

At any rate, I'm going to click the next button, validation is passed, I'm going to click Create, and after a moment it will create our resource group.

[Video description begins] The following pop-up box appears: Resource group created. It includes a button labeled "Go to resource group". [Video description ends]

I'm going to click the Go to resource group link.

[Video description begins] A blade called "Rg2" opens. It is divided into two parts: navigation pane and content pane. In the navigation pane, an option labeled "Overview" is selected and its corresponding page is open in the content pane. [Video description ends]

Well, actually, before we do that, let's go back to the Resource groups view, just to shows up there.

[Video description begins] He navigates to the "Resource groups" blade. [Video description ends]

We know it will, so we just have to, click Refresh, maybe a few times, and wait a moment and then we'll see resource group show up, resource group 2, Rg2 show up.

[Video description begins] A new row entry for Rg2 gets added to the table. He clicks this row entry and the "Rg2" blade opens again. [Video description ends]

We can click on it and then start to explore it.

[Video description begins] He selects an option called "Deployments" in the navigation pane and its corresponding page opens in the content pane. It includes a table with several columns and no rows. [Video description ends]

Now, of course, it's not really being used at this point, you could go under Deployments and you would see that there's no deployments that have been sent here because it's newly created. But when you deploy new resources, for example, if I were to go, let's say to the All resources view, not that we have to do it this way, but we can.

[Video description begins] He opens the navigator and selects an option called "All resources". The "All resources" blade opens. It includes a button labeled "Add". [Video description ends]

And, if I were to click the Add button, let's say we want to add a virtual machine, Windows Server 2016 Datacenter.

[Video description begins] A blade called "New" opens. He selects an option called "Windows Server 2016 Datacenter". A blade called "Create a virtual machine" opens. It includes a "Resource group" drop-down list box. [Video description ends]

Part of that deployment is going to be specifying the resource group into which we want to deploy it. So, I can see I've got a drop-down list here for resource groups, and I could specify the Resource group, in this case, Rg2, where I want this resource deployed.


Azure Resource Groups and the CLI
In this demonstration, I'm going to use the Azure CLI to manage Azure resource groups.
But first, here in the portal, I've navigated to the Resource groups view where I can see, I currently have two resource groups.

[Video description begins] He clicks the second row entry, which includes: Name: Rg1. A blade called "Rg1" opens. It is divided into two parts: navigation pane and content pane. In the navigation pane, an option labeled "Overview" is selected and its corresponding page is open in the content pane. He selects an option called "Deployments" in the navigation pane and its corresponding page opens in the content pane. It includes a table with several columns and two rows. The column headers include "Deployment name" and "Status". [Video description ends]

And if I click on any one of them to open them up, I could click on Deployments to open up that blade to see any items that were deployed into that resource group. Whether it Succeeded or whether it failed.

[Video description begins] He points to the "Status" column. [Video description ends]

And I can even perform a Cost analysis against the resource deployments inside of this resource group and so on.

[Video description begins] He selects an option called "Cost analysis" in the navigation pane and its corresponding page opens in the content pane. [Video description ends]

So let's go to the CLI and let's start managing resource groups. The first thing I'll do is run az group -h.

[Video description begins] He opens the command prompt window. The following prompt is displayed: D: \>. [Video description ends]

Now on help, I'm working with resource groups.

[Video description begins] He executes the following command: az group -h. The output displays a list of groups, subgroups, and commands. The prompt does not change. [Video description ends]

And it does say here that this allows me to Manage resource groups and template deployments. Perfect. So the next thing I'm going to do is get the next level command, which in this case to create a resource group would be create, so az group create. Now, if I need more help, I can run az group create -h to learn more about any parameters that I might need to pass on the command line to work with this. So such as --location or -l to specify the location or the region.

[Video description begins] He clears the screen. He executes the following command: az group create -h. The output displays a list of arguments and global arguments. The prompt does not change. [Video description ends]

And it even says, if you want to know how to type in those items, you could see the values by typing in az account list-locations. Of course, we'll have to specify the name and so on. So I'm going to go ahead and clear the screen with cls and I'm going to do this. I'm going to run az group create -l for location, in my case canadaeast. And I'm going to call this resource group -n Rg2.

[Video description begins] He executes the following command: az group create -l canadaeast -n Rg2. The output displays that the provisioning succeeded. The prompt does not change. [Video description ends]

Now after I've done that, I should get some returned JSON output which is indicative of the fact the provisioning succeeded, which it says it did. So I'm going to go ahead and run az group to list my resource groups.

[Video description begins] He executes the following command: az group list. The output displays a list of resource groups and their properties. The prompt does not change. [Video description ends]

However, it lists all of the properties and it's a little hard to digest that output. So what I could do is run az group list, I could pipe it to the grep line filtering tool. And I could tell it I'm looking for the name property.

[Video description begins] He clears the screen. He executes the following command: az group list | grep name. The output reads: 'grep' is not recognized as an internal or external command, operable program or batch file. The prompt does not change. [Video description ends]

But here it says 'grep' is not recognized. Well, that's because I'm running the Azure CLI locally on my Windows machine as opposed to within a Cloud Shell. This is not a Linux host. I don't have the Linux subsystem for Windows installed, there's no way to grep this. So what I could do is also pipe that instead to the Windows find command. Now, in this case I'd have to specify that the name be within quotations in order for that to work correctly.

[Video description begins] He executes the following command: az group list | find "name". The output displays the names of 3 resource groups. The prompt does not change. [Video description ends]

And once I do that, it will show me just the names of the accounts. Now the next thing I could do also is use the az group list, I could use the --query parameter. This is built into the Azure CLI, it's probably the best way to do it. And because we have an array of items, in this case, we have three resource groups, we have to refer to the fact that we have more than one. And I can specify that we have an array or a collection of them by specifying open and close square brackets. Then I separate that reference from the property, in this case, name with a dot so .name. And now we'll see just the names of those specific resource groups.

[Video description begins] He executes the following command: az group list --query [].name. The output displays the names of 3 resource groups within square brackets. The prompt does not change. [Video description ends]

Now the thing is though, you can also delete a resource group. For example, here I'm going to run az group delete, and in this case, -n for name. Let's delete our first one, resource group 1, Rg1. But let's go back and check it out in the portal before we actually press Enter.

[Video description begins] He switches back to the Microsoft Azure portal. [Video description ends]

So back here in the portal, I want to go Home and I'm going to go to the All resources view. And I see that I've got two storage account here deployed in the Rg1 Resource group.

[Video description begins] He opens the "All resources" blade. It includes a table with several columns and three rows. He points to the second and third row entries. [Video description ends]

Okay, so they still exist. Now I could have seen that of course by going into Rg1, the Resource group, and then going into Deployments. I would see that those two storage accounts had successfully been deployed here. All right, having that in mind, let's go back to the CLI.

[Video description begins] He switches back to the command prompt window. [Video description ends]

And I'm going to press Enter to delete resource group 1 or Rg1, are you sure you want to do it?

[Video description begins] He executes the following command: az group delete -n Rg1. The screen prompts to confirm if you want to perform this operation. [Video description ends]

Yes, put in the letter y, and I'll press Enter, and it says it's Running. Now even while that's in the midst of running here back here in the portal, I've refreshed my All resources view. And notice that our two storage accounts have been removed.

[Video description begins] He switches back to the Microsoft Azure portal. The table on the "All resources" blade now has only one row entry. [Video description ends]

So the message here is clear, when you delete a resource group, you're also removing all of the resources deployed into it.

Azure Resource Groups and PowerShell

[Video description begins] Topic title: Azure Resource Groups and PowerShell. The presenter is Dan Lachance. [Video description ends]

In this demonstration, I'm going to use PowerShell to create an Azure resource group.

[Video description begins] The PowerShell window is open. The following prompt is displayed: PS /home/danlachance72>. [Video description ends]

So to get started here, I'm going to run get-command in my Cloud Shell, and I'm going to use an * followed by the text resourcegroup. And then after that, I'm going to put in another *. So in other words, showing PowerShell cmdlets that contain the text resource group in their name. And we can see that we have quite a few of them.

[Video description begins] He executes the following command: get-command *resourcegroup*. The output displays a list of cmdlets that contain 'resource group' in their name. The prompt does not change. [Video description ends]

I'm interested in building a new one, and I can see we have the New-AzureRmResourceGroup PowerShell cmdlet, so I'm going to go ahead and use that. And, I am going to clear the screen, I'm going to run new-azurermresourcegroup. I'm going to specify the name. In this case, I want to build a resource group called Rg2, resource group 2. And I'm going to set the location with -location in this case to the canada east region. So I'm going to use the new-azurermresourcegroup cmdlet -name. I want to call this Rg1 for resource group 1, and -location, I'm going to set in quotes to canada east. I'm using quotes because there's a space between canada and east within that region name, and I'll press Enter.

[Video description begins] He executes the following command: new-azurermresourcegroup -name Rg1 -location "canada east". The output displays that the provisioning has succeeded. The prompt does not change. [Video description ends]

After a moment we can see the ProvisioningState of having created resource group one or Rg1, is that it Succeeded. We can verify this by retrieving information get-azurermresourcegroup. When we do that it returns our resource groups including the one that we just created, Rg1.

[Video description begins] He executes the following command: get-azurermresourcegroup. The output displays the three resource groups and information about them. The prompt does not change. [Video description ends]

Notice the property tied to that is ResourceGroupName at least as it's labeled here. So I'm going to clear the screen, we're going to use the up arrow key to bring up our get command line. I'm going to pipe this to select and we are going to tell we want to select only the resourcegroupname property. So then all we are seeing are the names of our specific resource groups.

[Video description begins] He executes the following command: get-azurermresourcegroup | select resourcegroupname. The output displays three resource group names. The prompt does not change. [Video description ends]

Now we also have the option of removing a resource group. But before we do that, why don't we minimize our Cloud Shell here in the portal, and let's go to the Resource groups view where we will see any resource groups, there are three here.

[Video description begins] He switches to the Microsoft Azure portal. He opens the "Resource groups" blade. It includes a table with several columns and three rows. He points to the second and third row entries. [Video description ends]

Including Rg1 and Rg2. So what I want to do is issue a command to delete Rg2 using PowerShell. So back in our command shell, we're going to go ahead and do that by using the remove-azurermresourcegroup cmdlet. And I'm going to tell it the name in this case is going to be Rg2. It says are you sure you want to remove that resource group?

[Video description begins] He executes the following command: remove-azurermresourcegroup -name Rg2. The screen prompts to confirm the removal of the resource group 'Rg2'. [Video description ends]

I'll type in the letter y for yes, just bear in mind that when you are removing a resource group, you are also removing the resources deployed into it.

Moving Azure Resources

[Video description begins] Topic title: Moving Azure Resources. The presenter is Dan Lachance. [Video description ends]

You can use the portal to move Azure resources from one resource group to another. And remember that resource groups allow us to organize related cloud components, such as all of those underlying items required to support a web app. Or maybe we simply want to deploy virtual machines into a resource group called Project X, and so that we can track it by project, including at the building level. Either way, let's go ahead and do a move.

[Video description begins] The Microsoft Azure portal is open. [Video description ends]

To get started here, let's go to the Resource groups view. I've got two resource groups, Rg1 and Rg3.

[Video description begins] In the "Azure services" section he clicks the "Resource groups" option. The "Resource groups" blade opens. It includes a table with three columns and three rows. The column headers are Name, Subscription, and Location. He points to the second and third row entries, which include: Name: Rg1 and Name: Rg2. [Video description ends]

Let's go look at our Storage accounts, because we're going to move a storage account from one resource group to another.

[Video description begins] He navigates to the home page. In the "Azure services" section he clicks an option called "Storage accounts". A blade called "Storage accounts" opens. It includes a table with several columns and two rows. The column headers include Name, Resource group, and Location. [Video description ends]

It doesn't have to be a storage account, that just happens to be what we're using as our example. So I've got a storage account, and we can see right here, it's in a Resource group named Rg1, we're going to move it to Rg3.

[Video description begins] He points to the second row entry, which includes: Name: storacct33445, Resource group: Rg1, and Location: Canada Central. [Video description ends]

We might do this as part of a reorganization effort. So I'm going to click on the name of the storage account to open up its details.

[Video description begins] He clicks the second row entry and a blade called "storacct33445" opens. It is divided into two parts: navigation pane and content pane. In the navigation pane, an option labeled "Overview" is selected and its corresponding page is open in the content pane. It includes a button labeled "Move". [Video description ends]

And in the Overview blade, I have a Move button. So I could choose Move and move it to another resource group within the current subscription, or in another subscription.

[Video description begins] He clicks the "Move" button and two options appear: Move to another resource group and Move to another subscription. [Video description ends]

I'm going to choose Move to another resource group.

[Video description begins] A blade called "Move resources" opens. It includes a drop-down list box labeled "Resource group" and a button labeled "OK". [Video description ends]

All I have to do here at the bottom is specify the target Resource group that I would like to move this item to, the Storage account. So I'm going to select Rg3.

[Video description begins] He selects the "Rg3" option in the "Resource group" drop-down list box. [Video description ends]

I'll turn on the checkmark that says, I understand that tools and scripts associated with move resources might not work because I'm moving it to a different location. And I also might have to update them with the new resource ID.

[Video description begins] He switches to a new tab in the browser. The Microsoft Azure portal is open. The "storacct33445" blade is open. An option called "Properties" is selected in the navigation pane and its corresponding page is open in the content pane. It includes a field labeled "Storage account resource ID". [Video description ends]

So I've opened up another browser window here for my storage account, the one that we're moving, and I've gone to the Properties blade, where we can see the Storage account resource ID. Now, we're going to go ahead and verify that it is changed after we move it to our new resource group. Notice that part of that account resource ID includes the resource group name in the path. So let's go back over, we've checked that checkmark. Let's click OK to actually perform the move. Just make sure you're patient as the move occurs, especially if you're moving more than one resource at a time.

[Video description begins] He switches to the previous tab where the "Move resources" blade is open in the Microsoft Azure portal. He clicks the "OK" button. [Video description ends]

So if I click my notification bell icon in the upper right, we can still see it's moving that storage account resource. While that's happening, let's go back into our Resource groups view. And I'm going to open up an existing resource group, because what you can also do is choose to move at the resource group level.

[Video description begins] He opens the "Resource groups" blade. He selects the second row entry, which includes: Name: Rg1. The "Rg1" blade opens. It is divided into two parts: navigation pane and content pane. In the navigation pane, an option labeled "Overview" is selected and its corresponding page is open in the content pane. It includes a button labeled "Move". [Video description ends]

What does this do? This will allow you to move all of the deployments associated with the resource group.

[Video description begins] He clicks the "Move" button and two options appear: Move to another resource group and Move to another subscription. He selects the "Move to another resource group" option. A blade called "Move resources" opens. It includes a drop-down list box labeled "Resource group" and a button labeled "OK". It also includes a table with two columns and one row. The column headers include "Resources to move" and "Type". The row entry includes, Name: storacct33445. [Video description ends]

And we can see currently, it still registers that our storage account is a part of this resource group. If you had many resources deployed here, they would all be listed. And you can see, you can select or deselect the ones and choose the target resource group to move them to. So you can do it at the resource group level or from the individual resource level.

[Video description begins] He closes the "Move resources" blade. [Video description ends]

Okay, before too long, we'll see that the moving of the resource is now complete. So we looked at the original storage account ID prior to the move. So the ID itself will not be changed, this numeric value, it starts with the 048b, it ends with 2109. I've opened up another web browser window after the move, so looking at the same resource, and the ID itself in terms of the numeric value portion has not changed. What's changed is the reference in the overall resource ID for the storage account. The reference to the resource group, here it's Rg3, and originally, it existed in Rg1. So as was suggested when we were doing this, you know, if you have any programmatic code or scripts that refer to the old resource ID, make sure they change to the new one.


Resource Group Deployments
You can view past resource deployments into an Azure resource group by opening up its properties in the portal, which we're going to do here. 
So to start with, let's go to the Resource groups view where we're going to see the resource groups within this subscription.

[Video description begins] In the "Azure services" section he clicks the "Resource groups" option. The "Resource groups" blade opens. It includes a table with three columns and three rows. The column headers are Name, Subscription, and Location. [Video description ends]

So for example, Rg1, resource group 1. If I click to open that resource group in the Overview blade, I'll see any resources currently deployed in that resource group.

[Video description begins] He clicks the second row entry, which includes: Name: Rg1. The "Rg1" blade opens. In the navigation pane, an option labeled "Overview" is selected and its corresponding page is open in the content pane. It includes a table with two columns and no rows. The column headers are Name and Type. It also includes a button labeled "Redeploy". [Video description ends]

Now here it says there are No resources to display. However, if I click on the Deployments item in the navigation bar, I can see that there have been deployments to this resource group in the past. So either those resources were deleted, or they were moved to another resource group.

[Video description begins] He selects an option called "Deployments" in the navigation pane and its corresponding page opens in the content pane. It includes a table with several columns and two rows. The column headers include "Deployment name" and "Status". [Video description ends]

So let's close this resource group for a moment and let's go into our second resource group here called Rg3.

[Video description begins] He navigates to the home page and opens a blade called "Rg3". It is divided into two parts: navigation pane and content pane. In the navigation pane, an option labeled "Overview" is selected and its corresponding page is open in the content pane. It includes a table with three columns and one row. [Video description ends]

So again in the Overview part of that, we do see there is an active object here within this resource group. It's a storage account.

[Video description begins] He points to the row entry, which includes: Name: storacct33445 and Location: Canada Central. [Video description ends]

And in the same way, if we go to the Deployments part, we'll see see that there are no deployments listed to this.

[Video description begins] He selects an option called "Deployments" in the navigation pane and its corresponding page opens in the content pane. It includes a table with several columns and no rows. The column headers include "Deployment name" and "Status". [Video description ends]

Well, how can that be when we can see there's a storage account currently assigned to Rg3? That would be because it must have been moved from another one. So let's go back into our initial resource group, Rg1, let's go the Deployments section.

[Video description begins] He navigates to the home page and opens "Rg1" blade. He selects an option called "Deployments" in the navigation pane and its corresponding page opens in the content pane. [Video description ends]

Now here I can see that there was a template deployment for one or more resources. We don't quite know yet, into this resource group on a specific date and time.

[Video description begins] He points to the first row entry, which includes: Deployment name: Microsoft.Template. He clicks the row entry, which includes: Deployment name: Microsoft.Template. A blade called "Microsoft.Template" opens. It is divided into two parts: navigation pane and content pane. In the navigation pane, an option labeled "Overview" is selected and its corresponding page is open in the content pane. It includes a "download" link. [Video description ends]

Now if I click on the link for that template, I can actually Download the details related to that template, it's a zip file.

[Video description begins] The zip file opens in the file explorer window. It includes a file called "deployment.json". [Video description ends]

I'm just going to choose Open to open it up directly, and it going to open up the deployment.json file. This gives you the details about what in that template was deployed to the resource group.

[Video description begins] The file contains several lines of code. [Video description ends]

Unless we scroll down through here, it looks like it was a storage account, that looks like the only thing that was deployed here. So we can learn that quite easily by viewing that information.

[Video description begins] He closes the deployment.json file. He switches back to the browser. [Video description ends]

Now what's equally interesting about that, if I go back here to the Deployments, is if I select an existing deployment.

[Video description begins] He navigates back to the Deployments page in the "Rg1" blade. [Video description ends]

So we're here have a deployment of the storage account into this resource group. We have a Redeploy button up at the top.

[Video description begins] He selects the second row entry in the table, which includes: Deployment name: Microsoft.StorageAccount. [Video description ends]

And it means what it says, based on the selection, you can deploy that item again. Now you would only do that if it doesn't already exist. So for example, I'm going to click Redeploy. So this is what you would normally see if you were deploying from a template.

[Video description begins] A blade called "Custom deployment" opens. It includes a drop-down list box labeled "Resource group", a text box labeled "Storage Account Name", and a button labeled "Purchase". The following text is populated in the "Storage Account Name" text box: storacct33445. [Video description ends]

So I can select a Resource group where I want to deploy this item. So for example, Rg3 or I can create a new resource group, whatever the case might be. Now interestingly, even though it was originally deployed into Rg1, this storage account was moved to another resource group. And so it doesn't actually exist here anymore. So I'm going to deploy it back into Rg1. What I'm doing is creating a new storage account from that original deployment. I would do that if I want to use a lot of the settings from it as opposed to deploying a brand new storage account from scratch.

[Video description begins] He selects the "Rg1" option in the "Resource group" drop-down list box. [Video description ends]

It's the only reason you would do this. So assuming I'm okay with all of these settings as per my original deployment. Then down at the bottom, I could choose that I agree to the terms and conditions stated above. The only thing I'll have to account for though is the name of the storage account. If that storage account is still being used somewhere, then the name isn't unique. So I'll just add a 2, let's say to the end of it, to make sure that the Storage Account Name is unique. I'll choose Purchase.
And let's see if it validated, excellent. So the deployment is currently in progress. What we're doing is redeploying a storage account into this resource group based on a past deployment. Of course, the original storage account is no longer here. It's in Rg3. And after a moment, if I go look at my notification bell icon in the upper right, it looks like the resource deployment succeeded. Let's go back and look at the deployments here for our resource group.
And let's take a look at the Overview here where we can see active current items here. And we can see that there is now a storage account that was deployed into Rg1 and we redeployed it from a past deployment.


Resource Group Cost Analysis
In Azure, you can view and track your costs based at the subscription level.
So for example, here in the portal if I go to my Subscriptions, and if I click on an active subscription, when I open it up, I'll have the option of clicking Cost analysis over on the left.
And then I'll see all the costs associated with this subscription. Of course, I can change the time period or time frame for which that is representative of, but we have the option of doing that. But what we're talking about here is doing a cost analysis at the resource group level. Now think about how you might use a resource group in Azure, you might use it for a project, so you might have a project called Project X. So you'd create a resource group with that same name and deploy project resources into it. That way you have a single unit of management in the resource group and also for tracking costs. Let's take a look at that.
So I'm going to go into my Resource groups view here in Azure, and I'm going to open up an existing resource group I've got named Rg1, so I'll click on it.
And what I want to do is scroll down in the navigation bar and click on Cost analysis to open that blade.
So what's going to happen is we're going to see a cost breakdown for resources deployed only into this resource group. And we can see it's coming up with the numbers listed here. So we have our standard charts where we can scroll down below and see it broken down by service. So it looks like we've got SQL databases eating up the lion share of the cost in this particular case for this time frame, the location here, Canada East. So we have all the normal stuff that we would normally see we can even filter. I could add a filter here for anything that I'm interested in such as a specific service type or Service name in this case. So I could open up the list and choose that I'm only interested in sql database.
And I could filter based only on sql database. So then the cost analysis will update to show me only that. And as usual, we also have the option of exporting. So for example, I could choose to Export.
Let's see a PNG graphic file. Let's go ahead and do that. And I'll click Download charts. And once that's done, I'll just click Open down at the bottom of the screen. And we can see here it's opened it up in Paint on my machine, but we essentially have the same type of information that we can see visually directly in the Azure portal. Let's go back and export that as, let's say a, document in the format of Excel. So I'm going to choose Excel and choose Download data. And then I'll just go ahead and click on Open. So when you open it in Excel, you're going to have two sheets. You could have a worksheet, which is the summary that you're looking at here and also the actual data itself.
So not only can we work with our cost analysis at this level at the resource group level, but we can also go into Cost alerts over on the left and Add an alert and notification when the costs for resources deployed into this resource group get to a certain level.
So I could add a filter. I'm just going to leave it on Rg1, I'm not going to change the scope. And I'm going to call this Rg1Budgets1.
Now, the idea here is that we want to be alerted when costs exceed a certain value. So I can specify the period. I'm going to leave it on Billing month but I could specify quarter here, and so on. And I'm going to set the amount here to 50. So as I scroll down, I can see here that the max over the past five months has been about $25 specifically in Canadian dollars.
So, it depends on your subscription and how it's configured for the currency. So that's been specified. So now that I've done that, I'm going to go ahead and click on Next>. So, we scroll back up to the top.
Basically, I'm going to say when we get to 75% of our budgeted amount, I want to use an existing Action group if we have any, in order to send a notification. Now if we don't have any existing action groups that are available in the list, then we can click the Manage action group link.
Down below, we can also specify an alert recipient email address, such as for a group, which I've specified here. And then I can just click Create.
So I didn't create an Action Group, I could have, if I wanted as an alternative alert notification method like SMS text or something like that. So at this point, we now have a budget created. So, if I go into the Budgets.
Portion here, I can see our budget is listed here for the resource group. So the key is that we can work with cost analysis at the resource group level.


Resource Group Budgets
In Azure, you create budgets so that you can be notified when a certain percentage of a given value has been reached. For example, if you set a budget for $500 per month, you might want to be notified when you get to 80% of that $500.
So I can go in and take a look to make sure that issues such as leaving virtual machines or databases running by mistake hasn't occurred, and that's why you have an increase in cost. So we can do this at the subscription level.
If I were to go into an Azure subscription, I can click on the subscription to open it up, and I can click Budgets and manage the budgets from there.
But what we're talking about in this particular case is doing same type of thing but at the resource group level.
So it only applies to charges for resources deployed to a specific resource group. So in my Resource groups view, I'm going to click on a resource group I have called Rg1.
And in the Overview blade over on the right, I can see any resources currently deployed there. In this case, it's only a single storage account. However, as I scroll down in the navigation bar for the resource group, I can see Cost analysis, Cost alerts, and Budgets. Well, Cost alerts allows me to add an alert which ends up creating a budget. I'm just going to go here to the Budgets view. I don't have any budgets currently.
So I'm going to go ahead and click the Add button to add a new budget. Now remember again, the budget is really about sending a numeric threshold value for costs.

[Video description begins] A page called "Create a budget" opens. It includes a button labeled "Next >" and a section called "BUDGET SCOPING". In this section there is a Scope label, adjacent to which the "Rg1" option appears. Under this option there is a link called "Change scope". Under this link there is a button labeled "Add filter". [Video description ends]

And then setting up some kind of an alert notification mechanism. So Rg1 is the current scope. I'm not going to change that. I could click Add filter, if I want to filter within the resource group by something else.

[Video description begins] Two drop-down list boxes appear adjacent to the "Add filter" button. [Video description ends]

So maybe for example, by ServiceName. Maybe, I'm only interested in looking at sql database costs within Rg1 and sending alerts for that, so I could do that. However, I'm going to remove that filter by clicking the little x.

[Video description begins] The "Create budget" page also includes a section called "BUDGET DETAILS". This section includes a text box labeled "Name", a drop-down list box labeled "Reset period", and another text box labeled "Amount ($)". [Video description ends]

And down below, I'm going to call this Rg1Budget1All, indicating it's for all costs, not by particular service or anything like that.

[Video description begins] He types "Rg1Budget1All" in the "Name" text box. [Video description ends]

I'm going to leave it on billing month, but you can change the period to be something different, like monthly, maybe you only want to track this and be notified from a quarterly perspective or annual. But I want it done every Billing month.

[Video description begins] The following option is preselected in the "Reset period" drop-down list box: Billing month. [Video description ends]

I can see the start and ending date for that. I'll leave those set as they are, so two years into the future, pretty much. I'm going to set my BUDGET AMOUNT to 500, so $500 and that will be in the currency specified with my subscription, in my case, Canadian dollars.

[Video description begins] He types the following text in the "Amount ($)" text box: 500. [Video description ends]

I can see my past five month maximum costs, which can help me sometimes gauge what I should be putting in for my budget amount. However, I'm going to leave mine at $500. Could go down to the bottom, I'm going to click Next>.

[Video description begins] A page called "Set alerts" opens. It includes a table with several columns and one row entry. The column headers include "% of budget" and "Action group". Under the "% of budget" column header the row entry is a text box. Under the "Action group" column header the row entry is a drop-down list box. Under the table there is a link called "Manage action group". [Video description ends]

And I'll scroll back up here because I can specify the percentage of that budget amount, then I want to trigger an alert. So let's say it's 80% of that $500, which works out as we can see here to be $400.

[Video description begins] He types the following text in the row entry under the "% of budget" column header: 80. [Video description ends]

I could select an existing Action group, if I have one, I don't, or I could create one by going to Manage action group. Action groups let you define targets that should receive things like notifications. Whether it's through email, or SMS text messages, or push notifications and so on. However, I already have the option built-in here when I'm creating a budget to send an alert message to a group. So I'm going to specify a group here for my organization. And they were the ones that will receive a notification when we get to 80% of our budget on a monthly billing basis.

[Video description begins] He types the following text in a text box labeled "Alert recipients": admins@quick24x7.com. [Video description ends]

And having done that, I'm going to go ahead and click on Create. So it's going to validate my selections, after which it will create the budget.

[Video description begins] He clicks a button labeled "Create". [Video description ends]

After a moment, we get a notification in the upper right that the Budget was created. And here, in the Rg1, navigation panel under the Budgets blade, we can see our budget now exists.

[Video description begins] A new row entry gets added to the table on the "Budgets" page of the "Rg1" blade. [Video description ends]

So at any point in time, we can click on the Name of the budget and open it up and either edit it to change any of the items within it, such as the Amount, or we can delete the budget.


Azure ARM Template Editor
Azure Resource Manager templates, otherwise called ARM, for Azure Resource Manager, allow you to define your resources as code. It's often referred to as Infrastructure as Code.
So you could use a template or a blueprint to specify that you want to create a storage account, a virtual machine, a web application, a public IP address, all of these things together. It allows for the automation for the deployment and management of resources. So here in the portal, I can create a template deployment by choosing Create a resource, and I could type in template, and I'm going to select Template deployment.
Now a template is technically just a text file that uses json syntax.
Now from this screen, we can select from Common templates that are available here in Azure.
So to create a Linux virtual machine, Windows virtual machine, a web app, a SQL database. You could also, down below, select a GitHub quickstart template from the list. So whether you want to start working with things like Azure container services or kubernetes, which is kind of an orchestration platform for containerized applications. Or we might go down and choose things like an Azure DNS zone that we want to create. It could be any type of resource, a backup vault to be created, content delivery networks, on and on and on. Or you could Build your own template in the editor. When I do that, it takes me into an editor environment where we have the base skeletal format for the JSON.
Now we can also specify Variables. If you want to allow for template reusability, you shouldn't be hard coding values, things like storage account names or virtual machine names. Instead, those should be variables, and you can specify those parameters to pass in values to those variables. Now, at this point, we could load an existing file. When I choose Load file, it allows me to search for file on-premises, on my local computer that I'm doing this from, that is a template that I want to bring in here. Or I could choose Quickstart template, for example.
I'm going to go through and select just a very simple template. How about we search for storage, and we'll take a look here for storage account. Now, what I want to do is basically create a very basic storage account using a template, so that we can at least see the code here. So I'll choose storage-account-create, from the template list, OK.
And what it's done is populated all of the json syntax here in my ARM template for the creation of a storage account.
Now notice there are some variables here. A variable is being defined here for the storageAccountName. And, If I click Variables over here on the left and expand it by clicking little triangle, I can see storageAccountName.

[Video description begins] He highlights the following line of code, code starts: "name": "[variables('storageAccountName')]". Code ends. [Video description ends]

Of course, when I click it, it takes me to that line. So I can use this template editor to tweak what I've just essentially imported from a Quickstart template. I can make changes, if I know what I'm doing. And once I'm happy with this, I can actually save it. So if I click Save, at this point it's saved my changes here in the GUI. And what I can then do is actually run a deployment from that template.

[Video description begins] The "Custom deployment" blade includes a drop-down list box labeled "Resource group" and a drop-down list box labeled "Storage Account Type". [Video description ends]

So, for example, I want to deploy a storage account into Rg1, that's a Resource group.

[Video description begins] He selects the "Rg1" option in the "Resource group" drop-down list box. [Video description ends]

And based on the template definition will determine what you need to specify. If pretty much everything is hardwired and there are no variables, then you might not have much to specify at all. But here we can specify the Storage Account Type. And the Location will be determined by looking at the Resource group up above, and calling upon its .location property.

[Video description begins] He selects the "Standard_LRS" option in the "Storage Account Type" drop-down list box. [Video description ends]

So that's going to be taken care of. Notice what's missing is the name. What will the name of the storage account be? Well, in the template the storage account name is going to be determined by concatenating some text items together. Let's just go back here for a moment in our web browser, and let's step through what we just did to create that template. We created a Template deployment, we chose Create, we wanted to use the template editor here in the GUI, and we clicked on Quickstart template. And essentially what we searched for here was storage. We want to create a storage account using the template. So, storage-account-create, we did OK. Now if we take a look here at the code within the template, when it comes to dealing with the storage account name, it's concatenating the word store, so that's going to be the prefix. Then it's going to generate a unique string from the resource group ID. And so, that is how the name will be derived.

[Video description begins] He highlights the following line of code, code starts: "storageAccountName": "[concat('store', uniquestring(resourceGroup().id))]". Code ends. [Video description ends]

Okay, let's get back to where we were. Let's Save that. Let's deploy this into Rg1. And let's go ahead and agree with it and click Purchase.

[Video description begins] He clicks a button labeled "Purchase". [Video description ends]

And after a moment, our template deployment has succeeded for a storage account. So we can go to the resource group, that's one way to navigate here. And in the Overview blade, we'll see any items deployed in this location. Now we might have to click Refresh, a time or two until we see new items. Here's our new storage account. Notice, it's got store as part of the prefix of the name followed by what looks like some kind of a unique string. Now the same thing would appear, of course, if we were to go to the Storage accounts view. Creating a storage account is the same, regardless of how you actually do it, the end result is the same. So our storage account is now showing up as having been created from a template that we pulled up in the template editor.

                    
Azure AD Overview
Azure Active Directory is otherwise called Azure AD or sometimes AAD, but it all means the same thing. It means that we have an Active Directory instance in the Azure Cloud. It's managed. We don't have to set up a server and install the domain, controller, components, and so on. So what this means is that we have a centralized identity provider in the cloud. It can contain users, groups, application registrations, and security principles. Security principles are often used to make sure that software components have specific permissions to needed cloud resources. You can also link Azure Active Directory to your on-premises Active Directory if you wish. There are many configurations such that users authenticate to cloud apps using their familiar on-prem apps, and password changes are synchronized between both locations.
You can manage Azure Active Directory and everything within it using the GUI. So using the portal, you can also use command-line management tools, like PowerShell cmdlets, and the Azure CLI. Identity in Access Management or IAM, is all about authentication in authorization. So authentication is the proving of identity. Single factor authentication, for users for instance, would include items in the same category, such as something you know as a username and password would be. So it's single factor. But multi-factor meshes categories. So username and password fall under the something you know category, but the possession of a smartcard falls under the something you have category. Hence, we would have Multifactor Authentication or MFA in that instance.
The authorization is controlled access to resources that occurs after successful authentication, such as having the appropriate permissions to a SharePoint site, or perhaps the ability to deploy specific virtual machines only within a specific geographical region. So it's permissions or policies that get assigned to groups. So with Identity and Access Management or IAM, we are talking about controlling the authentication and then the authorization related to users and groups and even devices, such as Windows 10 computers joined to Azure AD, or Android smartphones registered with Azure AD for centralized control. And we know that IAM also deals with software permissions, specifically in the form of security principles.
So Azure AD then is a centralized repository of credentials, you could say, among other things. There are other security things that we have to consider, like RBAC roles. RBAC stands for Role Based Access Control. A role is a collection of related permissions, such as the ability to manage Azure virtual machines. And we could assign that role to certain users, or groups, that would apply to either the entire subscription in Azure, or a resource group, or just a single virtual machine for that matter. Conditional access is an important option. You can build policies that basically check conditions that must be met before allowing access to something.
So an example is that, if we have a sales associate that needs access to some kind of a Sales Cloud based application, then they can only do that, they can only access it if they sign in using Multifactor Authentication. Then we've got access reviews. This is something that you can schedule or run whenever you wish to take a look at things like group memberships in Azure AD, or permissions granted to enterprise applications registered in Azure AD. Because sometimes these permissions are granted and left, even though they may no longer be required, and that presents a security risk. So access reviews are good from a security perspective.
Then there's Privileged Identity Management, otherwise called PIM, P-I-M. The purpose of PIM is really to only provide administrative access to administrators when they need it. So you could think of this as, just-in-time or J-I-T, JIT administrative access. And of course, we can enable Multifactor Authentication or MFA to enhance user sign in security. So for instance, instead of Azure AD users only being required to enter a username and password, in addition to that, they might have to enter a six-digit PIN that gets texted to their smartphone.


Azure AD and the Portal
To properly manage Microsoft Azure, it's important to have a clear understanding of the association of an Azure AD tenant and a subscription. Now, an Azure AD tenant is essentially an instance of Azure Active Directory in the cloud, where you have users and groups, and devices and so on.

[Video description begins] A web portal labeled "Home - Microsoft Azure" opens. It is divided into two parts: menu bar and content pane. The menu bar includes a search box and some icons such as, Settings, Help, and User's login information. The content pane is divided into three sections labeled "Azure services", "Navigate", and "Tools". [Video description ends]

And you can associate a subscription with a tenant, for example, here in the portal in the upper right along with my sign in information, I can see the name of the Azure AD tenant I'm currently switched to it's called QUICK24X7.

[Video description begins] He points to the User's login information labeled "danlachance72@hotmail.com QUICK24X7". An information box opens which contains information labeled "Name", "Email", "Directory", and "Domain". [Video description ends]

And so here, I can click Subscriptions on my screen, I can also search for subscriptions if it wasn't there, to view any subscriptions associated with this Azure AD tenant. And I see I've got one it's a Pay-As-You-Go subscription. So I'm just going to click Home here in the upper left.

[Video description begins] He points to an option labeled "Subscriptions" in the Azure services section. Then he types sub in the search box and its search result includes a link labeled "Subscriptions". He clicks the Subscription link and its corresponding blade opens. It includes a subscriptions table with multiple columns and a row. The column headers include Subscription name and Status. Their respective row entries are Pay-As-You-Go and Active. [Video description ends]

So if I were to view for example, All resources, it takes me to the All resources view but I have not yet created anything so I don't really see anything, but at least it did take me to the view. Now let me switch over to a different Azure AD tenant.

[Video description begins] The Home - Microsoft Azure web portal opens. He clicks an option labeled "All resources" in the Azure services section and its corresponding blade opens. It includes an all resources table with multiple columns and no rows. The column headers include Name and Type. [Video description ends]

So I'm going to click in the upper right and choose Switch directory, and maybe I'll choose the one by the name of EarthFarm.

[Video description begins] He clicks the User's information and a drop-down box with two sections displays. The first section contains a user ID and two links labeled "My Microsoft account" and "Switch directory". He clicks the Switch directory link and its corresponding blade labeled "Directory + subscription" opens. It includes a tab labeled "All Directories" which is selected by default. It contains a search box and a list of directories. Some of the directories are labeled "Default Directory" and "EarthFarm". [Video description ends]

So this is a separate Azure AD tenant or separate instance of Azure AD Directory Services.

[Video description begins] The Home - Microsoft Azure web portal with the EARTHFARM AD tenant opens. It is divided into various sections. Some of the sections are labeled "Azure services" and "Navigate". The Navigate section includes an option labeled "Subscriptions". [Video description ends]

Now when I take a look here, I have a different looking screen. And if I were to try, for example, to look about why don't we start by trying to see which subscriptions are associated with this tenant. So when I go to Subscriptions for EarthFarm, there are none although I do have the ability to add one, let me just go back Home.

[Video description begins] He clicks the Subscriptions option and its corresponding blade opens. It includes a button labeled "Add" and the subscriptions table. [Video description ends]

If I were to try to go to the All resources view, well, it just won't let me do it. Because you need to at least have a subscription associated with the Azure AD tenant to be able to do anything.

[Video description begins] The Home - Microsoft Azure web portal opens. He clicks the All resources option in the Azure services section. A web page labeled "Welcome to Azure" opens. It includes buttons labeled "Start", "View" and "Explore". [Video description ends]

So let's switch back to our active tenant, but when I say that what I really mean is the one that has an associated subscription, that was Quick24x7. 

[Video description begins] He clicks the User's information. Then he clicks the Switch directory link and the Directory + subscription blade opens. Then in the All Directories tab, he selects a directory labeled "Quick24x7" from the directory list. The Home - Microsoft Azure web portal opens. [Video description ends]

Now when I look at Quick24x7, we can go to Azure Active Directory from the main screen, we could also search for it and choose it from the resultant list.

[Video description begins] He points to an option labeled "Azure Active Directory" in the Azure services section. Then he types azure in the search box displayed in the menu bar and its result includes a link labeled "Azure Active Directory". He points to the Azure Active Directory link. [Video description ends]

I could click on my left-hand navigation bar to open it up, and scroll down and choose Azure Active Directory, it doesn't matter. But at this point I can start actually doing something meaningful with Azure AD.

[Video description begins] A navigation pane opens. It is divided into various sections labeled "All Services" and "FAVORITES". The FAVORITES section includes an option labeled "Azure Active Directory". He clicks the Azure Active Directory option and its corresponding blade labeled "Quick24x7 | Overview" opens. It is divided into two sections: navigation pane and content pane. The navigation pane includes an option labeled "Overview". The Overview option is selected by default and its corresponding blade is displayed in the content pane. [Video description ends]

For example, I could go to the Users view, I can see any existing users, or begin creating users, or inviting users, or bulk creating them from a CSV file.

[Video description begins] The navigation pane includes a section labeled "Manage" which further includes an option labeled "Users". He clicks the Users option and its corresponding blade labeled "Users | All users" opens. It is divided into two sections: navigation pane and content pane. The navigation pane includes an option labeled "All users" and its corresponding blade is displayed in the content pane. It includes buttons labeled "New user", "Bulk create", and "Bulk invite". [Video description ends]

I'll just click back on Quick24x7 in the breadcrumb trail in the upper left, I can also view Groups and also Devices.

[Video description begins] He opens the Quick24x7 | Overview blade. Then he points to options labeled "Groups" and "Devices" under the Manage section in the navigation pane. Then he clicks the Devices option and its corresponding blade opens. It is divided into two sections: navigation pane and content pane. The navigation pane includes an option labeled "All devices" and its corresponding blade is displayed in the content pane. [Video description ends]

So Azure AD then is a centralized cloud-based identity provider that can have one or more Azure subscriptions associated with it.


Azure AD and the CLI
While you can use the Azure portal to manage and navigate through your Azure AD tenant, you can also do that using the Azure CLI.

[Video description begins] The Quick24x7 | Overview blade opens in the Home - Microsoft Azure web portal. [Video description ends]

In this case in the portal, I'm going to click the Cloud Shell icon at the top where I'm going to run CLI commands.

[Video description begins] He clicks an icon labeled "Cloud Shell" in the menu bar and a PowerShell command prompt displays in the web portal. The PS /home/danlachance72> prompt is displayed. [Video description ends]

The first thing I'm going to do is run az account list and I'll press Enter.

[Video description begins] He executes the az account list command. The output displays several properties of the live.com#danlachance72@hotmail.com user account. The prompt remains the same. [Video description ends]

So the first thing I see is the homeTenantId, so it starts here with 96421. Now as a matter of fact, if I just minimize that, we can see that 96421 is actually the tenant ID for my Azure AD tenant which is named, Quick24x7.

[Video description begins] He highlights home Tenant Id user account property starting with 96421 in the output. Then he minimizes the PowerShell command prompt and the Quick24x7 | Overview blade displays. He highlights an information labeled "Tenant ID" in the content pane. [Video description ends]

So we can see that information. As we go further down, we can also see the name of the subscription associated with that Azure AD tenant, because there can be one or more subscriptions.

[Video description begins] He opens the PowerShell command prompt. Then he highlights Pay-As-You-Go subscription property of the user account in the output. [Video description ends]

So I'm going to go ahead and minimize Cloud Shell for a second. And I'm going to search up subscriptions in the bar at the top center here. And when I do that, I'll be able to see which Subscriptions are associated with the Quick24x7 tenant. There's one, it's called Pay-As-You-Go.

[Video description begins] He types sub in the search box displayed in the menu bar and clicks the Subscriptions link in the result. Its corresponding Subscriptions blade opens which includes the subscriptions table in the content pane. He points to the Pay-As-You-Go row entry under the Subscription name column header. [Video description ends]

We can see the Subscription ID for that is 048b82 and so on. Well, let's go back and take a look here.

[Video description begins] He opens the PowerShell command prompt. [Video description ends]

We can also see Pay-As-You-Go is shown here. The state of our subscription is that it's Enabled, okay. So this looks good. We're getting a bit of information simply from the az account list about our Azure AD tenant. I'm going to go ahead and just clear the screen with cls. Let's take a look at a few other things that we could do.

[Video description begins] He executes the cls command and the screen gets clear. The prompt remains the same. [Video description ends]

For example, I'm going to run az space ad space -h for help. What can I do in Azure Active Directory here from the CLI?

[Video description begins] He executes the az ad -h command. The output displays a list of Group's command and Subgroups' keywords with their definitions. The Group's command is labeled "az ad". The Subgroups' keywords are labeled "app", "group", "signed-in-user", "sp", and "user". The prompt remains the same. [Video description ends]

So we can manage applications that are registered, groups. We can get information about the signed-in-user. We can manage service principals which is often used when you have software components that need authorization to resources in Azure, like storage accounts for instance. And we can manage of course Azure AD users. So if I were to run az ad user -h, tells me the next level commands about users I can work with.

[Video description begins] He executes the az ad user -h command. The output displays a list of commands with their definitions. The Group's command is labeled "az ad user". The other commands are labeled "create", "delete", "get-member-groups", "list", "show", and "update". The prompt remains the same. [Video description ends]

So create, delete, get-member-groups, list, show, update, and so on. So there's a lot we can learn from within the help system. So for example, if I were to run az ad signed-inuser -h, just talks a little bit about what that would do.

[Video description begins] He clears the screen. The prompt remains the same. Then he executes the az ad signed-inuser -h command. An error message displays. [Video description ends]

Well, looks like I have the wrong name here, so signed-in-user. So make sure you have the command syntax spelled out correctly, that's a little bit better.

[Video description begins] He executes the az ad signed-in-user -h command. The output displays three commands labeled "az ad signed-in-user -h", "list-owned-objects", and "show". The prompt remains the same. [Video description ends]

So show graph information about the current signed-in user in the CLI, okay, so we can either run list-owned-objects after that or show. Let's just do show. So I'm going to use the up arrow key and our full command that is going to be az ad signed-in-user show. Just to get some information about who we're currently signed in as here in the CLI.

[Video description begins] He highlights a definition of the az ad signed-in-user command. Then he points to the show command. Then he clears the screen. The prompt remains the same. Then he executes the az ad signed-in-user show command and its output displays several properties of the user account. The prompt remains the same. [Video description ends]

So as we scroll up, it's a lot of details because it's showing me the properties of my user account. So things like the companyName, the country, department, employeeId, displayName, givenName, all of those types of things. And as we go further and further down, we can also see all the details all the way down. So it's just showing me details about the user that I'm currently signed in as here in the CLI. Now of course, we can do other things here, navigating through our Azure AD tenant for example, az ad group list. So this will show me all my groups, but the problem if you consider it a problem is that it's telling me too much. It's giving me all of the detail. I'm really only interested in the displayName property.

[Video description begins] He clears the screen. The prompt remains the same. Then he executes the az ad group list command. The output displays a list of user account properties. The prompt remains the same. [Video description ends]

So what can we do about that? We can do a few things. One thing I could do is run az ad group list again and pipe that to grep. That's the grep line filtering tool built into Linux. And I can tell it what I want to see, and it's case sensitive by default. So I want to see the displayName, name with capital N, I can ask for that and that seems to work. Those are the names of my Azure AD groups.

[Video description begins] He executes the following command: az ad group list | grep displayName. The output displays four user account properties that are labeled "EastAdmins", "Off365Group" "All Enabled Users", and "Group1". The prompt remains the same. [Video description ends]

I can also alternatively use the --query parameter built in to the Azure CLI. So for example, I could do az ad group list, and instead of grep and grep is fine. But instead of that I could use --query and I can tell it I want to see the displayName. 

[Video description begins] He executes the following command: az ad group list --query displayName. No output displays. The prompt remains the same. [Video description ends]

Now the problem is that it won't work by default because what we have is a collection of items. We have an array of items and those items are the multiple groups. So we have to tell it here in our syntax after query, open and close square bracket. In other words, array element dot and for each item I want to see the displayName property. And when I do that, I get what I expect, the names of the groups.

[Video description begins] He executes the following command: az ad group list --query [].displayName. The output displays the same display names without the displayName label. The prompt remains the same. [Video description ends]

And it's a little bit cleaner, if you take a look at than what do you get when you use a grep line filtering. Because grep displays everything on the line, so displayName colon all that stuff. All we're seeing here are the actual value. So depending on what your need is, it might be easier to parse this text down below that results from using --query than it would from trying to parse the text that results up above here by piping to grep.


Azure AD and PowerShell
Not only can we use the Azure portal to manage our Azure AD tenant, as well as the Azure CLI, we can also use PowerShell cmdlets.

[Video description begins] The Quick24x7 | Overview blade opens in the Home - Microsoft Azure web portal. [Video description ends]  

Whether you're running PowerShell on-premises with the Azure module, or whether you're doing it here in the portal through Cloud Shell, which is what I'm going to do. So I'm going to point to Cloud Shell here, which allows me to run PowerShell cmdlets and Azure CLI commands.

[Video description begins] He points to the Cloud Shell icon in the menu bar. Then he clicks it to open the PowerShell command prompt. The PS /home/danlachance72> prompt is displayed. [Video description ends]

So I'm using PowerShell here. And to get started here, let's just navigate a little bit around Azure AD. Let's figure out what we can type in, begin with. So get-command, and let's say I want to retrieve information about Azure AD. So I know that the verb part of that cmdlet, the prefix, is going to be get. Don't know what would be after that so how about a wildcard symbol, an asterisk. And probably azad and then something else.

[Video description begins] He executes the get -command get*azad* command. Its output displays a table with four columns and multiple rows. The column headers are CommandType, Name, Version, and Source. The prompt remains the same. [Video description ends]

Looks pretty good. Here I can use Get-AzADGroup to get groups from my directory, or group members. I can get users, I can get applications that might have been registered in Azure AD. So this isn't bad, we're learning a bit. So I'm going to clear the screen, I'm going to run get-azadgroup.

[Video description begins] He highlights the following commands under the Name column header: Get-AzADGroup, Get-AzADGroupMember, Get-AzADUser, and Get-AzADApplication. [Video description ends]

Let's see what groups we have.

[Video description begins] He clears the screen. The prompt remains the same. Then he executes the get -azadgroup command. The output displays a list of groups and their properties. The prompt remains the same. [Video description ends]

Okay, looks like it's showing us the groups with the default selection of properties. However, if we really wanted to, we could also run get-azadgroup. I know there's more about groups than just those list of properties. So what I could do is, tell it that I want to pipe that, to select, and I'll tell it I want to select all properties, select *.

[Video description begins] He clears the screen. The prompt remains the same. Then he executes the get -azadgroup | select * command. The output displays a list of groups and their properties. The prompt remains the same. [Video description ends]

Now what we could also do is pipe that command to the select alias and select specifically the properties that we want. So get-azadgroup, let's say, and pipe that to select and say I only want to see the displayname. So we can ask it for which properties we are interested. So that's all we see. Now you might wonder, how do you know it's called DisplayName?

[Video description begins] He clears the screen. The prompt remains the same. Then he executes the get -azadgroup | select displayname command. The output displays four group names. The prompt remains the same. [Video description ends]

Well, if you're not sure what these properties are called, you can pipe the result of a cmdlet in PowerShell to get-member. And you can ask it for properties, so -type property, otherwise it'll show you properties and methods. And here I can see, indeed, there is a property called DisplayName, and MailNickname, and so on and so forth.

[Video description begins] He executes the following command: get -azadgroup | get-member -type property command. The output displays a table with three columns and multiple rows. The column headers are Name, MemberType, and Definition. The prompt remains the same. In the output, he highlights DisplayName and MailNickname row entries under the Name column header. [Video description ends]

So we can learn about that quite easy. Now another thing that I might be interested in doing is running get-azureadcurrentsessioninfo, it's a long one.

[Video description begins] He clears the screen. The prompt remains the same. Then he executes the get -azureadcurrentsessioninfo command. The output displays an error message which reads, You must call the Connect-AzureAD cmdlet before calling any other cmdlets. The prompt remains the same. [Video description ends]

Well, it's actually telling me I need to first run connect-azuread. Okay, let's do that, up arrow. Let's go back to get-azureadcurrentsessioninfo. All right, this is telling me some interesting stuff.

[Video description begins] He executes the connect-azuread command. No output displays. The prompt remains the same. Then he executes the get -azureadcurrentsessioninfo command. The output displays a table with five columns and a row. The column headers are Account, Environment, TenantId, TenantDomain, and AccountType. The prompt remains the same. [Video description ends]

So I can see here the tenant ID for my Azure AD tenant starts with 96421. And if we go back here and check that in the portal, yeah, that looks right, that's correct.

[Video description begins] He highlights the Tenant ID starting with 96421 and minimizes the PowerShell command prompt. The Quick24x7 | Overview blade displays. Then he highlights 96421 in the Tenant ID displayed in the content pane. [Video description ends]

We can also see our domain name. So we aren't using a custom DNS domain here because we've got the .onmicrosoft.com DNS suffix.

[Video description begins] He opens the PowerShell command prompt. Then he highlights onmicrosoft.com in the quick24x7test.onmicrosoft.com row entry under the TenantDomain column header. [Video description ends]

We can also run cmdlets here in PowerShell, like get-azureadtenantdetail. And when I do that it's just giving me a little bit of the same type of listing from above, just presented in a different format.

[Video description begins] He executes the get -azureadtenantdetail command. The output displays a table with three columns and a row. The column headers are ObjectId, DisplayName, and VerifiedDomain. The prompt remains the same. [Video description ends]

Now, of course, if I want to manage Azure AD objects such as building users, I could also do that by searching up what the appropriate cmdlets are, so get-command. Let's see, I'm assuming it starts with new, and it's probably got user in the name. Looks about right, such as new-AzADUser. And I can take that further, say well, what else can I do with users?

[Video description begins] He clears the screen. The prompt remains the same. Then he executes the get-command new *user* command. The output displays a table with four columns and multiple rows. The column headers are CommandType, Name, Version, and Source. The prompt remains the same. He highlights New-AzADUser row entry under the Name column header. [Video description ends]

get-command *azaduser*, okay. So I can build a new one. I can retrieve Azure AD users. I can update something about them. I can remove them, and so on.

[Video description begins] He executes the get-command *azaduser* command. The output displays a table with four columns and multiple rows. The column headers are CommandType, Name, Version, and Source. The prompt remains the same. He points to Get-AzADUser, New-AzADUser, Remove-AzADUser, and Update-AzADUser row entries under the Name column header. [Video description ends]

So if I were to run, get-azaduser, then we can see in fact, it's showing me the user accounts. And just like with the groups, if I really want to, I can pipe that.

[Video description begins] He clears the screen. The prompt remains the same. Then he executes the get-azaduser command. The output displays user accounts and their properties. The prompt remains the same. [Video description ends]

For example, to select and tell it what I want to see, which properties. I want displayname.

[Video description begins] He clears the screen. The prompt remains the same. Then he executes the get-azaduser | select displayname command. The output displays user account names. The prompt remains the same. [Video description ends]

And in the same way, I can also discover which properties are there with get-member. So piping to get-member -type property. And we can see some of those properties listed there.


Azure AD Users and the Portal
You can use the Azure portal to create Azure AD user accounts.
Now why would you create an Azure AD user account? You would do this so that you have a way to allow people to authenticate, so they can access things like cloud-based apps, and in some cases, depending on your configuration, also on-premises apps. So to get started here in the portal, I'm going to go to Azure Active Directory. I could also launch that from my left-hand navigation menu, it doesn't matter how I get there.
And within my Azure AD tenant, I'm going to click on Users. From here, I'll get a list of existing user accounts.
Now I've got my initial Microsoft Account that reflects my Azure account that I initially set up. However, I'm going to click the New user button to build a new user. Now this user is going to be an Azure AD user, I'm not going to invite them, they are an external user. So I'm going to leave it on Create user.
And for the identity here, I'm going to specify that the username is cblackwell, so Codey Blackwell. And after the add symbol here, it's going to use my DNS domain suffix for my Azure AD tenant, so that's already filled in.
So I'm going to leave that as it is, and then scroll down and just fill in a couple of other details. So Codey Blackwell, that's the full name, and I'll just fill in the first name, the last name.
And down below because we're creating a new account, it asks whether we want to auto-generate the password, or do we want to specify it? I'm going to let it Auto-generate it. I'm just going to choose Show Password and copy it, so I can communicate that to the user.
At this time, we can also determine if the user is going to be a member of a group, and which roles they have, which gives them certain permissions. However, I'm not going to change any of that, I certainly don't want a Block sign in for this user. And I'm not going to fill in any other details. So let's go ahead and click Create to create user Codey Blackwell. And before you know it, the user shows up here in the list of Azure AD users, we're going to go ahead and test logging in as Codey Blackwell.
Now one way to do that is to connect to account.activedirectory.windowsazure.com/, which I will do now.
So I'm going to specify the full email address of the new user, so cblackwell@ and then of course my Azure AD tenant DNS domain name. Now the default is that it will always end with.onmicrosoft.com unless you create custom DNS domain names, but that's the default setting. Let me go ahead and click Next, it's going to ask me for the password. So I'm going to go ahead and put in the auto-generated password that I previously copied and I'll choose Sign in.
Now, of course it wants me to change the passwords, so I'll put in the existing auto-generated password, and I will specify a new password and confirm it. And then I'll click Sign in. And when it asks me to stay signed into my web browser, I'll just choose No.
And we can now see that we are successfully signed in as user Codey Blackwell as part of the QUICK24X7 Azure AD tenant.


Azure AD Users and the CLI
Not only can you use the Azure portal to create and manage Azure AD user accounts, but you can also do this using the Azure CLI.
The CLI can also be spawned here in the Azure portal as opposed to running it on-premises, and that's how I'm going to run it. So here in the portal, I'm going to click the Cloud Shell icon at the top in the bar. And I'm going to make sure I'm in a PowerShell session which allows me to run PowerShell cmdlets as well as Azure CLI commands.
And the first thing I'm going to want to do here is, create an account in Azure AD. So to do that, I'm going to run az ad user, now there is a space between each of those words. Now if I'm not sure where to progress from here I can use the -h to get help with the next level commands.
It looks like create as opposed to add or new. And I could also use the up arrow key, to bring up the previous command and we know that creates the next level part of the syntax, okay. But what after that, I don't know what to put in. Well, we could use -h and we can learn more about the various parameters that we could specify to create the user.
So we can see arguments like display-name, password, user-principal-name, force-password-change-next-login, and so on. So this gives us enough to get started. So az ad user create --display-name and in this case, let's say I'm going to create a user whose name will be "Jen Hill" -- user-principal-name. It's going to be jhill@ and then I have to put in the DNS domain suffix for my tenant. Now if I'm not sure what that is, I can, for example, let's minimize this, click to open up my left-hand navigator menu.
Go to Azure Active Directory, there's much ways to view this, of course. And in the Overview, I'll see the entire name.
So in this case, it's quick24x7test.onmicrosoft.com. So, .onmicrosoft.com is the default DNS suffix unless you've created a custom DNS domain name for your tenant, which I haven't. Let's go back into the CLI here. I'm just going to go ahead and paste that right in there. So we're just going to right click and choose Paste. Okay, that part is in there. Next thing I want to do is, specify the passwords. So I can do that with --password and I'm going to tell that within double quotes, a specific password that I want to use. Okay, and once I've done that, I can press Enter to create the user account.
Now if I don't have a password that complies with password complexity requirements, as we can see has not been done here, then I'm going to have to come up with something different. So I'm going to use the up arrow key and specify a different password for this account. Now once I filled in that password, we can go ahead and try to see if it will accept our newly created password.
This time, we didn't get the red error message, so it looks good. And as a matter of fact, let's just minimize Cloud Shell for a second. Let's just check our work here in the GUI.
So in my Quick24x7 Azure AD tenant, if I go to the Users view, among other users that already might have been there, we'll see the newly created Jen Hill.
So let's go back into the CLI and poke around a little bit. I'm going to clear the screen. So if I were to run az ad user list, it'll list my Azure AD users, but notice what we get returned all of the properties.
And at this level, we'd have to scroll through to find exactly what we wanted to see. I don't want to have to do that, there's got to be a better way. So let me clear the screen with the clear command. I could do stuff like this. I could say az ad user list. And if you're a UNIX or a Linux shell scripting person or just a command line person, you could pipe it to the grep line filtering command and tell it what you want to see. For example, all I want to see is the mailNickname property. So only show me those lines. And sure enough, it looks like it's working.
However, you could also do some CLI-specific stuff. What I mean by that is you could run, for example, az ad user list and you could use --query. This will work with anything in the CLI to query something out. Now, the problem is, it's not a problem, but if I were to just assume I could put in the property name, mailNickname, then I would get a whole lot of nothing.
However, you may say well maybe it's case sensitive, it's not going to make a difference. So if I just put it all lowercase, still nothing.
And the reason is because if you think about the command output, it's returning more than one item. It's returning an array or a collection of users and you need to reference that before the property names. So up arrow key to bring up previous command and I'm going to put an open and close square bracket to reference the fact that we're dealing with an array. Dot, to separate the array item, the user, from the property, in this case mailnickname. And I'll go ahead and press Enter.
Now, again, if I change the n in nickname to a capital N because it is case sensitive, we can now see that it's returning the mailNickname. So there are a few things then, that we can do using the Azure CLI to work with user accounts in Azure AD.


Azure AD Users and PowerShell
You can use PowerShell cmdlets to create and manage Azure AD user accounts.
Of course, you could also use the portal, as we see here to create new users, or to click on existing users to make changes to any properties and so on. Now, here I'm going to click on Cloud Shell at the top of the bar here in my Azure Portal screen.
And I'm going to make sure I'm in PowerShell, where I can run both PowerShell cmdlets and Azure CLI commands.
Now I could download PowerShell locally on my computer, but I'm going to choose to use the Cloud Shell here instead. Now, the first thing I need to figure out is what might the name of the cmdlet be if I want to add a new Azure Active Directory user? So I can figure that out using get-command. For example, get-command. Maybe I'll use an asterisk. And maybe I'll put in azaduser. That's a guess, I'm assuming that would be part of the name. Otherwise I could try different variations.
But luckily this looks reasonable. I've got a New-AzADUser cmdlet as opposed to add or anything like that or create.
Well, that's good news, because now I can get help about that cmdlet now that I know what it's called. So I might run get-help and I might ask for help for the new-azaduser cmdlet, maybe even ask for details, -details. Or detail in singular rather not details. And here I can see that it's returned back the information that I wanted for this, so it gives me a brief synopsis, creates a new active directory user.
Now, that's true specifically in Azure and I get a sense of how the syntax would be used. And what's important here because there could be a lot of parameters is that it explains each and every one of them. And even more handy, as I go way down. I have some examples of how we might actually create, a new Azure Active Directory user. We can see here, they are converting a regular string for a password to a secure string using the ConvertTo-SecureString cmdlet, before they actually build the new user and pass the password with the -Password priority.
You can see the variable they're using here is $SecureStringPassword.
Variables in PowerShell, are always prefixed with a dollar sign. So we have some great help here.
So let's clear the screen, let's make it happen. First thing I want to do, is make a password very long. So going to call it $pw for password. And I'm going to put in =, and I'm going to run the convertto-securestring cmdlet. And I'm going to use the -string parameter. And I'm going to specify the password that I want to use for this. Let's say it's something like this. So I'm specifying the password here within double quotation marks. It's plain text, so -asplaintext and I'm going to -force this, and I'm going to press Enter.
So if I just do $pw to see what's in that variable, it doesn't even return the actual password, that's the point, it's been converted to a secure string item, and I can pass that, to the new-azaduser cmdlet.
So I'm going to set -displayname, let's say here -displayname to a user Sharon Bishop. Creating Sharon Bishop the -userprincipalname will be determined by well first of all it's going to be determined by organizational naming conventions but in this case it's going to be sbishop@ and then the DNS name of my Azure AD tenant. And I'll just close the double quotes after that and I'll specify -password and this is where we're I'm going to pass it my variable. So $pw, which we know from above is a secure string representation of the password I specified up above.
Now it requires the MailNickname parameters. So because I did not supply it, it asks for it. Let's cancel out of that just for fun.
And I'll clear the screen. If I were to use the up arrow key to bring up the new-azaduser cmdlet, we could add the -MailNickname parameter. So -mailnickname. Let's say it's just going to be sbishop. And if I press Enter, it creates the account and doesn't ask me anything. Now that's going to be an important thing to consider mandatory parameter values when it comes to trying to automate some of these things.
Let's just check our work. First of all here, directly in the portal since we have it opened up, let's go to the users view of our Azure AD tenant. Indeed we can see Sharon Bishop has been created.
But let's go back into PowerShell for a second. Because there are some cmdlets that we can use, for example, get-azaduser to check to see what's in our Azure AD tenant.
We can see the last user here, of course, is user Sharon Bishop. Of course in PowerShell, we can start filtering out what we want to see. So for example, get-azaduser, we can pipe the result of a PowerShell command using the pipe symbol, the vertical bar symbol. Now most keyboards you can get that symbol by shifting your backslash key. I can then refer to select and tell it what I want to see. Let's say I want to see the display name property. You have to know what the properties are called comma, and the id.
So there's the display name and there's the internal Id identifier for the Azure AD user accounts. So we have the option then of using a number of PowerShell cmdlets for managing. Azure AD users, and we can take that a step further. So let's clear the screen. Remember how we ran get-command. So I'm going to use wildcards here and going to put azaduser. We used New-AzADUser and Get-AzADUser.
But if you want to make modifications to a user account, you could use Set-AzADUser. You could also remove accounts also using Remove-AzADUser. So there are a lot of options that are available. So for example, let's say we wanted to change Sharon Bishop's last name, I could use update -azaduser and I could specify the -objectId. So we're going to have to go back to a previous command to see what Sharon Bishop's ID is, there it is right there.
I'm going to go ahead and copy that to my clipboard, let's clear the screen here and let's try this, let's run update-azaduser-objectid.
And here I'll just right-click and paste Sharon Bishop's ID. And let's say I want to change the display names, so -displayname. And now I want it to be Sharon and for lack of a better choice, just so we can illustrate the example, her last name will now say changed. So Sharon Changed. And if we do that looks like, it took let's kind of use our up arrow key to go back to get-azaduser. And indeed we can see Sharon's last name is now changed.

                    
Azure Guest Users
User accounts in Azure AD provide accountability. Everyone would have their own account that they would use to sign in, to access cloud based apps. Or in some cases even on-premises based apps. But sometimes the users that you want to participate in that kind of, functionality already have an account with an external provider. Let's talk about how to add guest user in Azure AD.
So here on the portal, I'm going to navigate to Azure Active Directory and then into the Users view.
Now, I'm going to go ahead and click the New guest user button, up at the top of the All users view. Although, technically, if I were just to click New user, the first part of the wizard is whether you want to create the user directly in Azure AD. Or you want to invite them, inviting is the same as just clicking the guest user button, it doesn't make a difference.
Let's go back to the All users view. I'm going to click the New guest user button up at the top.
So the first thing I have to do is fill in some details, who is this user? I'm just going to call this user Fake External user. And I'm going to specify an email address for an account. Now, I have a sample account that I can use here. It's a Hotmail account. So I'm going to go ahead and specify that information. And I'll just put some information in here for the first and last names.
And I can also personalize the message. Welcome! You can join us to access APP1. I did just as an example. I could also specify the group and role affiliation for this account. The roles will be important when it comes to permissions that might be required by that account. I don't want to block the sign in or anything like that. I'm not going to fill in job information. I'm just going to click Invite. And it's inviting the users. So the next thing to do is to check that person's mail account.
In that users inbox, I'm going to have a Microsoft Invitation messages that says, You're invited to the QUICK24X7 organization.
How nice is that? And there's my personalized message. Welcome! You can join us to access APP1. And the user can click the Get Started button. This is what the user will then see. So review the permissions here.
I'm going to accept all of this. I'll click Accept. And it automatically takes that user to Access Panel Applications that might have been made available for this user to access, in the QUICK24X7 Azure Active Directory tenant. Of course, there are no applications configured, but the user is successfully signed in.
Back here in the Azure portal, when we take a look at our list of users in our Azure AD tenant, we can see our Fake External User. Notice the icon is a little bit different because they aren't actually a part of Azure Active Directory.
Here we can see, we have a user that just says Microsoft Account. That's the original accounts that signed up for Azure.
Then we've got a couple of users created in Azure Active Directory. And then we've got our User type of Guest. 
If you're a PowerShell person, so I'm just going to launch Cloud Shell up here in the portal. You might also run connect-azuread.
And then from there, you might run a command like to review guest users, just make sure it took. So get-azureaduser -filter. And I'm going to put in quotes usertype eq and single quotes Guest, that's what I'm looking for. So I'll spell that correctly. Close the single quote, close the double quote. And I'll press Enter. 
And indeed, we can see that our Fake External User is the only account that shows up here.


Azure Bulk User Create
When you have multiple Azure AD user accounts that you need to create, you could create them one at a time, such as in the GUI, but there's a better way.

[Video description begins] The Home - Microsoft Azure web portal opens. [Video description ends]  

You could of course also write a script in PowerShell or in the CLI, but we're going to use the bulk create option. So to get started here in the portal, I'm going to navigate to Azure Active Directory and specifically, I'm going to go to the Users view.

[Video description begins] He opens the Quick24x7 | Overview blade. Then he opens the Users | All users blade. [Video description ends]

I'm going to see any existing users but I've got a Bulk create button at the top. Now that's used when you want to essentially import a number of Azure AD or Azure Active Directory users. Whereas Bulk invite is for external users that you want to invite to participate. So I'm going to choose Bulk create, I can then Download a CSV template. I've already done this and edited it, I've populated it. Let's take a look at that.

[Video description begins] He clicks the Bulk create button and its corresponding blade labeled "Bulk create user (Preview)" opens. It includes a button labeled "Download". Then he opens a file labeled Azure_BulkUserCreate_Users.csv" in the Microsoft Excel application. [Video description ends]

Now I'm using Microsoft Excel where I've added the required information but you need to make sure you save it as a CSV file, which I've done. Here it says some of your features in your workbook might not be available. That's okay, it needs to be CSV. So yes, I want to use that format. So what you get in this template when you download it is the version number at the top and then all of these column headers. And you need to leave that stuff in there. Notice some of these column headers have an asterisk. Well, that means that it's required information. So things like First name, Last name, Job title, Department, that stuff isn't required to create the account in Azure AD. But the Name, the User name, and also the Initial password and whether the account is enabled, that is needed. So I've got that stored in a file, called Azure_BulkUserCreate_Users. Let's bring that into Azure AD. Now what you're looking for here is it to say, File uploaded successfully.

[Video description begins] The Azure_BulkUserCreate_Users.csv file name displays in a text box displayed in the Bulk create user (Preview) blade. [Video description ends]

If there's a problem, maybe you deleted the header row from the file or perhaps you didn't specify something that's required as denoted with the asterisk, you'll see it here listed in red. So at this point, I'm going to click Submit. We can see currently, it's in progress. Now naturally, it might take a while if you have a lot of users that you're creating all at the same time. You can also, as it says, click to view the status of each operation. So when you do that, it takes us to the Bulk operations results, part of our Azure AD tenant. Here it says it's Completed with no errors. That was quick.

[Video description begins] In the Bulk create user (Preview) blade, an information labeled "Click here to view the status of each operation" appears. He clicks the information and a blade labeled "Users | Bulk operation results (Preview)" opens. It displays a table with multiple columns and a row. The column headers include File name, Upload time, and Status. He points to a Completed with no errors row entry under the Status column header. [Video description ends]

And we have our message up here that popped up in the upper right, in the notification area that tells us the same type of thing. Let's go to the All users view to see if our two new users exist. And they do, there's Lucas Brenner and there's Marcia Lin.

[Video description begins] He opens the Users | All users blade and the All users table updates with two row entries. He points to the Lucas Brenner and Marcia Lin row entries under the Name column header. [Video description ends]


Azure Bulk User Invite
In Azure AD, inviting users is different than creating them. When you create a user, you create them directly so that, they actually exist in the Azure AD tenant. But when you invite a user, you're inviting an external account, usually by sending an invitation email message. We're going to take a look at how to perform a bulk user invite in Azure AD.

[Video description begins] The Home - Microsoft Azure web portal opens. [Video description ends]

So to get started, let's flip over to Azure Active Directory. And what we're going to do is go to the Users view. And when we're in the All users view, we have a Bulk invite option.

[Video description begins] The Quick24x7 | Overview blade opens. Then he opens the Users | All users blade. It includes the Bulk invite button. [Video description ends]

However, if we click on it, it opens up another page that talks about the fact, that the feature has been temporarily disabled. 

[Video description begins] He clicks the Bulk invite button and a web page labeled "Tutorial: Bulk invite Azure AD B2B collaboration users (preview)" opens. It is divided into two sections: navigation pane and content pane. The navigation pane includes an option labeled "Tutorials" which further includes a sub option labeled "Bulk invite via the portal (preview)". The Bulk invite via the portal (preview) sub option is selected by default and its corresponding blade is open in the content pane. [Video description ends]

So instead you should look at some PowerShell solutions for doing that, which is exactly what we're going to do here.

[Video description begins] He closes the Tutorial: Bulk invite Azure AD B2B collaboration users (preview) web page. [Video description ends]

To do a bulk invite, you need to have a CSV file that's formulated in this manner.

[Video description begins] A file labeled "bulk_guest_invite.csv" opens in the Microsoft Excel application. It displays a table with two columns and a row. The column headers are Name and InvitedUserEmailAddress. Their respective row entries are Fake User and fakeuser173@hotmail.com. [Video description ends]

With the Name column at the top, and then the InvitedUserEmailAddress following it to the right, under which you then populate your data. Now, I'm doing this in Microsoft Excel, which is fine. You can use any application, just make sure you save it as a CSV. So having done that, we can then flip over to PowerShell and use this file to perform the bulk invite. It's not really a bulk invite, there's only one entry in here, but it really is the same thing whether you've got one or a thousand.

[Video description begins] He highlights the Fake User and fakeuser173@hotmail.com row entries. [Video description ends]

Here in the PowerShell ISE, I've got a script to do the bulk invite. In line 1, I'm connecting, using the Connect-AzureAD, to my tenant domain. So I'll use the -TenantDomain parameter, and I'm specifying my Azure AD tenant.

[Video description begins] He opens a window labeled "Administrator: Windows PowerShell ISE. It is divided into three parts. The first part is a menu bar which includes options labeled "File" and "Edit". The second part displays a tab labeled "Azure_Bulk_Guest_User_Invite.ps1". It displays several code lines. The third part displays the PowerShell command prompt. The PS C:\WINDOWS\system32> prompt is displayed. He highlights the following code line in the tab: Connect-AzureAD -TenantDomain quick24x7test.onmicrosoft.com. [Video description ends]

And then creating a variable called users, variables in PowerShell are always prefixed with the dollar sign. The users variable will store the result of running import-csv. And I'm going to specify the location and name of the file that we just looked at, the CSV file.

[Video description begins] He highlights the following code line, code starts: $users = import-csv d:\bulk_guest_invite.csv. Code ends. [Video description ends]

Then I'm creating a variable called custom underscore message or msg. That is going to be a result of instantiating a new object of type Microsoft.Open.MSGraph.Model.InvitedUserMessageInfo, it's quite a mouthful.

[Video description begins] He highlights the following code line, code starts: $custom_msg = New-object Microsoft.Open.MSGraph.Model.InvitedUserMessageInfo. Code ends. [Video description ends]

Next thing we're doing for that instantiated object variable custom_msg is we're calling upon the dot custom message body property. And it's going to have a little custom welcome message, says, Hello. You are invited to the Quick24x7 organization, or something like that.

[Video description begins] He points to the following code line, code starts: $custom_msg.customizedMessageBody = "Hello. You are invited to the Quick24x7 organization.". Code ends. [Video description ends]

Then I need a loop, because I need to process all of the entries in the import file, whether it's one, which is in our case, or a 1,000. So I'm using a foreach loop, and in parentheses, I'm creating a temporary placeholder variable here. I'm calling $email, could be called anything, that's what we're going to use to reference each entry in the imported CSV file within the loop. And that is going to be gathered from looking at the $users variable above. Which would contain, again, either one or thousands of users, whatever's in the file. So within the loop we've got the opening and closing curly braces. And then I'm calling upon New-AzureADMSInvitation. And I'm using a number of parameters, -InvitedUserEmailAddress. I call upon the $email variable. That's our looping variable, that will contain the current entry from the CSV file. And I'm calling upon the .InvitedUserEmailAddress property, which is really just a column header in the CSV file. Doing the same type of thing for the DisplayName. I'm setting a redirect url for that user to myapps.microsoft.com. Setting the InvitedUserMessageInfo to my custom_msg variable, and SendInvitationMessage is being set to $true.

[Video description begins] He points to the following code lines, code starts: foreach ($email in $users) {New-AzureADMSInvitation -InvitedUserEmailAddress $email.InvitedUserEmailAddress -InvitedUserDisplayName $email.Name -InviteRedirectUrl https://myapps.microsoft.com -InvitedUserMessageInfo $custom_msg -SendInvitationMessage $true }. Code ends. [Video description ends]

Okay, so having done that, let's go ahead and run the script by clicking the Run Script button up at the top. Now, if I haven't already signed in in this PowerShell ISE session, I'll be prompted to sign in with my Azure account credentials. So I'm going to go ahead and do that.

[Video description begins] A window labeled "Sign in to your account" opens. The following command displays in the PowerShell command prompt: D:\Scripting\Azure_Bulk_Guest_User_Invite.ps1. [Video description ends]

And after a moment, we'll see that it looks like the script has executed and the message has been sent. It says the Status is PendingAcceptance. Let's start by taking a look at our Azure AD tenant in the portal to see if this user even shows up there.

[Video description begins] He logins the Microsoft account in the Sign in to your account window. In the PowerShell command prompt window, the output includes user account properties and a table with four columns and multiple rows. The column headers are Account, Environment, TenantId, and TenantDomain. [Video description ends]  

Here in the Portal, I'm already looking at the All users view in Azure AD.

[Video description begins] He switches to the Users | All users blade opens in the Microsoft Azure web portal. [Video description ends]  

Let's just click Refresh. And there's our Fake User account, fakeuser173@hotmail.com. Let's just check that person's email address, or email account rather, to make sure they received the invitation.

[Video description begins] He switches to the Outlook account of the Fake User. [Video description ends]

Here in their account, we have an invitation, a Microsoft Invitations. And we can see here Hello. You are invited to the Quick24x7 organization. So it looks good, the user has been invited. They would just continue following through the process by clicking the Get Started button, which I'll do here. It will then prompt them to Accept. So it's gone to the Access Panel for applications for that user.

[Video description begins] He clicks a button labeled "Get Started" in the welcome email of the Fake User Outlook account. The Access Panel Application web page opens. [Video description ends]

Multifactor Authentication

[Video description begins] Topic title: Multifactor Authentication. The presenter is Dan Lachance. [Video description ends]

Multifactor Authentication, otherwise known as MFA, enhances user sign in security. How does it do this? If I'm logging in with a username and a password, isn't that MFA? It's two things, it's not because it's one category. It's something you know. So the idea here is to use additional authentication factors, such as requiring the possession of a smart card in addition to username and password. Or maybe having a pin sent as an SMS text message to a phone in addition to a username and password, you have to possess the phone. So that would constitute Multifactor Authentication.

So out-of-band authentication codes means that, some kind of authentication code is being sent through an alternate mechanism. So you might be using a web browser to try to authenticate to Azure. And you might need to specify username and password in that browser, and that's fine. But as MFA might be configured, you might be sent a six-digit PIN to your phone through an SMS text message that you would then also have to enter. It's out of band, because it's not being transmitted through the web browser. Some other communication mechanism. So then, this is more secure than only a username and password, which can be guessed or brute forced by malicious users. Multifactor Authentication then combines two or more categories, so something you know plus something you have. Or it could be something you know, like a username and password, plus something you are, like a fingerprint scan. Or it could be something you have, like a smart card, and something you do, like a certain type of gesture-based authentication on a touchscreen. So with Multifactor Authentication, or MFA, whatever the configuration is, all of the factors get validated at the same time. 

[Video description begins] Microsoft Authenticator App. [Video description ends]

And you can also use the Microsoft Authenticator app, as a form of Multifactor Authentication where codes are sent. So it's an MFA software app. Alternatively, you could just use whatever app is used for texting on your smart phone as another mechanism to receive a six-digit PIN that would be used in conjunction with the username and password to fulfill MFA requirements. So in the case of some MFA software apps, you might get a six-digit PIN that is only good for 30 seconds. Whereas if you opt for an SMS text messaging mechanism, then it would send you the six-digit PIN that doesn't expire within 30 seconds. You have a number of options available.

Azure User MFA

[Video description begins] Topic title: Azure User MFA. The presenter is Dan Lachance. [Video description ends]

You can use the Azure portal to enable MFA or Multifactor Authentication for Azure AD users. Now you would do this to enhance sign in security. So that instead of just a username and password to get into Azure, they would need another factor. Such as a six-digit PIN sent to an authenticator app on a smartphone.

[Video description begins] The Users | All users blade opens in the Microsoft Azure web portal. [Video description ends]

I'm going to enable MFA for user Codey Blackwell here in Azure AD. Now I'm looking at my list of all users in my Azure AD Tenant. Notice across the top we have a series of buttons. And one of the things that we can do here, if we click the three dots or the More button, is we'll see other options including Multi-Factor Authentication. Now you might not need to click the three dot button if your screen resolution is set such that everything can be spread across the screen. Either way, I'm going to click Multi-Factor Authentication. Now when I do that it opens up a new window, it'll show me my users.

[Video description begins] He clicks a button labeled "More" and a flyout opens which includes an option labeled "Multi-Factor Authentication". He clicks the Multi-Factor Authentication option and its corresponding web page opens. The web page includes a table with three columns and multiple rows. The column headers are DISPLAY NAME, USER NAME, and MULTI-FACTOR AUTH STATUS. [Video description ends]

And I can look into the MULTI-FACTOR AUTH STATUS column to see if it's Enabled or Disabled or actually being enforced. If the user has signed in, since it's been Enabled. So for user Codey Blackwell, clearly it's Disabled. So I'm going to turn on the check mark for Codey Blackwell.

[Video description begins] He selects a checkbox adjacent to a Codey Blackwell row entry under the DISPLAY NAME column header. [Video description ends]

And over on the right I'm going to click the Enable link.

[Video description begins] An information box labeled "About enabling multi-factor auth" opens which includes a button labeled "enable multi-factor auth". [Video description ends]

And I'll click enable multi-factor auth. And after a moment it's done, it says Updates successful. I'll click Close. And notice that the MULTI-FACTOR AUTH STATUS column for Codey now shows Enabled. So what we're going to do is, we're going to log in as user Codey Blackwell. So I'm going to go ahead and connect to the My Apps type of panel here in Azure.

[Video description begins] The Sign in to your account web page of Microsoft opens. [Video description ends]

And that means I'm going to try to connect to account.activedirectory.windowsazure.com/. Where I'm going to Sign in as my user, cblackwell@, and then my DNS domain name for my Azure AD tenant. I'll click Next. Of course, I'm going to have to put in a password. So I'll do that. And it says, more information is required. Well, that makes sense because we've now just enabled MFA for this account. So I'll go ahead and click Next. So, it wants some Additional security verification information.

[Video description begins] He sign ins with the cblackwell@quick24x7test.onmicrosoft.com user name in the Sign in to your account web page. A web page labeled "Additional security verification" opens. [Video description ends]

So I'm going to specify some details about the phone that I'm going to use. I'll specify the country or region, the phone number. And I'm going to have it, Send me a code by text message. This is going to be the additional Multifactor Authentication factor. So I'm going to go ahead and enter in the six digit code that was texted to my phone, my smartphone number. And I'll click Verify. Then I'll click Done. And at this point it takes me into my Access Panel Application, so we're signed in. But let's test this again. Let's sign out from being logged in as Codey and let's try it again from scratch now that MFA is completely set up. So I'm just going to go ahead and Sign out from that account.

So I'm going to sign back in again, same email address for Codey Blackwell. I'll put in the password for the account. And now it says we've texted your phone with the code. So you need to enter that to sign in. Okay, that's the Multifactor Authentication. So I'm going to put in the code here. And then I will click Verify. I don't want to stay signed in, so I'll choose No. And after a moment, I'm back at the Access Panel Applications screen. So there are many different mechanisms by which a code like that can be received. But in this case, it's just being sent through SMS text. Now, back here in the portal, looking at my All users view in my Azure AD Tenant, let's go back into Multi-Factor Authentication. Notice now that for user Codey Blackwell, it used to be Enabled, but now it's Enforced.

[Video description begins] He switches to the Users | All users blade opens in the Microsoft Azure web portal. Then he clicks the More button, the flyout opens, and he clicks the Multi-factor Authentication option. The multi-factor authentication web page opens. He points to the Enforced row entry under the MULTI-FACTOR AUTH STATUS for the Codey Blackwell user. [Video description ends]

Because that user had signed in since MFA was Enabled.

Azure User MFA Block

[Video description begins] Topic title: Azure User MFA Block. The presenter is Dan Lachance. [Video description ends]

Multifactor authentication, or MFA, enhances users sign in security by requiring an additional factor besides just username and password. However, you can also choose to block MFA user access attempts, to block a user account from authenticating. You might do this if you suspect, for example, a user device has been lost or stolen and you don't want to chance someone being able to log in with that account. Or if a user has left the organization, that type of thing.

[Video description begins] The Home - Microsoft Azure web portal opens. [Video description ends]

So either way, here's what you need to do on the portal to block user MFA. Start by going into Azure Active Directory. And then in the navigation panel, with the properties for Azure AD, go to Security. And within there, then go to MFA.

[Video description begins] He opens the Quick24x7 | Overview blade. Then he clicks an option labeled "Security" in the navigation pane and its corresponding blade opens. It is divided into two sections: navigation pane and content pane. The navigation pane includes options labeled "Getting started" and "MFA". The Getting started option is selected by default and its corresponding blade is open in the content pane. He clicks the MFA option and its corresponding blade opens. It is further divided into two sections: navigation and content pane. The navigation pane includes options labeled "Getting started" and "Block/unblock users". The Getting started option is selected by default and its corresponding blade is open in the content pane. He clicks the Block/unblock users option and its corresponding blade opens. It includes a Blocked users table with four columns and no rows. The column headers are User, Reason, Date, and Action. [Video description ends]

Now in the Multi-Factor Authentication navigation bar, go to Block/unblock users. Now currently, there are no Blocked users, and it does say here that blocking users simply means they will not receive Multi-Factor Authentication requests. So it's denied. And it says here, that the user will remain blocked for 90 days by default, unless you unblock them within this list. So let's go ahead and add a block. I'm going to click Add. And I have to determine which user I want to add to this list.

[Video description begins] In the Block/unblock users blade, he clicks a button labeled "Add" and its corresponding blade labeled "Block a user" opens. [Video description ends]

So in this case, it's going to be cblackwell@, and then I'll put in the entire name of the domain for my Azure AD tenant. So on microsoft.com, in this case, it's using the default suffix. And the reason here will be Lost smartphone, let's say. And at this point, I'll click Ok. So the user will be added to this list, which means that authentication attempts for MFA by that user will not be honored.

[Video description begins] The Block a user blade closes. A new row adds in the Blocked users table. [Video description ends]

So we can see the User is now listed here with the reason of Lost smartphone. Bear in mind, it can take a little while before this kicks in. Now at any point in time, we can choose to unblock that account. We have an Unblock link, instead of waiting for the default 90 day timer. So I'm going to go ahead and click Unblock for that account, and I'm going to put in the reason of, Phone was found.

[Video description begins] He clicks an Unblock link under the Action column header and a blade labeled "Unblock a user" opens. [Video description ends]

And then I'll click Ok. So we're unblocking that account so that MFA authentication for that user will now go back to running as normal.

[Video description begins] The Unblock a user blade closes. The row added in the Blocked users table removes. [Video description ends]

Azure Self-Service Password Reset

[Video description begins] Topic title: Azure Self-Service Password Reset. The presenter is Dan Lachance. [Video description ends]  

If you've ever worked in a helpdesk environment, you're probably well aware that a large majority of tickets deal with user password resets.

[Video description begins] The Home - Microsoft Azure web portal opens. [Video description ends]  

In other words, users forgetting their passwords. Luckily, in Azure AD, we have the option of enabling self-service password reset. So that the user can take care of that issue themselves without opening a helpdesk ticket. So to get started here in Azure, I'm going to go to Azure Active Directory, where I'm then going to go into Users.

[Video description begins] The Quick24x7 | Overview blade opens. [Video description ends]

So I want to go to the All users view. But really, what I want to do here is enable the Password reset option.

[Video description begins] The Users | All users blade opens. [Video description ends]

So in the left-hand navigator, I'll click Password reset. Now currently, we have to determine which set of users we want this to be available to. Currently, it's set to None.

[Video description begins] He clicks an option labeled "Password reset" and its corresponding blade labeled "Password reset | Properties" opens. It is divided into two sections: navigation pane and content pane. An option labeled "Properties" is selected by default in the navigation pane and its corresponding blade is open in the content pane. It includes a toggle button labeled "Self service password reset enabled" with three options labeled "None", "Selected", and "All". [Video description ends]

We can choose Selected, where we can specify groups of users that we want the setting applied to. Or we can turn it on, for All users within the organization. I'm going to choose All and I'm going to choose Save. And after a moment, it will say that the password reset policy has been saved. So let's go ahead and test this out. Let's go back to the Users view. We're going to pick on a user here. Let's see, it's going to be Codey Blackwell. So if I open up Codey Blackwell, we can see the full username, including the DNS suffix for the Azure AD tenant. What we're going to do is try to sign in as this user.

[Video description begins] He opens the Users | All users blade. Then he clicks the Codey Blackwell row entry under the Name column header and its corresponding blade labeled "Codey Blackwell | Profile" opens. He highlights cblackwell@quick24x7test.onmicrosoft.com in the blade. [Video description ends]

And on purpose, we're going to keep entering in an incorrect password. So we're going to behave as a user would if they actually forgot their password. So I'm trying to sign in with that user account. So I've got that username specified here and it's asking for the password.

[Video description begins] He opens the Sign in to your account web page. The cblackwell@quick24x7test.onmicrosoft.com user name is displayed. [Video description ends]

In my case, I'm connecting to account.activedirectory.windowsazure.com/ for that password prompt to pop up. Now the idea is the user would try to enter their password, and it would be incorrect, and so on. So what we're looking at here is the, reset it now button or link. So I'm going to go ahead and click on reset it now.

[Video description begins] A web page labeled "Microsoft Online Password" opens. [Video description ends]

So it knows our User ID because we specified that. And it asks us to enter the characters in the picture or the words in the audio, depending on whether we want to listen or just type in what we see. So I'm going to go ahead and type in those characters. And then I'll click the Next button. I've already enabled MFA on this user account so it already knows my phone number. Otherwise it would be prompting me to specify it. So basically I've already set up the mobile phone communication alternative method. So I'm going to go ahead and enter the full phone number down below. And then I'll click the Text button. So it says, We've sent you a text message containing a verification code. And indeed, that has happened.

So I'm going to go ahead and enter it in. And after that, I will click Next. And this is working perfectly. Now it says well, Get back into your account by specifying a new password and then confirming it. So of course, there are password rules that must be adhered to, and it talks about strong passwords, and so on and so forth. So I'm going to go ahead and enter one in. And then I'll click the Finish button. Okay, it says the password has been reset. To sign in with the new password, click here. So I'm going to go ahead and specify that new password I've just set. And as per normal, because this account happens to also have MFA or Multifactor Authentication enabled, that's why it already knew my phone number, I'm going to enter in the MFA code. So it's business as usual at this point, it liked the password. And I'll just Verify that. I don't want to stay signed in. And just like that, we are now signed in. The user reset their own password without having to involve the helpdesk.

[Video description begins] The Access Panel Application web page opens. [Video description ends]

Azure AD Deleted Users

[Video description begins] Topic title: Azure AD Deleted Users. The presenter is Dan Lachance. [Video description ends]

Azure AD user accounts can be removed using command line tools or programmatically through API calls, and also here in the portal.

[Video description begins] The Users | All users blade opens in the Microsoft Azure web portal. [Video description ends]  

So if we were to select a user, for example, would be able to use the buttons across the top to remove that user, and we might do that if the user has left the organization.

[Video description begins] In the All user table, he selects a checkbox adjacent to the Lucas Brenner row entry under the Name column header. Then he clicks the More button and a flyout opens, which includes an option labeled "Delete user". He points to the Delete user option. [Video description ends]

But what's interesting is that you have 30 days by default within which you have the option of restoring that account. Now after 30 days, the account is removed permanently automatically. So I'm going to click on Deleted users in the left-hand navigator, because I've already got some users I've removed. One of which has the name of Jen Hill.

[Video description begins] A blade labeled "Deleted users" opens. It includes a table with multiple columns and two rows. The column headers are Name, User name, User type, Source, Deletion date, and Permanent deletion date. He points to Jen Hill row entry under the Name column header. [Video description ends]

We can see the Deletion date and time, as well as the Permanent deletion date and time, which is 30 days in the future or 30 days after the Deletion date.

[Video description begins] He points to 3/18/2020, 10:07:40 AM and 4/17/2020, 10:07:40 AM row entries under the Deletion date and Permanent deletion date column headers respectively. [Video description ends]

I'm going to check user Jen Hill, I'll put a checkmark in the box. And up at the top, I have a number of options, so I can Delete permanently right now, instead of waiting for the 30 days. I can restore this individual user or perform a Bulk restore for more than one user at once. I'm going to choose, Restore user.

[Video description begins] He clicks a button labeled "Restore user". A drop box with a message labeled "Restore selected users?" and two buttons labeled "Yes" and "No" appears. [Video description ends]

It asks me, Restore selected users? And I'll click on Yes. So user Jen Hill, then, has successfully been restored. We've seen the notification message. She's no longer listed in the Deleted users view. And if I go back to All users, I'll see that user Jen Hill has been reinstated. So her account is back to normal.

[Video description begins] He opens the Users | All users blade. The Jen Hill row entry under the Name column header has been restored. [Video description ends]

Now one of the things I would ask is, what about group memberships? Are they retained when the user is restored? The answer is yes. So if we go back into user Jen Hill, who's just been restored, and go to the Groups part of her account. We'll see any groups that she was a member of previously have been retained, in this case, a group by the name of Group1.

[Video description begins] He clicks the Jen Hill row entry and its corresponding blade opens. He clicks the Groups option and its corresponding blade opens. It includes the groups table with multiple columns and a row. The column headers include Name and Group Type. He points to Group1 row entry under the Name column header. [Video description ends]

Azure AD User License Assignment

[Video description begins] Topic title: Azure AD User License Assignment. The presenter is Dan Lachance. [Video description ends]  

In Azure AD, licensing gives specific functionality to things like Users, Groups, and even to an Azure AD tenant.

[Video description begins] The Quick24x7 | Overview blade opens in the Microsoft Azure web portal. [Video description ends]  

Here in the portal, I'm looking at the properties of my Azure AD tenant. And it itself, if I scroll down in the navigation bar, has a Licenses option, where we can take a look at Licensed features and so on.

[Video description begins] He clicks an option labeled "Licenses" in the navigation pane and its corresponding blade opens. It is divided into two sections: navigation pane and content pane. The navigation pane includes an option labeled "Overview" and a sub section labeled "Manage". The Manage subsection includes an option labeled "Licensed features". The Overview option is selected and its corresponding blade is open in the content pane. He points to the Licensed features option. [Video description ends]

But I'm going to go back to my tenant and I'm going to go into the Users view.

[Video description begins] He switches to the Quick24x7 | Overview blade. Then he opens the Users | All users blade. [Video description ends]

Because when I go into an individual user, let's say for example I'm going to go into user Jen Hill, that's an existing Azure AD user. Well, when I'm that user's properties, in the navigation bar I see Licenses.

[Video description begins] He clicks the Jen Hill row entry under the Name column header and its corresponding blade opens. [Video description ends]

Now currently on the right, it says No license assignments found.  

[Video description begins] He clicks an option labeled "Licenses" in the navigation pane and its corresponding blade opens. It includes a table with four columns and no rows. The column headers are Products, State, Enabled Services, and Assigned Paths. [Video description ends]

However, I can click the add Assignments button to add licenses for a variety of different products related to Azure AD or Office 365 and so on. 

[Video description begins] A blade labeled "Update license assignments" opens. [Video description ends]

I'm going to click add Assignments, and from here I'll see any licenses that have been made available. So here we have Azure Active Directory Premium P2. So I can turn that on and then I can see the specific options that are available within that license.

[Video description begins] He selects a checkbox labeled "Azure Active Directory Premium P2". A list of four checkboxes labeled "Cloud App Security Discovery", "Microsoft Azure Multi-Factor Authentication", "Azure Active Directory Premium P1", and "Azure Active Directory Premium P2" displays. All the checkboxes are selected. [Video description ends]

Such as Cloud App Security Discovery, Multi-Factor Authentication, and so on. So once I've selected the appropriate license and options, I would click Save to complete the assignment for the user. Now, the only problem is it didn't work and we have an error. I can see my notification area, the little bell icon in the upper right. It's not a big deal. Let's go ahead and click up there and click directly on License assignments failed. Whenever something goes wrong in the Azure portal, make sure you click and follow up on the links because it'll tell you exactly what the issue is.

[Video description begins] A blade labeled "AAD Error Details" opens. It includes a table with four columns and a row. The column headers are Display Name, Status, Details, and Object Id. [Video description ends]

So License assignments failed for the member and down below it says, Licenses cannot be assigned to a user without a usage location specified first.

[Video description begins] He highlights a License cannot be assigned to a user without a usage location specified row entry under the Details column header. [Video description ends]

Okay. Not a problem. Let's close out of that. Let's go back into our Users specifically, let's go into user Jen Hill. She is the person of interest in this example.

[Video description begins] He closes the AAD Error Details blade. Then he opens the Quick24x7 | Overview blade. Then he opens the Users | All users blade. Then he clicks the Jen Hill row entry under the Name column header of the All users table and its corresponding blade opens. The Profiles option is selected by default. The content pane includes a button labeled "Edit". [Video description ends]

On the profile blade if you click Edit down below, you'll see that there's an option for Usage location. So I'm going to go ahead and select that from the list specifically, I'm going to choose Canada. And I'm going to click Save that part of the user profile has been updated, okay. Let's try the Licenses assignment once again now that the users location has been specified for that account.

[Video description begins] He opens the Jen Hill | Licenses blade. [Video description ends]

You add this to the assignment, really I'm going to do the exact same thing we did a moment ago. The only difference is this time, it's going to succeed.

[Video description begins] He again clicks the Assignments button and its corresponding Update license assignments blade opens. He selects the Azure Active Directory Premium P2 checkbox and its corresponding four checkboxes get selected. Then he clicks the Save button and the License assignments succeeded message displays. [Video description ends]

So let's go ahead and just accept that. Let's go back to Jen Hill's licenses and let's click Refresh. You might have to do that a couple of times, but now we see, that the license has been assigned to that user.

[Video description begins] He opens the Jen Hill | Licenses blade and refreshes the table displayed in it. A new row adds in the table. The row entries are Azure Active Directory Premium P2, Active, 4/4, and Direct under the Products, State, Enabled Services, and Assigned Paths column headers respectively. [Video description ends]

Banned Password Lists

[Video description begins] Topic title: Banned Password Lists. The presenter is Dan Lachance. [Video description ends]  

IT administrators and cloud technicians are well aware of the importance of complex and strong passwords.

[Video description begins] The Home - Microsoft Azure web portal opens. [Video description ends]  

But we can also configure in Azure Active Directory a banned password list. So passwords that we absolutely do not want to allow users to use. To do this, we can go to Azure Active Directory, within which, in the navigation bar, we can then click on Security.

[Video description begins] The Quick24x7 | Overview blade opens. Then he opens the Security blade. [Video description ends]

Then we can drill down into Authentication methods. And finally, Password protection. Now we're interested in the Custom banned passwords.

[Video description begins] He clicks an option labeled "Authentication methods" and its corresponding blade opens. It is divided into two sections: navigation pane and content pane. The navigation pane includes options labeled "Authentication method policy (Preview)" and "Password Protection". The Authentication method policy (Preview) option is selected by default and its corresponding blade is displayed in the content pane. He clicks the Password protection option and its corresponding blade opens. [Video description ends]

Now currently, the enforcement of the custom list is set to, No. And so the Custom banned passwords list area, the field down below is gray, we can't get into it. So we have to turn that on. I'm going to choose Yes.

[Video description begins] He selects an option labeled "Yes" in a toggle button labeled "Custom banned passwords Enforce custom list". A text field labeled "Custom banned password list" activates. [Video description ends]

And this is where I can start entering banned passwords. So each of the banned passwords is going to go on its own unique line. And basically, you might include things that might commonly be used by users. That might include common password variations, or in this case, the company name, I don't want that to be used at all. Now what we're doing here, is specifying text that cannot be used as part of the password.

[Video description begins] He types Pa$$w0rd and Quick24x7 in the Custom banned password list text field. [Video description ends]

That doesn't have to be an exact match. And variations, so using the letter O instead of a zero or an S instead of a $, those variations are already considered based on what you put in the list. So it reduces how many items you have to place in here, because really, you are limited to 1,000 lines or 1,000 custom banned passwords. And it's also case insensitive. Meaning here I've got a variation of Quick24x7, well it doesn't matter if it's uppercase or lowercase q, both will be considered as being banned passwords. So once I've added all of my entries, I can then go ahead and click Save. And after a moment we can see we have a message, it saved our password protection policy.

[Video description begins] He clicks a button labeled "Save". A notification message, "Saved password protection policy" displays. [Video description ends]

Bear in mind, it might even take a few hours before this is in effect, before users are not allowed to use variations of items in the Custom banned password list.

Azure AD Licensed Features

[Video description begins] Topic title: Azure AD Licensed Features. The presenter is Dan Lachance. [Video description ends]

For Microsoft Azure and Office 365, you have to acquire the appropriate software licenses and then assign them before users can reap the benefits of having acquired those licenses.

[Video description begins] The Home - Microsoft Azure web portal opens. [Video description ends]  

So they get functional, they can do stuff in the cloud. So we can do this at the Azure AD tenant level. For example, here on the portal I'm going to click Azure Active Directory.

[Video description begins] The Quick24x7 | Overview blade opens. [Video description ends]

And I'm going to go into, well, actually let's go into Users first, because you can also do licensing at the User level. So when I'm looking at my list of users, for example, if I click on a user, let's say Sharon here.

[Video description begins] He opens the Users | All users blade. Then he clicks the Sharon Changed row entry under the Name column header of the All users table. The Sharon Changed | Profile blade opens. [Video description ends]

I can't see any licenses or license assignments for that individual. No license assignments found. We could click the add Assignments button and go through that motion.

[Video description begins] He opens the Licenses blade. Then he clicks the Assignments button and the Update license assignments blade opens. [Video description ends]

However, if I go back here in the breadcrumb trail in the upper left to my Azure AD tenant, notice that we also have Licenses at this level, at the Azure AD directory level. So when I go on the Licenses there, we have a number of options that are available.

[Video description begins] He opens the Quick24x7 | Overview blade. Then he clicks the Licenses option in the navigation pane and its corresponding blade opens. It includes a link labeled "Manage your purchased licenses" under a subsection labeled "Quick tasks". [Video description ends]

So what I'm going to do is click Manage your purchased licenses. When I do that, I'll see any purchased license down below. Now it might be purchased or it might be a try, it might be a trial type of license.

[Video description begins] He clicks the Manage your purchased licenses link and its corresponding blade labeled "Products" opens. It includes a button labeled "Try/Buy" and a table with four columns and a rows. The column headers are Name, Assigned, Available, and Expiring soon. Their respective row entries are Azure Active Directory Premium P2, 1, 99, and 0. [Video description ends]

So I can see how many are assigned, that would be assigned to users, how many are available, and how many will expire soon. Now when I click Try / Buy at the top, here I get some samples or free trials.

[Video description begins] He clicks the Try/Buy button and a blade labeled "Activate" opens. [Video description ends]

In this case for ENTERPRISE MOBILITY+ SECURITY E5. And I have a More information link to learn about that. And I also have AZURE AD PREMIUM P2, More information, Free trial. I've also got a link here where I could view the Purchase services catalog online to purchase additional license items here. So for example, if I go under Free trial for ENTERPRISE MOBILITY+ SECURITY E5, which gives me a lot of extra options, as it says. So it gives us solutions to address BYOD and SaaS challenges. And it says, in addition to giving you the Azure AD Premium P2 options, you also get Microsoft Intune for a cloud based mobile device management, Azure Rights Management, and so on. So once you've read about this offering that you're interested in, if it's a free trial that you've not yet used, you can try to activate it. If you've already used it, it'll say so.

[Video description begins] He clicks a button labeled "Activate" for the ENTERPRISE MOBILITY + SECURITY E5 cloud solution. [Video description ends]

Otherwise, you'll be able to activate it at least once here. Okay, well, that looks good, but how come I don't see it in the list? It's just a refresh issue, let's go back to Licenses | Overview. And let's go to Manage your purchased licenses. Now if you still don't see it, just go ahead and sign out of your web browser session.

[Video description begins] The Products blade opens. A new row adds in the table. The row entries are Enterprise Mobility + Security E5, 0, 250, and 0 under the Name, Assigned, Available, and Expiring soon column headers respectively. [Video description ends]

Close your browser, come back in, and navigate back to your tenants licenses, and you'll be able to see it here. If I were to go back, let's say back into my tenant, you can also go into your Licenses, and you'll also see the same thing under All products.

[Video description begins] He opens the Quick24x7 | Overview blade. Then he opens the Licenses | Overview blade. Then he opens the All products blade. It includes an All products License table with four columns and two rows. The column headers are Name, Assigned, Available, and Expiring soon column headers. [Video description ends]

So we can now see what we started off with. Azure Active Directory Premium P2 and Enterprise Mobility + Security E5, which I've just activated in terms of a free trial. And none are Assigned. However, there are 250 Available.

[Video description begins] He points to Azure Active Directory Premium P2 and Enterprise Mobility + Security E5 row entries under the Name column header. Then he points to 0 and 250 row entries under the Assigned and Available column headers respectively for the Enterprise Mobility + Security E5 cloud solution. [Video description ends]

So what I could do, for example, say, okay, I want to assign this stuff. So I'm going to go in my Active Directory Premium, and here I can see I've got one licensed user. Well, I want everyone to be licensed to take advantage of this feature set.

[Video description begins] He clicks the Azure Active Directory Premium P2 row entry and its corresponding blade labeled "Azure Active Directory Premium P2 | Licensed users" opens. It includes a button labeled "Add" and a table with five columns and a row. The column headers are Name, User Name, State, Enabled Services, and Assignment Paths. [Video description ends]

So I can click the add Assign button up at the top and here I could choose Users and groups. So maybe I'll choose my existing dynamic group called All Enabled Users, which contains all enabled accounts in Azure AD. I created that previously.

[Video description begins] He clicks the Add button and its corresponding blade labeled "Assign license" opens. It contains two sections labeled "Users and groups" and "Assignment options". He clicks the Users and groups section and its corresponding blade opens. It includes a search box and a users and groups list. Some of the users and groups are labeled "All Enabled Users" and "Codey Blackwell". He selects the Enabled Users group. Then he clicks a button labeled "Select" and the blade closes. In the Assign license blade, under the Users and groups section, "1 group selected" message is displayed. [Video description ends]

Now I'll just go ahead and do the assignment. And it says, okay, it's been scheduled for processing.

[Video description begins] He clicks a button labeled "Assign" and the Assign license blade closes. [Video description ends]

And at some point I'll be able to come back and refresh this and see the users that are affected. And we can do the same thing for other licensed products like Enterprise Mobility. Let's just go ahead and turn that on, and I'm going to click add Assignment.

[Video description begins] He closes the Licensed users blade and the Licenses | All products blade displays. Then he clicks the Enterprise Mobility + Security E5 row entry in the All products license table and its corresponding blade labeled "Enterprise Mobility + Security E5 | Licensed users" opens. It is divided into two sections: navigation pane and content pane. The navigation pane contains options labeled "Licensed users", "Licensed groups", and "Service plan details". The Licensed users option is selected by default and its corresponding blade is open in the content pane. It includes a table with five columns and no rows. The column headers are Name, User Name, State, Enabled Services, and Assignment Paths. [Video description ends]

And again, I'll just select my existing All Enabled Users dynamic group, go ahead and assign that. I'm going to get the same type of message, License assignment has been scheduled, okay.

[Video description begins] He clicks the Assign button and the Assign license blade opens. Then he clicks the Users and groups section and its corresponding blade opens. He selects the All Enabled Users group. Then he selects the Select button. The Users and groups blade closes. Then he clicks the Assign button and the Assign license blade closes. [Video description ends]

So it's just a matter of waiting and coming back, a little bit later to take a look at this. So after a moment of refreshing, we'll see all of the users that have been assigned this license.

[Video description begins] He opens the Azure Active Directory Premium P2 | Licensed users blade. Then he clicks the Refresh button and the All users license table refreshes. [Video description ends]

Now notice our original user, Jen Hill, is listed here with a Direct assignment. Although, because she's also part of the All Enabled Users group, she Inherited it again. But the other users are listed only as Inherited through being a member of the All Enabled Users group. Let's look at this from the user perspective, just for fun. How about we pick on Lucas Brenner? So I'm going to go back to my tenant, I'm going to go back to my list of users.

[Video description begins] He points to Lucas Brenner row entry under the Name column header. Then he opens the Quick24x7 | Overview blade. [Video description ends]

And let's open up Lucas Brenner.

[Video description begins] He opens the Users | All users blade. Then he clicks the Lucas Brenner row entry under the Name column header in the All users table and its corresponding blade opens. [Video description ends]

Because we can go to the individual user, it could also be a group for that matter. But anyway, we can look at the Licenses blade for that user and we can see which products have been assigned.

[Video description begins] He opens the Lucas Brenner | Licenses blade. [Video description ends]

We can see both the Azure Active Directory Premium P2 and Enterprise Mobility + Security E5 have been assigned to this user. And we can see how that happened, it was inherited by being a member of the All Enabled Users group.


Subscription Assignment
You can use the Azure portal to assign subscriptions to a different Azure AD tenant.

[Video description begins] The Home - Microsoft Azure web portal opens. [Video description ends]  

So here in the portal, I'm already signed in to a tenant with the name of QUICK24X7. And if I take a look at the Subscriptions for that tenant, we can see that there are none.

[Video description begins] He clicks the Subscriptions option under the Azure services section and its corresponding blade opens. It includes a button labeled "Add" and a subscriptions table with five columns and no rows. The column headers are Subscription name, Subscription ID, My role, Current cost, and Status. [Video description ends]

However, we could add one, but I already have a subscription that's active, that is associated with a different Azure AD tenant that I no longer want to use. So, I can move it over to this one, let's flip over to another Azure AD tenant where that subscription resides. So, I'll click on my sign in information in the upper right here on the portal, I'll click Switch directory, and under All Directories, I'm going to switch over to one called FakeCo that I've pre-created. Now this one has a subscription, let's click on Subscriptions, just to take a peek.

[Video description begins] The Home - Microsoft Azure web portal opens for the Fake User tenant. [Video description ends]

It's a Pay-As-You-Go subscription, well, I want to move that over.

[Video description begins] The Subscriptions blade opens which includes the subscriptions table. He points to Pay-As-You-Go row entry under the Subscription Name column header. [Video description ends]

So I'm going to click on it to open up its details, and notice that I have a Change directory link at the top when I'm viewing the details of that subscription.

[Video description begins] He clicks the Pay-As-You-Go row entry and its corresponding blade labeled "Pay-As-You-Go" opens. It is divided into two sections: navigation pane and content pane. The navigation pane includes various options. Some of them are labeled "Overview" and "Tags". The Overview option is selected by default and its corresponding blade is open in the content pane. It includes buttons labeled "Rename" and "Change directory". He clicks the Change directory button and its corresponding blade labeled "Change the directory" opens. [Video description ends]

So, from the drop down list, I'm going to choose the target tenant, the Azure AD tenant I want to move to, so I've selected it from the list, and then I'm going to click the Change button.

[Video description begins] In the Change the directory blade, he selects an option labeled "Quick24x7" tenant id in a drop-down list box labeled "Select a directory". [Video description ends]

And then we'll have a message, that tells us the subscription was moved to the new directory and to switch to the new directory to see it. So I'm going to go ahead and click on my sign in information in the upper right, and I'm going to click Switch directory, and I'm going to switch to the target, in this case, Quick24x7. Now, remember, when we started this there were no subscriptions associated here, let's go to Subscriptions, and let's take a peek. 

[Video description begins] The Home - Microsoft Azure web portal opens for the Quick24x7 tenant. Then he opens the Subscriptions blade. A new row adds in the subscriptions table. The row entries under the Subscription name and Status column headers are Pay-As-You-Go and Active respectively. [Video description ends]

Now if you don't see the newly moved subscription, all you need to do is just sign out, close your browser and come back in, and it'll be there.


Smart Lockout
One way to mitigate brute force password attacks is to ensure that user accounts get locked out after a specific number of incorrect password attempts.

[Video description begins] The Quick24x7 | Overview blade opens in the Microsoft Azure web portal. [Video description ends]  

And in Azure AD that's called the smart lockout feature. So we're going to take a look at that. Here in the portal, I've navigated to my Azure AD tenant. The next thing that I want to do is take a look at the smart lockout feature. And I do that by going down under Security.

[Video description begins] He opens the Security | Getting started blade. [Video description ends]

Then I go into Authentication methods. Then I go to the Password protection menu option in the left-hand navigator.

[Video description begins] He opens the Authentication methods blade. Then he opens the Password protection blade. [Video description ends]

Now you'll see a few things on the right here like a Custom banned password list and so on. But we've also got Lockout threshold which is set currently to a value of 10. I'm going to reduce that to a value of 3. So this means that we want the account to be locked, a user account to be locked after three incorrect login attempts, now for how long?

[Video description begins] He types 3 in a text box labeled "Custom smart lockout Lockout threshold". [Video description ends]

The default here is 60 seconds. I'm going to increase that to 120. So for 120 seconds, we have to have no password attempts before it can be tried again. And ideally the user will log in successfully if they know the correct password this time.

[Video description begins] He types 120 in a text box labeled "Lockout duration in seconds". [Video description ends]

Otherwise, after three attempts again it gets locked out again 120 seconds. So this is a great, simple, and easy way to countermeasure brute force password attacks. I'm going to go ahead and Save the setting.

[Video description begins] He clicks a button labeled "Save". Then he opens the Sign in to your account web page. It displays the cblackwell@quick24x7test.onmicrosoft.com user name. [Video description ends]

So when a user is signing in, let's say they enter the incorrect password a number of times. I'm just going to keep going through, they think they know the password but of course they just don't know. Notice that we eventually get a message after the third time that says Your account is temporarily locked to prevent unauthorized use. So the user would have to wait a minimum of 120 seconds before even trying again to get in, assuming that they know the correct password.                    

                    
Azure AD Groups and the Portal

[Video description begins] Topic title: Azure AD Groups and the Portal. The presenter is Dan Lachance. [Video description ends]

Managing user permissions, such as to which enterprise apps they have access to, can be cumbersome when you do it on a per user basis. Can do it at the group level, too. Organizing users into groups, assigning permissions to the groups. So what we're going to do here in the portal is create an Azure AD group and

[Video description begins] The Microsoft Azure portal is open. In the portal, a blade called "Quick24×7" is open. It is divided into two parts: navigation pane and content pane. In the navigation pane, an option labeled "Overview" is selected and its corresponding page is open in the content pane. [Video description ends]

add some members. To get started, I've already navigated the portal to my Azure AD tenant, where I'll then click Groups in the left hand navigator.

[Video description begins] A blade called "Groups" opens. It is divided into two parts: navigation pane and content pane. In the navigation pane, an option labeled "All groups" is selected and its corresponding page is open in the content pane. It includes a table with two rows and several column headers. [Video description ends]

I can see any existing groups. Here we can see we've already got a Dynamic group where a membership is determined dynamically by looking at user attributes. And we've also got a standard statically Assigned group, which we'll be creating here. So I'm going to click New Group at the top. This group is going to be called EastAdmins.

[Video description begins] A blade called "New Group" opens. [Video description ends]

So the group type will be Security, as opposed to Office 365,

[Video description begins] He clicks a drop-down list box labeled "Group type" and a drop-down list opens. In the list, he points to options labeled "Security" and "Office 365". [Video description ends]

the name will be EastAdmins. I can put in a Group Description, and the Membership type here is set by default to Assigned, and that's what I want to do.

[Video description begins] He clicks a drop-down list box labeled "Membership type" and a drop-down list opens. In the list, he points to an option labeled "Dynamic User". [Video description ends]

What that means is that you're adding the members of the group manually, as opposed to a Dynamic User group where you specify rules that contain one or more expressions that determine whether the user is a member of the group or not.

[Video description begins] A blade called "Add members" opens. [Video description ends]

Well, in this case, it's just going to be Assigned.

[Video description begins] In a search box labeled "Search", he enters the text, "group". [Video description ends]

So down under Members I'm going to click No members selected, and I'm going to add some members.

[Video description begins] He enters the text, "lucas" in the search box. [Video description ends]

Now the members can even be existing groups.

[Video description begins] In the search results, he selects a user labeled "Lucas Brenner" and the user appears in a section labeled "Selected items". [Video description ends]

So here I've got a dynamic group called All Enabled Users that I could add as a member.

[Video description begins] He enters the text, "jen" in the search box.

And if I look for the word group, I've also got a static assigned group called Group1 that could also be a member of the group.

[Video description begins] In the Selected items section, he points to the Lucas Brenner and Jen Hill users. [Video description ends]

So groups can be nested in other words. However, that's not what I'm going to do here.

[Video description begins] The Add members blade closes. [Video description ends]

I'm just going to add a couple of standard user accounts that I've created in Azure AD.

[Video description begins] In the New Group blade, he clicks a button labeled "Create" and the blade closes. In the table, a new row is added. [Video description ends]

So I'm going to type in, for example, Lucas. I'm going to add this user, Lucas Brenner down here under Selected items, and I'm going to add user Jen Hill, so I'll add her down below.

[Video description begins] He clicks the new row and its corresponding blade opens. It is divided into two parts: navigation pane and content pane. [Video description ends]

So those are the members of this group.

[Video description begins] In the navigation pane, he selects an option labeled "Members" and its corresponding page opens in the content pane. The page includes two members labeled "Jen Hill" and "Lucas Brenner". [Video description ends]

So I'll go ahead and click on Select and Create.

[Video description begins] He selects the Jen Hill member and points to buttons labeled "Remove" and "Add members". [Video description ends]

Now, we can now see after a moment, and we have our Successfully created group notification in the upper right.

[Video description begins] He points to a button labeled "Import members". [Video description ends]

We'll notice that we have our EastAdmins group and that Azure has assigned an object Id.

[Video description begins] In the navigation pane, he selects an option labeled "Owners" and its corresponding page opens in the content pane. It includes a table with several column headers and no rows. [Video description ends]

To Security group it's Assigned, and if I click on it at any point in time, I can go back and see the members of the group, and I can also of course change the members of the group.

[Video description begins] The corresponding blade opens. It includes a user called "Codey Blackwell". [Video description ends]

So I could select somebody here and Remove them, I could Add members. I could even do a bulk import of members if I have a CSV file formatted correctly.

[Video description begins] He selects the Codey Blackwell user and it appears under a section labeled "Owners". [Video description ends]

I could also go to group owners if I want to determine who should have the ability to control the group, to manage it, in terms of adding and removing members.

[Video description begins] In the table, a row is added with a row entry labeled "Codey Blackwell". [Video description ends]

So for example, if I click Add owners, I can do that. I'm going to add user Codey Blackwell as the owner of the group.

[Video description begins] He switches to the All groups page. [Video description ends]

Click Select, and there's user Codey Blackwell. So at this point we now have created a new group by the name of EastAdmins, and its purpose is to really facilitate the assignment of permissions.

Azure AD Groups and the CLI

[Video description begins] Topic title: Azure AD Groups and the CLI. The presenter is Dan Lachance. [Video description ends]

Azure AD groups can be created and managed at the command line using the as your CLI, which I'm going to spawn here in the portal by clicking on the Cloud Shell icon.

[Video description begins] The Microsoft Azure portal is open. In the portal, the Quick24×7 blade is open. [Video description ends]

Now, it says that my Cloud Shell has timed out, which indicates I was previously connected. 

[Video description begins] A pop-up box appears. [Video description ends]

So I'm just going to click the Reconnect button to relaunch the Cloud Shell.

[Video description begins] A page called "PowerShell" opens, which includes the text, "Requesting a Cloud Shell.Succeeded". [Video description ends]

The first thing we're going to have to do is figure out what the command syntax will be in the CLI so that we can create and also that we can manage groups in the cloud. So after a moment, we're good to go.

[Video description begins] In the page, the text, "Welcome to Azure Cloud Shell" appears and the prompt "PS /home/danlachance72>" is displayed. [Video description ends]

So I'm going to clear, we reconnected to our Cloud Shell session.

[Video description begins] He executes the following command: clear. No output returns and the screen clears. [Video description ends]

I'm going to start by running az ad -h for help, because I don't know what the next level command is. And I see that we have group.

[Video description begins] The output displays a group called “az ad” and a list of subgroups with their descriptions. The prompt does not change. [Video description ends]

So following that I can do az ad group, I know that part of the syntax, and then -h after that.

[Video description begins] He executes the following command: az ad group -h. The output displays a group called “az ad group” and a list of subgroups and commands with their descriptions. [Video description ends]

And then we'll see what we can do about groups.

[Video description begins] In the output, he points to "member" and "owner" subgroups. [Video description ends]

So we can work with members, owners, we can create a group, we can delete a group, we can get member groups, we can list groups in Azure AD or show details about an individual group, a lot of options here.

[Video description begins] In the output, he highlights the commands. [Video description ends]

So let's take a look at how they actually work.

[Video description begins] He executes the following command: clear. No output returns and the screen clears. [Video description ends]

All right, so I'm going to start with az ad group create, and I'm going to set --display-name, in this case to Team1. Next thing I have to do is add a mail nickname, --mail-nickname, and it's going to be the same thing in this case, Team1. So I've created a new group. And we're going to verify this in a couple of ways, one being in the portal.

[Video description begins] He executes the following command: az ad group create --display-name "Team1" --mail-nickname "Team1". The output displays several properties of the Team1 group. The prompt does not change. [Video description ends]

So let's take a look at our groups and our Azure AD tenant. And yeah, there's Team1 that worked, let's go back into the CLI, and let's verify our work in here as well. So we'll start by running az ad group list.

[Video description begins] He minimizes the page. In the navigation pane, he selects the Groups option and the Groups blade opens. In the navigation pane, the All groups option is selected and its corresponding page is open in the content pane. In the table, a new row is added with a row entry labeled "Team1". [Video description ends]

That's going to list all of our groups, well a little bit too much detail, actually.

[Video description begins] He switches to the PowerShell page and executes the following command: clear. No output returns and the screen clears. [Video description ends]

So why don't we use the up arrow key to bring that back.

[Video description begins] He executes the following command: az ad group list. The output displays a list of groups with their properties. The prompt does not change. He then executes the following command: clear. No output returns and the screen clears. [Video description ends]

One thing we could do is pipe that to grep, and simply ask for the displayName attribute. And grep is case sensitive, so be careful that you have a capital N in displayName. You can always turn off case sensitivity. But anyways, that's the default.

[Video description begins] He executes the following command: az ad group list | grep displayName. The output displays the display name for all the groups in the directory. The prompt does not change. [Video description ends]

So we can see that our Team1 group exists, it's been created. Now what I want to do is I want to see any members within that group. So if I do az ad group member list, of course the group here in this case it's called Team1. Well, we're going to get a whole lot of nothing because nobody has been added, it's brand new group.

[Video description begins] He executes the following command: az ad group member list -g Team1. The output reads "[]". The prompt does not change. [Video description ends]

Now I want to add a user to the group. So let's start by running az ad user show. And I want to really see the ID. So the user here is going to be lbrenner@quick24x7test.onmicrosoft.com. So that's the full username for that account. And really what I want to see, I'm going to pipe that grep. I want to see the objectId, capital I with Id there.

[Video description begins] He executes the following command: az ad user show --id lbrenner@quick24×7test.onmicrosoft.com | grep objectId. The output displays an object Id for the user "lbrenner@quick24×7test.onmicrosoft.com". [Video description ends]

Okay, so I need this ID, because that's what I'm going to use to add that user lbrenner to the Team1 group. So I'm going to copy that ID.

[Video description begins] In the output, he highlights the object Id. [Video description ends]

So it's continuing on az ad group member add in this case the group with -g is Team1 in this case, and -- member-id. This is where I'm going to right click and paste in the ID for that user. Okay, let's press Enter and see what happens.

[Video description begins] He executes the following command: az ad group member add -g Team1 --member-id a4f37257-5458-4576-bced-7c017d999dc7. No output returns and the prompt does not change. [Video description ends]

Well, no news is good news. Let's clear the screen and let's run az ad group.

[Video description begins] He then executes the following command: clear. No output returns and the screen clears. [Video description ends]

We'll not list because we want to show details about a specific group. So show -g Team1. Let's see what we see here. Okay, well, we have a lot of properties there, it's a little overwhelming.

[Video description begins] He executes the following command: az ad group show -g Team1. The output displays several properties of the Team1 group. The prompt does not change. [Video description ends]

Let's bring that up with the up arrow key again, maybe we'll pipe that to grep. 

[Video description begins] He executes the following command: clear. No output returns and the screen clears. [Video description ends]

We can also use the --query parameter here in this electing to use grep for no good reason just because. All right, object Id is what we're greping for, and it looks like we've got the ID here shown.

[Video description begins] He executes the following command: az ad group show -g Team1 | grep objectId. The output displays an object Id of the Team1 group. The prompt does not change. [Video description ends]

Now this is the ID of the group. Okay, let's just check our work here in the portal, we'll see if things are lining up. So I'm just going to minimize this, and there's Team1.

[Video description begins] He minimizes the page. [Video description ends]

So I can see the ID for Team1 there. We'll also see that here when we go into the overviews, so the Object Id is 150ddca7 and so on.

[Video description begins] In the table, he clicks the Team1 row entry and its corresponding blade opens. It is divided into two parts: navigation pane and content pane. In the navigation pane, an option labeled "Overview" is selected and its corresponding page is open in the content pane. [Video description ends]

That's pretty much what we saw back here, okay, so that's the correct group.

[Video description begins] He switches to the PowerShell page and points to the object Id. [Video description ends]

And let's look at the members of this group.  

[Video description begins] He minimizes the page. He then selects an option labeled "Members" in the navigation pane and its corresponding page opens in the content pane. [Video description ends]

We'll see that our user, Lucas Brenner, has been added.

Azure AD Groups and PowerShell

[Video description begins] Topic title: Azure AD Groups and PowerShell. The presenter is Dan Lachance. [Video description ends]

You can use PowerShell to create and manage Azure AD groups. Sometimes this is advantageous because you might want to script something or maybe you're just more comfortable and quicker working at the command line in PowerShell than you are using the portal.

[Video description begins] The PowerShell page is open in the Microsoft Azure portal. The prompt "PS /home/danlachance72>" is displayed. [Video description ends]

Then here within the portal, I've clicked the Cloud Shell icon, and that's where I'm going to run my PowerShell cmdlets. You could just as well do this if you've downloaded and installed the Azure module on-premises. Here, I'm doing Cloud Shell just because. So the first thing I'm going to do is run get-command. And I'm going to assume that the command is something like new*group,* maybe something after it, who knows? I don't know the name of the cmdlet.

[Video description begins] He executes the following command: get-command new*group*. The output displays a list of cmdlets . The prompt does not change. [Video description ends]

Then we get quite a bit of a return list, so I'm just going to kind of go up through and take a look to see. It looks like this one's the one we're interested in, New-AzADGroup.

[Video description begins] He scrolls up through the output and highlights a cmdlet called "New-AzADGroup". [Video description ends]

And if we want help on it, we can run get-help new-azadgroup, we can even ask for detail, I can even pipe that to more to stop after the first screen fall. So we have a synopsis, Creates a new active directory group. True, in Azure it does.

[Video description begins] He executes the following command: clear. No output returns and the screen clears. He then executes the following command: get-help new-azadgroup -detail | more. The output displays the details of New-AzADGroup. The prompt does not change. [Video description ends]

We can see the syntax listing, and as we keep going through the help screen, we can see the parameters.

[Video description begins] In the output, under "SYNTAX", he highlights "New-AzADGroup". [Video description ends]

And finally, we have an example of how it's used at the bottom. So it looks like we're going to specify the DisplayName and the MailNickname.

[Video description begins] He scrolls down through the output and highlights the text, "PS C:\> New-AzADGroup -DisplayName "MyGroupDisplayName" -MailNickname "MyGroupNick". [Video description ends]

Okay, it looks pretty easy, let's clear the screen let's make it happen, new-azadgroup -displayname.

[Video description begins] He executes the following command: clear. No output returns and the screen clears. [Video description ends]

Now you have to have planned the nomenclature ahead of time and it needs to be consistent and adhere to organizational naming conventions. I'm going to call this "Team2", and I'm going to set the -mailnickname. Also to, actually, I'm not going to specify it here, because if I don't, it'll simply prompt me if it's mandatory, which it is. So we know we could use -MailNickname and give a nickname to it because we haven't, it prompts us for it.

[Video description begins] He executes the following command: new-azadgroup -displayname "Team2". The window prompts "MailNickname:". [Video description ends]

And that's fine, that's normal behavior. However, if you want to automate this in a script, well, you're going to want to use the -MailNickname parameter then, so it doesn't stop and ask for this when the script runs.

[Video description begins] He enters "Team2" and some details are displayed. The prompt does not change. [Video description ends]

Anyways, I'm just going to put in Team2, it looks like it's good, so let's clear the screen, let's run get-azadgroup to list them all.

[Video description begins] The output displays a list of groups with their details. [Video description ends]

And we can see a number of groups here including Team2, and of course, here in the portal, let's just go to Groups All groups, well, I may have to click Refresh. And there it is, Team2 is now there with the Azure assigned Object Id.

[Video description begins] In the table, a new row is added with a row entry labeled "Team2". [Video description ends]

And we can see the default group type is that the membership will be Assigned. In other words, users are statically assigned or added to the group. Now, I want to add a member to Team2, so I need to go and look at my Users. I could do this of course from PowerShell or even the CLI, I'm going to pick user Jen Hill.

[Video description begins] He opens the Quick24×7 blade. In the navigation pane, he selects an option labeled "Users" and a blade labeled "Users" opens. It is divided into two parts: navigation pane and content pane. In the navigation pane, an option labeled "All users" is selected and its corresponding page is open in the content pane. The page includes a list of users. [Video description ends]

What I'm interested in regards to that user is her Object ID.

[Video description begins] He selects a user called “Jen Hill” and the corresponding blade opens. [Video description ends]

So I'm going to go ahead and copy that to the clipboard.

[Video description begins] He selects an icon labeled “Copy to clipboard” adjacent to the value in a text box called “Object ID”. [Video description ends]

Let's go back into PowerShell, where I'm going to add a member to the group.  

[Video description begins] He clicks a button labeled "Cloud Shell" and the PowerShell page opens. [Video description ends]

So what I'm going to do is run the add-azadgroupmember -memberobjectid, and I'm going to paste in Jen Hill's user Object ID that was assigned by Azure. But I've also got to specify the -targetgroupobjectid.

[Video description begins] He enters the following command: add-azadgroupmember -memberobjectid 9e2d30e1-36e1-4d96-8a24-dab15a19ea36 -targetgroupobjectid. [Video description ends]

I could have stored that in a variable or retrieved it using command line tools, but here I'm just going to go back into the portal just to demonstrate where it is visually.

[Video description begins] He minimizes the page and switches to the Quick24×7 blade. [Video description ends]

And I'm going to go into Team2, and once that pops up, I'm interested in the Team2 group's object Id, which is listed here, I'll just click the Copy to clipboard icon.

[Video description begins] In the navigation pane, he selects the Groups option and the Groups blade opens. The All groups page is open in the blade. [Video description ends]

And let's go back and let's paste that into PowerShell, let's press Enter.

[Video description begins] In the table, he clicks the Team2 row entry and its corresponding blade opens. The Overview page is open in the blade. [Video description ends]

So we've added a user to the group by specifying both the user object ID and the group object ID.

[Video description begins] He clicks the Cloud Shell button and the PowerShell page opens. [Video description ends]

So if we were to, for example, check our work here in the portal, let's take a look at the members of the Team2 group.

[Video description begins] He executes the following command: add-azadgroupmember -memberobjectid 9e2d30e1-36e1-4d96-8a24-dab15a19ea36 -targetgroupobjectid 5ca25352-a337-4d70-ae42-0c73e19178d7. No output returns and the prompt does not change. [Video description ends]

We now see Jen Hill is listed, we can also verify that using PowerShell.

[Video description begins] He minimizes the page. In the navigation pane, he selects an option labeled "Members" and its corresponding page opens in the content pane. [Video description ends]

To that, I'll use get-azadgroupmember, I'll use the -groupobjectid parameter. 

[Video description begins] He clicks the Cloud Shell button and the PowerShell page opens. [Video description ends]

And here, I've pasted in the Azure assigned ID for that group.

[Video description begins] He executes the following command: get-azadgroupmember -groupobjectid 5ca25352-a337-4d70-ae42-0c73e19178d7. The output displays the details of the Jen Hill member. The prompt does not change. [Video description ends]

And if I press Enter, indeed, we see user Jen Hill is now a member of Team2. 

Azure AD Deleted Groups

[Video description begins] Topic title: Azure AD Deleted Groups. The presenter is Dan Lachance. [Video description ends]

In Microsoft Azure, you can create and manage Office 365 groups which might be used to control access to SharePoint sites, or to Exchange mailboxes, and so on. Here in the portal, I've gone into my Azure AD tenant.

[Video description begins] The Microsoft Azure portal is open. In the portal, the Groups blade is open. In the navigation pane, the All groups option is selected and its corresponding page is open in the content pane. [Video description ends]

I've gone into the All groups view. And I can see I've got a number of existing security groups.

[Video description begins] He points to the content pane. [Video description ends]

Well, when I delete a security group, it doesn't show up under Deleted groups. I can't restore it.

[Video description begins] In the navigation pane, he points to an option labeled "Deleted groups". [Video description ends]

That only applies to Office 365 types of groups. So let's start by building a new Office 365 group.

[Video description begins] He clicks a button labeled "New group" and the New Group blade opens. [Video description ends]

So first thing we're going to do is make sure we choose the appropriate type, because the default is infact Security. So I'm going to choose Office 365. We're going to call it Off365Group for clarity.

[Video description begins] He clicks the Group type drop-down list box and a list opens. He selects the Office 365 option. [Video description ends]

And we could either have it Assigned, where we statically add members to the group. 

[Video description begins] In a text box labeled "Group name", he enters the text, "Off365Group". [Video description ends]

Or we could have a Dynamic User group, where we build rules that contain expressions, the user attributes to determine membership.

[Video description begins] He clicks the Membership type drop-down list box and a drop-down list opens. He then points to options labeled "Assigned" and "Dynamic User". [Video description ends]

I'm just going to leave it on Assigned, not even going to add any members, just going to click Create.

[Video description begins] The blade closes. In the table, a new row is added with a row entry labeled "Off365Group". [Video description ends]

So we've got our new Off365Group, and of course under the Group Type column, notice it says Office. So I'm going to go ahead and select that group and Delete it. So Delete the selected groups? OK.

[Video description begins] He selects the row with the Off365Group row entry and clicks a button labeled "Delete". A message box opens. [Video description ends]

At the same time, I'm going to choose a Security group, it's not Office 365.

[Video description begins] The selected row is deleted. [Video description ends]

It's called Team1, and I'm going to Delete it as well, and I'll choose OK. So now when we go to the Deleted groups view, notice the only thing we see is the Off365Group.

[Video description begins] He selects an option labeled “Deleted groups” in the navigation pane and the corresponding page opens in the content pane. [Video description ends]

Because Security groups don't get this option where you have up to 30 days where you can restore the group. So I can select my Off365Group. I can elect to delete it permanently, or I can choose to restore it and its members, if there are any members. So I'm going to go ahead and choose Restore group Yes, want to go back to All groups.

[Video description begins] A message box opens, which reads: Do you want to restore deleted groups? He selects a button labeled “Yes”. The selected row is removed from the table. [Video description ends]

The Off365Group now shows up again. So any group members that were a member of that group before I deleted it will still be a member. Just bear in mind that when you delete groups, you are never deleting the members of that group, just the group itself.

Azure AD Windows 10 Device Join

[Video description begins] Topic title: Azure AD Windows 10 Device Join. The presenter is Dan Lachance. [Video description ends]

You can join Windows 10 devices to an Azure AD tenant. And the benefit of doing this is for centralized management. It allows the station to be joined to the domain, and it allows users to use that station and sign in with their Azure AD credentials and gain access to cloud based resources. So to get started here in the portal, let's go to our Azure AD tenant.

[Video description begins] The Microsoft Azure portal is open. In the portal, a page called "Home" is open. [Video description ends]

Let's go to the Devices view. Currently there are no devices in this tenant.

[Video description begins] He clicks an option labeled "Azure Active Directory" in a section labeled "Azure services" and the Quick24×7 blade opens. From the navigation pane, he selects an option labeled "Devices" and a blade called "Devices" opens. It is divided into two parts: navigation pane and content pane. In the navigation pane, an option labeled "All devices" is selected and its corresponding page is open in the content pane. The page includes a table with no rows and several column headers. [Video description ends]

It says no device found, but that will change shortly. Let's go back to our tenant and let's go into our list of users.

[Video description begins] He switches to the Quick24×7 blade. From the navigation pane, he selects the Users option and the Users blade opens. In the navigation pane, the All users option is selected and its corresponding page is open in the content pane. [Video description ends]

Because you need to join a Windows 10 device to the domain, given a specific set of user credentials, and we're going to use Mr. Lucas Brenner.

[Video description begins] He clicks a user called "Lucas Brenner" and its corresponding blade opens. A page called “Profile” is open in the content pane. [Video description ends]

So I'm going to go ahead and copy this person's email address. And of course I have the password as well and we're going to use these credentials to join a Windows 10 device to the tenant. Here on my Windows 10 computer, I've gone into Windows settings from the start menu and I'm going to search for work. And I'm going to choose access work or school.

[Video description begins] The corresponding page opens. [Video description ends]

And this is where we want to connect to Azure AD Connect to our account. So I'm going to click Connect. And at this point, it's going to ask for credentials. So I'm going to put in the email address for Lucas Brenner.

[Video description begins] A wizard labeled "Microsoft account" opens. In the wizard, a page is open, which includes a section labeled "Set up a work or school account". [Video description ends]

And I'm going to click Next. Of course, the next thing is it's going to want to know is what's the password for that account? Go ahead and put that in and I'll click Sign in. So we can see it's registering the device with Azure AD and after a moment, it'll say you're all set! You've added your account, you now have access to your organization's apps and services. That's great.

[Video description begins] The wizard closes. [Video description ends]

If I click the Done button after a moment when the screen refreshes, we can see here that this computer is connected to an Azure account so we can see the email address listed here.

[Video description begins] An option labeled "Work or school account" appears with the e-mail address "lbrenner@quick24×7test.onmicrosoft.com". [Video description ends]

Let's go back and check it out in the portal. So back here in the portal, let's go to our Azure AD tenant and let's go to the Devices view.

[Video description begins] He switches to the Microsoft Azure portal. [Video description ends]

And sure enough, we can see the Windows computer name here.

[Video description begins] He switches to the Quick24×7 blade. From the navigation pane, he selects the Devices option and its corresponding blade opens. In the navigation pane, the All devices option is selected and its corresponding page is open in the content pane. [Video description ends]

We can see it's Enabled, the OS is Windows. We can see the version. 

[Video description begins] In the table, he points to a row entry labeled "LAPTOP-E41MU5AM" under a column header labeled "Name". [Video description ends]

It's Azure AD registered, and that was done with Lucas Brenner's credentials. So Lucas Brenner, the user, then, is listed as the Owner. There's no Mobile Device Management, or MDM. And we can see when it was Registered and when it last had Activity. It's date and time stamped. Users can then sign in using their Azure AD credentials to the Windows 10 device. And as administrators in Azure, we can even enable conditional access policies that take a look at the device IP address or the device type to make a decision as to which cloud resources it should have access to.

Azure AD Device Settings

[Video description begins] Topic title: Azure AD Device Settings. The presenter is Dan Lachance. [Video description ends]

There are many benefits to joining Windows 10 devices to an Azure AD tenant. One of which is the fact that it allows the user to sign into that Windows 10 station using their Azure AD credentials. Additionally, it then gives them access to Azure based resources. Let's take a look at some Azure AD device settings.

[Video description begins] The Microsoft Azure portal is open. In the portal, the Home page is open. [Video description ends]

So here in the portal, I'm going to navigate to my Azure AD tenant. Why don't we start by going to the Devices view?

[Video description begins] In the Azure services section, he clicks the Azure Active Directory option and the Quick24×7 blade opens. [Video description ends]

We'll see any existing devices joined to the tenant.

[Video description begins] He clicks the Devices option in the navigation pane and the Devices blade opens. In the navigation pane, the All devices option is selected and its corresponding page is open in the content pane. [Video description ends]

And I've got one Windows 10 laptop. I can click on it to pull up details here, so we can see the Device ID, the Object ID.

[Video description begins] In the table, he clicks the LAPTOP-E41MU5AM row entry and its corresponding blade opens. [Video description ends]

We can also see it's running Windows 10. We can see the owner is someone by the name of Lucas Brenner, this is the account that was used to join the device to the domain. And we can see when it was registered with the domain and when it last had activity. Now if the device is configured to store BitLocker, disk encryption keys in a directory service, then we would have BitLocker key information listed here.

[Video description begins] He switches to the Devices blade. [Video description ends]

I'm going to go back to the Devices portion of Azure AD, and I'm going to click on Device settings on the left to open up that blade.

[Video description begins] The corresponding page opens. [Video description ends]

Now there are a number of device settings here that are important when it comes to determining who is allowed to join devices to the domain.

[Video description begins] He selects an option labeled "Selected" in a setting labeled "Users may join devices to Azure AD" and an option labeled "Selected No member selected" appears. [Video description ends]

Now the default here for Users may join devices to Azure AD is set to All.

[Video description begins] He clicks the Selected No member selected option and a blade called "Members allowed to join devices" opens. [Video description ends]

We could set that to None. We could choose Selected, and then follow through by clicking Selected, clicking the Add button, and basically going through and selecting Azure AD groups or users that should have the ability to join devices to Azure AD.

[Video description begins] A blade called "Add members" opens. [Video description ends]

Again, the default is that anybody can do that. So let's close out of that.

[Video description begins] In the Add members blade, he points to the listed groups and users. He then closes the blade. [Video description ends]

I'm going to put that back on the default of All, then we can determine any Azure AD accounts that should also be added as local administrators on Azure AD joined devices so that they have full admin access to those joined devices.

[Video description begins] He closes the Members allowed to join devices blade. [Video description ends]

Currently it's None. I could choose Selected, I could go through and select Azure AD users or groups, so I can add them.

[Video description begins] He selects an option labeled "All" in the Users may join devices to Azure AD setting. [Video description ends]

And these would be accounts that would have access.

[Video description begins] He selects an option labeled "Selected" in a setting labeled "Additional local administrators on Azure AD joined devices" and an option labeled "Selected No member selected" appears. [Video description ends]

So specifically, we're selecting users here.

[Video description begins] He clicks the Selected No member selected option and a blade called "Local administrators on devices" opens. He then clicks a button labeled "Add" and its corresponding blade opens. [Video description ends]

Not groups, but specific users that should have additional, local admin access on those joint devices.

[Video description begins] He points to a list of users. [Video description ends]

So I'm going to close out of that.

[Video description begins] He closes the blade. He then closes the Local administrators on devices blade. [Video description ends]

We also have the option down below to require Multi-Factor Authentication or MFA to join devices to the domain.

[Video description begins] He selects an option labeled "None" in the Additional local administrators on Azure AD joined devices setting. [Video description ends]

And we can specify the maximum number of devices that each user can join. So we have a number of settings here that are available that control how device join works in Azure AD.

Azure AD Device Disable

[Video description begins] Topic title: Azure AD Device Disable. The presenter is Dan Lachance. [Video description ends]

You have the option of disabling Azure AD joined devices. Now you would disable a device, for example, if the device perhaps is a laptop and it's been lost or stolen. Or if you simply don't want to allow that device to be used to access cloud-based resources in Azure.

[Video description begins] The Microsoft Azure portal is open. In the portal, the Home page is open. [Video description ends]

So to make this happen, to disable a device, we start by going to our Azure AD Tenant which I'm going to do and we go to the Devices view.

[Video description begins] In the Azure services section, he clicks the Azure Active Directory option and the Quick24×7 blade opens. [Video description ends]

Now in the Devices view, of course, we will see all of the domain join devices.

[Video description begins] The Devices blade opens. In the navigation pane, the All devices option is selected and its corresponding page is open in the content pane. [Video description ends]

The one that I want to disable is shown right here. So I'm going to click on the name of it to open up its properties were up at the top, we have the option of disabling it.

[Video description begins] In the table, he clicks the LAPTOP-E41MU5AM row entry and its corresponding blade opens. [Video description ends]

Notice you can also Delete it. What disabling might be done temporarily, for example, until we determine whether the laptop will be recovered or not, where Delete is more permanent. I'm going to go ahead and choose Disable, and I'll choose Yes.

[Video description begins] A message box called “Confirm Disable” opens. [Video description ends]

And it tells us that it's successfully disabled that Azure AD device, and of course, we can go back and enable it.

[Video description begins] He points to a button labeled "Enable". [Video description ends]

For example, if the device was temporarily lost and has now been found. But let's go back to our devices view here in our Azure AD tenant.

[Video description begins] He switches to the All devices page. [Video description ends]

We can see that it's not Enabled any longer.

[Video description begins] In the table, adjacent to the LAPTOP-E41MU5AM row entry, he points to a row entry labeled "No" under a column header labeled "Enabled". [Video description ends]

Now this can take a bit of time, for example, it might take 60 minutes before this is actually known by the device. So, you might wonder, why are users still able to use that disable device to sign in? Well, because it's not immediate. The other thing to bear in mind is that, if a user has signed into that device previously. So prior to you disabling it, they will still be able to sign in locally even if there's no network connectivity because there's a cached copy of those credentials. Now of course, the users will not at some point, be able to access cloud-based resources, some point meaning perhaps even up to 60 minutes. They might get a message on their device says, your organization has disabled the device.

[Video description begins] He opens a web page called "Access Panel Applications". [Video description ends]

Also, if the user is signed into their apps control panel, so here it's account.activedirectory.windowsazure.com, I'm signed in as Lucas Brenner, that's the owner of the device.

[Video description begins] He clicks a drop-down button called "Lucas Brenner QUICK24X7". It includes an option labeled "Profile". [Video description ends]

If Lucas Brenner goes into his Profile, he'll see that the device is shown here.

[Video description begins] He clicks the Profile option and its corresponding page opens. In a section labeled "Devices & activity", he points to a device labeled "LAPTOP-E41MU5AM". [Video description ends]

Now, normally, before the device is disabled, he'll see here that he can disable it. So back here in the portal, let's go in to that device again.

[Video description begins] He switches to the All devices page. [Video description ends]

And what we're going to do is Enable it.

[Video description begins] In the table, he clicks the LAPTOP-E41MU5AM row entry and its corresponding blade opens. [Video description ends]

So it says, it successfully enabled the device.

[Video description begins] He clicks the Enable button. [Video description ends]

Let's go back into the my apps access penal for Lucas Brenner.

[Video description begins] He switches to the Access Panel Applications web page. [Video description ends]

So if we go back into the Profile for Lucas Brenner, notice the devices here and notice, we have a link now to disable it.

[Video description begins] He points to a link labeled "Disable device". [Video description ends]

Now that's there because, of course, we just re-enabled it. So there are few ways that this might be enabled to disabled. The user might actually take this upon themselves if they're traveling for work and realize, for example, that their laptop was stolen at the airport, so they can disable it themselves. They know about this feature without involving the help desk at this point.

Azure AD Dynamic Groups Overview

[Video description begins] Topic title: Azure AD Dynamic Groups Overview. The presenter is Dan Lachance. [Video description ends]

Azure AD gives you the option of working with the dynamic groups. By default, you're working with assignment types of groups. So they're static groups where you need to manually add members to the groups. And, of course, groups facilitate permissions management as opposed to assigning permissions to individual user accounts.

[Video description begins] Azure AD Dynamic Groups. [Video description ends]

So the first thing to bear in mind is that we're talking about the automatic membership of a group for either users or devices. So you can build a dynamic user group or a dynamic device group. You can't have both in the same group at the same time. So this is based on us filling in attributes for users and devices within Azure AD. Now, some of them are filled in automatically like a device platform, but other things like the department that a user is in would have to be filled in manually by the administrator. So to work with dynamic groups then in Azure AD, you need to have at least an Azure AD Premium P1 license.

Working with dynamic groups means we have to think about when evaluation occurs. When you initially create the dynamic group, you need to watch the status of it before you try to expect to see members because it takes a few moments to go through your Azure AD tenant to find those attribute values that meet your conditions. Now, whenever you make a change, for example, to a user property like their department membership, then it will evaluate which dynamic groups that user should show up in. The other thing is that resource access can be granted to dynamic groups just like licenses can. It's no different than if you were working with a normal static assignment group.

[Video description begins] Azure AD Dynamic Group Rules. [Video description ends]

So let's take a look at some examples of the syntax for the rules within dynamic group configurations, and a rule can consist of one or more expressions that you might join with and, or or. Now, we usually create these rules in the portal, and that means we're selecting from drop down lists and the syntax is being generated for us. So for example, user.type -eq "Guest", now for group containing only Guest, user.companyName -ne to null, user.department -eq to "IT". Or we might want to have a group that only consists of user accounts that are enabled, so user.accountEnabled equals true.

[Video description begins] The following lines of code are displayed: user.type -eq "Guest" user.companyName -ne null user.department -eq "IT" user.accountEnabled -eq true. [Video description ends]

Now, you can get more complex by adding multiple expressions to a dynamic group rule, as we see in our last example. Each expression is enclosed in an opening and closing parentheses. So our first condition or expression is user.type -eq "Guest". But at the same time, we also want the user company name to not be empty, so not equal to null where null is a special built in keyword.

[Video description begins] The following line of code is displayed: (user.type -eq "Guest") and (user.companyName -ne null). [Video description ends]

Our last example is checking the city attribute of Azure AD users, looking to see if it finds "Chicago", "Paris" or "Toronto". Now, we can also use regular expression type of notation, you'll be familiar with regular expressions if for instance used to scripting a lot in Unix and Linux environments.

[Video description begins] The following line of code is displayed: user.city -in ["Chicago","Paris","Toronto"]. [Video description ends]

Our first example here is user.department and we're trying to -match "IT.*", what does that mean? Well, IT.* means we want to have any number of characters following IT, it's one way to do that.

[Video description begins] The following line of code is displayed: user.department -match "IT.*". [Video description ends]

Next, we have two expressions again with an enclosed parentheses, first one is (user.objectId -ne null) and (user.usertype -eq "Member").

[Video description begins] The following line of code is displayed: (user.objectId -ne null) and (user.usertype -eq "Member"). [Video description ends]

Then we've got device examples, device.OSType = "iPhone", or the device manufacturer equaling "Motorola".

[Video description begins] The following lines of code are displayed: device.OSType = "iPhone" device.deviceManufacturer -eq "Motorola". [Video description ends]

So we have a number of options available when we are building the rules, which could consist of multiple expressions for our dynamic user and device groups.


Azure AD Dynamic Group Creation
In Azure AD, a dynamic group is one whose members aren't statically assigned or added as members to the group. But instead, membership rules are evaluated based on user attributes to determine if they're a member. Let's give it a whirl here in my Azure AD tenant by the name of Quick24x7.

[Video description begins] The Microsoft Azure portal is open. In the portal, the Quick24×7 blade is open. [Video description ends]

What I want to do is navigate to Groups as I normally would to build a group.

[Video description begins] The Groups blade opens. In the navigation pane, the All groups option is selected and its corresponding page is open in the content pane. [Video description ends]

And just as normal, I'm going to click the New group button.

[Video description begins] The New Group blade opens. [Video description ends]

Now the default group type that we'll see here at the top is Security as opposed to Office 365. I'm going to leave it at that. Down below notice the Membership type by default is set to Assigned, where we manually add members to the group. And they remain members till such time that we come back to the group and remove them.

[Video description begins] He points to a link labeled "No members selected". [Video description ends]

So we can also elect to build a Dynamic User or a Dynamic Device group.

[Video description begins] He clicks the Membership type drop-down list box and a drop-down list opens. He then points to the Dynamic User option and another option labeled "Dynamic Device". [Video description ends]

I'm going to create a Dynamic User group, and I'm going to call it All Enabled Users.

[Video description begins] He selects the Dynamic User option. [Video description ends]

Down at the bottom, I'm going to click the Add dynamic query link and we're going to add one or more query rules to determine membership in this group.

[Video description begins] A blade called "Dynamic membership rules" opens. It includes a table with a single row and several column headers. [Video description ends]

First thing you have to do is Choose a Property in this case, because it's a dynamic user group, a user property, and they're listed alphabetically, here: accountEnabled, displayName, city, companyName, country, department, givenName, employeeId, and so on.

[Video description begins] He clicks a drop-down list box labeled "Choose a Property" under a column header labeled "Property" and a drop-down list opens. [Video description ends]

In this case, I'm going to choose accountEnabled. Now for the operator, we have quite a selection here, it can be All, And, Any, Contains, if we don't want to do an exact match or Equals, if we do want to do an exact match.

[Video description begins] He clicks a drop-down list box labeled "Choose an Operator" under a column header labeled "Operator" and a drop-down list opens. [Video description ends]

Or we could scroll down and choose things like Not or Not Equals, or Starts With or does Not Starts With.

[Video description begins] In the drop-down list, he selects an option labeled “Equals”. He types the text, “true” in a text box labeled “Add a value” under a column header labeled "Value". [Video description ends]

In this case, I'm going to choose Equals, because I want to make sure that accountEnabled Equals true. I'm going to put in a value of true, and I'm going to press Tab to move on, or I can click outside of that.

[Video description begins] The code "(user.accountEnabled -eq true)" appears in a text box labeled "Rule syntax". [Video description ends]

And we can see the Rule syntax has been added here. Now we could keep adding expressions to this rule.

[Video description begins] He points to the existing row in the table. [Video description ends]

If I click Add expression, it adds another line down below.

[Video description begins] A new row is added in the table. [Video description ends]

And we can link it to the previous part of the expression using And so both conditions would have to evaluate to true for a member to become in this group.

[Video description begins] In the new row, he clicks a drop-down list box under a column header labeled "And/Or" and a drop-down list opens. It contains two options labeled "And" and "Or". He points to the options. [Video description ends]

Or it could be the Or operator. By using Or what we could specify is that either one of those conditions must evaluate to true before user would be a member of the group. In this case, I'm just going to leave it as that very simple and I'm going to click Save and then I'll click Create.

[Video description begins] The Dynamic membership rules blade closes. [Video description ends]

So all we're doing here is creating a group. It just happens to be Dynamic which we can see under the Membership Type column.

[Video description begins] The New Group blade closes. A new row is added in the table. [Video description ends]

Now when I go into that group, just like a standard statically assigned member group, I can go to the Members area over on the left to see the members of the group.

[Video description begins] In the new row, he clicks a row entry labeled "All Enabled Users" under the Name column header and its corresponding blade opens. It is divided into two parts: navigation pane and content pane. In the navigation pane, an option labeled "Overview" is selected and its corresponding page is open in the content pane. [Video description ends]

However, it says, No members have been found.

[Video description begins] In the navigation pane, he selects an option labeled “Members” and its corresponding page opens in the content pane [Video description ends]

Well, that's normal, initially, when you create a new dynamic group. If you click the Overview blade for this new dynamic group, over on the right, you're going to want to wait a moment.

[Video description begins] A corresponding page opens in the content pane. [Video description ends]

You might have to wait a moment, till you can see the Membership processing status. Currently, there's nothing there, there's also nothing in the field for Membership last updated. Let's just click on something else and come back to it.

[Video description begins] He selects an option labeled "Properties" in the navigation pane and its corresponding page opens in the content pane. [Video description ends]

And sometimes you have to do that because it's not immediate before you'll see that it's in the midst of evaluating group members. We're just going to wait a moment and then come back to the screen.

[Video description begins] He selects the Overview option in the navigation pane and its corresponding page opens in the content pane. [Video description ends]

After a moment when I come back, we can now see the Membership processing status shows Evaluating and the Membership last updated shows In Progress. So we'll just wait a few moments for to evaluate which users should be a member of this dynamic group. 

[Video description begins] In the navigation pane, he selects the Members option and its corresponding page opens in the content pane. It includes a list of members. [Video description ends]

And before too long, we'll see that the Membership processing status will change to Update complete, and then in the Membership last updated field will have a date and timestamp of when that occurred. So let's go back and check out the Members of the group.

[Video description begins] He points to the list of members. [Video description ends]

So really in this case, it should be any enabled Azure AD accounts will show up as members, which they do here. 


Azure AD Group License Assignment
Azure administrators can acquire licenses that they can then apply to specific users or groups in their Azure AD tenant that require those license features.

[Video description begins] The Microsoft Azure portal is open. In the portal, the Home page is open. [Video description ends]

So to get started here in the portal, let's go into Azure Active Directory.

[Video description begins] The Quick24×7 blade opens. [Video description ends]

So that's going to take us into our AD tenant, where the first thing we should do is take a look at Licenses.

[Video description begins] A blade labeled "Licenses" opens. It is divided into two parts: navigation pane and content pane. In the navigation pane, an option labeled "Overview" is selected and its corresponding page is open in the content pane. [Video description ends]

Now within here, for example, if I click All products, we'll see any licenses that have been acquired and are available here in Azure AD.

[Video description begins] In the navigation pane, he clicks an option labeled “All products” and its corresponding page opens in the content pane. A corresponding page opens in the content pane. It includes a table with two rows and several columns. [Video description ends]

So we can see there are two of them. One's an Azure Active Directory Premium P2 license. And the other one is Enterprise Mobility + Security E5. Now we can also see the number of Assigned licenses for users or groups. Well really, it's assigned to users specifically but can be assigned through groups by assigning it to members of a group.

[Video description begins] He points to row entries labeled "7" under column headers labeled "Assigned" and "Available". [Video description ends]

We can see the Assigned user number here and the Available number of licenses.

[Video description begins] He switches to the Quick24×7 blade. [Video description ends]

So I'm going to go back to my Azure AD tenant and I'm going to go into Groups.

[Video description begins] The Groups blade opens. In the navigation pane, the All groups option is selected and its corresponding page is open in the content pane. [Video description ends]

Now here I have a list of groups. I'm going to select one, let's say EastAdmins. And I'm going to click Licenses over on the left.

[Video description begins] A blade called "EastAdmins" opens. It is divided into two parts: navigation pane and content pane. In the navigation pane, an option labeled "Overview" is selected and its corresponding page is open in the content pane. [Video description ends]

Now when I do that we can see on the right it says No license assignments found.

[Video description begins] A page called "Licenses" opens in the content pane. It includes a table with no rows and several columns. [Video description ends]

Okay, well, let's also look at the Members of this group. So we can see we have two users, Jen Hill and Lucas Brenner.

[Video description begins] In the navigation pane, he selects an option labeled "Members" and its corresponding page opens in the content pane. [Video description ends]

Okay, having that knowledge, let's go back to Licenses, where there are none, and let's click the + Assignments button.

[Video description begins] The Licenses page opens in the content pane. [Video description ends]

So from here we can determine which ones we're interested in, let's say Enterprise Mobility + Security E5. Now when I check that on, I can select the specific license options I'm interested in.

[Video description begins] A blade called "Update license assignments" opens. [Video description ends]

I want all of them so I'm going to choose Save.

[Video description begins] A list of licenses appears. [Video description ends]

And it says the License assignments succeeded, in this case at the group level.

[Video description begins] He switches to the EastAdmins blade in which the Licenses page is open. [Video description ends]

So if we go back to our EastAdmins group, and again, we might have to click on something else and come back and look at the licenses.

[Video description begins] In the navigation pane, he selects an option labeled "Applications" and its corresponding page opens in the content pane. He then selects the Licenses option in the navigation pane and the Licenses page opens in the content pane. It includes a license. [Video description ends]

Then we can now see Enterprise Mobility + Security E5 has been assigned. Now let's go look at the members.

[Video description begins] He clicks the Members option in the navigation pane and its corresponding page opens in the content pane. [Video description ends]

So if I go back to the Members, we had two of them, Jen Hill and Lucas Brenner. So let's click on user Jen Hill.

[Video description begins] A blade called "Jen Hill" opens. It is divided into two parts: navigation pane and content pane. In the navigation pane, an option labeled "Profile" is selected and its corresponding page is open in the content pane. [Video description ends]

Let's take a look at her licenses.

[Video description begins] In the navigation pane, he selects an option labeled "Licenses" and its corresponding page opens in the content pane. It includes a table with several columns and two rows. [Video description ends]

Now because she's in a group called All Enabled Users that already had that same product assigned, we can see that it's listed here.

[Video description begins] In the second row, he points to a row entry labeled "Inherited (All Enabled Users)" under a column header labeled "Assignment Paths". [Video description ends]

Not through the group that we just looked at, but through a group she already had it assigned called All Enabled Users.

[Video description begins] In the second row, he points to a row entry labeled "Enterprise Mobility + Security E5" under a column header labeled "Products". [Video description ends]

And notice it says, Inherited. Inherited means that the license wasn't assigned directly, in this case, to this user.

[Video description begins] He points to the Inherited (All Enabled Users) row entry. [Video description ends]

But rather it's inherited by being a member of a group, in this case, the All Enabled Users group. Notice though that up above, for the Azure Active Directory Premium P2 product for this user, be Jen Hill, it says Direct and Inherited.

[Video description begins] In the first row, he points to a row entry labeled "Direct, Inherited (All Enabled Users)" under the Assignment Paths column header. [Video description ends]

So she was directly assigned this product license.

[Video description begins] In the first row, he points to a row entry labeled "Azure Active Directory Premium P2" under the Products column header. [Video description ends]

And also she inherited it because she's in the All Enabled Users group.

[Video description begins] He points to the Direct, Inherited (All Enabled Users) row entry. [Video description ends]

You don't need both of those assignment paths. Either one of them will do just fine for a given product. 


Azure AD Group Ownership
You can set owners for Azure AD groups, and as a result, the group owner has the ability to manage that group including things like group membership. Which means that the help desk doesn't need to be involved when users need to become a member of a group, as an example, because the group owner can handle that.

[Video description begins] The Microsoft Azure portal is open. In the portal, the Quick24×7 blade is open. [Video description ends]

So let's take a look at this in Azure AD. I'm in my tenant, I'm going to click on the Groups view over on the left, where I've got a number of groups, one of which is called EastAdmins.

[Video description begins] The All groups page is open in the Groups blade. [Video description ends]

So I'm going to click on that group, and I'm going to click on Owners over on the left.

[Video description begins] The EastAdmins blade opens. In the navigation pane, the Overview option is selected and its corresponding page is open in the content pane. [Video description ends]

So we'll see any existing owners of the group, but we can add multiple owners.

[Video description begins] He clicks an option labeled “Owners” in the navigation pane and its corresponding page opens in the content pane. [Video description ends]

So I'm going to click the Add owners button at the top.

[Video description begins] In the page, he points to an owner called "Codey Blackwell". [Video description ends]

And I'm going to add user Lucas Brenner, an existing Azure AD user, as the owner of this group, in addition to Cody Blackwell being an owner of the group.

[Video description begins] A blade called "Add owners" opens. [Video description ends]

So Lucas Brenner is listed and we have our notification in the upper right, that says the group owner was successfully added.

[Video description begins] He types the text "lucas" in a search box labeled "Search" and the search result displays a user called "Lucas Brenner". He then selects the user and it appears in a section labeled "Owners". [Video description ends]

Here in my web browser, user Lucas Brenner has been signed into account.activedirectory.windowsazure.com.

[Video description begins] He clicks a button labeled "Select" and the Add owners blade closes. A new owner called "Lucas Brenner" appears in the page. [Video description ends]

Now what are the things that's visible here when you sign into this URL is Groups over on the right.

[Video description begins] He opens the Access Panel Applications web page. [Video description ends]

So we're going to go ahead and click Groups to open that up.

[Video description begins] A web page called "Access Panel Groups" opens. [Video description ends]

Now that opens up a new web browser window, and notice that under Groups I own there's the option to create a group.

[Video description begins] A web page called "Access Panel Manage Group" opens. [Video description ends]

But there's also the EastAdmins group because we just finished adding Lucas Brenner in the QUICK24X7 Azure AD tenant as an owner of the EastAdmins group.

[Video description begins] He points to links labeled "Edit details" and "Delete groups". [Video description ends]

On the right, we see the groups that this user, Lucas Brenner, is in. All Enabled Users, EastAdmins, and also the ability to join a group that's not listed here.

[Video description begins] He points to a list of members and their roles. [Video description ends]

So under the Groups I own, we see the EastAdmins group.

[Video description begins] A dialog box labeled "Add members" opens. It includes a search box. [Video description ends]

And if I click on that to open it up, we can see that this user, Lucas Brenner, has the ability to edit the details or delete the group.

[Video description begins] He selects a user called "Marcia Lin" from the search results. [Video description ends]

And the reason for this here is because Lucas Brenner is listed as an Owner.

[Video description begins] He clicks a button labeled "OK" and the dialog box closes. A new member called "Marcia Lin" is added in the list of members with its role as a member. [Video description ends]

Now you can also over on the right where we have a list of the members of the group, click the + sign, the add sign, to add members by searching for them.

[Video description begins] He switches to the Microsoft Azure Portal in which the EastAdmins blade is open. [Video description ends]

So for example, if I search for a user by the name of marcia, well up pops Marcia Lin, we can click Add and then the user is then added to the group.

[Video description begins] In the navigation pane, he selects the Members option and its corresponding page opens in the content pane. [Video description ends]

And that will be reflected also in the portal. So back here in the portal, looking at the Members of the EastAdmins group, we'll see that Marcia Lin has just been added by the owner, Lucas Brenner. 


Azure AD Group Self-service
The owner of an Azure AD group has the ability to manage all aspects of that group. Now let's verify this here in the portal.
Let's go into our Azure AD tenant, which I've already done.
And let's go to the Groups view to view existing groups.

[Video description begins] The Groups blade opens. In the navigation pane, the All groups option is selected and its corresponding page is open in the content pane. [Video description ends]

I'm interested in a group called EastAdmins. So I'm going to click on that group. And I'll start by looking at the Members.

[Video description begins] The EastAdmins blade opens. In the navigation pane, the Overview option is selected and its corresponding page is open in the content pane. [Video description ends]

So we've got a single member here in the form of user Jen Hill.

[Video description begins] He clicks the Members option in the navigation pane and its corresponding page opens in the content pane. [Video description ends]

But if I go to Owners, we'll see that we've got not one but two owners here.

[Video description begins] The corresponding page opens in the content pane. [Video description ends]

So user Codey Blackwell, and user Lucas Brenner. We're going to focus on this from the perspective of Lucas Brenner, the group owner. And we're going to take a look at the member list, which again only consists of Jen Hill.

[Video description begins] In the navigation pane, he again selects the Members option and its corresponding page opens in the content pane. [Video description ends]

What we're going to do is we're going to go back and look at our Users. Here in Azure AD, I have a user called Marcia Lin.

[Video description begins] He switches to the Quick24×7 blade. In the navigation pane, he selects the Users option and the Users blade opens. In the navigation pane, the All users option is selected and its corresponding page is open in the content pane. It includes a list of users. [Video description ends]

I want to make sure that Marcia Lin is added as a member of the EastAdmins group. But I want her to make a request to join the group.

[Video description begins] He switches to the Quick24×7 blade. [Video description ends]

And that's where group self service is going to kick in. So let's go back to our Azure AD tenant. Let's go back into Groups.

[Video description begins] The Groups blade opens. [Video description ends]

And then I'm going to click in the left-hand navigator under Settings, General.

[Video description begins] He clicks an option labeled “Generals” in the navigation pane and its corresponding page opens in the content pane It includes several options. [Video description ends]

At the top, we're going to have some group self-service options. The first of which is whether or not Owners can manage group membership requests in the Access Panel. Now by default in Azure AD, that's set to No. I've already turned it on, so Yes. The second option for Self Service Group Management says Restrict access to Groups in the Access Panel, it's set to No, that's also a default. Now I want to leave it at that. I don't want to restrict access to groups in the Access Panel web interface. I want users to be able to see that. So having done that, that's good. Now what we're going to do is we're going to log into the Access Panel as user Marcia Lin. She's going to request to join the EastAdmins group.

[Video description begins] He opens a file called "Document" in the WordPad window. [Video description ends]

So in a browser, I'm just going to connect to this URL and then sign in as user Marcia Lin.

[Video description begins] In the file, he highlights the URL labeled "account.activedirectory.windowsazure.com/". [Video description ends]

Now that I'm signed in as that user, if we were to click Groups here, because we didn't restrict group access in the Access Panel, it's why that showed up.

[Video description begins] He opens the Access Panel Applications web page. [Video description ends]

We can see groups that this user, Marcia Lin, is in. All Enabled Users, but she also has the option here to join a group.

[Video description begins] He points to a drop-down button labeled "Marcia Lin QUICK24X7". [Video description ends]

So I'm going to choose EastAdmins.

[Video description begins] The Access Panel Groups web page opens. [Video description ends]

But the problem here is that when I go to the EastAdmins group here, it says, This group is not available to join.

[Video description begins] He clicks a button labeled "Join group" and its corresponding page opens. It includes a list of groups. [Video description ends]

So what's up with this? Well, in order to find out what's up, we need to log in as one of the group owners and edit the group properties here in the Access Panel.

[Video description begins] He opens the Access Panel Applications web page. [Video description ends]

So I've signed in as the owner of the group EastAdmins, Lucas Brenner.

[Video description begins] He points to the Lucas Brenner QUICK24X7 drop-down button. [Video description ends]

So what I'm going to do is click the Groups panel over on the right.

[Video description begins] The Access Panel Groups web page opens. [Video description ends]

And we're going to see that this is a group that is owned by Lucas Berner. It shows up under Groups I own.

[Video description begins] He points to a group called "EastAdmins". [Video description ends]

So I'm going to click to open up that group.

[Video description begins] He clicks the EastAdmins group and its corresponding page opens. [Video description ends]

And what I want to do is edit the details. So I'll click Edit details.

[Video description begins] A dialog box labeled "Edit details" opens. [Video description ends]

Notice that the Group policy here says, Only the owner of this group can add members. Well, no wonder users can't request to join the group. I'm going to open this up, and I'm going to either select, This group is open to join for all users, or This group requires owner approval.

[Video description begins] He clicks a drop-down list box labeled "Group policy" and a drop-down list opens. [Video description ends]

So it really depends on the nature of the group and how it's going to be used. Let's say we choose, This group requires owner approval, and I'll choose Update, and it's done.

[Video description begins] The dialog box closes. [Video description ends]

So now we're going to log out, log back in as Marcia Lin. And she's going to request group membership. She's going to try once again for the EastAdmins group. Okay, Marcia Lin is now logged in again, let's go to Groups.

[Video description begins] He opens the Access Panel Application web page and points to the Marcia Lin QUICK24X7 drop-down button. [Video description ends]

And she wants to join a group.

[Video description begins] The Access Panel Groups web page opens. [Video description ends]

So she's going to click Join group. It's going to be EastAdmins.

[Video description begins] The corresponding page opens. It includes a list of groups. [Video description ends]

This time, we have the option for her to join the group.

[Video description begins] From the list, he selects the EastAdmins group. [Video description ends]

So let's click the Join group button.

[Video description begins] A dialog box labeled "Join EastAdmins" opens. [Video description ends]

May I please join. And I'll click the Request button.

[Video description begins] He enters the text "May I please join" in a text box labeled "Business justification (required). [Video description ends]

So a request is then going to be made available for group owners, and they have to approve it.

[Video description begins] A pop-up box appears, with the text "Your request has been sent to the owner of the group". [Video description ends]

So I'm going to click OK.

[Video description begins] The pop-up box closes. [Video description ends]

As you might guess, we're going to log out from Marcia Lin and log in as Lucas Brenner. And check out that request.

[Video description begins] He opens the Access Panel Applications web page and points to the Lucas Brenner QUICK24X7 drop-down button. [Video description ends]

Okay, we are in as Lucas Brenner. Well, first thing I noticed is I've got a notification here.

[Video description begins] He clicks an icon labeled "Notifications" and a notification appears. [Video description ends]

Marcia Lin requested to join "EastAdmins", "May I please join". You can either Approve or Deny it. At the same time, Lucas Brenner if you just notice that might be able to go into Groups, well, he can go into Groups.
And here he'll see EastAdmins, and when he's here, he'll see that Jen Hill is still a member.
And that now this group is set to require owner approval, but that's about it. So, if we go back up to the notification area, let's click Approve and see how this changes. So we'll click Approve.
We'll just go back, and we're going to open up the EastAdmins group once again.
And now we can see Marcia Lin is now a member. So, all of this was done, really, between the user that wanted to join the group and the group owner or owners. It did not involve the help desk.


Bulk Add and Remove Group Members
In Azure, you can perform a bulk user import to create user accounts in your Azure AD tenant. You can also do the same thing to populate a group with members. Let's take a look at that.
So here in the portal, I'm in my Azure AD tenant, and I'm going to go to the Groups view.
What I want to do is I want to import users as a member of a group.
So, for example, let's create a new group to do this to, so we start fresh with no members in it.
Not that you have to do that, but that's what I'm doing. I'm going to call this Group2.
It's going to be Assigned, which means that we manually add members to the group as opposed to creating dynamic rules.
And I'm not going to add members or anything, I'm just going to create the group.

[Video description begins] He clicks the Membership type drop-down list box and a drop-down list opens. He then points to the Dynamic User option. [Video description ends]

So we've got a group here called Group2.

[Video description begins] He points to the No members selected link and then clicks a button labeled "Create". The New group blade closes. A new row is added in the table. [Video description ends]

When I go into that group and when I go to view the Members of the group, of course, there will be none.

[Video description begins] In the new row, he clicks a row entry labeled "Group2" under the Name column header and a blade called "Group2" opens. It is divided into two parts: navigation pane and content pane. In the navigation pane, an option labeled "Overview" is selected and its corresponding page is open in the content pane. [Video description ends]

However, we do have an Import members button at the top which I'll click.

[Video description begins] In the navigation pane, he selects an option labeled "Members" and its corresponding page opens in the content pane. [Video description ends]

The first thing you can do is download a csv template, then populate it and re-upload it here.

[Video description begins] A corresponding blade opens. [Video description ends]

I've already downloaded and added some entries, let me show you that csv file.

[Video description begins] He points to a field labeled "Upload your csv file". [Video description ends]

So I've downloaded and renamed that file and I've opened it in Excel.

[Video description begins] He opens a file called "Azure_BulkGroupMemberImport.csv" in the Excel window. [Video description ends]

Now if you're opening it in Excel, for example, make sure you go to your File menu and save it as a csv file. You don't want it saved as an XLS file. So the only thing you have to do is specify either the member object ID or the user principal name. Here I've added the user principal names or email addresses. These are for users that already exist in Azure AD. We're not creating them, they're already there.

[Video description begins] In the file, he points to cell entries labeled "jhill@quick24×7test.onmicrosoft.com" and "lbrenner@quick24×7test.onmicrosoft.com". [Video description ends]

We're just adding them as members, in this case, ultimately of Group2. Back here in the portal, step three, Upload your csv file.

[Video description begins] He switches to the Microsoft Azure portal. [Video description ends]

That's what I need to do. I need to specify that file here. And it says File uploaded successfully.

[Video description begins] He uploads the Azure_BulkGroupMemberImport.csv file. [Video description ends]

If there was a problem with the contents of that file or its format or anything you'd get a red message here, you wouldn't miss it. So I'm going to go ahead and Submit this. And it says Click here to view the status of each operation.

[Video description begins] He clicks a button labeled “Submit”. [Video description ends]

Sure, okay, let's track the progress and see what's up. So looks like it completed with no errors. We can see its date and timestamp.

[Video description begins] He clicks a button labeled "Click here to view the status of each operation" and its corresponding page opens in the Group2 blade. The page includes a table with two rows and several columns. He then points to a row entry under a column header labeled "Completion time". [Video description ends]

So therefore, that should mean if we go back to look at the Members, there should be members here.

[Video description begins] In the navigation pane, he selects the Members option and its corresponding page opens in the content pane. [Video description ends]

Now if they're not, don't sweat it, might just take a moment. You might have to Refresh and click on something else and come back.

[Video description begins] He clicks a button labeled "Refresh" and the page refreshes. [Video description ends]

But eventually you will see the members of the group.
And sure enough, after a moment, we see our users Jen Hill and Lucas Brenner.


Azure AD Android Device Join
In this demonstration, we're going to join my Android smartphone to Azure AD. So in the Settings on my phone, I'm going to scroll down and go into Accounts. And once I've tapped on Accounts, I'm going to click or tap Add account. And then I'm going to scroll down to the bottom of that list and tap Work account. Then I see the Workplace Join screen. So if I scroll down a little bit there, I then have the option of specifying a username and a password. I'll start by putting in the email address of an Azure AD account. So now I've got the full email address specified for that Azure AD user.
So the next thing I'll do after I verify that that's correct is tap Join. At which point I'm going to be prompted, as you might guess, for the Password for that account which I will enter. And then I'll tap Sign in. And we can see it's joining your workplace is what it says. So it's registering the device with Azure AD. It then wants to use a certificate for authentication and it asks for the certificate name. I'll accept the default name. And it now says Microsoft work account is installed, certificate installation is successful. 
And I can see down at the bottom, where workplace joined with that Azure AD user account.
Now I have the Microsoft Authenticator app installed on this device.
And what I want to do here is just verify that my Quick24x7test Azure AD tenant is showing here.
And I can even Enable 2-step verification for this account. And so now here in the portal, when I navigate to my Azure AD tenant and go to the Devices view, we can see that we've got a new Android device.

[Video description begins] A blade called "Security" opens. It is divided into two parts: navigation pane and content pane. In the navigation pane, an option labeled "Getting started" is selected and its corresponding page is open in the content pane. [Video description ends]

It's a motorolaMoto X Play device that has been registered here by user Lucas Brenner with my Azure AD tenant.

[Video description begins] A blade called "Conditional Access" opens. It is divided into two parts: navigation pane and content pane. In the navigation pane, an option labeled "Policies" is selected and its corresponding page is open in the content pane. [Video description ends]

Now this feeds well into configuring things such as conditional access policies where you want to limit access to apps based on the type of device being used.

[Video description begins] In the page, he clicks a button labeled "New policy" and its corresponding blade opens. [Video description ends]

For example, if I were to go back to our Azure AD tenant, let's say I went down and clicked on Security, and then I clicked on Conditional Access.
So within here, I might create a New policy.
And one of the things I might specify is the conditions.
You click on Conditions here, where I would specify the platform that I want to allow. So here, I might choose Device platforms, and over on the far right, notice that when I configure that, I could select, in this case, the Android platform.
So there are plenty of centralized configuration benefits to joining or registering devices with Azure AD.


Dynamic Device Groups
Once you start registering devices to your Azure AD tenant, you can then think about creating dynamic device groups. Here in my Azure AD tenant in the portal,
I've already navigated to the Devices view. Where I can see I have an Android as well as a Windows device that are registered.
So let's go back to our Azure AD tenant because we want to create a dynamic device group.
So I'm going to click the Groups view. I see existing groups.
I'm going to click the New Group button up at the top.
Now, a dynamic group means that you create rules which consist of one or more expressions.
Essentially looking at the properties of a device to determine whether or not it should be a member of the group. So I'm going to create a group here called Android Devices.
It's going to be a Security group as opposed to an Office 365 group.
And instead of Assigned, I want the membership type to be Dynamic Device.
So you can have a Dynamic User group or a Dynamic Device group. But you can't have one group containing both users and devices.
So Dynamic Device. I can also select an owner just like it can for a normal statically assigned member type of group.
So I'm just going to specify someone as the owner.
And then of course, the key here is to add a dynamic query.
Now that takes me into my Dynamic membership rules page, where I start by selecting a Property.
Now what I'm looking at here are the properties, not of users, but rather of devices that are registered with my Azure AD tenant. So I can see, for example, deviceOSType.

[Video description begins] In the drop-down list, he selects an option labeled "deviceOSType". [Video description ends]

I can choose an Operator such as Equals. And I can Add a value. So we can also take a look at what some of those values might look like by going into the properties of a registered device.

[Video description begins] He clicks the Choose a Property drop-down list box and the drop-down list opens. [Video description ends]

Let's do that. Let's open up another window here. So I'm going to right-click on my existing browser tab and Duplicate it.

[Video description begins] The Groups blade opens in the new tab. [Video description ends]

And basically, I'm just going to navigate back to my Devices view so we can check out what some of those values might look like.

[Video description begins] The Home page opens. [Video description ends]

So I'm just going to go here, back to Home, going to go back into Azure, and I'm going to go into my Devices.

[Video description begins] In the Home page, he selects the Azure Active Directory option and the Quick24×7 blade opens. [Video description ends]

And let's pick on the Android device that we saw that was registered here.

[Video description begins] The Devices blade opens. In the navigation pane, the All devices option is selected and its corresponding page is open in the content pane. [Video description ends]

So I'm going to click on that device. And that's going to open up the properties for it.

[Video description begins] In the table, he clicks a row entry labeled "motorolaMoto X Play" under the Name column header and its corresponding blade opens. [Video description ends]

So for example, we can see the OS is Android. So we can get a sense here of what these properties and their values might look like.

[Video description begins] He points to several properties. [Video description ends]

So having that information, the deviceOStype here, I'm going to say Equals, Android.

[Video description begins] He switches to the tab in which the Dynamic membership rules blade is open. [Video description ends]

Now I could continue adding expressions.

[Video description begins] He enters the text "Android" in a text box under a column header labeled "Value". [Video description ends]

So it keeps adding multiple expressions or lines to this rule.

[Video description begins] He clicks a button labeled "Add expression" and a new row is added in the table. The code "(device.deviceOSType -eq "Android")" appears in the Rule syntax text box. [Video description ends]

And I can chain each expression together using And, I can also specify Or.

[Video description begins] In the new row, he clicks a drop-down list box under the And/Or column and the drop-down list opens. [Video description ends]

And, of course, would mean that in this case, both conditions, or if you have more, the conditions must evaluate to being true all of them before the device shows up as a member of the group. Or means optional. They don't all have to be true at the same time. So I'm going to click the garbage can to remove the second expression. I only want the first one.

[Video description begins] The new row is removed. [Video description ends]

And notice down below in the Rule syntax, in parentheses, it's written out device.deviceOSType -eq for equals and in quotes, "Android". I'm going to go ahead and click Save and I'm going to Create this group.

[Video description begins] The Dynamic membership rules blade closes. [Video description ends]

Now, depending how many items are registered with your Azure AD tenant may determine how long it takes for the members to show up.

[Video description begins] He clicks the Create button and the New Group blade closes. A new row is added in the table., [Video description ends]

So there's the Android Devices Dynamic group.

[Video description begins] In the new row, he points to a row entry labeled "Android Devices" under the Name column header. [Video description ends]

But if I go into that group and go to Members, if I don't see the members I think should appear in that group immediately, I should go back to the Overview blade for this group.
Because currently Membership processing status, Membership last updated, we don't see anything. It takes time initially.
So I'm just going to kind of click back and forth between Members and Overview here every couple of minutes until I start seeing some information that states that it's actually begun initial processing of group membership.
And after a minute or so, under the Overview blade, I can see that the Membership processing status says, Update complete. And there's a date and time stamp of when the membership of this group was last updated. Let's go look at the Members. I'm going to click Members over on the left.
And what we should see is that our Motorola X Play device has been added as a member of the group.


Conditional Access
As the name implies, conditional access in Azure AD requires certain conditions to be satisfied before allowing access. Such as from a particular device with a specific user logging in trying to access, let's say a specific enterprise app defined in Azure AD. Let's take a look at how that might work. So we're going to create a conditional access policy using the portal. So I'm going to start in the portal by going to my Azure AD tenant.
And I'm going to scroll down in the navigation bar for my tenant, all the way down to Security.
When I get to Security, then in the navigation bar at this level, I'm going to click Conditional Access.
And then that will pull up the Conditional Access blade.
So I have a number of other settings. And on the right, I can see some standard baseline policies.
But what we're going to do here is click the New policy button up at the top.

[Video description begins] The New blade opens. [Video description ends]

And what I'm going to call this is a Windows 10 policy. 

[Video description begins] In a text box labeled "Name", he enters the text "Win10". [Video description ends]

So I'll call it Win10 for Windows 10 devices, and I have to specify any users or groups to which this will apply.

[Video description begins] Under a section labeled "Assignments", he selects an option labeled "Users and groups" and a blade called "Users and groups" opens. [Video description ends]

Now when I go to do that, it can be None, it can be All Users, I can select specific users or groups, I can also Exclude. So for example, if I choose All users, I might Exclude admins. In this case, I'm going to choose Select users and groups. And I'm going to choose Users and groups. I could also specify roles or specify that guests and external users are affected by this conditional access policy. I don't want that though.

[Video description begins] A blade called "Select" opens. [Video description ends]

So I'm going to Users and groups. Go down and click Select. And I'm going to choose one of my Azure AD users, Lucas Brenner.

[Video description begins] He types the text "lu" in a search box and the search result displays a user called "Lucas Brenner". He selects the user and it appears in a section labeled "Selected items". [Video description ends]

Who happens to be the owner that registered a Windows 10 device to the domain. 

[Video description begins] The Select blade closes. The Lucas Brenner user appears under an option labeled "Select" in the Users and groups blade. [Video description ends]

So I'll get to click Select, that takes care of the user. So I'll click Done for that part.

[Video description begins] The Users and groups blade closes. [Video description ends]

Next on the left, what cloud apps or actions do we want this policy applied to?

[Video description begins] In the New blade, he selects an option labeled "Cloud apps or actions" in the Assignments section and a blade called "Cloud apps or actions" opens. [Video description ends]

Well, I'm not too interested in User actions.

[Video description begins] He selects an option labeled "User actions" under a label called "Select what this policy applies to" and a checkbox appears. [Video description ends]

We can see here there's Register security information, which is a preview option.

[Video description begins] He selects an option labeled "Cloud apps" under the Select what this policy applies to label and three radio buttons appear. [Video description ends]

But cloud apps allows us to determine which cloud apps should be accessible or not.

[Video description begins] An option labeled "Select" appears. [Video description ends]

Depending on how we further configure the policy for Windows 10 devices and specifically for this user, Lucas Brenner. 

[Video description begins] He clicks the Select option and its corresponding blade opens. [Video description ends]

So I'm going to choose Select apps, and I'll go through and I'll select, let's say, it could be anything, but let's say Office 365.

[Video description begins] He selects a checkbox labeled "Office 365 (preview)" and it appears in a section labeled "Selected items" in the blade. [Video description ends]

So these are apps in Azure AD. Okay, so I'm going to click Done on that.

[Video description begins] He clicks a button labeled "Select" and the blade closes. In the Cloud apps or actions blade, an app labeled "Office 365 (preview)" appears under the Select option. [Video description ends]

I'm going to click Conditions on the left.

[Video description begins] The Cloud apps or actions blade closes. [Video description ends]

Now, we have to specify some conditions that need to be satisfied.

[Video description begins] In the New blade, he selects an option labeled "Conditions" and a blade called "Conditions" opens. [Video description ends]

I'm interested in Device platforms because I've got a Windows 10 device joined to Azure AD. So I'm going to click Device platforms, and we've got numerous options here.

[Video description begins] A blade called "Device platforms" opens. [Video description ends]

So for configure, I'll choose Yes, that makes these options below available.

[Video description begins] He points to several options. [Video description ends]

I want to choose the specific device platform this applies to.

[Video description begins] He selects a radio button labeled "Select device platforms". Under the radio button, several device platform options are listed. [Video description ends]

It's not Android, it's not iOS or anything like that. It's Windows. So I'm going to select Windows. I'll click Done.

[Video description begins] The Device platforms blade closes. [Video description ends]

I could add multiple other conditions, perhaps that the device must be coming from a specific location based on the IP address range used.

[Video description begins] In the Conditions blade, he points to several options. [Video description ends]

Also got a Device state (Preview) option here that we can take a look here.

[Video description begins] He selects an option labeled "Device state (Preview) and a blade called "Device state (Preview)" opens. [Video description ends]

So we can specify that we want device states to be compliant with certain security baselines. I'm not going to configure that option.

[Video description begins] He selects an option labeled "Yes" under a label called "Configure" and then points to a radio button labeled "All device state", which is preselected. [Video description ends]

So I'm going to remove that.

[Video description begins] He closes the Device state (Preview) blade and a pop-up box appears with the text "Your unsaved edits will be discarded". [Video description ends]

So we've just got really our device platform here.

[Video description begins] He clicks a button labeled "OK" and the blade closes. [Video description ends]

So I'm going to go ahead and click Done for the conditions.

[Video description begins] In the Conditions blade, he points to an option labeled "Device platforms". [Video description ends]

Now we haven't decided if all of these conditions if they're met either allows or blocks access to something.

So I'm going to go to the access controls Grant section. And I'm going to Grant access, but I want to Require multi-factor authentication.
So before Lucas Brenner can use a Windows 10 device and sign in and access Office 365, he's got to use multi-factor authentication.
Otherwise, no go. And I'm okay with that.
So that's my policy, I'm going to go ahead and click Create and we can now see we've got our Win10 policy that was created.
Now notice that the default State is set to Off. Well, that's not very good. If we go into that.
That's the option in the bottom left that you'll see, while either when you go in after the fact or when you're creating it. The Enable policy option is set to Off, it can also be set to Report-only or On. So, once we know we want this to be put into effect, we would click On. And now it says down below, conditional access supports all client apps, that's fine. I'm going to go ahead and click Save. And after we've done this, notice the state for that policy is now On.
So it will now be in effect.                    
                    
