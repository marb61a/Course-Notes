                    AZ900 Microsoft Azure Cloud Fundamentals 2021
                    Additional Material Course Notes Part 26


Resource Tagging and the Portal(Cont)
  - Currently this virtual machine has two. Project : ABC is the first tag and CostCenter with the value of YHZ is the second one
    - We can even add a third one here. for example, we might tie it to a department
    - We are going to put it Department, if we've already created that, as we start typing it'll show up.
    - However, nothing's popping up so this is a brand new tag we are creating, we are going to set the Value to IT.
  - We've now got a third tag that we are adding here to this particular resource
    - We can go back and remove any one of these at any point in time, so click Save
    - So now that we've got those listed, we see the third one has been added at the bottom
    - If we were to go to another resource, let's close out of this virtual machine
    - Let's just pick a storage account and let's look at the tags for it.
    - When we click on Tags, we'll see whatever it's been tagged with already.
  - Bear in mind, Azure administrators can apply policies that can add default tags
    - There might be times when you're creating a resource and you don't add tags
    - After you check it, after it's been created, there are tags, that's because of a policy
    - Here we can see this storage account has CostCenter : YHZ.
    - If we were to type department, we'll notice it already knows it exists
    - In the same way, it knows it's already got a value that's been typed in for another resource, that's fine, we can go ahead and work with that.
  - When we click that, it's kind of like a little filter
    - Now, notice that we've also got a little square icon also over here, and it allows me to show resources with this tag
    - Do it for the first one here, CostCenter : YHZ.
  - It'll show us resources that have been tagged with that item
    - Specifically, we can see that all of these items are listed here, move over a little bit so we can see them all
    - They're all listed here as being items that are tagged with that same value
    - We can see at the top here, Resources with tag CostCenter : YHZ
    - Now when you're creating a new resource, for example we're not going to save that, click Create a resource.
    - Let's say we were going to create a brand new storage account. It could be anything but let's say that's what it was.
    - When you're in the midst of creating a new resource in Azure, during the creation, whether in the GUI or at the command line, you can specify tags.
    - We can see the Tags part of the wizard right here.
  - When you go there, it's going to look familiar, you can put in the name and value, up to 50 of them
    - Okay, so we can do that as well. Let's go back to our All resources view.
  - Because another aspect of working with tags in the GUI here in the portal, is that you can modify a selection of objects in terms of tagging
    - What that means is if we were to, let's say, put check marks by a couple of these resources
    - We can then click the Assign tags button up at the top of the view.
  - Within here, we'll see each of the selected items listed and we can delete tags and make changes
    - We can also add one up here, for example, if we wanted to, we could put in a tag
    - Let's call it Stage and for Value we are going to put in Testing.
    - It's the testing stage that we are applying to this and we are going to go ahead and click Save.
    - If we look at any one of these items, let's say this storage account, this second one here that was part of our initial selection.
  - We can also see it says it assigned it to three resources. But let's just check this one anyway
    - Go to Tags, we'll see whatever was already applied previous to my last action.
    - But we will also see that Stage was added with the value of Testing.


Resource Tagging and the CLI
  - The CLI can prove very handy when it comes to manipulating tags in an Azure environment. 
    - To get started here, we are going to type in az tag list
    - When we do that, it should show me details about all of the tags in this entire subscription, but there's too much metadata here.
    - All we really want to see are the names of tags, so clear the screen, use the up arrow key to bring up that previous command.
  - We are going to use --query [ ] because it's an array or list of items. And for each of them, we want to see tagName, where Name has a capital N.
  - That's better, now we can see the names of tags, not the values that have been applied in my entire subscription
    - We want to add a new one, so run az tag create, we want to create one, --name, called ClientID
    - We might want to do this if we want to track resources based on clients, for doing projects for clients, for billing purposes, for chargeback to clients
    - What we've done is created the tag called ClientID.
    - We can verify this, of course, if we bring up, using the up arrow key, our az tag list command where we're querying for tagName.
  - There's ClientID shown at the bottom of the list, perfect
    - Now we want to add a value for the ClientID tag and then we can apply it to a resource
    - To add a value, we are going to run az tag add-value --name, well, the name of the tag is ClientID and --value, set it to a value of 1234.
  - We want to apply that to a resource. So to do that, we are going to use, let's say, az network vnet update
    - We are going to apply this to a VNet, a virtual network, that's deployed in a group, -g, called rg1, resource group 1. -n for the name of the VNet
    - Is Vnet1, and --set tags. in this case ClientID, of course we could also specify the value here, 1234, that we want to add to that VNet.
    - By adding the value up above, what we're really simply doing is making it available to be assigned to individual resources.
  - If we flip over here into the portal where we've pulled up the tags for Vnet1
    - We indeed will see that ClientID with a value of 1234 has been successfully added.


Resource Tagging and PowerShell
  - You can use PowerShell cmdlets to manage tags in an Azure environment.
    - To get started, we want to make sure we get a handle on a specific storage account that we've already created
    - We want to store that in a variable that we are going to call storacct, we can see here $storacct
    - We are going to tell it that we want to run get-azresource-resourcename
    - Here's the name of the storage account we have, it's in a resource group called rg1,
    - We want to do this because we want to apply tags to that storage account.
    - Now let's just run $storacct to make sure we have a handle on that storage account
    - Looks good and currently we can see the tags for it CostCenter YHZ.
  - Now what we want to do is add something new
    - We are going to go ahead in terms tags and run $storacct
    - We have that variable the points to the $storacct.tags.add
    - In parenthesis and we will start double quotes
    - We want to set the Stage key with the value of Development and we are going to go ahead and press Enter.
  - Now let's just clear the screen with cls and use the up arrow key to bring up our $storacct variable
    - Notice that Stage and Development the key and value pair have been added as a tag for that storage account, we can also do other stuff like this.
  - In parenthesis get-azresource -tag, we are going to specify here an @ symbol with an open curly brace
    - In quotes we are going to say Stage and = Development put all of the each of these items in quotes
    - The next thing we are going to do is close off my curly bracket and my parentheses and .Name
    - What does this mean? Well, it means that what we want to do is to show the names of any Azure resources that have that listed tag name and value
    - So "Stage"="Development", when we press enter, we still don't see anything here.
  - Well, that's strange because when we looked at our variable, it returned Stage Development
    - Well, that's the variable, it's not been committed to Azure yet
    - What we need to do is run set-azresource to apply the change -tag, and then $storeacct.tags the tags property
    - Because we know that the tags property here contains what we just modified plus what was already there to begin with
    - So, $storeacct.tags -resourceid give it the resource ID that's going to be $storeacct.resourceid
    - Great working with variables isn't it makes things much easier
    - We'll just use -force to suppress any questions, after that's done, it will have committed that change to that resource.
  - We are going to clear the screen we're going to use the up arrow key to get-azresource once again, we can see our storage account storacct333325.
    - Indeed is tagged with "Stage"="Development".                    

