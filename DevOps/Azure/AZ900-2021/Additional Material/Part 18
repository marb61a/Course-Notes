                    AZ900 Microsoft Azure Cloud Fundamentals 2021
                    Additional Material Course Notes Part 18


Azure ExpressRoute Overview
  - Microsoft Azure ExpressRoute gives you a private dedicated network circuit 
    - That you can use to link an on-premises data center or network directly into the Azure cloud. 
  - It gives you a dedicated private network link that does not traverse the Internet, as a site-to-site VPN solution would, as an example
    - You might even use both side by side, you might have a site-to-site VPN linking your on-prem network into Azure
    - You might also have an ExpressRoute circuit for redundancy purposes
    - With ExpressRoute, you have really two primary billing models
    - You can select metered, which means that you will be paying per gigabyte of outbound data transfer
    - However, you also have an unlimited option where you pay a flat fee per month which means what it says, it's unlimited in terms of data transfer
  - You can also provision more than a single circuit
    - This might be useful if you've got different geographical locations that you want to provision a configuration 
    - For a private dedicated link that connects into the Azure cloud with ExpressRoute, you can have a service key
    - The service key gets generated automatically when you provision an ExpressRoute resource in Azure
    - So we see an example of what the key might look like, this is a key that you would provide to your service provider
    - Tthat usually comes in the form of you using the service provider, like a telecom or a network provider locally
    - You would have an account with them, you would sign into the web portal, and configure the Azure ExpressRoute circuit by pasting this key in there
    - You can get from 50 megabits per second up to 10 gigabits per second for an Azure ExpressRoute circuit.
  - The way that we provision this, from beginning to end, is we start by creating an ExpressRoute resource in Azure
    - We then would copy the service key, the service key is generated automatically
    - And it's going to be in the Overview blade of your ExpressRoute resource
    - You'll copy that and enter it into your service provider portal to provision ExpressRoute
    - After which, if you give it a bit of time, the provider status, when you look at the ExpressRoute resource in Azure
    - In the Overview blade, the provider status will change to Provisioned
    - And after we've done that, then we can configure specific peering connections, such as Azure private peering connections
    - Perhaps to link on-premises resources, such as individual virtual machines, even. To our Azure environment through the ExpressRoute circuit.
  - There are some variations to Azure ExpressRoute to think about, such as ExpressRoute Direct and ExpressRoute Global Reach
    - With ExpressRoute Direct, it doesn't use a service provider
    - Clients can make direct connections to Microsoft ExpressRoute Direct routers
    - This way, we can have dual links up to 100 gigabits per second
    - In order for you to take advantage of ExpressRoute Direct, though, you have to send an enrollment email to Microsoft
    - Specifically to ExpressRouteDirect@microsoft.com. With a couple of details
    - Including your subscription ID and the locations in question that you want to use to make an ExpressRoute Direct connection
    - ExpressRoute Global Reach is used to link ExpressRoute circuits together.
  - Why would we do this? Well, what you could do as an Azure customer is you could use basically the Microsoft Azure backbone
    - To allow connectivity from one on-premise location to another
    - But instead of using a standard WAN over the Internet
    - You're linking each of those on-premises networks to the Microsoft backbone through ExpressRoute Global Reach
    - It allows you to form, then, your own private overlay network between on-premises networks, which sits upon the global Microsoft network
    - And you're making that connection to Microsoft through ExpressRoute


Configuring ExpressRoute
  - In Azure, an ExpressRoute connection gives you a dedicated private network link from your on-premises network 
    - Or data center directly into the Azure cloud as opposed to going over the Internet through a site-to-site VPN. 
  - Now, part of configuring this will be to know which provider you're going to use in a region that supports ExpressRoute
    - In this example, we will be looking at the megaport.com website
    - From there, if you don't have an account, creating an account with your provider so that you have a web portal 
    - Where you can configure part of the ExpressRoute connection
    - But the first thing we have to do in Azure in the portal is actually create an ExpressRoute resource
    - We are going to start by clicking Create a resource, type in expressroute, and select ExpressRoute, click Create
  - We'll have to fill in a few details here, the first of which is the name of the circuit. 
    - For example, we are just going to call this first circuit, Circuit1
    - We would choose the appropriate provider from the list or depending on where we are in the world
    - This will determine which type of provider that we are going to use
    - For example, let's say we select Megaport and we have a peering location, select Dallas as an example
    - Then we can select the bandwidth we want for this particular circuit
    - From 50Mbps all the way up to 10, we are going to start at 50Mbps
    - Naturally, think about the workloads that will be using this ExpressRoute circuit when you're finished configuring it
    - To determine what you really need for bandwidth, the default SKU is Standard
    - Wcan go for Premium if we are going to have more than 4000 routes as we see here in the helper screen
    - Or if we need the ability to connect more than 10 virtual networks, and so on.
  - We are going to leave it on Standard for my requirements, the billing model is either Unlimited
    - That means what it says, you get a flat monthly charge, or it's Metered, where you pay per gigabyte of outbound data transfer
    - We are going to switch that over, then we are going to deploy this into an existing resource group.
    - We can specify the location where we want this to be deployed, eg choose (US) West Central US and click Create
    - After a moment, we can see in our notification area that it succeeded, the deployment of the ExpressRoute circuit
    - We are going to click Go to resource so we can take a quick little peek at it
  - What's important here in the Overview blade is the service key
    - This is what you would need to enter when you are configuring your ExpressRoute circuit on the provider side in the web portal interface
    - You get to specify the key among some other details
    - Once that's been done, you'll see that the provider status here will change from Not provisioned to Provisioned
    - At which point we can then look at things like Connections and Peerings
    - For example, if we go down to Peerings, we might want to create an Azure private peered connection. 
  - By doing that, we might for example, want to link my on-premises environment such as 
    - A specific on-premises virtual machine that we want connected to an Azure VNet using the ExpressRoute dedicated circuit
    - Instead of traversing the Internet to make that VM on-premises talk to Azure, we could do it through the circuit
    - So we could fill out these types of peering connections
    - However, because our circuit is not provisioned on the provider side, we can't follow through
    - But this is normally what you would do. And you can even specify a shared key 
    - To authenticate the on-premises environment with the Azure environment through ExpressRoute                  
                    
                    
Azure Policies Overview
  - Microsoft Azure policies are all about controlling access to Azure resources.
    - We can use built-in policies or, if they don't suit our needs, we can use custom policies that we've created to control resource access.
  - A policy is really a JSON rule file that we can apply to the creation of new resources in Azure
    - You can also apply policies to existing ones, maybe to determine if they're compliant with the security baseline
    - Now, custom policies can be created manually, you could copy an existing policy and tweak it
    - You can even get policy documents from GitHub repositories
    - Azure Policies are considered to be more granular than RBAC
    - Consider the fact that with role-based access control, or RBAC, you can determine if a technician can or cannot create Azure virtual machines
    - However, with policies we can get much more granular, determine which types of virtual machines are allowed to be deployed
    - And into which regions and so on, so we specify things like locations
    - Maybe Canada east is an acceptable location where virtual machines can be deployed but not anywhere else

