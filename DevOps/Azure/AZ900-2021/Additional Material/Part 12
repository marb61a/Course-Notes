                    AZ900 Microsoft Azure Cloud Fundamentals 2021
                    Additional Material Course Notes Part 12


Visual Studio App Deployment (Cont)
  - Remember that applications' web apps are tied to a service plan, and you can have multiple apps for a single service plan
    - You can start to examine specific app services
    - Look at the Deployment Slots that might be available for it, such as a testing one we see here and so on
  - You can also create web applications directly here in Visual Studio and then publish them to Azure
    - In order to get started, we are going to go to File > New Project
    - In this example for ASP.NET Core web app, we are going to select that and then click Next
    - It's going to be called WebApplication4 we have a local location, that's fine
    - We are okay with all of that, so click the Create button to create this
  - We going to deselect the Docker support as this isn't going to be a containerized app
    - It could be but we choosing not to here, then we will click Create and let it create my project
  - Realistically, we would then start building my application and making changes to it
    - However, what we are going to do here is publish it, assume that we've made changes to our WebApplication4
    - Over the Solution Explorer towards the upper right, right click on it and choose Publish
    - We want to publish this as an Azure web application, in the main window and click Start
    - We want this to be App Service and we want to create a new app service in the Azure environment
    - After that then we will go ahead and click on Publish.
  - Then it will show the web application name it wants to use, it wants to use a unique name in Azure.
    - Assume that that adheres to our company naming policy for applications in the Azure Cloud, there will be a subscription it will be tied to
    - We can specify a resource group one that already exists, or I could let it create one if I really want to.
    - What we are going to do is select an existing resource group, we do have the New button otherwise
    - With the hosting plan, we can use an existing type of hosting plan or again, build a new one.
    - Then we are going to go ahead and click Create
  - Really all we're looking at here is yet another way to deploy a web app in Azure
    - The difference being that, as a developer, of course, you have the tools available in front of you 
    - To be actually able to make core changes to the functionality of the app
  - After a moment, if we look at the output window here at the bottom center of the screen in Visual Studio, we can see the Build succeeded
    - Looks like everything has been done successfully restart a web app
    - To be sure check it out in the portal, in the portal we are viewing App Services
    - And indeed, we should be seeing our newly created web application
    - If we were to click the Browse button at the top of the Overview blade, it would link to the URL and give us our sample page for this application


App Services Custom Domains
  - When you deploy a web application or app service in Azure, you get a default DNS domain suffix
    - Take a look at that, because you'll often want to change that
    - That's the purpose of what we're doing here, to configure a custom DNS domain, click on an existing web app
  - In the Overview blade over on the right, when it pops up, we will see the URL, the default suffix of which is azurewebsites.net
    - We can click the URL then we can click the Browse button, same thing, depending on the nature of the app will determine what you see next
  - This is an app that has a web front end and it's a simple WordPress page
    - That's what we should be seeing, it is working but it's using the azurewebsites.net name
    - What if we want to use something different, we want to call it something different
  - What we are going to do then is scroll down in the navigation bar for the web app, and go to Custom domains
    - Any existing custom domains will be shown, we don't have any here, so we want to click Add custom domain.
    - We want this web app referred to as www.lanchanceit3.com.
    - Where lanchanceit3.com is a DNS domain that we already own and have registered to a public DNS registrar outside of Azure
    - But we need to make sure or Azure needs to make sure that we really own that, so click Validate
    - Here, we can select either CNAME or an A record and down below, it gives me instructions on what needs to be created in my DNS zone
    - Now this is all validated. It says the hostname is available and you own the domain
  - How did it know? Well, we've already gone ahead and created a CNAME record that is instructed 
    - With both the value of www and then the actual value of this current name
    - Now that that's there, it checked for that and that's why we have domain ownership
    - Then we are going to click Add custom domain
  - We can see now, it's been added here to the list, however it says Not Secure
    - It's not been secured with SSL which is a whole separate issue, what happens if we go back to the Overview page?
    - We used to have the default azurewebsites.net suffix, notice now, we have our custom domain name, lachanceit3.com and then www
    - We can browse to that to make sure that it responds and it works perfectly
  - The only thing is that it's not currently secured over HTTPS. But again, that's a separate issue
    - At this point, we've configured a custom DNS domain name for an Azure Web App.


App Services SSL/TLS Bindings
  - It's important to secure communications over the Internet to web app by using HTTPS
    - The S is for secure versus just plain old HTTP. But to do that, you need a PKI certificate
    - And you need to configure a binding to use that with your web application
  - We're going to do that. So we're going to start by generating a PKI certificate here in Azure
    - To do that, we need a Key Vault luckily, we've got a bunch of them
    - We are going to filter the list of all resources here for kv, and we've got one called KV1East1, that's Key Vault.
    - You can store many different types of secrets in a Key Vault, including certificates, to click Certificates
    - We can choose to generate or import one for this we are just going to generate a PKI certificate
  - The idea being that we want to use it with an Azure hosted web application
    - It wants a certificate name we are for the example going to call it CustomWebSite1
    - It's going to be a Self-signed certificate and the subject name will be cn, common name, so cn=www.anyname.com
    - We've already configured this as a custom DNS domain name for my web application
  - That's important because what people are connecting to in the browser, for example, must match what's in the certificate
    - Otherwise, it's not going to work properly, it won't be secured.
  - For DNS Names, we are going to click that and over on the right for the DNS Name
    - We are going put in the same example www.anyname.com, which is our custom DNS domain name and click OK.
  - That's really all we are going to do here
    - Let's get this certificate created, click Create
    - We're going to reference it in a minute when we go to the web app to enable our TLS or SSL binding
  - SSL is deprecated and we should never use it, we should only be using newer versions of TLS for security reasons
    - We are going to go into the navigation bar on the left
    - Go to choose App Services because we want to go to my web app where we want to use that certificate
    - We have got one here, it's called dockerwebapptestyhz
    - If we click on that, notice in the Overview blade, we'll see the current URL , it's only using HTTP.
  - It is using a custom DNS domain name. And that has to match the subject name in our certificate, the common name, which it does
    - Start by get this working so scroll down on the left, we have got to go to TLS/SSL settings.
  - The first thing that we want to do is make sure we go to Private Key Certificates.
    - We need to make sure that we bring one in, we will to import a Key Vault Certificate, basically, the one we just created
  - We need to select the Key vault, KV1East1 , there's our certificate, CustomWebSite1
    - We are going to go ahead and choose Select, after we've imported the Key Vault Certificate here
    - But the next thing is we can then actually use it for an SSL, or TLS in our case, type of binding.
  - To do that, over on the left, we are going to go to Custom domains where will see the existing custom domain we have here, but it's not secured.
    - All we have to do is click Add binding over here on the right.
    - We've already brought that certificate in here, there's our custom domain, Choose certificate
    - There it is nd we'll just choose SNI.
  - Then choose Add Binding, what we're doing is binding this self-signed certificate to our custom DNS domain name
    - It says SSL state secure but it shouldn't really say SSL
    - Because whether you're using SSL or TLS, technically is defined by how your web browsers are configured and how your web server stack is configured
    - But at this point, we'll let it go and head up to Overview, just to check out what's going on here with the URL to our web application.
    - Now it says HTTPS. And if we click that to browse to it, it says the site's not secured.
  - Of course, that's expected as it's a self-signed certificate
    - You can install the public root certificate for the signer if we really wanted to in all our devices to suppress this
    - We are going to click Details and say no, it's good. Go on to the web page. We know this.
    - There's our web page, which is now being served up over HTTPS.
