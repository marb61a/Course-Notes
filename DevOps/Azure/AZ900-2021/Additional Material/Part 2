                    AZ900 Microsoft Azure Cloud Fundamentals 2021
                    Additional Material Course Notes Part 2


Storage Accounts and the Portal (Cont)
  - In which case, we might then start thinking about using a Content Delivery Network or a CDN
    - For the Performance option, it's set by default to Standard
    - Then down below, we have Account kind, storage v2 or storage v1
    - That's an older version of a storage account and you'll only use that if you absolutely had to, for backwards compatibility reasons
    - You could also specify that it's to be used for BlobStorage, specifically binary large objects
    - These are essentially files that would be stored in this cloud storage account, kind of as a cloud-based repository
  - Then down below, we've got Replication options
    - Locally-redundant storage (LRS), means that you would have three copies of your data but not spread out across geographical regions within one locality
    - Geo-redundant storage (GRS), takes that a step further, so beyond your three LRS, local copies of data
    - You would get an additional copy replicated to a secondary region
    - If there's a problem the primary region, failover can be initiated so that the data is accessible in the secondary
    - If you don't have to worry about initiating a failover, you could use Read-access geo-redundant storage
    - However, if we were to switch up at the top here, the performance from Standard to Premium
    - Notice that from the account kind drop-down list, things changed a bit so we have BlockBlobStorage.
  - If we're going to be dealing with Blob storage items of files and we want to optimize it for the best possible performance for read and write
    - We could choose BlockBlobStorage, if we're going to instead going to be using this cloud storage account primarily to host shared folders
    - Azure file shares, then we could choose to optimize it for FileStorage, leave it on StorageV2.
  - Since we switched it from Standard to Premium, you'll also notice that down to Replication, the options are gone
    - Where they go? They don't apply when you've got the Premium performance selection, only Standard.
    - All we have is Locally-redundant storage, having done that, click next for the networking options
  - The networking options for the storage account determines how accessible it is from a variety of different types of networks such as public based networks
    - So all networks with selected networks, or only privately, turn on Private endpoint and click next
    - We've got a number of options such as whether secure transfer is required to and from the storage account
  - That's Enabled by default, whether we want soft delete for blobs, so they can be recovered
    - That's Disabled by default, but it could enable it, these options are changeable after the fact, as well
    - We are just going to accept those and click next for tags
    - If this is going to be tied to a project, for example Project ABC, we could tag it with a Name of Project and a Value of ABC, you don't have to do this
  - You can add multiple tags, you might tag it for billing purposes, or by department, it doesn't matter
    - In this case, Project ABC, click next to review and create the storage account
    - The validation is passed based on iur selections throughout the wizard
  - We are going to go ahead and click Create to create the storage account in resource group 1
    - After a moment, it says our deployment is complete, so we can click Go to resource.
  - We can also navigate, for example, in our left-hand navigation bar to view our Azure storage accounts from there
    - Of course, we could also go to the all resources view and see them and there's our storage account.
  - If we click on it to open it up, we'll see it opens up the navigation bar, and by default we are placed in the Overview blade
    - We can see the Location of this storage account, I can see the subscription it's tied to.
  - There's the tag we added, Project : ABC, scroll down in the navigation bar
    - We see that we have Settings such as Encryption settings for the specific storage account
  - It's defaulted to using Microsoft Managed Keys to encrypt content stored here
    - We could click on Configuration, for example, if westarted to maybe decide we want to change something such as Secure transfer required, and so on
    -Scroll down, we will also see a section for blobs. So Blob service, including Azure Content Delivery Network, CDN
    - Then finally we will see our Monitoring options and so on.
  - Depending on the type of account that you create, how you create it, the choices you make when you're creating them
    - Will determine some of the items that you see here under the navigation bar
  - This time we're going to make a few different selections, so go ahead and create it
    - It's also going to be deployed in this example, in the same resource group, so, our first one is Rg1, so select that from the drop-down list
  - Down below, we are going to give this a name, again, it's got to be unique
    - We will put in some characters to make that a unique name
    - We could, instead of using Premium like we did last time, leave it on Standard.
  - It's on StorageV2 (general purpose v2), Locally-redundant with Hot access tier, we can leave that and click next
    - We don't want it publicly visible so change it to Private endpoint, although we are not going to configure one
    - We are not going to change any of these advanced options
  - For tagging, let's say we don't tag this one
    - We could always tag it after the fact if we wanted to
    - Validation is passed, so go ahead and create this second storage account
  - Once again, before you know it, Your deployment is complete is the message you'll see
    - This time click Go to resource, so we're in our storage account once again, and we're looking at the navigation bar on the left as we did with our first one
    - But as we scroll down, we see not only Blob service listed over here on the left as we did before
    - But look, as we scroll further down, File service for Azure File shares, Table service, Queue service
  - Depending on how you create your storage account, depending on your selections
    - Will determine exactly what you see when you go into the properties of that storage account after the fact


Storage Accounts and the CLI
  - You can use the Azure CLI to create as well as to manage storage accounts and even to manipulate objects in the storage accounts 
    - Such as uploading and downloading blobs, but to do that we have to know the syntax.
  - And we can figure that out here in the CLI, which we've launched from the portal Cloud Shell by starting with az -h for help
    - By looking through the alphabetical listing of next level commands
    - We could gather that storage would be the next level command we would be interested in, we could do az storage -h.
  - Then depending on what it is we need to manage would be determined by me looking at this list and finding the most likely item 
    - For example, I want to create a storage account.
  - The next level item would be account, run az storage account -h
    - If we want to create a storage account, create would be the next level command
    - So we could just go ahead and ask for help on that as well
    - When we do that we get quite a bit of information
  - One of the things we would probably want to know is, for example, specifying the --sku for the storage account
    - Whether it's going to be standard locally-redundant storage, or read-ahead geo-redundant storage RAGRS
    - We have to know what these values are when we pass the --sku parameter on the command line
  - We are going to run az storage account create -n, so we can specify the name of the storage account
    - We are going to make sure that we adhere to naming standards within the organization
    - Go ahead and specify a name and specify the resource group we want to deploy the storage account into with -g
    - In this case, we already have a resource group called Rg1 -l for the location
    - We are going to specify in this case locally-redundant storage and press Enter to create this storage account
    - After a moment, we get the JSON output, which indicates that it was successfully created
  - Of course, in the portal since we're in the Cloud Shell, scroll back up here
    - The account here is <account_num> and, if we take a look at our Storage accounts here in the portal, we'll see that that will have been created.
  - There it is, our account, go back into the CLI where we are going to start by just perhaps clearing the screen with cls
    - The next thing we can do here is also view a list of storage accounts from the CLI with az storage account list.
  - This gives us all of the properties which may be important but if all we are interested in seeing for example is the name
    - Then we could bring up that previous command and use --query, open and close square brackets since we have an array of items and ask for .name
    - Now we are seeing only the names of the storage accounts and certainly we can see the one that we've just created
  - We can also show details about a specific storage account using az storage account show storage account, show
    - Then we can specify --name, and we can specify the name of the storage account
    - We are just going to go ahead and copy the one that we just created, copy the name, and paste it in here for the name parameter
    - And also the resource group, we could just specify, instead of specifying everything
    - We could use shorter parameters, -n for name and -g for the resource group, Rg1, press Enter and it returns information about that storage account
  - There's a lot of configuration settings as you can see, that might be enabled
    - Just as in if we were in the portal, if we click to open up that storage account in the properties blade for all of the configuration
    - There's quite a few options, so that is the kind of thing that we can do with the CLI
    - We can create storage accounts and we can start to manage them
  - Don't forget that if you go back into the CLI you can always get help with storage accounts by running az storage account -h
    - We really focus primarily on the creation and listing and showing, which can also, delete them, 
    - You can also generate a shared access signature or an SAS so there is a lot of things that we can do
