                    AZ900 Microsoft Azure Cloud Fundamentals 2021
                    Additional Material Course Notes Part 40


Azure AD and the CLI (Cont)
  - So create, delete, get-member-groups, list, show, update, and so on
    - There's a lot we can learn from within the help system
    - For example, if we were to run az ad signed-inuser -h, just talks a little bit about what that would do.
    - It looks like we have the wrong name here, so signed-in-user
    - Make sure you have the command syntax spelled out correctly, that's a little bit better.
  - Show graph information about the current signed-in user in the CLI, okay, so we can either run list-owned-objects after that or show
    - So we are going to use the up arrow key and our full command that is going to be az ad signed-in-user show
    - Just to get some information about who we're currently signed in as here in the CLI.
  - As we scroll up, it's a lot of details because it's showing me the properties of my user account
    - So things like the companyName, the country, department, employeeId, displayName, givenName, all of those types of things
    - And as we go further and further down, we can also see all the details all the way down
    - So it's just showing us details about the user that we are currently signed in as here in the CLI
    - Of course, we can do other things here, navigating through our Azure AD tenant for example, az ad group list
    - This will show me all my groups, but the problem if you consider it a problem is that it's telling me too much
    - It's giving us all of the detail, we are really only interested in the displayName property.
  - What can we do about that? We can do a few things
    - One thing we could do is run az ad group list again and pipe that to grep
    - That's the grep line filtering tool built into Linux
    - We can tell it what we want to see, and it's case sensitive by default
    - We want to see the displayName, name with capital N, we can ask for that and that seems to work. Those are the names of our Azure AD groups.
  - We can also alternatively use the --query parameter built in to the Azure CLI
    - For example, we could do az ad group list, and instead of grep and grep is fine
    - But instead of that we could use --query and we can tell it we want to see the displayName. 
  - Now the problem is that it won't work by default because what we have is a collection of items
    - We have an array of items and those items are the multiple groups
    - So we have to tell it here in our syntax after query, open and close square bracket
    - In other words, array element dot and for each item we want to see the displayName property
    - And when we do that, we get what we expect, the names of the groups.
  - It's a little bit cleaner, if you take a look at than what do you get when you use a grep line filtering
    - Because grep displays everything on the line, so displayName colon all that stuff
    - All we're seeing here are the actual value, depending on what your need is
    - It might be easier to parse this text down below that results from using --query 
    - Than it would from trying to parse the text that results up above here by piping to grep.


Azure AD and PowerShell
  - Not only can we use the Azure portal to manage our Azure AD tenant, as well as the Azure CLI, we can also use PowerShell cmdlets.
    - Whether you're running PowerShell on-premises with the Azure module
    - Or whether you're doing it here in the portal through Cloud Shell, which is what we are going to do
    - We are going to point to Cloud Shell here, which allows me to run PowerShell cmdlets and Azure CLI commands.
  - We are using PowerShell here, to get started here, just navigate a little bit around Azure AD
    - We should igure out what we can type in, begin with
    - Use the get-command, and let's say we want to retrieve information about Azure AD
    - We know that the verb part of that cmdlet, the prefix, is going to be get
    - Don't know what would be after that so how about a wildcard symbol, an asterisk and probably azad and then something else.
  - Looks pretty good, we can use Get-AzADGroup to get groups from my directory, or group members
    - We can get users, we can get applications that might have been registered in Azure AD
    - This isn't bad, and can provide good learning a bit, then we are going to clear the screen and run get-azadgroup.
    - We are able to then see what groups we have.
  - Looks like it's showing us the groups with the default selection of properties
    - However, if we really wanted to, we could also run get-azadgroup
    - We know there's more about groups than just those list of properties
    - What we could do is, tell it that we want to pipe that, to select, and tell it we want to select all properties, select *.
  - Now what we could also do is pipe that command to the select alias and select specifically the properties that we want
    - So get-azadgroup, let's say, and pipe that to select and say we only want to see the displayname
    - We can ask it for which properties we are interested
    - That's all we see. Now you might wonder, how do you know it's called DisplayName?
  - If you're not sure what these properties are called, you can pipe the result of a cmdlet in PowerShell to get-member
    - You can ask it for properties, so -type property, otherwise it'll show you properties and methods
    - Here we can see, indeed, there is a property called DisplayName, and MailNickname, and so on and so forth.
  - We can learn about that quite easy, another thing that we might be interested in doing is running get-azureadcurrentsessioninfo, it's a long one.
    - It's actually telling us that we need to first run connect-azuread, do that so hit the up arrow
    - Go back to get-azureadcurrentsessioninfo and this is telling us some interesting stuff.
  - We can see here the tenant ID for our Azure AD tenant starts with 96421
    - If we go back here and check that in the portal, yeah, that looks right, that's correct.
    - We can also see our domain name, we aren't using a custom DNS domain here because we've got the .onmicrosoft.com DNS suffix.
  - We can also run cmdlets here in PowerShell, like get-azureadtenantdetail
    - When we do that it's just giving me a little bit of the same type of listing from above, just presented in a different format.
  - Of course, if we want to manage Azure AD objects such as building users
    - We could also do that by searching up what the appropriate cmdlets are, so get-command
    - We are assuming it starts with new, and it's probably got user in the name
    - This looks about right, such as new-AzADUser, we can take that further,  what else can we do with users?
    - Use the get-command *azaduser*, we can build a new one and we can retrieve Azure AD users
    - We can also update something about them and then we can remove them, and so on.
  - If we were to run, get-azaduser, then we can see in fact, it's showing we the user accounts
    - And just like with the groups, if we really want to, we can pipe that.
    - For example, to select and tell it what we want to see, which properties, we want displayname.
    - In the same way, we can also discover which properties are there with get-member
    - Piping to get-member -type property. And we can see some of those properties listed there.


Azure AD Users and the Portal
  - You can use the Azure portal to create Azure AD user accounts.
    - Now why would you create an Azure AD user account? 
    - You would do this so that you have a way to allow people to authenticate, so they can access things like cloud-based apps
    - And in some cases, depending on your configuration, also on-premises apps
    - To get started in the portal we are going to go to Azure Active Directory
    - We could also launch that from my left-hand navigation menu, it doesn't matter how we get there.
  - Within our Azure AD tenant, click on Users from here, we'll get a list of existing user accounts.
    - We've got the initial Microsoft Account that reflects our Azure account that we initially set up
    - However, we are going to click the New user button to build a new user
    - This user is going to be an Azure AD user, we are not going to invite them, they are an external user., leave it on Create user.
  - For the identity here, we are going to specify that the username is cblackwell, so Codey Blackwell
    - And after the add symbol here, it's going to use our DNS domain suffix for my Azure AD tenant, so that's already filled in.
