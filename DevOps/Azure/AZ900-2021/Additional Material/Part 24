                    AZ900 Microsoft Azure Cloud Fundamentals 2021
                    Additional Material Course Notes Part 24


Resource Locking and the Portal
  - In Microsoft Azure, a resource is an object that you define in the cloud, such as a virtual machine 
    - Or a disk that you would attach to a virtual machine or a storage account or a SQL server
    - Any of those things are resources, we have the ability to use the portal to lock resources
    - Why would you do that? You would do it because you want to prevent either a modification of a resource
    - You want it to be read-only, or you want to prevent the deletion of it.
    - We can set locking at various levels in the Azure hierarchy, such as at the subscription level. Now, that's what we are going to do.
  - For example, go into the subscription, we'll be able to open it up, to reveal its properties, and we interested primarily in resource locking.
    - We are going to scroll all the way down under Settings where we can see Resource locks.
    - Any existing resource locks at this level will be shown, it says This resource has no locks
    - Okay, well, we could click +Add, and we could add a lock at this level.
  - When we do that, I specify a name and I can determine if it should be a Read-only lock, so to prevent modifications, or if I want to prevent deletions.
    - We are not going to do that though we could, instead we are going to navigate to Resource groups.
  - So what we want to do then is take a look at the resource locking options at the Resource group level
    - Which would be inherited by the resources in the Resource group, we are going to click on the resource group Rg1.
  - In the Overview blade, one of the things you'll see over on the bottom right are the resources in that resource group
    - So let's scroll down in the navigation bar and let's take a look at resource locks
    - It's listed a little bit differently here, under Settings, it just says Locks.
  - If we take a look, we'll see if there are any locks that have been made here
    - We've got the Subscription icon where we could take a look at subscription level locks.
    - It's just a shortcut to get there. However, we can also add locks at this specific level for this particular Resource group.
  - That's what we are going to do, click Add and call this, let's say Lock1, then set it as a Read-only lock here.
    - We could add Notes if we so chose, but we don't choose to so click OK
    - After a moment, we can see that Lock1 shows up here as Read-only for resource group 1
    - If we click Subscription once again, then we can see that it shows up at the subscription level and we can see the Scope that it's applied to is only rg1
    - Notice, you can Edit it to change any settings related to that or Delete that lock.
    - If we go back to the Resource group, you can see the lock here.
  - If you click on it, it'll pull up the items where you can modify its settings
    - But you can't delete it from here, you'd have to go to the subscription level and that's to be expected
    - Now, let's take a look at some of the resources within Rg1.
  - We can do that by just scrolling up, clicking Overview
    - We'll see any resources deployed into this resource group, as we mentioned previously, listed in the bottom right.
    - For example, here's a network security group NSG called NSG-Windows
    - If we click to open it up, we'll be able to look at the Locks for that particular individual resource.
  - When we click Locks here, notice we can see Lock1 is applied Read-only and it says Parent resource locks, can't edit them here
    - Click on the locks scope to go to that scope, so we'd have to go up to in this case rg1 to take a look at it
    - But interestingly, if we try to delete this resource, so let's say go back to Overview and normally we'll just go to Delete here.
    - Normally, if you have the role permissions to do this it would succeed, say Yes and get rid of it.
    - It says, we can't do it, cannot do it because there is a lock.
  - It's at the Rg1 level, therefore that's not going to happen, It's read-only, which will also prevent modifications here to this particular object.
    - For example, go to Inbound security rules and go to +Add a new rule, we'll just fill in a couple of blanks here really quickly
    - We are just going to accept all of the defaults and click Add
    - Well, it didn't even like that, we can't even modify it, let alone delete it
    - Bear in mind, we set a read-only type of lock at the resource group level and it's flowing down at the resource level
    - To get rid of all of this, what we could do is go up to the subscription level, as we saw because that's where it allows us to actually delete locks.
  - We are going to do that, we are going to go back into my Pay-As-You-Go subscription, scroll down and look at Resource locks
    - We'll see the resource lock applied at the resource group level.
    - We are just going to take a look at that.
  - Of course, we can only edit what's there, but if we scroll to the right to see what's over on the far end, there's the Delete option.
    - We are going to press Delete, and now it's gone.


Resource Locking and the CLI
  - Resource locking can be managed using CLI commands just as well as it can be done using the portal.
    - Go into the Azure CLI and I'm going to start by using the az -h command because we don't know what the syntax is
    - There's a lot of stuff here, the next level commands after az.
  - We are going to guess it might be in the Rs for resource lock, but we don't see anything like that
    - Okay, not that, we are going to next guess that it's somewhere in the Ls and here it is, lock, Manage Azure locks.
    - Therefore, we can do az lock -h to try to figure out how to proceed from here.
  - To Create a lock, Delete a lock, list locks, and so on, we are going to run az lock create, and create a lock here called Lock2
    - We are going to set it at the resource group level, we don't have to, we could set it at the subscription level
    - We could even set it at an individual resource level
    - Commonly, you would find it would be done at the resource group level, in this case
    - We are going to specify --lock-type and set it to readonly
    - We want to prevent modification, which also includes preventing deletion, it's called Lock2 and looks good.
  - Check it out in the portal to see what it looks like in Rg1
    - We are going to go to my navigator up here on the left and go to the Resource groups view, where we are going to see Rg1.
    - We are just going to go ahead and click to open that up.
  - Let's go down and check the locks for it shall we. So scroll down and we're going to take a look at the locks, there it is, Locks
    - We can see that Lock2 Read-only has been set here.
  - Again, it's been set at this level rg1, of course, if we scroll over to the far right, we can choose to Edit or Delete it
    - We could also go up to the Subscription level, where we'll see all the locks in the subscription, even if they weren't tied to the subscription levels.
    - There it is. And from here, we can also Edit and Delete it at that level. But of course, we can also do that in the CLI.
  - Back here in the CLI, for example, we might run az lock list.
    - Here, we'll see that we do have a lock that's applied it's called Lock2, it's been applied to Rg1, and the locking level has been set to ReadOnly.


Resource Locking and PowerShell
  - You can use PowerShell cmdlets to manage resource locking in Azure.
    - To get started here in PowerShell, run the get command and we are going to search for any cmdlets that have resourcelock in their name
    - We are going to pad the string resource lock with an asterisk on either end. So as long as it's got resource lock in the name, we want to see the cmdlet
  - Right away we can see for instance, New-AZResourceLock to create a new lock, or Get-AZResourceLock to retrieve a list of locks through Azure
    - We even have the option to remove or set a lock.
  - If we wanted more details on any one of these, we could run get-help, let's say a new-azresourcelock
    - We could ask for detail, and maybe pipe it to more to stop after the first screen full of output.
  - Here we can see the syntax for this cmdlet, including the parameters, such as -LockId, -LockLevel and so on
    - Even to the point where we'll see an example of how we can actually create a resource lock.
    - Let's get started by retrieving resource locks with get-azresourcelock, we are going to press Enter.
  - So it looks like we already have a lock called Lock2 that has been applied to a resource group called Rg1
    - And the level we can see here has been set as ReadOnly, what we want to do is remove that lock
    - In order to do that, we need to get this LockId.
    - So in order to do that through variables, we are going to create a variable called $lock.
  - The variable's $lock and it's going to equal the return value of running get-azresourcelock
    - We'll specify a lock name of lock2 and we know that that applies to a resource group called rg1
    - We need the lockid property, notice that we've enclosed that expression within opening and closing parentheses
    - That's because .lockid will be a property of us retrieving that lock with that statement
    - Otherwise it'll think we're looking at lockid as being a property of rg1.
