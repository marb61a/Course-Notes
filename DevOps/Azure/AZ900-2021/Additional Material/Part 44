                    AZ900 Microsoft Azure Cloud Fundamentals 2021
                    Additional Material Course Notes Part 44


Azure User MFA (Cont)
  - We are going to specify some details about the phone that we are going to use
    - We'll specify the country or region, the phone number
    - We are going to have it, Send us a code by text message
    - This is going to be the additional Multifactor Authentication factor
    - Go ahead and enter in the six digit code that was texted to the phone, our smartphone number
    - Click Verify and then click Done, at this point it takes us into the Access Panel Application, so we're signed in
    - Let's test this again. Let's sign out from being logged in as Codey and let's try it again from scratch now that MFA is completely set up
    - We are just going to go ahead and Sign out from that account.
  - We are going to sign back in again, same email address for Codey Blackwell
    - We'll put in the password for the account, now it says we've texted your phone with the code
    - You need to enter that to sign in, that's the Multifactor Authentication
    - We are going to put in the code here, then click Verify
    - We don't want to stay signed in, so choose No, after a moment, we are back at the Access Panel Applications screen
    - There are many different mechanisms by which a code like that can be received
    - But in this case, it's just being sent through SMS text.
    - In the portal, looking at the All users view in our Azure AD Tenant, go back into Multi-Factor Authentication
    - Notice now that for user Codey Blackwell, it used to be Enabled, but now it's Enforced.
    - Because that user had signed in since MFA was Enabled.


Azure User MFA Block
  - Multifactor authentication, or MFA, enhances users sign in security by requiring an additional factor besides just username and password
    - However, you can also choose to block MFA user access attempts, to block a user account from authenticating
    - You might do this if you suspect, for example, a user device has been lost or stolen 
    - And you don't want to chance someone being able to log in with that account, or if a user has left the organization
  - So either way, here's what you need to do on the portal to block user MFA
    - Start by going into Azure Active Directory, then in the navigation panel, with the properties for Azure AD, go to Security, within there, then go to MFA.
  - In the Multi-Factor Authentication navigation bar, go to Block/unblock users
    - Currently, there are no Blocked users, it does say here that blocking users simply means they will not receive Multi-Factor Authentication requests
    - It's denied. And it says here, that the user will remain blocked for 90 days by default, unless you unblock them within this list
    - Let's go ahead and add a block, click Add and we have to determine which user we want to add to this list.
  - In this case, it's going to be cblackwell@, and then we'll put in the entire name of the domain for our Azure AD tenant
    - On microsoft.com, in this case, it's using the default suffix
    - The reason here will be Lost smartphone, and at this point, click Ok
    - The user will be added to this list, which means that authentication attempts for MFA by that user will not be honored.
  - We can see the User is now listed here with the reason of Lost smartphone
    - Bear in mind, it can take a little while before this kicks in
    - At any point in time, we can choose to unblock that account
    - We have an Unblock link, instead of waiting for the default 90 day timer
    - We are going to go ahead and click Unblock for that account, and we are going to put in the reason of, Phone was found.
    - Then we'll click Ok, we're unblocking that account so that MFA authentication for that user will now go back to running as normal.


Azure Self-Service Password Reset
  - If you've ever worked in a helpdesk environment, you're probably well aware that a large majority of tickets deal with user password resets.
    - In other words, users forgetting their passwords
    - Luckily, in Azure AD, we have the option of enabling self-service password reset
    - So that the user can take care of that issue themselves without opening a helpdesk ticket
    - To get started here in Azure, go to Azure Active Directory, where we are then going to go into Users.
  - We want to go to the All users view. But really, what we want to do here is enable the Password reset option.
    - In the left-hand navigator, we'll click Password reset
    - Currently, we have to determine which set of users we want this to be available to, currently it's set to None.
  - We can choose Selected, where we can specify groups of users that we want the setting applied to
    - Or we can turn it on, for All users within the organization
    - We are going to choose All and we are going to choose Save
    - After a moment, it will say that the password reset policy has been saved
    - Go ahead and test this out. Let's go back to the Users view
    - We're going to pick on a user here. Let's see, it's going to be Codey Blackwell
    - If we open up Codey Blackwell, we can see the full username, including the DNS suffix for the Azure AD tenant
    - What we're going to do is try to sign in as this user.
  - On purpose, we're going to keep entering in an incorrect password
    - So we're going to behave as a user would if they actually forgot their password
    - We are trying to sign in with that user account, we've got that username specified here and it's asking for the password.
  - In my case, we are connecting to account.activedirectory.windowsazure.com/ for that password prompt to pop up
    - The idea is the user would try to enter their password, and it would be incorrect, and so on
    - What we're looking at here is the, reset it now button or link, go ahead and click on reset it now.
  - It knows our User ID because we specified that
    - It asks us to enter the characters in the picture or the words in the audio
    - Depending on whether we want to listen or just type in what we see
    - We will go ahead and type in those characters, then click the Next button
    - We've already enabled MFA on this user account so it already knows my phone number
    - Otherwise it would be prompting me to specify it, basically we've already set up the mobile phone communication alternative method
    - We are then going to go ahead and enter the full phone number down below
    - After that click the Text button, it says, We've sent you a text message containing a verification code, and that has happened.
  - We are going to go ahead and enter it in, after that, click Next. And this is working perfectly
    - It says well, Get back into your account by specifying a new password and then confirming it
    - Of course, there are password rules that must be adhered to, and it talks about strong passwords, and so on and so forth
    - We are going to go ahead and enter one in, then click the Finish button. Okay, it says the password has been reset
    - To sign in with the new password, click here and go ahead and specify that new password just set
    - As per normal, because this account happens to also have MFA or Multifactor Authentication enabled
    - That's why it already knew our phone number, we are going to enter in the MFA code
    - It's business as usual at this point, it liked the password
    - We'll just Verify that we don't want to stay signed in, just like that, we are now signed in
    - The user reset their own password without having to involve the helpdesk.


Azure AD Deleted Users
Azure AD user accounts can be removed using command line tools or programmatically through API calls, and also here in the portal.
So if we were to select a user, for example, would be able to use the buttons across the top to remove that user, and we might do that if the user has left the organization.
But what's interesting is that you have 30 days by default within which you have the option of restoring that account. Now after 30 days, the account is removed permanently automatically. So I'm going to click on Deleted users in the left-hand navigator, because I've already got some users I've removed. One of which has the name of Jen Hill.
We can see the Deletion date and time, as well as the Permanent deletion date and time, which is 30 days in the future or 30 days after the Deletion date.
I'm going to check user Jen Hill, I'll put a checkmark in the box. And up at the top, I have a number of options, so I can Delete permanently right now, instead of waiting for the 30 days. I can restore this individual user or perform a Bulk restore for more than one user at once. I'm going to choose, Restore user.
It asks me, Restore selected users? And I'll click on Yes. So user Jen Hill, then, has successfully been restored. We've seen the notification message. She's no longer listed in the Deleted users view. And if I go back to All users, I'll see that user Jen Hill has been reinstated. So her account is back to normal.
Now one of the things I would ask is, what about group memberships? Are they retained when the user is restored? The answer is yes. So if we go back into user Jen Hill, who's just been restored, and go to the Groups part of her account. We'll see any groups that she was a member of previously have been retained, in this case, a group by the name of Group1.


Azure AD User License Assignment
In Azure AD, licensing gives specific functionality to things like Users, Groups, and even to an Azure AD tenant.
Here in the portal, I'm looking at the properties of my Azure AD tenant. And it itself, if I scroll down in the navigation bar, has a Licenses option, where we can take a look at Licensed features and so on.
But I'm going to go back to my tenant and I'm going to go into the Users view.
Because when I go into an individual user, let's say for example I'm going to go into user Jen Hill, that's an existing Azure AD user. Well, when I'm that user's properties, in the navigation bar I see Licenses.
Now currently on the right, it says No license assignments found.  
However, I can click the add Assignments button to add licenses for a variety of different products related to Azure AD or Office 365 and so on. 
I'm going to click add Assignments, and from here I'll see any licenses that have been made available. So here we have Azure Active Directory Premium P2. So I can turn that on and then I can see the specific options that are available within that license.
Such as Cloud App Security Discovery, Multi-Factor Authentication, and so on. So once I've selected the appropriate license and options, I would click Save to complete the assignment for the user. Now, the only problem is it didn't work and we have an error. I can see my notification area, the little bell icon in the upper right. It's not a big deal. Let's go ahead and click up there and click directly on License assignments failed. Whenever something goes wrong in the Azure portal, make sure you click and follow up on the links because it'll tell you exactly what the issue is.
So License assignments failed for the member and down below it says, Licenses cannot be assigned to a user without a usage location specified first.
Okay. Not a problem. Let's close out of that. Let's go back into our Users specifically, let's go into user Jen Hill. She is the person of interest in this example.
On the profile blade if you click Edit down below, you'll see that there's an option for Usage location. So I'm going to go ahead and select that from the list specifically, I'm going to choose Canada. And I'm going to click Save that part of the user profile has been updated, okay. Let's try the Licenses assignment once again now that the users location has been specified for that account.
You add this to the assignment, really I'm going to do the exact same thing we did a moment ago. The only difference is this time, it's going to succeed.
So let's go ahead and just accept that. Let's go back to Jen Hill's licenses and let's click Refresh. You might have to do that a couple of times, but now we see, that the license has been assigned to that user.


Banned Password Lists
IT administrators and cloud technicians are well aware of the importance of complex and strong passwords.
But we can also configure in Azure Active Directory a banned password list. So passwords that we absolutely do not want to allow users to use. To do this, we can go to Azure Active Directory, within which, in the navigation bar, we can then click on Security.
Then we can drill down into Authentication methods. And finally, Password protection. Now we're interested in the Custom banned passwords.
Now currently, the enforcement of the custom list is set to, No. And so the Custom banned passwords list area, the field down below is gray, we can't get into it. So we have to turn that on. I'm going to choose Yes.
And this is where I can start entering banned passwords. So each of the banned passwords is going to go on its own unique line. And basically, you might include things that might commonly be used by users. That might include common password variations, or in this case, the company name, I don't want that to be used at all. Now what we're doing here, is specifying text that cannot be used as part of the password.
That doesn't have to be an exact match. And variations, so using the letter O instead of a zero or an S instead of a $, those variations are already considered based on what you put in the list. So it reduces how many items you have to place in here, because really, you are limited to 1,000 lines or 1,000 custom banned passwords. And it's also case insensitive. Meaning here I've got a variation of Quick24x7, well it doesn't matter if it's uppercase or lowercase q, both will be considered as being banned passwords. So once I've added all of my entries, I can then go ahead and click Save. And after a moment we can see we have a message, it saved our password protection policy.
Bear in mind, it might even take a few hours before this is in effect, before users are not allowed to use variations of items in the Custom banned password list.


Azure AD Licensed Features
For Microsoft Azure and Office 365, you have to acquire the appropriate software licenses and then assign them before users can reap the benefits of having acquired those licenses.
So they get functional, they can do stuff in the cloud. So we can do this at the Azure AD tenant level. For example, here on the portal I'm going to click Azure Active Directory.
And I'm going to go into, well, actually let's go into Users first, because you can also do licensing at the User level. So when I'm looking at my list of users, for example, if I click on a user, let's say Sharon here.
I can't see any licenses or license assignments for that individual. No license assignments found. We could click the add Assignments button and go through that motion.
However, if I go back here in the breadcrumb trail in the upper left to my Azure AD tenant, notice that we also have Licenses at this level, at the Azure AD directory level. So when I go on the Licenses there, we have a number of options that are available.
So what I'm going to do is click Manage your purchased licenses. When I do that, I'll see any purchased license down below. Now it might be purchased or it might be a try, it might be a trial type of license.
So I can see how many are assigned, that would be assigned to users, how many are available, and how many will expire soon. Now when I click Try / Buy at the top, here I get some samples or free trials.
In this case for ENTERPRISE MOBILITY+ SECURITY E5. And I have a More information link to learn about that. And I also have AZURE AD PREMIUM P2, More information, Free trial. I've also got a link here where I could view the Purchase services catalog online to purchase additional license items here. So for example, if I go under Free trial for ENTERPRISE MOBILITY+ SECURITY E5, which gives me a lot of extra options, as it says. So it gives us solutions to address BYOD and SaaS challenges. And it says, in addition to giving you the Azure AD Premium P2 options, you also get Microsoft Intune for a cloud based mobile device management, Azure Rights Management, and so on. So once you've read about this offering that you're interested in, if it's a free trial that you've not yet used, you can try to activate it. If you've already used it, it'll say so.
Otherwise, you'll be able to activate it at least once here. Okay, well, that looks good, but how come I don't see it in the list? It's just a refresh issue, let's go back to Licenses | Overview. And let's go to Manage your purchased licenses. Now if you still don't see it, just go ahead and sign out of your web browser session.
Close your browser, come back in, and navigate back to your tenants licenses, and you'll be able to see it here. If I were to go back, let's say back into my tenant, you can also go into your Licenses, and you'll also see the same thing under All products.
So we can now see what we started off with. Azure Active Directory Premium P2 and Enterprise Mobility + Security E5, which I've just activated in terms of a free trial. And none are Assigned. However, there are 250 Available.
So what I could do, for example, say, okay, I want to assign this stuff. So I'm going to go in my Active Directory Premium, and here I can see I've got one licensed user. Well, I want everyone to be licensed to take advantage of this feature set.
So I can click the add Assign button up at the top and here I could choose Users and groups. So maybe I'll choose my existing dynamic group called All Enabled Users, which contains all enabled accounts in Azure AD. I created that previously.
Now I'll just go ahead and do the assignment. And it says, okay, it's been scheduled for processing.
And at some point I'll be able to come back and refresh this and see the users that are affected. And we can do the same thing for other licensed products like Enterprise Mobility. Let's just go ahead and turn that on, and I'm going to click add Assignment.
And again, I'll just select my existing All Enabled Users dynamic group, go ahead and assign that. I'm going to get the same type of message, License assignment has been scheduled, okay.
So it's just a matter of waiting and coming back, a little bit later to take a look at this. So after a moment of refreshing, we'll see all of the users that have been assigned this license.
Now notice our original user, Jen Hill, is listed here with a Direct assignment. Although, because she's also part of the All Enabled Users group, she Inherited it again. But the other users are listed only as Inherited through being a member of the All Enabled Users group. Let's look at this from the user perspective, just for fun. How about we pick on Lucas Brenner? So I'm going to go back to my tenant, I'm going to go back to my list of users.
And let's open up Lucas Brenner.
Because we can go to the individual user, it could also be a group for that matter. But anyway, we can look at the Licenses blade for that user and we can see which products have been assigned.
We can see both the Azure Active Directory Premium P2 and Enterprise Mobility + Security E5 have been assigned to this user. And we can see how that happened, it was inherited by being a member of the All Enabled Users group.


Subscription Assignment
You can use the Azure portal to assign subscriptions to a different Azure AD tenant.
So here in the portal, I'm already signed in to a tenant with the name of QUICK24X7. And if I take a look at the Subscriptions for that tenant, we can see that there are none.
However, we could add one, but I already have a subscription that's active, that is associated with a different Azure AD tenant that I no longer want to use. So, I can move it over to this one, let's flip over to another Azure AD tenant where that subscription resides. So, I'll click on my sign in information in the upper right here on the portal, I'll click Switch directory, and under All Directories, I'm going to switch over to one called FakeCo that I've pre-created. Now this one has a subscription, let's click on Subscriptions, just to take a peek.
It's a Pay-As-You-Go subscription, well, I want to move that over.
So I'm going to click on it to open up its details, and notice that I have a Change directory link at the top when I'm viewing the details of that subscription.
So, from the drop down list, I'm going to choose the target tenant, the Azure AD tenant I want to move to, so I've selected it from the list, and then I'm going to click the Change button.
And then we'll have a message, that tells us the subscription was moved to the new directory and to switch to the new directory to see it. So I'm going to go ahead and click on my sign in information in the upper right, and I'm going to click Switch directory, and I'm going to switch to the target, in this case, Quick24x7. Now, remember, when we started this there were no subscriptions associated here, let's go to Subscriptions, and let's take a peek. 
Now if you don't see the newly moved subscription, all you need to do is just sign out, close your browser and come back in, and it'll be there.


Smart Lockout
One way to mitigate brute force password attacks is to ensure that user accounts get locked out after a specific number of incorrect password attempts.
And in Azure AD that's called the smart lockout feature. So we're going to take a look at that. Here in the portal, I've navigated to my Azure AD tenant. The next thing that I want to do is take a look at the smart lockout feature. And I do that by going down under Security.
Then I go into Authentication methods. Then I go to the Password protection menu option in the left-hand navigator.
Now you'll see a few things on the right here like a Custom banned password list and so on. But we've also got Lockout threshold which is set currently to a value of 10. I'm going to reduce that to a value of 3. So this means that we want the account to be locked, a user account to be locked after three incorrect login attempts, now for how long?
The default here is 60 seconds. I'm going to increase that to 120. So for 120 seconds, we have to have no password attempts before it can be tried again. And ideally the user will log in successfully if they know the correct password this time.
Otherwise, after three attempts again it gets locked out again 120 seconds. So this is a great, simple, and easy way to countermeasure brute force password attacks. I'm going to go ahead and Save the setting.
So when a user is signing in, let's say they enter the incorrect password a number of times. I'm just going to keep going through, they think they know the password but of course they just don't know. Notice that we eventually get a message after the third time that says Your account is temporarily locked to prevent unauthorized use. So the user would have to wait a minimum of 120 seconds before even trying again to get in, assuming that they know the correct password.                    

                    
Azure AD Groups and the Portal
Managing user permissions, such as to which enterprise apps they have access to, can be cumbersome when you do it on a per user basis. Can do it at the group level, too. Organizing users into groups, assigning permissions to the groups. So what we're going to do here in the portal is create an Azure AD group and
add some members. To get started, I've already navigated the portal to my Azure AD tenant, where I'll then click Groups in the left hand navigator.
I can see any existing groups. Here we can see we've already got a Dynamic group where a membership is determined dynamically by looking at user attributes. And we've also got a standard statically Assigned group, which we'll be creating here. So I'm going to click New Group at the top. This group is going to be called EastAdmins.
So the group type will be Security, as opposed to Office 365,
the name will be EastAdmins. I can put in a Group Description, and the Membership type here is set by default to Assigned, and that's what I want to do.
What that means is that you're adding the members of the group manually, as opposed to a Dynamic User group where you specify rules that contain one or more expressions that determine whether the user is a member of the group or not.
Well, in this case, it's just going to be Assigned.
So down under Members I'm going to click No members selected, and I'm going to add some members.
Now the members can even be existing groups.
So here I've got a dynamic group called All Enabled Users that I could add as a member.
And if I look for the word group, I've also got a static assigned group called Group1 that could also be a member of the group.
So groups can be nested in other words. However, that's not what I'm going to do here.
I'm just going to add a couple of standard user accounts that I've created in Azure AD.
So I'm going to type in, for example, Lucas. I'm going to add this user, Lucas Brenner down here under Selected items, and I'm going to add user Jen Hill, so I'll add her down below.
So those are the members of this group.
So I'll go ahead and click on Select and Create.
Now, we can now see after a moment, and we have our Successfully created group notification in the upper right.
We'll notice that we have our EastAdmins group and that Azure has assigned an object Id.
To Security group it's Assigned, and if I click on it at any point in time, I can go back and see the members of the group, and I can also of course change the members of the group.
So I could select somebody here and Remove them, I could Add members. I could even do a bulk import of members if I have a CSV file formatted correctly.
I could also go to group owners if I want to determine who should have the ability to control the group, to manage it, in terms of adding and removing members.
So for example, if I click Add owners, I can do that. I'm going to add user Codey Blackwell as the owner of the group.
Click Select, and there's user Codey Blackwell. So at this point we now have created a new group by the name of EastAdmins, and its purpose is to really facilitate the assignment of permissions.


Azure AD Groups and the CLI
Azure AD groups can be created and managed at the command line using the as your CLI, which I'm going to spawn here in the portal by clicking on the Cloud Shell icon.
Now, it says that my Cloud Shell has timed out, which indicates I was previously connected. 
So I'm just going to click the Reconnect button to relaunch the Cloud Shell.
The first thing we're going to have to do is figure out what the command syntax will be in the CLI so that we can create and also that we can manage groups in the cloud. So after a moment, we're good to go.
So I'm going to clear, we reconnected to our Cloud Shell session.
I'm going to start by running az ad -h for help, because I don't know what the next level command is. And I see that we have group.
So following that I can do az ad group, I know that part of the syntax, and then -h after that.
And then we'll see what we can do about groups.
So we can work with members, owners, we can create a group, we can delete a group, we can get member groups, we can list groups in Azure AD or show details about an individual group, a lot of options here.
So let's take a look at how they actually work.
All right, so I'm going to start with az ad group create, and I'm going to set --display-name, in this case to Team1. Next thing I have to do is add a mail nickname, --mail-nickname, and it's going to be the same thing in this case, Team1. So I've created a new group. And we're going to verify this in a couple of ways, one being in the portal.
So let's take a look at our groups and our Azure AD tenant. And yeah, there's Team1 that worked, let's go back into the CLI, and let's verify our work in here as well. So we'll start by running az ad group list.
That's going to list all of our groups, well a little bit too much detail, actually.
So why don't we use the up arrow key to bring that back.
One thing we could do is pipe that to grep, and simply ask for the displayName attribute. And grep is case sensitive, so be careful that you have a capital N in displayName. You can always turn off case sensitivity. But anyways, that's the default.
So we can see that our Team1 group exists, it's been created. Now what I want to do is I want to see any members within that group. So if I do az ad group member list, of course the group here in this case it's called Team1. Well, we're going to get a whole lot of nothing because nobody has been added, it's brand new group.
Now I want to add a user to the group. So let's start by running az ad user show. And I want to really see the ID. So the user here is going to be lbrenner@quick24x7test.onmicrosoft.com. So that's the full username for that account. And really what I want to see, I'm going to pipe that grep. I want to see the objectId, capital I with Id there.
Okay, so I need this ID, because that's what I'm going to use to add that user lbrenner to the Team1 group. So I'm going to copy that ID.
So it's continuing on az ad group member add in this case the group with -g is Team1 in this case, and -- member-id. This is where I'm going to right click and paste in the ID for that user. Okay, let's press Enter and see what happens.
Well, no news is good news. Let's clear the screen and let's run az ad group.
We'll not list because we want to show details about a specific group. So show -g Team1. Let's see what we see here. Okay, well, we have a lot of properties there, it's a little overwhelming.
Let's bring that up with the up arrow key again, maybe we'll pipe that to grep. 
We can also use the --query parameter here in this electing to use grep for no good reason just because. All right, object Id is what we're greping for, and it looks like we've got the ID here shown.
Now this is the ID of the group. Okay, let's just check our work here in the portal, we'll see if things are lining up. So I'm just going to minimize this, and there's Team1.
So I can see the ID for Team1 there. We'll also see that here when we go into the overviews, so the Object Id is 150ddca7 and so on.
That's pretty much what we saw back here, okay, so that's the correct group.
And let's look at the members of this group.  
We'll see that our user, Lucas Brenner, has been added.

