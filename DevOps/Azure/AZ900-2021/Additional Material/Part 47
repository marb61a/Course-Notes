                    AZ900 Microsoft Azure Cloud Fundamentals 2021
                    Additional Material Course Notes Part 47


Azure AD Groups and the CLI (Cont)
  - We are going to start with az ad group create, and we are going to set --display-name, in this case to Team1
    - Next thing we have to do is add a mail nickname, --mail-nickname, and it's going to be the same thing in this case, Team1
    - So we've created a new group and we're going to verify this in a couple of ways, one being in the portal.
  - Let's take a look at our groups and our Azure AD tenant
    - There should show Team1 to show that worked, go back into the CLI
    - Verify our work in here as well, we'll start by running az ad group list.
    - That's going to list all of our groups, well a little bit too much detail
    - Why don't we use the up arrow key to bring that back.
  - One thing we could do is pipe that to grep, and simply ask for the displayName attribute
    - Grep is case sensitive, so be careful that you have a capital N in displayName
    - You can always turn off case sensitivity but that's the default.
  - So we can see that our Team1 group exists, it's been created
    - What we want to do is we want to see any members within that group
    - If we do az ad group member list, of course the group here in this case it's called Team1
    - We're going to get a whole lot of nothing because nobody has been added, it's brand new group.
  - We want to add a user to the group, start by running az ad user show
    - We want to really see the ID, the user here is going to be lbrenner@quick24x7test.onmicrosoft.com
    - That's the full username for that account and really what we want to see
    - We are going to pipe that grep, we want to see the objectId, capital I with Id there.
    - We need this ID, because that's what we are going to use to add that user lbrenner to the Team1 group, so copy that ID.
  - It's continuing on az ad group member add in this case the group with -g is Team1 in this case, and -- member-id
    - This is where we are going to right click and paste in the ID for that user, press Enter and see what happens.
    - No news is good news in this case so, Let's clear the screen and let's run az ad group.
  - We'll not list because we want to show details about a specific group
    - So show -g Team1, let's see what we see here, we have a lot of properties there, it's a little overwhelming.
    - Let's bring that up with the up arrow key again, maybe we'll pipe that to grep. 
  - We can also use the --query parameter here in this electing to use grep for no good reason just because
    - All right, object Id is what we're greping for, and it looks like we've got the ID here shown.
  - This is the ID of the group, just check our work here in the portal, we'll see if things are lining up
    - We are just going to minimize this, and there's Team1.
    - We can see the ID for Team1 there. We'll also see that here when we go into the overviews, so the Object Id is 150ddca7 and so on.
    - That's pretty much what we saw back here, okay, so that's the correct group.
    - And let's look at the members of this group.  
    - We'll see that our user, Lucas Brenner, has been added.


Azure AD Groups and PowerShell
  - You can use PowerShell to create and manage Azure AD groups
    - Sometimes this is advantageous because you might want to script something 
    - Or maybe you're just more comfortable and quicker working at the command line in PowerShell than you are using the portal.
  - Then here within the portal, we've clicked the Cloud Shell icon, and that's where we are going to run my PowerShell cmdlets
    - You could just as well do this if you've downloaded and installed the Azure module on-premises
    - Here, we are doing Cloud Shell just because, the first thing we are going to do is run get-command
    - We going to assume that the command is something like new*group,* maybe something after it, who knows? we don't know the name of the cmdlet.
  - Then we get quite a bit of a return list, so we are just going to kind of go up through and take a look to see
    - It looks like this one's the one we're interested in, New-AzADGroup.
  - If we want help on it, we can run get-help new-azadgroup, we can even ask for detail
    - We can even pipe that to more to stop after the first screen fall. So we have a synopsis, Creates a new active directory group. True, in Azure it does.
    - We can see the syntax listing, and as we keep going through the help screen, we can see the parameters.
    - Finally, we have an example of how it's used at the bottom
    - So it looks like we're going to specify the DisplayName and the MailNickname.
  - Okay, it looks pretty easy, let's clear the screen let's make it happen, new-azadgroup -displayname.
  - Now you have to have planned the nomenclature ahead of time and it needs to be consistent and adhere to organizational naming conventions
    - We are going to call this "Team2", and we are to set the -mailnickname
    - Also to, actually, we are not going to specify it here, because if we don't
    - It'll simply prompt us if it's mandatory, which it is
    - We know we could use -MailNickname and give a nickname to it because we haven't, it prompts us for it.
  - And that's fine, that's normal behavior. However, if you want to automate this in a script
    - You're going to want to use the -MailNickname parameter then, so it doesn't stop and ask for this when the script runs.
    - Anyways, I'm just going to put in Team2, it looks like it's good, so let's clear the screen, let's run get-azadgroup to list them all.
  - We can see a number of groups here including Team2, and of course, here in the portal
    - Let's just go to Groups All groups, we may have to click Refresh
    - And there it is, Team2 is now there with the Azure assigned Object Id.
  - We can see the default group type is that the membership will be Assigned
    - In other words, users are statically assigned or added to the group. 
    - Now, we want to add a member to Team2, so we need to go and look at my Users
    - We could do this of course from PowerShell or even the CLI, we are going to pick user Jen Hill.
    - What we are interested in regards to that user is her Object ID.
    - We are going to go ahead and copy that to the clipboard.
    - Let's go back into PowerShell, where we are going to add a member to the group.  
  - What we are going to do is run the add-azadgroupmember -memberobjectid
    - We are going to paste in Jen Hill's user Object ID that was assigned by Azure, we have also got to specify the -targetgroupobjectid.
  - W could have stored that in a variable or retrieved it using command line tools
    - But here we are just going to go back into the portal just to demonstrate where it is visually.
  - We are going to go into Team2, and once that pops up we are interested in the Team2 group's object Id
    - Which is listed here so we'll just click the Copy to clipboard icon.
    - Go back and let's paste that into PowerShell, let's press Enter.
    - So we've added a user to the group by specifying both the user object ID and the group object ID.
  - If we were to, for example, check our work here in the portal, let's take a look at the members of the Team2 group.
    - We now see Jen Hill is listed, we can also verify that using PowerShell.
    - To that, we'll use get-azadgroupmember and use the -groupobjectid parameter. 
    - Here, we've pasted in the Azure assigned ID for that group.
    - If we press Enter, indeed, we see user Jen Hill is now a member of Team2. 


Azure AD Deleted Groups
  - In Microsoft Azure, you can create and manage Office 365 groups 
    - Which might be used to control access to SharePoint sites, or to Exchange mailboxes, and so on
    - Here in the portal, we've gone into our Azure AD tenant.
    - We've gone into the All groups view, we can see that we've got a number of existing security groups.
  - Well, when we delete a security group, it doesn't show up under Deleted groups, we can't restore it.
    - That only applies to Office 365 types of groups. So let's start by building a new Office 365 group.
  - The first thing we're going to do is make sure we choose the appropriate type, because the default is infact Security
    - We are going to choose Office 365 and we are going to call it Off365Group for clarity.
    - And we could either have it Assigned, where we statically add members to the group. 
    - Or we could have a Dynamic User group, where we build rules that contain expressions, the user attributes to determine membership.
    - We are just going to leave it on Assigned, not even going to add any members, just going to click Create.
