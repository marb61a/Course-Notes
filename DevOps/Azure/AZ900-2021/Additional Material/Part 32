                    AZ900 Microsoft Azure Cloud Fundamentals 2021
                    Additional Material Course Notes Part 32


Azure Subscription Overview
  - There is a relationship between Azure AD tenants and Azure subscriptions. 
    - We can register devices in Azure AD, so users can sign in on those devices with their Azure AD credentials
    - That's essentially what it is. It's an identity provider and we can associate a subscription with our Azure AD tenant
  - A subscription is really a way that we get features that allow us, for example, to deploy resources in Azure
    - It's also used for billing purposes, you can add multiple subscriptions to your Azure AD tenant
    - However, the opposite is not true, you can't have a given subscription used by multiple AD tenants
  - There are some limits to what you can do within an Azure subscription, such as how many resources can be deployed and so on
    - As an example, our first item here is the number of subscriptions per Azure AD tenant
    - This is one of those items where there is no limit
    - But there is a number of resource tags that can be specified to an Azure resource, and it maxes out at a value of 50
    - The maximum number of group owners maxes out at 100
    - The maximum number of storage accounts per region maxes out at 250
    - This is only to list a tiny portion of some of these limits
    - There are many other ones that are published online, clearly, in the Microsoft Azure documentation.
  - We have the option with our subscription to also increase any of these limits should they be a little bit too constraining
    - You can do this once you sign into the Azure portal by creating a customer support request
    - Limits for some things, such as the number of vCPUs, virtual CPUs available for a given virtual machine instance
    - Those limits are quoted per Azure region
    - Bear in mind that if you're using an Azure free trial subscription, t you won't have the option of creating a customer support request
    - At least not in it succeeding in increasing any of those limits.
  - The other thing to think about is that when it comes Azure subscriptions
    - Don't forget about how it is related to both the Azure AD tenant and also your Azure account in the first place
    - You can have your Azure account in which you build your Azure AD tenants, and of course, you can have multiple subscriptions
    - Billing is done separately for each of your subscriptions, if you do have a free try, you can actually convert it to a paid subscription.
  - Now there are a number of different types of Azure subscriptions, such as pay-as-you-go
    - Where all of your resource usage is tracked and you pay based on what you use
    - But then depending on the type of support you need, will determine if you select some of the other types of subscriptions
    - Such as Professional Direct support or Developer support
    - Developer support would allow you to get support but only during business hours, not 24/7
    - Then we also have Standard support, if you do need full support, 24/7, then you would look at choosing the appropriate type of Azure subscription
    - This would be the Professional Direct option


Azure Subscriptions and the Portal 
  - You can view your Azure subscriptions in the Azure portal
    - One way to do this is by searching for subscriptions in the search bar at the top center 
  - Now bear in mind that when you search up subscriptions you will see any subscriptions associated with your current Azure AD tenant
    - Which is shown here as Quick24x7, we can see that we have a Pay-As-You-Go active subscription and can even see the Current cost.
  - In the upper right, if I click on my sign in account information area and click Switch directory and, if I choose some other Azure AD tenant, let's say EarthFarm in this example.
Then when I go to take a look at subscriptions, I can expect to see something different potentially.
So because I've visited subscriptions recently, I can just click it from Azure services, of course, I could once again search for it in the top center. Either way, I want to look at the subscriptions for this different Azure AD tenant. Notice it says, "You don't have any subscriptions". So at this point, we have the option of clicking Add where we'll be presented with a list of subscription options.
So at this point, I'm just going to authenticate so I can get to that screen. So now I get the option to SELECT AN OFFER.
If I want to add a Pay-As-You-Go subscription or Pay-As-You-Go Dev/Test, Developer support, Professional Direct support, and Standard support where I can see some of the details about these. So we have some options here. And, if I were to choose one of these, it would then continue on to the point where I have to make sure I add a payment method, and so on. But I'm going to close out of that. And I'm going to switch back to my first initial directory that in this case would be the Quick24x7 Azure AD tenant where I know, I have an active subscription.
And once again, I'm going to go look in the subscriptions associated with that Azure AD tenant. Now I'm going to click directly on that existing subscription.
Now I'm going to click directly on that existing subscription. 
Because when you do that, it opens up a plethora of options in the navigation bar on the left. For example, we can go to Cost analysis to analyze costs, to see exactly for example, where the lion's share of our charges are coming from.
We could click on Budgets, so we can configure alert notifications when our costs reach a certain point.
We can even go through and see our Invoices over on the left under the Billing section. But at the same time, we also have some other things that we can do, when I go back to the Overview part of this.
We have some buttons across the top. I can cancel the subscription. I can Rename it, so, if I want to rename it from Pay-As-You-Go to something different, I can do that. I can Change directory. That means I can associate this subscription with a different Azure AD tenant. So I've got a number of options. So, I can even click on Manage to open up a new browser window where I can further manage my Azure subscription. So we have a summary for our Pay-As-You-Go subscription, where we're looking currently at the OVERVIEW.
  - We can see a lot of options available on the right to Manage payment methods or to Download usage details for the subscription 
    - Or even to change the subscription address information, or switch to a different type of subscription offer
    - Again, we have some other options here such as canceling the subscription and so on.


Azure Subscriptions and the CLI
  - You can use the Azure CLI to learn about Azure subscriptions and also to determine which subscription is active. To get started here in the Azure portal, I'm going to launch the Cloud Shell.
Now in the Cloud Shell, I'm going to start by running az account list.
And when I press Enter, it'll return some details.
So we can see the name of the cloud, AzureCloud, as opposed to Azure Cloud for Government or anything like that. And we can also see the id. Now, it doesn't say subscription ID, but this is the id of our current Azure subscription. We can also see our Azure AD tenant ID. Let's examine the subscription ID for a second by jumping into the portal to take a look at that. So, notice here it starts with 048b and ends with 2109. So let's just minimize the shell here. Let's go in to Subscriptions, let's see what we've got attached to our current AZ tenant.
Now it should be a Pay-As-You-Go subscription. And notice the Subscription ID indeed starts with 048b and ends with 2109. So we can learn a bit of that information from the az account list command in the CLI.
Let's clear the screen. Let's also run az account set --subscription. And here, I'm going to put in the name of it which is Pay-As-You-Go, each word separated by a dash. Now in my case, it doesn't really matter that I do that.
Because if we go back and take a look, we've only got a single subscription here associated with our Azure AD tenant. Which is shown here by name in the form of Quick24x7.
  - But when you have multiple subscriptions, this can be an important command
    - Essentially you're setting the context to that subscription
    - Following commands after you do that will run in the context of that set or selected subscription
    - Also bear in mind is that you can also, instead of setting the subscription when you have multiple subscriptions, you can also do it per command
    - What we mean by that as an example, is let's say we were going to use az vm create to create new VM
    - Normally you would specify things like --resource-group and then Rg1, let's say.
  - Then maybe the name, let's call it Linux1, and then maybe the --image would be based on something Ubuntu
    - But the key here is that we can also use the --subscription command line parameter
    - And so, for this individual single command, you can say, well, we want this tied to the Pay-As-You-Go, just type that in, subscription
    - You can do that if you know you have to work with a number of resources and different subscriptions
    - You might choose to just do it at the command-line instead of keeping on setting it as up above
    - It really depends on what you want to do and how many commands you have to issue
    - But either way, it's important to have this knowledge if you're going to be working with Azure subscriptions through the CLI.


Azure Subscriptions and PowerShell
  - When you're working in PowerShell, you might be working with an Azure AD tenant that is associated with multiple subscriptions
    - And, so you can control the subscription that is going to be used as you issue PowerShell cmdlets
    - Such as the deployment of resources like virtual machines
    - To get started in the portal, launch the Cloud Shell and make sure that is where you are
  - We go to start by running get-command. And I'll put in asterisk subscription. So basically, I'm trying to discover which cmdlets are available that relate to subscriptions.
  - There are bunch of them as you can see. For example, Get-AzSubscription. Okay, so if we were to do that, get-azsubscription, when we press Enter, we get some returned information.
  - We can see that we have a Pay-As-You-Go subscription, which is currently active and being used. So, if we start deploying virtual machines and storage accounts and so on, it's going to be tied to this currently active subscription. We can see the subscription ID. We can also see the Azure Active Directory tenant with which the subscription is associated.
  - When you have multiple subscriptions available for your Azure AD tenant, you may want to be able to switch between them
    - You can do that using select-azurermsubscription
    - For example, in quotes here we could do it by name, pay-as-you-go, close the quotes.
  - What this means is, we are setting that as the current context or active subscription
    - Any commands that follow will be tied to it. Such as deploying virtual machines, storage accounts and so on
    - We can verify that, that's the current context by running get-azurermcontext.
  - We can see it returns that we are using our Pay-As-You-Go subscription
    - Of course, we can see the subscription identifier being listed there as well along with our Azure AD tenant ID
    - Now that we've done that, any PowerShell cmdlets that we run from this point forward in this session will be applied to that subscription.


Management Group Overview
  - Azure management groups are really all about centralized governance
    - Now we can apply this to multiple subscriptions, it allows us to organize subscriptions within a management group
    - Think if it as a hierarchy, because at the top, you have your tenant root group
    - Under which you can then create multiple management groups and organize your subscriptions accordingly within them
    - Now you would organize them for policy and compliance reasons.
  - For example, you might have a policy that requires SQL database encryption
    - You want to check all SQL database instances in multiple subscriptions
    - You might organize those subscriptions into a management group and then assign that policy to the management group
    - You can have up to six levels deep of subordinate management groups
    - If you so need that change, down here, we see we have the management group hierarchy.
  - At the top you have your tenant Root Management Group, by default
    - Underneath it on the left we have Management Group 1 where we could organize subscriptions
    - In the example we can see Subscription 1 and Subscription 2
    - Then on the right we have another management group, Management Group 2, under which we have a different subscription, Subscription 3
    - We can apply or assign policies to Management Group 1.
  - Whatever that policy says should happen, such as checking for SQL database encryption, will flow down and be inherited
    - And be applied to all SQL database deployments in Subscription 1, and Subscription 2 in all resource groups
    - The same thing would be true, if we applied a policy to Management Group 2, it would only apply to, in this case, Subscription 3
    - Now, we've really only got one level in our hierarchy here of management groups that we've created. Bear in mind, you could have up to six
    - So, the way that this works is we would add subscriptions as per usualto our Azure account and associate them with Azure AD tenants.
  - We can then create one or more management groups, then we can move subscriptions under the appropriate management groups
    - And then we can apply our governance options, in other words, assign policies to management groups
    - Which in turn means that the subscriptions in the management groups will inherit that policy assignment.


Configuring a Management Group
If your organization's use of Azure includes the use of multiple Azure subscriptions it can be a little bit cumbersome to apply permissions at the policy level to resources in multiple subscriptions.
For example, if you want to limit something such as virtual machine types that can be deployed in certain regions. Instead of doing that per subscription, if you have the same requirements for the subscriptions. You might organize those subscriptions first into a management group and apply that policy to the management group. It'll flow down and be inherited by all of the subscriptions. So it works well in that sense. So let's go ahead and see how that works in the portal. I'm going to go ahead and search the portal for management and I'll choose Management groups.
Now you always will have your default Tenant Root Group under which subscriptions exist. Here I can see my Pay-As-You-Go subscription.
But you can organize a hierarchy, kind of like how you would organize a hierarchy of organizational units or a use in on-premises Active Directory, to organize resources. In this case, we would be creating management groups to organize our subscriptions. Now even though, I only have a single subscription, I'm still going to go through create a management group and then move that subscription into that management group part of the hierarchy. The first thing I'm going to do. I'm going to click Add management group in the upper left.
I need an ID for it. I'm going to call it mgmt1111 and I'm going to call this MgmtGroup1, then I'm going to click Save.
Now, if you've got multiple subscriptions, let's say tied to a particular business unit, you might name your management group in relation to that business unit name. 
Or if it's for particular project, maybe name the management group the name of the project or something along those lines. After a moment, we'll see that our management group down below is listed.
And if I click on it and open it up, there's nothing in it because we haven't moved any subscriptions there yet. So I'm going to go back to my Tenant Root Group where I see my subscription
Pay-As-You-Go. And over on the far right, I'm going to click the more context menu, so the three dots and I'm going to choose Move. It's as simple as choosing the target management group that you want to move the subscription under.
Well, there's only one there MgmtGroup1, that we've just created a moment to go.
So I'm going to select that and choose Save.
In after a moment the subscription disappears here from the Tenant Root Group and if I drilled on into MgmtGroup1, well we're going to see that our subscription is now listed there.
So the reason we would do this is, so that we can essentially apply centralized governance across multiple subscriptions in Azure. Let's see how that would work. So let me search for policy up here in the search bar. I'll choose Policy.
So what I'm going to do is take a look at assigning a policy to a management group. So I'm going to click Assignments over on the left. Any assignments that we already have will be shown.
I'm going to click the Assign policy button. Now the first thing we'd have to deal with is the Scope.
Where do you want this policy assigned? Well, let's go down and choose a policy definition, so we at least have something to think about here. Maybe I'll search for encrypt.
And I want to make sure a disk encryption is applied on virtual machines. 
Now if your organization has six policies, well, then you potentially would have to configure this six times for each policy scope. The scope would be the subscription level. But here we can go one level above that, because subscriptions can be organized into management groups. So I'm going to select that policy.
And up above, notice it automatically assumes that we want to apply this policy definition and scour VMS looking for disk encryption within only the Pay-As-You-Go subscription.
But I'm going to click the scope selector button over on the right. Now I could choose a different subscription, if I had others or even on a Resource group within the subscription where I want this policy applied, but that's not what we're talking about here. We're talking about management groups which we see at the top. So here's MgmtGroup1, I can select it, and then choose Select. And we are now applying this policy definition to scour all subscriptions under MgmtGroup1, looking for machines where disk encryption has not been applied. They'll then show up in compliance reports.

Azure Cost Analysis
One important aspect of cloud computing is being able to manage costs, even though it's often pay-as-you-go, you get charged for your resource consumption. You want to make sure that you are tracking it and identifying where most of those charges are coming from. So we can do that by looking at Azure cost analysis.
To get started here in the portal, I'm going to go into Subscriptions, because billing occurs at the subscription level.
So I've got a Pay-As-You-Go subscription listed here, I can see the Current cost, and I can see that it's Active.
So I'm going to click directly on the subscription.
Because when I do that, I get this new navigation bar on the left, and one of the things I see is Cost analysis, which is precisely what I want to do right now.
Knowing that I have a specific dollar amount based on my Azure usage is not enough. I want to know how it's broken down. So here for example, we can see it's Canadian dollars. It's only $1 and 48 cents. And we can see that it's charted here. I'll just scroll little bit over to the right according to days of the month as we can see, and it looks like the usage has been increasing since about March 4th. Now, if I scroll down a little bit, we can also see the Service name breakdown. Well, where is that money being spent? Is it virtual machines? Is it storage? Is it databases? Well, we can see by looking under Service name at this graph, that we've got the bulk of it coming from SQL database.
Little bit coming from virtual machines and storage. And we can also then see it's broken down here by Location, well, which regions. We might have different Azure administrators using our Azure account to deploy resources in different Azure regions. So I can see the cost here per region that looks like all of the cost is stemming from the US East region. Now, depending on how you use resource groups to organize related Azure resources it will determine how useful it is to look at the cost per resource group.
Often many organizations will create resource groups for specific apps that might have multiple components like a web server type of app. And it might have some custom code. It might have a back-end database. All of those resources might be organised in one resource group and then you can see the charges per resource group. So basically, in that example, you'd be able to see the charges per web application. Or you might have resource groups for different departments, if that make sense in your organization or different projects, and then deploy resources into them accordingly. And again, you'll then be able to see the cost breakdown per resource group. It really depends on what your requirements are. And you can also click the Export button to export this information as a PNG type of graphic file or as Excel data or as a CSV file.
And then you can download the charts. You can also schedule the export of this information on a periodic basis maybe to a storage account for business analysts that might require this type of cost breakdown.
Now, we can also get a little more granular at the top by clicking Cost by resource.
Now, why is this useful? Because it's showing us the individual Azure resources, like specific SQL servers that were deployed specific virtual machines, disks for virtual machines, storage accounts, and so on.
And we have a cost associated with it over in the right hand column.
So it's just a way to really drill right down to the specific deployed resources that are incurring costs in your Azure account through your subscription.


Azure Budgets
While it's important to analyze costs and pore over the numbers, it's also equally important to save time and get notified when costs on a monthly basis exceed a certain value. And that's where Azure budgets come in as being useful.
So I'm going to click here in the portal on Subscriptions. I see, I have a Pay-As-You-Go subscription, which I'm going to click on.
Now we know that we can click on Cost analysis, and of course, that is very important.
But we're talking here about getting notified when a certain threshold value is exceeded. So for that, we're going to go to Budgets over here on the left.
Now we don't have any budget shown on the right.
So I'm going to go ahead and click Add. The first thing you have to think about is the scope to which you want the budget applied. What do you want to look at costs for, do you want to look at it for your entire subscription?
I can click Change scope and from here, I could switch to a different directory.
Right now, I'm using the Quick24x7 Azure AD tenant. And we could also drill down, for example, under our root management group for our tenant. So I can click that.
I can then click down on a management group, perhaps that's the level where I want to apply my budget.
But I can also click on the management group and then go down under my subscription, and even go down into a specific resource group.
So you have all of these scopes that you can apply your budget to. I'm just going to Cancel out of there. We're going to leave it directly on our Pay-As-You-Go subscription.
I could also click Add filter, because maybe what I want to do is filter by something specific. So for example, I could specify that I want to look at a type of service I want to filter on. Or maybe a ResourceLocation, so we can choose a specific region if we wanted to filter on that.
However, I'm going to click the x to remove the filter, I don't want to apply that.
Next thing I need to do here is, I need to specify a unique name for the budget.
So I'm going to call this Budget1.
Now the Reset period will be on a monthly basis, but I could change that to whatever time period makes the most sense for me. I could set an Expiration date.
I'm going to leave those default settings, and I'm going to set the budget amount. For example, I want to know once we're exceeding $500 a month. Now to help along with this, down below, I can see last month's costs. And I can see the past six months' cost, and the maximum monthly forecast cost. So based on those small values, perhaps 500 is a little large. So maybe for example, if we get above a 100, which might be indicative of abnormal cloud usage in our particular case, then we can put that value in.
Now having done that, I'm going to scroll down and click on the Next> button. Now up at the top, if I scroll back up, we can set alerts.
So when we get to a percentage of that value, let's see when we get to 80% of our $100, then we want to have something happen.
So we can work with an Action group. Now the Action group allows me to specify things like, what you want to occur. Now, do you want to trigger some kind of code, or do you want to trigger some kind of a notification? And I even have a Manage action group option here. If I click on that, it'll take me in where I can see what I could do, what could be triggered when 80% of our budget is reached.
So I could click Add action group, maybe what I want to do send something like an SMS text message.
So I'm going to call this AG1 for action group 1. Same thing for the Short name, which is a required field, as indicated by the red asterisk.
And down below, what I want to do is Select an action type.
In this case, it's going to be Email/SMS/Push/Voice.
And let's say that I want to send SMS text notifications. So it's country code, and I could just fill in the number. After I've done that, I would then go down and click OK. Now, of course, it wants me to fill in a valid phone number. So we'll just change it into something else. All 5s in a phone number is actually reserved and used for works of fiction like movies and television shows. So I'm just going to go ahead and leave that as it is for SMS. So we're just basically adding this specific type of notification. And I'm just going to call this TextMsgNotify. This is in my action group AG1, and I'll click OK.
And essentially, we want to be able to use that within our budget.
So it's showing up in the list. I'm just going to go ahead and select it to get back to where we were in configuring our notifications.
So I'm just going to scroll back here, we've got AG1, and let's just go back here. So that's where we want this to be showing up.
And after a moment, you might have to go to the previous screen and back, you'll see the group. So here it is, AG1. Down below, I can also specify, of course, the recipients' email. So I'm just going to scroll over to the right so I can see my scroll bar, there it is.
So maybe, I've got a group called admins@quick24x7.com, and I want them to receive notifications, so in addition to our SMS text messaging. Okay, so having done that, I'm just good to go down and create the budget.
And there you have it, the budget creation succeeded, we now have our budget called Budget1.
And we can expect to be notified when we get to 80% of our budgeted value in the currency specified for the subscription, in this case, CA$100.00.


Azure Invoices
While the use of cloud computing can mean less capital expenditures for IT services. Such as, not having to acquire a lot of on-premises physical computing hardware. We still have to be able to track charges in the cost on a per-use basis by reviewing invoices.
So to get started here in the Azure portal, I'm going to click on Subscriptions.
Now, the subscription of course is tied to an Azure AD tenant which is shown here as being Quick24x7. My subscription is called Pay-As-You-Go. I'm going to go ahead and click on it to open up this navigation bar which gives me options related to my subscription.
One of which, if I scroll down under Billing, is Invoices.
Now, we can see on the right that we have the Last 3 months worth of invoices shown. We can see the Billing Periods, starting and ending. We can see the date of the invoice. And we can also see the Amount. And we can see the Type, in this case it's for Azure Services. Now we also, if we scroll to the right, have the option of downloading each of these. Now, if I click on the download link, it's a CSV file format download or it could be a PDF.
Now, this could be important for accounting reasons and certainly for business expense or taxation reasons. So this is something that we can do by looking at the invoices. But notice also that each of these specific dollar amounts for each invoice is a hyperlink, it's blue.
And so, if I were to click directly on it, I could actually jump into the Cost analysis for that particular invoice.
So I can see for example, looks like premium solid state drive or ssd managed disks. Were really the bulk of the cost for that particular invoice within that time frame.
Followed by, it looks like, virtual machines. So we can see how this breaks down. We can even filter it.
If I want to click on Filter items, we could start typing things in and then filtering based on that.
So for example, if I put in ssd, all we're doing now is looking at SSD charges related to the time frame listed up above.
So I'm just going to go ahead and click the X to close out of that. Now, it's one thing to come here and view the invoices. But we want to try to avoid having to do things in the sense of thinking of doing it. We want to automate things. And we can click the Email Invoice option up at the top.
Currently it says, You are not receiving emailed invoices. Well, that's something I want to do. So I'm going to click on Opt In to make that happen.
I acknowledge that it's going to be sent via non-encrypted email. That's fine, I Agree.
So this could be an important aspect of your configuration when it comes to having your invoices emailed to you automatically. The other thing to think about is we have this Access Invoice button up at the top. Now, this is currently On.
And it would apply for example to users in your subscription that would have roles such as the the billing reader role. So we have that option available as well.
Also notice that the default here, Timespan is listed as being 3 months. But you can click on that and change it.
So for example, I can set it to the Last year if that's what I want to see.
And sure enough, we now see our invoices for the Last year.


Azure Resource Groups and the Portal
In Microsoft Azure, a resource group is a way to organize related resources together, such as creating a resource group for a web application and deploying all of the underlying resources that make that web app work within the resource group. Or maybe creating a resource group for a department. And when that department in the organization deploys resources, they deploy them into that resource group, or you might do it for a project. Either way, it allows us to track billing for resources in that resource group. It also allows us to track usage of items or see deployments within that resource group.
So here in the portal, let's get started by creating a resource group, we're going to do that by beginning within the Resource groups view. So in the upper left, I'll open up the navigator and I'll click Resource groups.
And you're going to see any existing resource groups, you'll see any subscriptions that they may be tied to, and their geographical location.
Now, if you click on a specific resource group and open up its properties blade, you'll be able to see things like Tags, you could tag it.
You can also see any deployments that were made into that resource group and the state of them, whether they succeeded or whether they failed. 
You can also even see Cost analysis and Cost alerts and Budgets per resource group, so at the resource group level.
However, in this case, we're going to create a new resource group, so back here at my main Azure portal page, I'll click Create a resource.
Now from here, I'm just going to search for resource group, and there it is, Resource group. So, I'm going to go ahead and click the Create button, and then I have to fill in a few little details.
Basically I have to give it a name and specify the region where I want to create it.
And, of course, tie it to a particular Subscription, of which I have only one, the Pay-As-You-Go subscription.
I'm going to call this Rg2, Resource group 2, and it's going to be, let's see, in a different location, I'm going to put this one in Canada Central.
I'm doing that because I know that most of my resources will be deployed in that same type of region.
Then I'll click next for tags.
Now we could specify a tag key and value pair. For example, if this is going to be tied to a project, we can specify a Project and a Value, let's say project ABC.
But bear in mind, depending on how you plan on using this, you might just name the resource group project ABC, so really depends how you want to use it.
At any rate, I'm going to click the next button, validation is passed, I'm going to click Create, and after a moment it will create our resource group.
I'm going to click the Go to resource group link.
Well, actually, before we do that, let's go back to the Resource groups view, just to shows up there.
We know it will, so we just have to, click Refresh, maybe a few times, and wait a moment and then we'll see resource group show up, resource group 2, Rg2 show up.
We can click on it and then start to explore it.
Now, of course, it's not really being used at this point, you could go under Deployments and you would see that there's no deployments that have been sent here because it's newly created. But when you deploy new resources, for example, if I were to go, let's say to the All resources view, not that we have to do it this way, but we can.
And, if I were to click the Add button, let's say we want to add a virtual machine, Windows Server 2016 Datacenter.
Part of that deployment is going to be specifying the resource group into which we want to deploy it. So, I can see I've got a drop-down list here for resource groups, and I could specify the Resource group, in this case, Rg2, where I want this resource deployed.


Azure Resource Groups and the CLI
In this demonstration, I'm going to use the Azure CLI to manage Azure resource groups.
But first, here in the portal, I've navigated to the Resource groups view where I can see, I currently have two resource groups.
And if I click on any one of them to open them up, I could click on Deployments to open up that blade to see any items that were deployed into that resource group. Whether it Succeeded or whether it failed.
And I can even perform a Cost analysis against the resource deployments inside of this resource group and so on.
So let's go to the CLI and let's start managing resource groups. The first thing I'll do is run az group -h.
Now on help, I'm working with resource groups.
And it does say here that this allows me to Manage resource groups and template deployments. Perfect. So the next thing I'm going to do is get the next level command, which in this case to create a resource group would be create, so az group create. Now, if I need more help, I can run az group create -h to learn more about any parameters that I might need to pass on the command line to work with this. So such as --location or -l to specify the location or the region.
And it even says, if you want to know how to type in those items, you could see the values by typing in az account list-locations. Of course, we'll have to specify the name and so on. So I'm going to go ahead and clear the screen with cls and I'm going to do this. I'm going to run az group create -l for location, in my case canadaeast. And I'm going to call this resource group -n Rg2.
Now after I've done that, I should get some returned JSON output which is indicative of the fact the provisioning succeeded, which it says it did. So I'm going to go ahead and run az group to list my resource groups.
However, it lists all of the properties and it's a little hard to digest that output. So what I could do is run az group list, I could pipe it to the grep line filtering tool. And I could tell it I'm looking for the name property.
But here it says 'grep' is not recognized. Well, that's because I'm running the Azure CLI locally on my Windows machine as opposed to within a Cloud Shell. This is not a Linux host. I don't have the Linux subsystem for Windows installed, there's no way to grep this. So what I could do is also pipe that instead to the Windows find command. Now, in this case I'd have to specify that the name be within quotations in order for that to work correctly.
And once I do that, it will show me just the names of the accounts. Now the next thing I could do also is use the az group list, I could use the --query parameter. This is built into the Azure CLI, it's probably the best way to do it. And because we have an array of items, in this case, we have three resource groups, we have to refer to the fact that we have more than one. And I can specify that we have an array or a collection of them by specifying open and close square brackets. Then I separate that reference from the property, in this case, name with a dot so .name. And now we'll see just the names of those specific resource groups.
Now the thing is though, you can also delete a resource group. For example, here I'm going to run az group delete, and in this case, -n for name. Let's delete our first one, resource group 1, Rg1. But let's go back and check it out in the portal before we actually press Enter.
So back here in the portal, I want to go Home and I'm going to go to the All resources view. And I see that I've got two storage account here deployed in the Rg1 Resource group.
Okay, so they still exist. Now I could have seen that of course by going into Rg1, the Resource group, and then going into Deployments. I would see that those two storage accounts had successfully been deployed here. All right, having that in mind, let's go back to the CLI.
And I'm going to press Enter to delete resource group 1 or Rg1, are you sure you want to do it?
Yes, put in the letter y, and I'll press Enter, and it says it's Running. Now even while that's in the midst of running here back here in the portal, I've refreshed my All resources view. And notice that our two storage accounts have been removed.
So the message here is clear, when you delete a resource group, you're also removing all of the resources deployed into it.


Azure Resource Groups and PowerShell
In this demonstration, I'm going to use PowerShell to create an Azure resource group.
So to get started here, I'm going to run get-command in my Cloud Shell, and I'm going to use an * followed by the text resourcegroup. And then after that, I'm going to put in another *. So in other words, showing PowerShell cmdlets that contain the text resource group in their name. And we can see that we have quite a few of them.
I'm interested in building a new one, and I can see we have the New-AzureRmResourceGroup PowerShell cmdlet, so I'm going to go ahead and use that. And, I am going to clear the screen, I'm going to run new-azurermresourcegroup. I'm going to specify the name. In this case, I want to build a resource group called Rg2, resource group 2. And I'm going to set the location with -location in this case to the canada east region. So I'm going to use the new-azurermresourcegroup cmdlet -name. I want to call this Rg1 for resource group 1, and -location, I'm going to set in quotes to canada east. I'm using quotes because there's a space between canada and east within that region name, and I'll press Enter.
After a moment we can see the ProvisioningState of having created resource group one or Rg1, is that it Succeeded. We can verify this by retrieving information get-azurermresourcegroup. When we do that it returns our resource groups including the one that we just created, Rg1.
Notice the property tied to that is ResourceGroupName at least as it's labeled here. So I'm going to clear the screen, we're going to use the up arrow key to bring up our get command line. I'm going to pipe this to select and we are going to tell we want to select only the resourcegroupname property. So then all we are seeing are the names of our specific resource groups.
Now we also have the option of removing a resource group. But before we do that, why don't we minimize our Cloud Shell here in the portal, and let's go to the Resource groups view where we will see any resource groups, there are three here.
Including Rg1 and Rg2. So what I want to do is issue a command to delete Rg2 using PowerShell. So back in our command shell, we're going to go ahead and do that by using the remove-azurermresourcegroup cmdlet. And I'm going to tell it the name in this case is going to be Rg2. It says are you sure you want to remove that resource group?
I'll type in the letter y for yes, just bear in mind that when you are removing a resource group, you are also removing the resources deployed into it.


Moving Azure Resources
You can use the portal to move Azure resources from one resource group to another. And remember that resource groups allow us to organize related cloud components, such as all of those underlying items required to support a web app. Or maybe we simply want to deploy virtual machines into a resource group called Project X, and so that we can track it by project, including at the building level. Either way, let's go ahead and do a move.
To get started here, let's go to the Resource groups view. I've got two resource groups, Rg1 and Rg3.
Let's go look at our Storage accounts, because we're going to move a storage account from one resource group to another.
It doesn't have to be a storage account, that just happens to be what we're using as our example. So I've got a storage account, and we can see right here, it's in a Resource group named Rg1, we're going to move it to Rg3.
We might do this as part of a reorganization effort. So I'm going to click on the name of the storage account to open up its details.
And in the Overview blade, I have a Move button. So I could choose Move and move it to another resource group within the current subscription, or in another subscription.
I'm going to choose Move to another resource group.
All I have to do here at the bottom is specify the target Resource group that I would like to move this item to, the Storage account. So I'm going to select Rg3.
I'll turn on the checkmark that says, I understand that tools and scripts associated with move resources might not work because I'm moving it to a different location. And I also might have to update them with the new resource ID.
So I've opened up another browser window here for my storage account, the one that we're moving, and I've gone to the Properties blade, where we can see the Storage account resource ID. Now, we're going to go ahead and verify that it is changed after we move it to our new resource group. Notice that part of that account resource ID includes the resource group name in the path. So let's go back over, we've checked that checkmark. Let's click OK to actually perform the move. Just make sure you're patient as the move occurs, especially if you're moving more than one resource at a time.
So if I click my notification bell icon in the upper right, we can still see it's moving that storage account resource. While that's happening, let's go back into our Resource groups view. And I'm going to open up an existing resource group, because what you can also do is choose to move at the resource group level.
What does this do? This will allow you to move all of the deployments associated with the resource group.
And we can see currently, it still registers that our storage account is a part of this resource group. If you had many resources deployed here, they would all be listed. And you can see, you can select or deselect the ones and choose the target resource group to move them to. So you can do it at the resource group level or from the individual resource level.
Okay, before too long, we'll see that the moving of the resource is now complete. So we looked at the original storage account ID prior to the move. So the ID itself will not be changed, this numeric value, it starts with the 048b, it ends with 2109. I've opened up another web browser window after the move, so looking at the same resource, and the ID itself in terms of the numeric value portion has not changed. What's changed is the reference in the overall resource ID for the storage account. The reference to the resource group, here it's Rg3, and originally, it existed in Rg1. So as was suggested when we were doing this, you know, if you have any programmatic code or scripts that refer to the old resource ID, make sure they change to the new one.


Resource Group Deployments
You can view past resource deployments into an Azure resource group by opening up its properties in the portal, which we're going to do here. 
So to start with, let's go to the Resource groups view where we're going to see the resource groups within this subscription.
So for example, Rg1, resource group 1. If I click to open that resource group in the Overview blade, I'll see any resources currently deployed in that resource group.
Now here it says there are No resources to display. However, if I click on the Deployments item in the navigation bar, I can see that there have been deployments to this resource group in the past. So either those resources were deleted, or they were moved to another resource group.
So let's close this resource group for a moment and let's go into our second resource group here called Rg3.
So again in the Overview part of that, we do see there is an active object here within this resource group. It's a storage account.
And in the same way, if we go to the Deployments part, we'll see see that there are no deployments listed to this.
Well, how can that be when we can see there's a storage account currently assigned to Rg3? That would be because it must have been moved from another one. So let's go back into our initial resource group, Rg1, let's go the Deployments section.
Now here I can see that there was a template deployment for one or more resources. We don't quite know yet, into this resource group on a specific date and time.
Now if I click on the link for that template, I can actually Download the details related to that template, it's a zip file.
I'm just going to choose Open to open it up directly, and it going to open up the deployment.json file. This gives you the details about what in that template was deployed to the resource group.
Unless we scroll down through here, it looks like it was a storage account, that looks like the only thing that was deployed here. So we can learn that quite easily by viewing that information.
Now what's equally interesting about that, if I go back here to the Deployments, is if I select an existing deployment.
So we're here have a deployment of the storage account into this resource group. We have a Redeploy button up at the top.
And it means what it says, based on the selection, you can deploy that item again. Now you would only do that if it doesn't already exist. So for example, I'm going to click Redeploy. So this is what you would normally see if you were deploying from a template.
So I can select a Resource group where I want to deploy this item. So for example, Rg3 or I can create a new resource group, whatever the case might be. Now interestingly, even though it was originally deployed into Rg1, this storage account was moved to another resource group. And so it doesn't actually exist here anymore. So I'm going to deploy it back into Rg1. What I'm doing is creating a new storage account from that original deployment. I would do that if I want to use a lot of the settings from it as opposed to deploying a brand new storage account from scratch.
It's the only reason you would do this. So assuming I'm okay with all of these settings as per my original deployment. Then down at the bottom, I could choose that I agree to the terms and conditions stated above. The only thing I'll have to account for though is the name of the storage account. If that storage account is still being used somewhere, then the name isn't unique. So I'll just add a 2, let's say to the end of it, to make sure that the Storage Account Name is unique. I'll choose Purchase.
And let's see if it validated, excellent. So the deployment is currently in progress. What we're doing is redeploying a storage account into this resource group based on a past deployment. Of course, the original storage account is no longer here. It's in Rg3. And after a moment, if I go look at my notification bell icon in the upper right, it looks like the resource deployment succeeded. Let's go back and look at the deployments here for our resource group.
And let's take a look at the Overview here where we can see active current items here. And we can see that there is now a storage account that was deployed into Rg1 and we redeployed it from a past deployment.


