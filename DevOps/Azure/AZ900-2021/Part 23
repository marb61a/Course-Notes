                    AZ900 Microsoft Azure Cloud Fundamentals 2021
                    Course Notes Part 23


PaaS (Continued)
  - We even have the option of migrating some of your existing software development data from on-premises into the cloud
    - That would even include things like databases used by custom software
    - Characteristics of platform as a Service, it is a virtualization type of technology in a broad sense
    - It uses a number of underlying virtualization Technologies such as virtual machines and even application containerization
    - Where application files and settings are stored within their own logical boundary
    - There are variety of services available, where you could host custom functions or collections of functions API's in the cloud.
  - You also have different types of databases that can be deployed automatically, kind of as a stack where you'll have certain operating system
    - Certain developer tools and a certain type of database that can be deployed really with just a few clicks
    - Database integration, is always very important with Platform as a Service
    - Databases whether they be SQL based or no SQL based where no SQL doesn't really have a rigid storage blueprint as SQL does
    - These can be used depending on the type of application being constructed
    - Platform as a Service, is a service model in the cloud, and one characteristic of the cloud is, self provisioned resources.
  - It doesn't take very much for developers to begin provisioning additional items in the cloud.
    - There are different  kinds of items, it could be a code repository that supports code check-in
    - It could be an automated code pipeline. That includes automated testing that's triggered as we've mentioned
    - When code is checked-in by developer to a code repository that's cloud based
    - Who will use platform as a service? Well, organizations that are looking at making customized software applications even for internal use
    - Such as line of business apps, will benefit from platform as a service.
  - Also the deployment of the app will benefit from platform as a service in the cloud
    - That would be continuous integration and continuous delivery, such as automated testing, automated packaging and pushing out of software changes
    - We always have to consider the security of data that results from the use of platform as a service offerings
    - That could mean enabling encryption, for example at the database level
    - This would fall upon the responsibility of the cloud customer, in this case, a software developer, to make sure security is implemented correctly.
  - The other thing is integration such as with existing services
    - We have to consider any potential runtime issues that might cause Flaws in the software, so it stops functioning
    - Again if we have rigid and automated testing in place, then that type of issue should be minimized
    - Then there are operational issues. Remember that when you use cloud computing, you are essentially outsourcing the responsibility
    - It's a risk to a third party, and the third party is the cloud service provider. 
    - Even though they need to abide by service level agreements, still a risk that at least needs to be considered.


Private Cloud
  - There's a common misconception that if you run virtualization on premises. So if you're running virtual machines, you have a private cloud. 
    - This is not the case, in order to have a cloud, you not only have to use virtualization technologies, but self-provisioning of resources needs to be in place
    - You need to have a large number of resources pooled together and need to track and charge based on resource consumption
    - It needs to be made available over the network. So virtualization is only about one component of cloud computing
    - You might wonder then, well, what does constitute a private cloud?
  - First of all, we're talking about private IT infrastructure that resides behind a firewall
    - For example, it could be equipment owned and managed by a single organization on their own network, that adheres to cloud computing principles
    - Such as rapid elasticity, and self-provisioning, and metered usage
    - It's used by one organization and that's where the private comes from and there is a fee per unit time model
    - In other words, just like with public cloud computing, you are charged based on what you use
    - You might ask, how can an organization charge itself? This is often used in a private cloud within an organization for departmental charge back.
  - Different department managers might have access to a web based GUI where they can provision licensing
    - For example for email users, with just a click of a button
    - Or they can provision virtual machines for testing purposes and that is tracked and at the end of each month
    - Each department is billed accordingly from IT or from headquarters
    - So what are some advantages of a private cloud? 
    - There's no question that you have entire and full control of everything, including security control, not to mention predictable performance.
  - You can predict what happens in terms of network bandwidth performance and individual virtual machine performance in a private Cloud
    - Because you control all aspects of it, in the same way you have full configuration flexibility
    - Again, because you have full control of every component all the way down to the hardware level
    - One important private cloud consideration is the cost of it
    - Because a private cloud means a single organization uses all of its own infrastructure
    - All of that infrastructure needs to be paid for somehow up front, that's a capital type of expenditure and a cost that needs to be considered.
  - Then there's the ongoing maintenance, making sure things run smoothly, working through help desk tickets
    - Making sure things are patched, adding updates as they occur and so on
    - When should an organization use private cloud computing then? 
    - One reason would be because they require a virtualized environment with cloud computing flexibility
    - Remember, virtualization unto itself does not constitute a cloud
    - Organizations that have privacy or compliance concerns about running their services in the public cloud, could opt to have full control
    - This is so that they are compliant, by running it in their own private cloud.


Public Cloud
  - A public cloud, is accessible over a network such as the Public Internet
    - Or even through a Dedicated Circuit from an organization's on-premises network to the cloud without going over the Internet
    - Either way, public cloud computing makes shared resources available to subscribers
    - This would include things like virtual machine servers, storage in the cloud, network configurations, even VPN solutions going to the cloud
    - All of this can be provisioned through cloud computing in a public sense, as well as the use of software applications.
  - Things like Office 365 or Google Documents or Google Classroom
    - All of these things allow end-user productivity software to be made available over a network
    - In the case of public cloud computing, it's available to anybody that wants to subscribe
    - When should organizations use public cloud computing services? 
    - Well, the first reason to use it is for rapid provisioning of IT services
    - If you need to provision 100 new email accounts, you can do it very, very rapidly in the public cloud
    - Including taking care of the licensing that goes along with that, compared to what you might need to do on-premises.
  - Where you might all of a sudden realize you don't have enough hardware to handle that capacity
    - First you have to acquire the hardware before you can configure it to be used to support your ten new email users
    - If you need IT system and data storage scalability
    - For example, we realize that for a project that we're working on, we need an additional amount of storage space
    - On-premises, you have to physically have that space available in your storage arrays
    - The same thing is true in the public cloud, but the public cloud has enormous capacity
    - And you're more likely to be able to have that available immediately in the public cloud, than you would be on-premises.
  - Organizations that have no desire or don't have the budget to implement a private cloud.
    - Might also be likely candidates for using public cloud computing
    - Scalability in the public cloud, is based on large hardware installations
    - That's the vast amounts of pooled hardware resources that are made available to cloud customers by the cloud service provider
    - It allows for scalability, for example, with just a few clicks, I could resize an existing cloud based virtual machine
    - To add more CPUs, more virtual processors to increase its compute power or add more RAM.
  - This can be done very, very quickly with a minimal effort
    - Scalability means that we can respond to demand for services in real time
    - For example, you might deploy a load balancer in the cloud in front of your application, maybe a custom application, and as requests for the app increase.
  - You can have it automatically scale by adding more virtual machine instances to handle the increase in the workload
    - You can also have it automatically remove those virtual machines when they're not needed to save on costs
    - Because when you have virtual machines running, you're paying for them
    - The other thing to think about, is that you're saving in many ways with public cloud computing to what you might alternatively do on-premises.
  - First thing is that you only pay for the resources that you are using in the public cloud
    - For example, if you need a virtual machine to test out a new configuration. 
    - You can do that in the cloud, very quickly by spinning up the virtual machine, and then when you're finished, shut it down so you aren't paying for it
    - On-premises, if you have enough people doing that, You might need to actually acquire additional hardware to support that increased demand for testing purposes
    - This could be for example with virtual machines. In the cloud, licencing is very convenient and easy to use.
  - If you provision a Windows operating system in a virtual machine in the cloud
    - The price permitted, for example, while the VM is running will also include the licensing costs
    - That's not quite the case on-premises, you'd have to acquire the licensing and make sure you are compliant with the license terms
    - You will require less IT staff on-premises
    - If you are using public cloud computing, than if you exclusively used on-premises IT services
    - Because there's no hardware to acquire and maintain, and depending on the specific services being used in the public cloud
    - You might not even require servers on-premises.
