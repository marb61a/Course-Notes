                    AZ900 Microsoft Azure Cloud Fundamentals 2021
                    Course Notes Part 30


  - Click on it, it starts the Logic App's designer where we can get some help on how to work with this and we can also choose from some basic templates.
  - So like when a message is received in a queue, or when an http request is received, and so on
    - Scroll down a little bit beyond all that and choose to build a blank Logic App 
    - We need to search for event grid
    - Choose Azure Event Grid. And then when a resource event occurs for Azure Event Grid.
    - Cick Sign in to authenticate to the Azure subscription and then we are asked to confirmation to allow the provisioning to provide access to Azure Event Grid
  - Choose Allow Access and then fill in this detail related to the subscription and also the resource type that is of interest in this particular case
    - So I'm going to choose Microsoft.Resources.ResourceGroups for the resource type
    - Set the resource name to a resource group that already has Rg1 that we know virtual machines have been deployed into, go ahead and save this Logic App.
  - Go back into the Logic app designer here in my Logic app.
    - Underneath, when a resource event occurs, click New step, and then choose Built-in
    - We need some kind of conditional way to determine what's going to happen next, to do that to scroll down and choose Condition, that's a control
    - Specify data.operationName is equal to and what we're looking for is any right activity for our Azure virtual machines related to the resource group
  - That's the condition, down below, for true, and also, of course, if that turns out to be true versus false, we can add an action
    - If it's true, if a change has been made to write to a virtual machine, I'm going to click Add an action.
  - From here I can choose what it is exactly that I want to do
    - For example I could search for email if I want to send off an email notification and lets say choose Gmail.
  - Then what do you want to do in Gmail? Well what we want to do is send an email message
    - From here what we would have to specify are the details related to working with Gmail
    - If it's the first time doing this, we have to sign into my Gmail account
    - If already done that then we can specify who to send the message to
    - So a list of email addresses, and I can also add other additional items such as the subject and body here of the message.
  - Maybe in the body, what we want to do is add the specific type of event 
    - And if scrolling over for the subject, we want to list the subject of the event
    - Up here, we can specify some email addresses, go ahead and do that
    - Email addresses should receive this notification and then click the save button.
  - After that's done, go for example to a virtual machine and open up its properties blade 
    - And make a change to it such as let's say go to sizing and just choose a different size and click on resize.
    - Write to that virtual machine, and so our Logic app should capture that event.
    - Go back to all resources, the view filter for logic, and there's our Logic app
    - Under the overview part of that scroll down and see for example the status is succeeded down under the run history for our current configuration.


SQL Overview
  - Structured Query Language, or SQL, is the language that's used to access relational database objects and their data
    - With a SQL-compliant type of database system, data tables are related via common fields
    - This is called normalization, and it's a technique that's used to reduce the amount of repeated data
  - SQL objects include the server that hosts one or more databases
    - Within a database, we can have one or more tables that actually store the data
    - Within the table, we have it broken down by fields or columns
    - For example, we might have a table called Customers, and one of the fields might be Customer ID
    - When we actually populate a table with data, we end up with a record otherwise called a row.
  - In the example with the Customers table, the record or row would include everything about a customer
    - So a customer ID, the first and last name, mailing information, and so on
    - Databases can also contain stored procedures, essentially which are scripts that can be run against items within the database.
  - We can also create views within a SQL-compliant database that can bring together columns from different tables so we can view it all in one place
    - Of course, we can construct a multitude of different types of queries
    - This essentially asking questions about the data stored in tables, such as show me all customers that have spent more than $10,000 in the last quarter
  - Pictured on the screen, we've got two tables, and this is used to demonstrate the relationship between tables.
  - At the top, we've got a Customers table, where we have three columns: Customer ID, Lname for last name, and Fname for first name
  - Then, we have a second table called Purchases table
    - It's got three columns, but notice what it has in common with the Customers table, the Customer ID
    - So Customer ID 001 exists only once in the Customers table.
  - However, that customer, hopefully, will have more than one purchase with us
    - We can expect to have repeating entries for that Customer ID in the Purchases table
    - But we don't want to repeat the last name and the first name and everything else about a customer
    - All we need is one unique item, in this case, the Customer ID to be repeated to link all the purchases 
    - In the Purchases table to the customer in the Customers table.
  - Common SQL-compliant database products would include Microsoft SQL Server, MySQL, Oracle Database, and Sybase to name just a few


Azure SQL Database
  - One characteristic of cloud computing is rapid provisioning of resources and rapid elasticity, and that's definitely true with Microsoft Azure SQL Database
    - With SQL Database, we're talking about database as a service, called DBaaS, which is also platform as a service in the cloud.
  - It's a managed service, and that's where the rapid elasticity comes in 
    - Because we don't have to worry about deploying virtual machines and then installing the Microsoft SQL Server software
    - All of that is taken care of for us when we deploy Azure SQL Database
    - It's very quick to get up and running and we can also bring our own license
    - BYOL, bring your own license, will let you reuse any existing SQL Server additional licenses
    - That you want to reuse in the cloud when you deploy Azure SQL Database.
  - You also have the option of migrating your on-premises SQL data into Azure
    - So you can reuse your data instead of having to recreate it in the cloud
    - Azure SQL Database supports scaling in the form of horizontal scaling
    - This means scaling out, by adding database replicas and also database sharding, which allows us to have more information split up horizontally
    - What this really means is taking large datasets and breaking them into smaller pieces to improve performance, that's where sharding comes from.
  - Azure SQL Database allows us to scale vertically, increasing or decreasing the underlying horsepower for each SQL Server instance
    - We can do that by configuring virtual machine instance sizing
    - We can manage Azure SQL Database using the GUI, through the Azure portal, or through the Azure CLI
    - For example, we could use the az sql db create command to create a database, the equivalent in PowerShell would be New-AzSqlDatabase.
  - If using ARM templates to deploy and manage Azure resources
    - You would be looking at a resource type of Microsoft.Sql/Servers
    - With Azure SQL Database, there is a specific database server firewall enabled, and that's on by default for SQL
    - If you want to make a connection into Azure SQL Database from externally
    - You are going to have make sure you create a firewall rule to allow inbound port 1433 traffic.
    - Port 1433 is what's used by SQL Server by default
    - There is even an option where you can add your client IP
    - So when you are using the portal and you are viewing the firewall information for this, for SQL Database
    - Then what you'll notice is that it'll show your current client IP address that you are connected from, your public IP address if you are behind a NAT router.
    - You can conveniently simply add that as the IP you want to allow through the firewall
    - Then we would allow you, for example, to use tools like SQL Server Management Studio on-premises 
    - To reach into the Azure cloud to your SQL Database instance to manage it.
  - When you deploy Azure SQL Database, whether it's through the GUI or through command line tools
    - There are a number of things you have to take into account
    - One of which is whether you want to deploy a new SQL Server instance or use an existing one that you might have already deployed
    - SQL Server instances have the DNS domain suffix of .database.windows.net by default.
  - You need to specify a unique server and a database name when you are deploying Azure SQL
    - You have to determine which location, or Azure region, into which you want to deploy Azure SQL Database
    - From a performance standpoint, you also have an option of selecting database transaction units, or DTUs.
  - This is a culmination of factors that control the performance when it comes to reading and writing to and from databases
    - It includes things like the amount of virtual CPU, the amount of memory, and how fast disk I/O is.
  - The last consideration is that if you're deploying Azure SQL Database for testing purposes or any other temporary reason
    - Make sure that you remove any unused databases and server instances as soon as you are finished
    - You don't want to leave these things running in the background because you are charged for all of the time that it's left running
    - So make sure to delete it when you are finished with it.
