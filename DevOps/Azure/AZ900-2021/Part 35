                    AZ900 Microsoft Azure Cloud Fundamentals 2021
                    Course Notes Part 35



Deploy CosmosDB (Cont)
Well, there's no tags in here to assign here so I'll just go to Review and create, and once the validation says it succeeded, I will create my Cosmos DB deployment.
And after a moment we can see our deployment is complete, and we've even got a view over on the left here called Azure Cosmos DB, and I can see my deployed instance listed here.
I'm going to click it, and here we can see a number of interesting items.
For example, as I scroll down in the Overview part of the Properties blade, I can see the region into which it was deployed. This looks like Eastern Canada.
And as I scroll down, I've also got this Data Explorer option, where I have buttons to create a new database or a new collection to begin working with data.
Of course, you can do this programatically or using command line tools or even GUI tools that you might even run on-premises. You would just need to make sure you have a way to access Cosmos DB, and we're talking really here about adding a firewall exception, so here in the Properties blade, if I go to Firewall and virtual networks, notice here that my client IP, my public IP on the Internet, has been added here as being allowed in.
But you would also need to go to Connection String because you would have to have the correct Cosmos DB host name, the port number to connect to, as well as the Cosmos DB user name, and either the primary or secondary password.
So you would do that, for example, if you were using some kind of MongoDB type of GUI tool on-premises that you wanted to reach into the cloud to this instance to make changes to.


Big Data Overview
  - Microsoft Azure provides numerous offerings related to working with Big Data
    - With Big Data, as the name implies, we're talking about vast datasets, large quantities of data that need to be processed and analyzed
    - Now, this has become more and more of a thing in recent years due to the Internet revolution and how much data is being produced on a daily basis
  - Well, we might be getting this data from Internet of Things or IoT devices like baby monitors or surveillance cameras. Big Data sources can also include financial information, financial transactions for customers in a banking institution for instance or through medical research or even through cookies.
Cookies are preference files used on web browsers to track user preferences on websites, and also sometimes to track security authentication tokens used by users on websites. And so that can be a valuable source of data for things like marketing companies to know people's web browsing habits and their preferences, and that could be derived from cookies.
But all of this data needs to somehow be collected in a location that makes sense that can accommodate that amount of data, so a NoSQL database. And then it needs to be processed so we can draw meaningful insights from that data. Big Data has a number of characteristics that we need to consider, such as the amount of data that needs to be transmitted over a network. And then stored in some kind of a storage location, whether it's a data lake or a specific single database.
We have to think about the rate at which data is produced. How much data do we expect will be produced per day? Because when we have incoming data into our Azure solution for Big Data, we are paying a fee depending on how much data is coming in or going out in addition to being stored and being computed through a cluster.
We have to think about the wide variety of data types that we might be interested in working with such as financial transactions or customer web surfing habits through the collection of cookie data. And then we have to think about the accuracy of that data. One of the things we can do with Big Data is transform it to a different format that would be acceptable for our processing engine, at the same time, we can weed out irrelevant data.


Azure SQL Data Warehouse
The analysis of big data involves both the storage of vast datasets along with the processing of that raw data to result in meaningful insights. So part of Azure SQL data warehouse is certainly the Data storage component, but we've also got Parallel processing. This is done by having a cluster of compute nodes that work together to analyze big data stores.
So it can execute complex queries using what's called PolyBase. PolyBase differs a little bit from standard structured query language because it's designed to run against large datasets that get read from Apache Hadoop. And Apache Hadoop is a clustering solution designed for Big data analytics. Pictured on the screen, we have a sense of what the architecture looks like for Azure SQL data warehouse. Beginning on the left, we've got an application or an application component, that issues transact SQL or T-SQL commands.
Now, this gets sent to what's called the control node. The control node, like the name implies, controls the underlying cluster of compute nodes that actually perform the work. And so we can send a transact SQL command to the control node. The control node is then responsible for allocating that to compute nodes. And because we've got more than one compute node, plural nodes, it means that we can run some of these tasks at the same time or in parallel. Now, this is using underlying Azure storage to store, not only the data that we run the queries against but also any transformations that might result from the execution of those queries.
When you configure Azure SQL data warehouse, one setting you will specify is the data warehouse units or DWUs, which is a combination of performance factors related to things like CPU computing power, the amount of memory, and database input and output. All that together forms a data warehouse unit.
And the more data warehouse units you have, then the better performance you'll have when processing big datasets using the compute nodes within the cluster. Just like when deploying Azure SQL database, Azure SQL data warehouse also uses firewall rules to control inbound traffic.
So for example, you would have to add a rule for the appropriate IP address, or addresses, to allow inbound traffic to SQL over port 1433. To save on costs, you can also pause processing of data by the compute nodes. So therefore, you're only being billed for the storage related to Azure SQL data warehouse. And when you have sporadic testing that might be taking place, this is an important strategy to reduce costs.


Create an Azure SQL Data Warehouse
Azure SQL Data Warehouse is different than a standard Azure SQL database deployment, in that it's designed for parallel processing, so that we can quickly get results when we wanna run complex queries against large amounts of data.
To get started with deploying an Azure SQL data warehouse here in the portal, I'll click Create a resource in the upper left.
And from the categories, I'm going to choose Databases and then on the right, I'm going to choose SQL data warehouse.
Now, you're going to need to use an Azure SQL server instance here. And if you don't already have one, you'll be able to create one throughout this process. So let's start by giving a database name here. I'm going to call this sqldatawarehousedb172, and I'm going to put this in an existing resource group.
And for a data source I can have a Blank database, I could choose a Sample such as AdventureWorksDW, or I could simply take the source from a Backup of a database. In this case, why don't we go with some sample data from AdventureWorksDW.
Then I've got to specify the SQL server instance here. I'm going to click on that. And on the right, any existing SQL servers that I might want to tie this Data Warehouse to, I could. But in this case, we don't have any, so I'm creating a new one. We're going to call this sqlsvr172, and I'm going to specify the server admin for SQL server and I'll confirm the passwords.
I'm going to deploy this SQL server instance in the Canada East Azure location or region and then I'll click Select. So we got the server taken care of, but the problem is I have a little notification symbol here that says, SQL Data Warehouse Generation 2 is not supported in this region, okay.
Well, that's set automatically as a default down below the performance level.

[Video description begins] He clicks on the field for Performance level. A page titled Configure performance opens. It contains two tabs: Gen2 and Gen1. Gen2 is selected by default. It has a scale with a pointer for Scale your system. The pointer is currently at DW1000c. At the bottom there is an Apply button. [Video description ends]

So if I choose Generation 1, Gen1, then the error message goes away.

[Video description begins] He shifts to the Gen1 tab. It has a scale with a pointer for Scale your system. The pointer is currently at DW400. The price of the system mentioned here is 5.32 USD/hour. [Video description ends]

At least for the region that I've selected it in. And this ties into the fact that some specific Azure service configurations are only available in some regions. Now, I can also determine which data warehouse unit selection or DWU that I want. And as I kind of scale my system up, notice of course the price per hour, US dollars goes up the more data warehouse units or DWUs that you allocate to your data warehouse.

[Video description begins] He moves the pointer and places it at DW1500. The price changes to 19.96 USD/hour. [Video description ends]

Remember that a data warehouse unit, or DWU, is a collection of performance factors like CPUs and memory. And so the best way to work with this, before you've got experience running your workloads in data warehouse is to start at a reasonably small DWU value and then gauge the performance as you run queries against the data. And if you need to, you can scale this up later or scale up back down.

[Video description begins] He moves the pointer again and places it at its original position DW400. The price again goes down to 5.32 USD/hour. [Video description ends]

So at this point, I'm going to click Apply, and down below, I'm going to click Create.
And we can now see the deployment is in progress.

[Video description begins] The Microsoft Azure home page is open. The presenter points to a notification at the top right corner. It reads: Deployment in progress. [Video description ends]

So SQL data warehouse is similar to when you deploy Azure SQL database in that you've got to determine how you need to make a connection into the database, such as from a non-premises environment perhaps where you're running SQL Server Management Studio. And, again, it's gonna make a connection over standard SQL ports like 1433 and so you'd have to add a firewall exception to allow that to happen. So now, on the left, I'm going to go to the SQL data warehouses view where we can see, we've got our SQL data warehouse database.

[Video description begins] In the navigation pane, under Favorites, he clicks on SQL data warehouses. A page titledSQL data warehouses opens. It has three buttons: Add, Edit columns, and Refresh. This page has a table with the following columns: Name, Status, Replication, Pricing Tier, Location, and Subscription. The table contains one row of data. The name is sqldatawarehousedb172. [Video description ends]

And if I click on it and open it up, then we can see if we scroll down, in the properties blade, for example, if I go to Quick start.

[Video description begins] He clicks on sqldatawarehousedb172. A page titled sqldatawarehousedb172 opens. It has a navigation pane with the following options: Overview, Activity log, Tags, etc. In the main body, the following buttons are present: Pause, Scale, Restore, New Restore Point, and Delete. Below the buttons, a list of information is present. It includes details about: Resource Group, Status, Server name, etc. [Video description ends]

I can see that we have a number of tools that we can use so that we can work with data in SQL data warehouse.

[Video description begins] In the navigation pane, under Settings, he clicks on Quick start. In the main body, a new page titled sqldatawarehousedb172 - Quick start opens. It has three sections: Get the tools, Integrate with your app, and Learn more. [Video description ends]

And that is available through the Microsoft Azure SDK, Azure PowerShell and also the Azure SQL Data Warehouse Migration Tool.

[Video description begins] He points to the options present under Get the tools section. [Video description ends]

And we also have information about Integration with our application, because the idea is that we'll have some kind of an application that is going to be interested in running these types of complex queries and gaining insights from data that is stored and managed by SQL data warehouse. Now, I do have a Geo-backup policy which takes a snapshot on a daily basis. However, this is kind of unlike the standard Azure SQL database geo-replication, because that same type of geo-replication option is simply not available with Azure SQL data warehouse.

[Video description begins] In the navigation pane, under Settings, he clicks on Geo-backup policy. A new page for Geo-backup policy opens. It has two buttons for Geo-backup policy: Enabled and Disabled. Currently, enabled is selected. [Video description ends]

The other thing to watch out for is if I scroll down as we were talking about, if I go to Firewalls and virtual networks. We can add allowances for which IPs are allowed to make a connection into SQL data warehouse.

[Video description begins] In the navigation pane, under Security, he clicks on Firewalls and virtual networks. A page for Firewalls and virtual networks opens. At the top, the following buttons are present: Save, Discard, and Add clientIP. For Allow access to Azure services, there are two buttons: ON and OFF. Currently, ON is selected. The Client IP address is: 71.7.176.108. A table is displayed with three columns: RULE NAME, START IP, and END IP. [Video description ends]

Again, over port 1433, the standard SQL port, and we can even add our current client's IP address in and I'll just go ahead and save that if we really wanted to.
Also, as we scroll down, notice here that we've got a preview feature here called Query editor.

[Video description begins] In the navigation pane, under Common Tasks, he clicks on Query editor (preview). A page for Query editor (preview) opens. It has a drop-down menu for Authorization type. There are input boxes for Login and Password. The Authorization type is: SQL server authentication. The Login is: cirving. At the bottom, there is an OK button. [Video description ends]

And so if I put in the credentials that I specified when I configured the SQL server.

[Video description begins] He enters the password and clicks the OK button. [Video description ends]

Then we can go ahead and actually start to peruse and work with some of the data in a very simple way, at least here directly in the portal.

[Video description begins] The Query editor (preview) is open. It has four buttons: Login, New Query, Open query, and Feedback. The window has two sections: sqldatawarehousedb172 (cirving) and Query 1. Below Query 1, there is a section with two tabs: Results and Messages. The Results tab is currently open. Under the heading sqldatawarehousedb172 (cirving), three pointers are displayed: Tables, Views, and Stored Procedures. [Video description ends]

So if I expand tables, let's say, I see that we've got, for example, a dbo.DimCustomer as a table, and I can even start working with queries.

[Video description begins] He clicks on Tables. It expands. The following options appear: dbo.DatabaseLog, dbo.DimCurrency, dbo.DimCustomer, etc. He clicks ondbo.DimCustomer. [Video description ends]

So maybe select all of the columns from dbo.dimcustomer, and then I can run that query, and we'll start to get the results listed here.

[Video description begins] In the Query 1 section, in line 1, he types: select * from dbo.dimcustomer. He clicks the Run button. [Video description ends]

Now, this is just a quick way to look at this, of course, you're going to have an application or some kind of a way to hook into this using other tools to actually work with this data properly for analysis.

[Video description begins] In the Results tab, a table appears. It has the following columns: Customer Key, Geography Key, Customer Alternate Key, and Title. [Video description ends]

Bear in mind, one of the reasons you might use Azure SQL data warehouse over just standard Azure SQL database is because when you run queries, now this is not a complex query, so imagine a much more in depth, detailed complex query. But when you do run queries here, what's going to be happening is that the query is going to be handled by a specific back end node that's got its own compute resources, like CPU and memory, as opposed to standard Azure SQL database, which does not support multiple parallel processing.

[Video description begins] He clicks the Close button at the top right corner of the Query editor (preview). A message box appears with the text: Your unsaved edits will be discarded. He clicks the OK button. [Video description ends]

The other thing to keep in mind is, you actually have the option of pausing your Azure SQL database warehouse if you're not actually going to use it.
So for the storage portion, you would still be paying, but not for the compute portion. And you can see up at the top here that we do have in the overview part of the properties blade, a pause button, which we could use to do just that and then we could resume it when we want to continue processing.


Azure HDInsight
Azure HDInsight is a Big data analytics solution that's hosted in the cloud, and so it's considered a Managed service, and with managed services in the cloud we're talking about something that's easy to provision and configure compared to if you had to set it up yourself manually on-premises. Azure HDInsight uses a number of underlying open source frameworks but it does allow for Node clusters working together to process large amounts of data, whether that data is like a real time feed through a data pipeline or whether that data is coming from some kind of massive data storage warehouse.
HDInsight Underlying Technologies includes but it is not limited to Apache Hadoop. Apache Hadoop is an open source framework that's used for distributed processing clusters. Apache Spark is similar in that, it is distributed in parallel processing, but what makes it a little bit different is it uses in-memory caching to speed things up.
Apache Kafka is another open source component that allows for real time streaming data pipelines to feed HDInsight. Another aspect of working with HDInsight is Extract, Transform, and Load or ETL, you might be familiar with this term with other database solutions. It's not exclusive to HDInsight, it's more of a standard methodology more than anything else, where we can start by copying a data from source, whether it's a data store of some kind in the database or whether it's real time streamed data.
In the next step, for transform, we can convert the data to a different format so it can easily be consumed by the target that might expect things in a different format, such as dates. Finally, we can load the data into some kind of a storage facility, whether it's a data warehouse or whether it's going to be treated as a real time data feed that's gonna be fed into some other component.
So what do we use HDInsight for? Well, we know it's about big data analytics, but can we be a bit more specific than that? While using HDInsight, it can be related to Machine learning or ML, where we can gain insights from vast amounts of data that are fed into it. You can run very large petabyte-scale types of queries against this type of information, or it can be automated so the insights are gained based on code that's written, which can result in predictive analysis for future trends.
On the IoT side of things, the Internet of Things, we can have a large amount of IoT device telemetry that is fed into the HDInsight solutions. So we can draw conclusion from large datasets, whether those are related to the security of IoT devices or due to the nature of those IoT devices. We can draw conclusions, such as those related to monitoring industrial control networks and so on.



                    
Deploy an Azure Hadoop Cluster
In this demonstration, I'm going to use the Azure portal to deploy an Apache Hadoop cluster. This is useful when you need to have multiple parallel processing for big data analytics.
To get started here in the portal, I'm going to click Create a resource in the upper left, and then I'm going to choose Analytics because what I'm really talking about doing here is using the HDInsight as your offering.
Now, when I select HDInsight, I've got to give a name for the clusters.
So I'll call it hdinsightcluster172. And it's going to use the .azurehdinsight.net DNS suffix by default.
and after a moment we'll have a check mark here that indicates that, that name is valid and unique, then I have to specify the cluster type. And this is where from the Cluster type drop-down list, I can specify I want to use a specific framework, in this case, Hadoop. It's going to use the Linux operating system.
And then I can choose from variations of the version of Hadoop, depending on how I'm going to interface with the cluster and what exactly I'm going to do with that. So I'm going to go ahead and just leave the default selection.
I have to specify a Cluster login username, which I'm going to do here, and password. This is what I can use, for instance, if I log into the website to view overall metrics and details related to my Apache Hadoop Cluster.
And if I plan on using SSH for cluster access, then I can use the SSH username.
Notice here it's set to use the cluster login password also for SSH. So I'm going to tie this into an existing Resource group. I'm going to specify the appropriate Azure location for my config, after which I'll then click Next.
Next, for the primary account storage type, I'm going to choose Azure Storage as opposed to Data Lake variations. This is going to be for data that is used by HDInsight as well as for logs that get generated. And I'll leave it on My subscriptions for access to that account. So, then I have to go through and choose a Storage account. So I'll choose one of my storage accounts.
And then it'll make a storage container with the name listed down below here. And at this point, I'm going to click Next.
So once the validation has passed, I'll be able to click Create to initiate my HDinsight Cluster, which in this case, is configured in the back end to use Apache Hadoop. So I'll go ahead and click on Create to start the process.
While that's happening, understand that the next couple of steps would really be for developers, where they would use some kind of a tool to interface with Hadoop to work with the data and workloads related to that data. Tools like Microsoft Visual Studio, the Azure storage explorer, or you could even, for example, use SSH to connect to the cluster and start actually issuing commands based on the Hadoop command syntax. So now I'll click on the All resources view on the left, and I'll filter it by hd as a prefix.
And there's our HDInsight cluster, which I will click on.
The first thing I'm interested in, in the Overview part of the properties blade is the URL, which I will copy to my clipboard, and I'm going to go ahead and open that up in another tab here in my web browser.
I am then prompted to specify the Username and Password that I configured when I can set up this cluster in the first place. So we're going to go ahead and pop in those credentials.
And that's going to give me the cluster website page where I can start viewing a bunch of details. For example, from here I can go to Hosts, where I can get a list of a lot of the hosts that are being used here within my cluster for Apache Hadoop.
If there are any alerts, as we can see it listed up here at the top in red, and also by a specific host here, then I can click to read any of those specific ideas.
So we could see here that some of these alerts are related to connectivity issues because nothing has been actually done in this cluster at all thus far. So if I go back to the Dashboard, we'll see how we can get an overall usage of the data nodes that are available.
The Hadoop distributed file system, or HDFS disk usage among the nodes in the cluster.
Now you will use a variety of different tools to start loading data into Apache Hadoop as we mentioned. So this is what we would do at the administrative level. And from this point forward, it would be up to developers to interface with the Hadoop cluster to present data and workloads to be processed.


Azure Data Lake Analytics
  - Microsoft Azure Data Lake Analytics is a managed service offering in the Azure Cloud. It's designed for large scale data storage. We are talking about at the petabyte level. Now bear in mind, one petabyte equals approximately one million gigabytes. We're talking about potentially working with trillions of files. We can even take data, for example, that we might have stored in Azure storage account as blobs.
  - And we can actually copy that over into an Azure Data Lake store. For data analysis, we have to think about the kind of work-load power that we're going to need to work against these large types of data so that we can gain insights. And one consideration is configuring the Data Lake Analytic Unit, the DLAU. So this is a unit of measurement that's used to determine the underlying horsepower that's going to run our jobs where we can start to extract insights from this data.
So for example, each analytic unit contains a number of CPU course that are allocated to process data and also a chunk of memory. So at the time of this recording, one AU, one data lake analytic unit is two CPU cores and six gigabytes of RAM. So making a change to the data lake analytic unit really depends on the type of workload you envision will be handled through Azure data lake analytics. So this tells us then that we're talking about a large-scale parallel processing solution that uses node clusters.
We can use the Microsoft Visual Studio IDE, the integrated development environment, as a way to gain access to our Azure data lake and to begin running queries. We can also use the Eclipse IDE. We can use the IntelliJ IDE. All of these different integrated developer environments allow you to write code in a variety of different languages.
It really boils down to using whatever you are most familiar with, however, it's important to understand that these three IDEs are supported to hook into Microsoft Azure. And so in other words, there's an Azure toolkit that keeps getting updates for each and every one of these three items.
And these three items, these three IDEs also have plugins, even give them extended capabilities. So, Azure data lake storage then can be used to feed data into an Apache Hadoop cluster for parallel processing as part of data analysis. The Apache Hadoop cluster uses the Hadoop Distributed File System or HDFS. The jobs that we submit against that use what's called U-SQL.
This is even a type of project that you can launch if you're using GUI IDE tools like Microsoft Visual Studio. So U-SQL then, is just a simple language that you'll learn very quickly if you are already familiar with structured query language or just SQL.


Create a Data Lake Analytics Account
  - Just like a lake in the real world can have many incoming streams or tributaries to result in the water collected in the lake
    - Azure data lake in the Azure cloud allows us to specify a multitude of data sources to allow data to be fed into data lake.
  - Not only is it data storage, but we're talking about analysis of that data. So to get started here, I'm going to go into the Azure portal and click Create a resource in the upper left.
Now because we're talking about analytics, I'm going to choose the Analytics category. And you'll see over on the right that we have Data Lake Analytics, which I will click.
So, what we can do is feed data into our Azure data lake. And then that data can be processed and transformed and manipulated for the purposes of gaining insights as to all of that collection of raw data, it can even be used for things like machine learning. So, I have to create a new data lake analytics account. I'm going to call this datalake172, and notice it's going to add the .azuredatalakeanalytics.net DNS suffix at the end.
I will deploy this into an existing resource group and choose a location that makes sense for me, and then down below, I've got to also create a data lake storage account.
So I'm going to click Create new Data Lake Storage Gen1, it's already got a name for it, that's fine, let's go with that. I'll leave it on Pay-as-You-Go and Encryption as enabled, so I'll click OK for that, and then I'll click Create to actually create this resource.
Okay, so now I'm gonna go to the All resources view on the left and I'll filter it for things that start with the data.
We can see the two resources that resulted from our configuration, the data lake storage and the data lake analytics resource, which I'm going to click on to pop into the properties.
So when we're in here, notice right away that we have the option of submitting a job. So what we're talking about doing here is, submitting a job for processing for data lake analytics. Now of course, that could be fed data that we've configured into our data lake configuration. And if I were to scroll down, you'll see in the properties blade here indeed we do have data sources.
Currently, for our data lake analytic configuration, we've got our data lake account that we specified for storage upon creation, but notice that we could add additional data sources. We also have some other configuration items, like for example, the maximum number of concurrent running jobs.
We've got a slider here to draw that up or down, depending upon what our specific needs hour, our processing might entail. If I were to click Tools in the properties blade, we then have a variety of tools that we can work with from a developer perspective to feed data into Data Lake Analytics, and then to determine which job should process that data, so there are Data Lake Tools for Visual Studio, and as we scroll down, it's also available for Azure PowerShell, and Azure CLI.


Add a Data Lake Data Source
  - You can feed data into Azure Data Lake Analytics programmatically, through command line tools and also through the GUI here in the portal.
  - Here in the Azure portal, I'm already looking at my Azure data lake analytics resource which I will click on to open up its properties blade.
  - Scroll down, I have an option here called Data sources where I'll see the data lake account that's already available for data lake analytics.
  - Click on that, I can see some details, the name and the type. This is Azure Data Lake Storage Gen1.
    - If I wish, I can also go down and start exploring the data by clicking Data explorer.
  - Now, this will be based on what we've added as data sources, as we can see. And I can start browsing through all of the files in the file system related to that storage.
So to add additional storage, I'm going to scroll back up in the properties blade and choose Data sources and then I'll click Add data source.
And in this case, I'm interested in Azure storage and what I'm going to do is specify the Select account option or I can choose an Azure storage account.
So I'm going to select an existing Azure storage account that has data that I would like to feed into Azure data lake analytics for further processing. So, I'm gonna go ahead and click Add.
And after a moment, we can see that our storage has been added, and, if I click on it, notice here it's not data lake storage, but rather, just simple Azure storage, as in a storage account.
And so now that I've done that, if I scroll down for instance and go to Data explorer, now I may have to refresh this.
So I'll click Refresh, and of course, I'll close what I was looking at previously because now I can see besides my data lake storage, I've also got my storage account here, my Azure storage account stor14567, it was called.
I can even start browsing through folders in that Azure storage account to expose content. In this case, I've got a jpeg image.
Now, notice here, if I select that, I can get a preview of what is in that specific file.
Normally, you'll have to download it to do that, as the built in filters often will not show you anything that makes any sense, it really depends on the file type, but notice we can also upload content even from this interface instead of go out to the storage account in Azure, including managing the hierarchy by creating folders and so on.

[Video description begins] He closes the File Preview page. The stor14567 page is displayed. [Video description ends]

And so it's important then to add the appropriate data sources to Azure data lake analytics so that you can begin to submit jobs that will process that data, and we'll see how to do that in another demo.

[Video description begins] In the navigation pane, under Settings, he clicks on Data sources. The datalake172- Data sources page opens. [Video description ends]

Work with Data Lake Datasets

[Video description begins] Topic title: Work with Data Lake Datasets. Your host for this session is Dan Lachance. [Video description ends]

Azure Data Lake Analytics is designed to be used as a large scale centralized data storage repository where data can come from many different sources. But it's also used for submitting jobs, so that we can process that data and gain insights from that data.

[Video description begins] A Microsoft Azure web page titled All resources opens. It has a menu bar with a search bar and the following options: Filter, Notifications, Settings, etc. A navigation pane is also present with the following options: Create a resource, Home, Dashboard, All Services, Favorites, etc. There are five buttons at the top: Add, Edit columns, Refresh, Export to CSV and Try preview. Below these buttons, there is an input box for name and drop-down menus for resource groups, types, location, tags, and grouping. The name input box contains the following text: data. A table is displayed with six columns: NAME, TYPE, RESOURCE GROUP, LOCATION, SUBSCRIPTION, and TAGS. The table has two rows with NAME: datalake172 and datalake172adls. [Video description ends]

So, here in the portal, I've gone to the All resources view, I've filtered by data, because I know that my data lake analytics configuration is called datalake172.

[Video description begins] He highlights data in the name input box. [Video description ends]

So I'm going to go ahead and click to open that up. And what I'm interested in doing is submitting a job.

[Video description begins] He clicks on datalake172. A page with the same name opens. It has a search bar followed by a navigation pane with the following options: Overview, Activity log, Access control (IAM), etc. At the top, the following buttons are present: New job, Sample scripts, Data explorer, etc. The main body has details about the resource. Some of the options here are: Pricing tier info, AU-hours used, Estimated cost, etc. [Video description ends]

Now I have a New job button right here at the top in the overview part of the Properties blade. I could also scroll down under the data lake analytics section, and here I would also see New job.

[Video description begins] In the navigation pane under the Data Lake Analytics section, he clicks on the New job option. A new page titled datalake172 - New job appears. At the top, the following buttons are present: Data Explore, Open file, and Save as. There is an input box for Job name. It has the following text: New job. There is a horizontal bar with a pointer for AUs, where the pointer lies at 1. The following details are also present here: Account: datalake172, Estimated cost: USD 0.03/minute, etc. There is a Submit button. A code editor area is also present here. [Video description ends]

So I can give a name to the job, and I'm going to go ahead and specify the code for it down below, this syntax is called U-SQL.

[Video description begins] 10 lines of code appear in the code editor area. Code line 1 reads: @a =. Code line 2 reads: SELECT * FROM. Code line 3 reads: (VALUES. Code line 4 reads: ("Customer1", 190.0),. Code line 5 reads: ("Customer2", 100.0). Code line 6 reads: ) AS. Code line 7 reads: D(customerID, amount );. Code line 8 reads: OUTPUT @a. Code line 9 reads: To "/customerdata.csv". Code line 10 reads: USING Outputters.Csv();. [Video description ends]

So it's kind of a combination of the C# programming language along with structured query language, or SQL to give it a bit more power. And the reason it exists is because structured query language under itself is really not designed to handle Big Data, whereas this is designed to work with that through, in this case Azure Data Lake Analytics. So, what we're doing here is creating a, I'm going to be creating a file here, I'm creating a tiny dataset. Now, of course, we can bring this dataset in from many other ways. But all I'm doing is creating a file here called customerdata.csv, and I'm going to have a CustomerID column, or field definition along with amount, and I can see I'm feeding it a couple of sample rows here, Customer1, with a numeric amount of 190, Customer2, with numeric amount of 100.

[Video description begins] In the code line 9, he highlights: customerdata.csv. [Video description ends]

[Video description begins] He points at code line 7. [Video description ends]

Now, your U-SQL jobs can be much more complex, and they can actually deal with processing of data.

[Video description begins] He highlights code lines 4 and 5. [Video description ends]

All I'm doing here is trying to illustrate a very basic simple example, so you get the sense of the construct. The overall skeletal framework that is used to work with Data Lake Analytics and start to process information. So once this has been done, I'm going to go ahead and click Submit. Now before I do that actually, before I submit I can also adjust the performance, the AUs because what I'm doing here is determining how many things can be processed parallel at once.

[Video description begins] He moves the pointer of the AUs horizontal bar to 13. [Video description ends]

And so depending on the nature of your U-SQL, we'll determine if you need to do this. And because this is very simple, I'm not gonna need to adjust that. So I'm going to go ahead and submit this.

[Video description begins] He moves the pointer back to 1. He then clicks the Submit button. [Video description ends]

So the job is submitted, it's going to take me to a new dashboard where we can see it's currently in the preparation phase, after which it'll be queued for processing, it'll be run, and then we'll be able to examine the result. In this case, the result should be that we've got that customer data file with the data in it.

[Video description begins] A page titled New job appears. It has four buttons: Refresh, Resubmit, Reuse script, and Cancel job. There is a section titled Status: Preparing. It has four steps: Preparing , Queued, Running, and Done, where Preparing is currently active. The following details are also present here: Progress: 0%, AUs: 1, Consumed AU-hours: 0, etc. The other side of the page has the following tabs: Job graph, Script, Data, AU analysis, and Diagnostics. Currently, the Job graph tab is open. It has a drop-down menu for Display and a button for Playback. [Video description ends]

And we can now see that the status of our job is such that it has succeeded.
And so if we go, let's say to the Data tab here, look at any Outputs. We can see indeed we've got customerdata.csv file, but let's back out of here.
And, why don't we run the Data explorer option here, just to go through our data, and sure enough notice there it is, customerdata.csv, it's in our data lake storage.
And, if I we're to actually open that up and preview, we can see our two customers along with the amounts that were specified in our U-SQL script.


IoT Overview
  - The Internet of Things, otherwise called IoT, is really just a general umbrella term that refers to a large variety of devices that communicate over the Internet. Now that relates to Microsoft Azure in the sense that we can register devices with this central location in the Azure Cloud, and we can receive data from these IoT devices and monitor them through the Azure IoT Hub.But we'll talk to that effect later on in more detail. There were plenty of examples of IoT devices.
  - Things like water pressure valves and gauges and their current settings, baby monitors, smart cars that allow their details about their internal systems and their location to be made available over the Internet in a secured manner, medical equipment that can be controlled through the Internet, as well as home automation features, things like environmental control and turning on lights, and so on. This is just but a subset of examples of IoT types of devices that have Internet connectivity.
The thing to be careful of with this is with consumer grade IoT devices. Often, security is just not a priority. In many cases, you'll find that firmware might not even be updatable when there are security holes that are revealed about a specific type of consumer grade IoT product, like a home automation device. As with all security hardening in IT, when it comes to IoT devices we should always take care to make sure that default settings, like credentials to access a web interface on the IoT device are changed.
AlsoIoT devices should be placed on an isolated and secured network. The reason for this is because if an IoT device is compromised, we want to make it as difficult as possible for the attacker to connect to other devices on the network where the IoT device resides. So by putting it on its own protected network, we're adding that extra layer of security.
Pictured on the screen, we have an example of the Shodan website, which is essentially an IoT search engine, where we can search for items, as I have done here, such as home automation, and it will index any discovered devices that might appear to be vulnerable out there on the Internet.
And so when we work with the Azure IoT services, we have a centralized way to securely receive this information from IoT devices. And from there, we might even feed that data into things like Azure machine learning, to determine if vulnerabilities might exist or if there's suspicious activity related to those IoT devices that needs to be addressed.


IoT Central
  - Azure IoT Central is an Azure managed service. This means the underlying complexities of setting up the infrastructure to support the IoT central service, whereby we can work with our IoT devices, those complexities are hidden from us so we can focus on actually doing what the service offers, which is to centrally manage IoT devices.So it is a separate Azure resource that we deploy, and we have a URL that would use the DNS suffix of .azureiotcentral.com for the IoT central website. So it provides us the ability to centrally manage IoT devices that have been registered through the IoT hub.
It also allows us to monitor them, and we can even build triggers that look at some of the data that we're monitoring and can take specific actions, such as the pressure in a valve in a remote planned exceeding a given threshold value that is considered safe and acceptable. Pictured on the screen, we see an example of the Azure IoT Central Management Portal.
Notice that the URL uses the DNS suffix as we've mentioned of .azureiotcentral.com. This one was created using a template and you can see here the page lists CONTOSO, but notice on the left in the navigator we can also explore IoT devices that are registered. As we drill deeper into this sample Azure IoT central management portal, we can start exploring devices.
In this example, we are exploring a refrigerator IoT enabled device, where we can see some telemetry items such as items related to gyroscopes and pressure, and so on. So depending on the nature of the IoT device will determine what is seen here. But, again, we can configure actions that would look at thresholds that might be exceeded, in this case, maybe a temperature for a refrigerator getting too low or too high. And that could trigger the sending of an email to administrators to do something about this.


IoT Hub
Azure IoT Hub is a separate type of Azure resource that you can deploy much like you might deploy an Azure Virtual Machine. Azure Io Central uses an IoT Hub, but the IoT Hub isn't directly manageable in this particular case. But you might wonder, what does the IoT Hub exactly do? The purpose of the IoT Hub, as the name implies, hub meaning some kind of a centralized repository where we have IoT devices that are connected.
And from there, we can receive messages from IoT devices. So details about the statistics related to what that IoT device does, such as monitoring temperature controls in a building. But we can also configure it so that we send commands to control those remote IoT devices, such as to adjust the temperature. And developers can choose a wide variety of programming languages to do that in. But before all of this can happen, IoT devices need to be connected to the IoT Hub.
And that's done through connection strings that will show up after you've built your IoT Hub resource. So there's a device registration connection string to initially get a device connected to IoT Hub. When you deploy your IoT Hub, one of the things you'll get to deal with is the IoT sizing which really deals with the number of messages for throughput that you want your IoT Hub to be able to handle.
Now, not only device registration is of interest here, but also device message transmission, either from the device to the IoT Hub or command sent from the IoT Hub to devices to control them. So what might we use Azure IoT Hub for? Well, because there's a wide variety of IoT devices out there, the uses are many as well.
We could use it for medical device tracking, not only to track the device itself and where it is, but also, of course, to track all of the detailed statistics provided by that IoT device, which could include things like vital signs of the patient to which that medical device is connected. IoT Hubs can also be used to register and track information related to industrial machinery controls, or remote building, heating ventilation, and air conditioning control.
IoT devices will make a connection to IoT Hub and transmit data using a number of different protocols, depending on the configuration, one of which is HTTPS over TCP port 443. However, we've also got AMQP. This is the Advanced Message Queuing Protocol. This is a standard for IoT device transmission of data that uses port 5672, and it's designed to work on a number of different platforms not, for example, just Windows.
MQTT is the Message Queuing Telemetry Transport. This is another type of protocol used by IoT devices that uses TCP port 1883. Now, which one should you use? Well, for example, AMQP is a mature standardized protocol that provides more potential functionality than MQTT does, but it does so at a cost of higher overhead.


Configure IoT Hub
The Azure IoT Hub is a centralized Azure resource that's deployed in the Azure cloud that allows us to connect a multitude of IoT devices for the purposes of managing those devices and monitoring any data that they might send into Azure IoT Hub.

[Video description begins] A Microsoft Azure webpage opens. It has a menu bar with a search bar and the following options: Filter, Notifications, Settings, etc. A navigation pane is also present with the following options: Create a resource, Home, Dashboard, All services, and Favorites. The main body of the page has a section titled Azure services. Some of the options here are: Virtual machines, Storage accounts, App Services, etc. [Video description ends]

To get started here in the portal, I'm going to click Create a resource over on the left, and I'm going to search for IoT.

[Video description begins] He clicks on Create a resource from the navigation pane. A screen titled New appears. It has a search bar. The presenter types iot in the search bar. A list of options appears. [Video description ends]

And I'm going to choose IoT Hub.

[Video description begins] He selects IoT Hub from the list of options. A screen titled IoT Hub appears. It has a drop-down menu for the field Select a Software plan. IoT Hub is the default selection. There is a Create button at the bottom of the page. [Video description ends]

From here, I'll click Create, and I'll start by tying this into an existing resource group I've created.

[Video description begins] He clicks the Create button. A screen titled IoT opens. There are three tabs on this screen. These are: Basics, Size and scale, and Review + create. The Basics tab is currently active. It has a section titled Project Details. There are drop-down menus for Subscription, Resource Group, and Region. An input box for IoT Hub Name is also present. The default value for Subscription is Pay-As-You-Go. The default value for Resource Group is cloud-shell-storage-eastus. The default value for Region is West US. At the bottom there are two buttons: Review + create and Next: Size and scale. He clicks the drop-down menu for Resource Group. A list of options appears. He selects Rg1 from the list. [Video description ends]

And like pretty much deploying any resource in Azure, I'll select an appropriate region or location. And I'm going to give a name to this.

[Video description begins] He clicks the drop-down menu for Region. A list of options appears. He selects Canada East from the list. [Video description ends]

This I'm going to call iothubcentralapp.

[Video description begins] In the input box for IoT Hub Name, he types iothubcentralapp. [Video description ends]

Okay, after I've done that, I'm then going to click Next.

[Video description begins] He clicks the Next: Size and scale button. The screen shifts to the tab titled Size and scale. It has a drop-down menu for Pricing and scale tier. The default value is S1: Standard tier. A scale for Number of S1 IoT Hub units is also present. The pointer is currently on 1. On the page, there is a section with the following details: Pricing and scale tier, Messages per day, and Cost per month. The Pricing and scale tier is S1, Messages per day is 400,000, and Cost per month is 25.00 USD. The following features are enabled: Device-to-cloud-messages, Message routing, Cloud-to-device-commands, and IoT Edge. At the bottom there are two buttons: Review + create, and Previous: Basics. [Video description ends]

Here I can specify the pricing and scale tier, so that we can determine how many messages can be handled by this IoT Hub. These are called IoT Hub units, so this is the scale capacity, and as we need more IoT capacity units, then we can increase them. Now we have to choose the appropriate tier before that even becomes an option.

And notice that what we're looking at here is a number of messages per day that can be processed. And what goes along with that, of course, is the cost increase or decrease, as you increase or decrease the maximum messages per day that you want to be able to process.

[Video description begins] He clicks the drop-down menu for Pricing and scale tier. A list of options appears. He selects S3: Standard tier from the list. The name of the next criterion changes from Number of S1 IoT Hub units to Number of S3 IoT Hub units. The value of Pricing and scale tier changes to S3 and Messages per day changes to 300,000,000. The Cost per month changes to 2500.00 USD. He then changes the value of Number of S3 IoT Hub units to 3. The value of Messages per day changes to 900,000,000 and Cost per month changes to 7500.00 USD. He changes the value of Number of S3 IoT Hub units to 1. The value of Messages per day changes back to 300,000,000 and Cost per month changes back to 2500.00 USD. [Video description ends]

These are messages from IoT devices. Next, I'll click Review and Create, and then I'll just click the Create button.

[Video description begins] He clicks the Review + create button. The screen shifts to the tab titled Review + create. It has information on the basics and size and scale for the IoT hub . At the bottom, there are two buttons: Create and Previous: Size and scale. He clicks the Create button. A page titled All resources appears. It has the following buttons on the top: Add, Edit columns, Refresh, etc. Below the buttons, there is an input box for Filter by name and drop-down menus for resource groups, types, location, tags, and grouping. Below these, there is a table with the following columns: Name, Type, Resource Group, Location, Subscription, and Tags. A few rows of data are present in this table. [Video description ends]

Now, I'm going to go to the All resources view here in the portal, and I'm going to filter it by IoT, since I know that's the prefix used to name my IoT Hub.

[Video description begins] In the Filter by name input box, he types iot. A resource named iothubcentralappappears in the table. [Video description ends]

And now we can see that it's listed here in the view. I'm going to click to open up its Properties blade.

[Video description begins] He clicks on iothubcentralapp in the table. A page titled iothubcentralappappears. It has a navigation pane. The main body has the following buttons: Move, Delete, and Refresh. Below the buttons, a few details are listed. These include: Resource group, Status, Location, Subscription, Hostname, etc. [Video description ends]

The first thing that we want to bear in mind is the hostname that's been assigned to our IoT Hub because we're talking about connectivity from IoT devices over the Internet to the IoT Hub defined in the cloud, which is what we're looking at here.

[Video description begins] The hostname is iothubcentralapp.azure-devices.net. [Video description ends]

Also, if we take a look further down, we can also see we have an IoT devices view.

[Video description begins] He clicks on IoT devices present in the navigation pane. A page for IoT devices appears. At the top, the following buttons are present: Add, Refresh, and Delete. Below the buttons, there is a table with the following columns: Device ID, Status, Last Activity, Last Status Update, etc. The table is currently empty. [Video description ends]

If I click on that, we don't have any devices of course yet, but we can click to add IoT devices by specifying the Device ID.

[Video description begins] He clicks the Add button. A page titled Create a device opens. It has an input box for Device ID, Primary key, and Secondary key. For Authentication type, there are three options: Symmetric key, X.509 Self-Signed, and X.509 CA Signed. Symmetric key is selected by default. A check box for Auto generate keys is also present. This box is checked. For Connect this device to an IoT hub, there are two buttons: Enable and Disable. Enable is selected by default. [Video description ends]

And whether we have a certificate or a symmetric key that's used to authenticate the device to the IoT Hub.

[Video description begins] He closes the Create a device page. The IoT devices page is open. [Video description ends]

Then we've got IoT Edge listed over here on the left-hand side, where we can add an IoT Edge device.

[Video description begins] From the navigation pane, he clicks on IoT Edge. An IoT Edge page opens. It has the following buttons on top: Add an IoT Edge device, Add an IoT Edge deployment, and Refresh. This page has two tabs: IoT Edge devices and IoT Edge deployments. The IoT Edge devices tab is currently open. It has a table with the following columns: Device ID, Runtime Response, Deployment Count, etc. [Video description ends]

[Video description begins] He clicks the Add an IoT Edge device button. A page titled Create a device opens. At the top, an information box is present, which has the following text: Find Certified for Azure IoT devices in the Device Catalog. This page has input boxes for Device ID, Primary key, and Secondary key. The Authentication type is Symmetric key. A check box for Auto generate keys is also present. This box is checked. For Connect this device to an IoT hub, there are two buttons: Enable and Disable. Enable is selected by default. [Video description ends]

Now from here we can look at the supported Azure IoT devices in the Device Catalog.

[Video description begins] He clicks the information box. A new tab opens in the browser. The url is https://catalog.azureiotsolutions.com. A page titled Find your IoT device appears. It has a search bar and a button named See all devices. A section titled Azure IoT Edge Certified is also present here. Some of the devices listed here are: Cloudian AI Box, ARTiGO A1250, OpenBlocks IoT VX2, etc. [Video description ends]

And, for example, if I'm interested in looking at power, some kind of IoT device that tracks power. I might start selecting these devices and reading about them in their support for Azure.

[Video description begins] In the search bar, he types power. A list of devices appears on the screen. He clicks on the device named PMC-5231. A page with the information of this device opens. It has three tabs: Device Specifications, Kit Specifications, and Get Started. The Kit Specifications tab is currently open. The kit is called ICP DAS- Power management IoT Kit. Below the name of the kit, there is a Request Demo button. [Video description ends]

So the idea is that we need to be able to determine which IoT devices in this particular case would support IoT Edge which allows us to write custom code modules that will actually run directly on that device.
And then we can add an IoT Edge deployment to push out the IoT Edge agent and custom modules, code modules that we want to do.
Now these code modules, of course, are docker compatible containers that we want to push out. We can specify the container registry settings to point to those specific items.
So we have a number of things that we can do then through the specific IoT Hub.
It serves as a central point to manage and monitor IoT devices.


IoT Edge
Azure IoT Edge is an IoT-based solution for the Azure cloud that allows us to have custom code running on IoT devices. So this custom IoT software can run on the device and can even perform processing data functions on the device before even sending data back to the cloud, and specifically, back to an Azure IoT Hub. So the way that this works, generally speaking, is developers can build these custom modules, which really run as docker containers on Azure IoT Edge devices.

And those code modules or containers are then deployed to IoT devices. This also means that if there's a network outage because these IoT devices ideally would be on-premises elsewhere and not in the Azure cloud, if there's a network outage, they can still work with their code logic and process data, and when the network link is re-established, send that to the cloud specifically to the Azure IoT Hub for further processing and storage.

Azure IoT Edge has a number of components that work together, such as the Azure IoT Hub, which is an Azure resource that is used to centrally register IoT devices and manage and monitor them in the Azure cloud. Of course, the Azure IoT devices themselves are components that are used. These could be devices built by any manufacturer out there such as small devices that are used with sensors to determine temperature or power readings or pressure and pump readings or anything like that.

And that IoT device then could be registered with the IoT Hub and it can send data to the IoT Hub. But remember, with Azure IoT Edge, a lot of that data processing and manipulation can happen directly on customized code modules we place or push out to IoT devices before being sent into the Azure cloud. And so the next component is IoT Edge runtime. The Azure IoT Edge runtime needs to be supported on the IoT device.

And essentially, this is what allows us to push out. It's an agent that allows us to push out our code modules or docker compatible containers that have our custom code onto IoT devices. So when you configure an Azure IoT Hub, you can choose to add an IoT Edge device. And when you do, you'll see that there's a web page here where you can search for specific IoT device types that are supported to work with Azure IoT Hub as an IoT Edge device running that agent.

[Video description begins] A screenshot of Microsoft Azure IoT Device Catalog is displayed on the screen. It is titled: Find your IoT device. Below the title, there is a search box. The central pane shows the options for Azure IoT Edge Certified devices. Two devices have been listed here. [Video description ends]

So the process looks like this: We first create an IoT Hub.

[Video description begins] Screen title: IoT Edge Process. [Video description ends]

This is an Azure resource and we might even do it using the portal, let's say, after which we can then look at the connection strings in the IoT Hub to determine how to register our IoT device or devices with that IoT Hub. Next, we would add, as we saw on the previous screen an IoT Edge runtime device.

Essentially, we're pushing the agent out to that device, so it has to support this connectivity to Azure IoT Hub after it's registered. And then as developers build these custom modules or docker compatible containers, we can then create deployments. Really, it's called creating an IoT Edge deployment, where we specify the modules that we want to push out to specific IoT devices connected to IoT Edge that are running IoT Edge runtime.


IoT Solution Accelerators
Microsoft Azure IoT solution accelerators are essentially pre-created IoT cloud solutions, where code is already written. However, you can customize it as you see fit. Also, it's got built-in support for IoT device monitoring. And, it also means that required cloud IoT services like IoT Hub get created automatically from this essentially prefab IoT cloud-based solution. So we could use accelerators so that we have a complete IoT cloud solution out of the box, but rarely is that the case.
Often, we will use one of these prefabricated IoT cloud solutions in Azure as a starting point, where we then go back and tweak it and make changes certainly to things like code, especially if we're going to be using IoT edge devices, where we run custom code modules directly on those IoT devices on another network. Pictured on the screen, we can see the Azure IoT solution accelerators website.
Now, by going to this solution accelerators website, we can browse the variety of prefabricated solutions that could serve as either a complete solution, out of the box, or as we mentioned, as a starting point.

[Video description begins] Screen title: Deploying Azure IoT Solutions Accelerators. [Video description ends]

Once you've located a solutions accelerator that you're interested in from the website, you can select it. And you do that by clicking the Try Now button, at which point you're then going to be asked to specify an Azure subscription and region for the deployment. Next thing is that after it's deployed, which could take a few minutes, it might include some IoT device simulators, so that you can immediately be up and running and start working with the tool.

It might even use backend Azure Cosmos DB storage, but remember that these Azure IoT solutions accelerators are all a little bit different. In the end, one commonality is that they will often have a monitoring dashboard, if not more than one that you will use to navigate through the IoT solutions accelerator.


Azure Cognitive Services
Artificial intelligence, otherwise called AI, is essentially the imitation of human behavior by technology. In Azure, that could be done using Azure Cognitive Services, which provides a series of developer artificial intelligence tools and also an endpoint URL for making API calls to use artificial intelligence. AI usage is many-factored, including for speech purposes. This would allow developers to add speech-enabled features to their applications, such as voice to text.

There are APIs related to vision metadata tagging for processing of images, language analysis APIs, and intelligence search APIs. So, you get to learn about each of these API calls when you deploy cognitive services in Azure as a resource. The documentation is built in to the Properties blade of cognitive services. And bear in mind that in order for developers to make API calls to the API of their choosing, depending on the need, will require access to a key for the code to authenticate.


Deploy Azure Cognitive Services
In this demonstration, I will deploy Azure Cognitive Services in the portal. This is really more of a developer thing; however, as IT administrators for Azure, we can deploy Azure Cognitive Services, which really serves as an entry point for developers to hook into APIs of their choosing.
To get started here in the portal in the upper left, I'm gonna click Create a resource.

[Video description begins] He clicks the Create a resource option from the navigation pane. A page titled New opens. At the top, a search bar is present. [Video description ends]

And I'll just search for C-O-G, for cog, and I can see Cognitive Services listed, so I'll go ahead and search that.

[Video description begins] In the search bar, he types cog. The following list of options appears: Azure Search, Cognitive Services, Spatial Anchors, etc. He clicks Cognitive Services. A new page titled Cognitive Services opens. It has a drop-down menu for Select a software plan. The default value here is Cognitive Services. Below it, a Create button is present. [Video description ends]

Then, I'll choose Create.

[Video description begins] He clicks the Create button. A page titled Create appears. It has an input box for Name. There are drop-down menus for Subscription, Location, Pricing tier, and Resource group. A check box with the following text is present: I confirm I have read and understood the notice below. At the bottom of the page, a Create button is present. [Video description ends]

I need a name for this, so I'm gonna call this cogservice1.

[Video description begins] In the input box, he types cogservice1. [Video description ends]

And I'm gonna deploy this into a location that makes sense, that's nearest to me geographically where I'll be accessing it.

[Video description begins] The default value for Subscription is Pay-As-You-Go. He clicks the drop-down menu for Location. A list of options appears. These are: Central US, East Asia, Canada Central, etc. He selects Canada Central. [Video description ends]

And I'm gonna choose the only available pricing tier, and I'll deploy this into an existing storage group.

[Video description begins] He clicks the drop-down menu for Pricing tier. S0 appears in the options. He selects it. [Video description ends]

Notice I have to check off this confirmation about Microsoft using data that we send to Bing Search Services, if we talk to Bing-related APIs. So I'm going to go ahead and do that, and just go ahead and create this resource.

[Video description begins] He clicks the drop-down menu for Resource group. The following options appear: Rg1, testwebapp1, testwebapp2, etc. He selects Rg1. He checks the box for I confirm I have read and understood the notice below. [Video description ends]

[Video description begins] He clicks the Create button. The Microsoft Azure Home page appears on the screen. [Video description ends]

Once it's completed, it'll show up like any other resource does. So if I go to All resources and filter with a prefix of cog, there's cogservice1.

[Video description begins] He clicks the All resources option from the navigation pane. A new page titled All resources is displayed. The following buttons are shown below the title: Add, Edit Columns, Refresh, etc. Below the buttons, there is an input box for name. There are drop-down menus for resource groups, types, location, etc. A table is present below these input boxes. It has the following columns: Name, Type, Resource Group, etc. [Video description ends]

And if I click on and open it up, the first thing that's going to be important is the Keys in the Properties blade.
So you've got two Keys here, and you can regenerate one or the other. So you have two so that you can keep one in use for a while as you regenerate the other and over time, vice versa.
So there is more security achieved by rotating keys periodically instead of sticking with the exact same keys. But when developers are making API calls, they're going to need access to one of these keys. Now, if I go to Quick start in the Properties blade.

I can also see reference documentation links for making API calls to the API of the developers choosing, whether it's the face API reference for facial recognition or whether it's translator text API references.
So when I click on any one of these, let's say we choose the face API reference, that's gonna open up a new web browser where we can see the regions in which that specific API is available through Cognitive Services.
And then we can see the API definition can then be downloaded either as a Swagger or a WADL file. The developers can use to learn about how to hook in to the API.
And, as we go further down it has more of an explanation about how this works and how to formulate the request URL.


Azure Machine Learning Studio
  - You can use the Azure portal to create an Azure Machine Learning Studio workspace. 
    - The purpose of Machine Learning Studio, it being a web-based tool, is essentially data analysis, but it runs deeper than that. 
    - Always bear in mind that the source data that we use, that we're going to analyze needs to be trustworthy, and it needs to be accurate.
  - Although we do have some built-in functions that allow us to manipulate data, in other words, to transform the data
    - It's also important to note that there are sample data sets that we can use to learn how to use the Machine Learning Studio interface. 
      - Of course, we can also import our own data sets.
  - The purpose of machine learning in this context is to take vast amounts of data, and based on the factors that we define as being relevant and the training model that we apply to that data, we can then predict future trends or some kind of outcome as it might relate to financial credit risks. Or, as another example, the most likely income to be expected based on marital status, education, city, and many other potential factors, whatever happens to be in your data set that you specify as being relevant.

It might even relate to the healthcare side of things, such as heart disease prediction, given a number of factors. The process of working with a data experiment in Azure Machine Learning Studio begins with working with data. Whether it's sample data that's provided, or whether you import your own custom data. Bear in mind that there are also plenty of pre-defined templates.

There's a gallery that you can select from, that you can open up directly into Machine Learning Studio, so that you can begin working with these items and start to learn how to use the tool. The next thing to do once you've acquired data, or you decide you're going to use sample data, is to start applying functions such as maybe to transform the data into a specific manner, or maybe to exclude data that is not relevant, perhaps values that fall below a certain range.

You can also then apply learning algorithms based on what it is you're looking for in terms of an outcome. Finally, the last thing you would do is to run the data experiment and then visualize the outputs. Pictured on the screen, we can see the result of having created a Machine Learning Studio workspace object in Azure and then launching the Learning Studio.

[Video description begins] A screenshot of the Microsoft Azure Machine Learning Studio webpage is displayed on the screen. There is a side pane and a navigation pane. The navigation pane has a search bar for searching experiment items. It also has various other options, such as Saved Datasets, Data Format Conversions, Data Transformation, etc. The Data Transformation field is expanded to show the following options: Filter, Learning with Counts, Manipulation, Sample and Split, and Scale and Reduce. The Scale and Reduce field is expanded to show the following options: Clip Values, Group Data into Bins, and Normalize Data. The items in the experiment are shown in the center pane. A right pane is also present. It has two tabs: Properties and Project. Currently, the Properties tab is open. Under the option Clip Values, drop-down menus are present for the following fields: Set of thresholds, Upper threshold, Upper substitute value, etc. [Video description ends]

What you end up getting in the middle is a blank canvas. And then you can start dragging items from the left, such as data sets and you can add them into the canvas, but you can also then expand things like functions to manipulate your data. And, in this screenshot, the Data Transformation category has been opened up and the Clip Values item has been dragged over.

Now, when you drag something over and select it on the far right in the panel, you'll see details related to what's selected. In this case, for clipping peak values of a specific piece of data. Now, once you've done this, in the left hand-side of the screen in the navigator, you'll also be able to select different types of training models. And at the very bottom center, which you can't see in this screenshot, you'll have a Run Experiment button that you can use to actually run your experiment and then end up with some kind of predictive analysis as an outcome.


Azure Firewall
The Azure Firewall is a managed service that, as the name implies, is used to control inbound and outbound traffic to and from Microsoft Azure. So it's set to block everything by default. But besides controlling in and outbound traffic to and from Azure, it gets associated with one or more subnets within an Azure VNet.

And we can even use other VNets besides the one where we deployed the Azure Firewall that connect in a hub and spoke fashion. Now when you deploy the Azure Firewall, you need to have a subnet called AzureFirewallSubnet within the VNet that you're deploying Azure Firewall into. Now you don't have to worry about having that done ahead of time. You can have it done ahead of time, or you can do that as you deploy the Azure Firewall.

The Azure Firewall has a static public IP address. This is unlike a network security group, or NSG, which can also be used in Azure to control in and outbound network traffic. So because the Azure Firewall has a static public IP address, then you could use that in conjunction with other firewalls elsewhere as a source, perhaps as a trusted location to receive traffic from.

Also we use rules of different types that we'll talk about to control the traffic flow. And again, something that makes the Azure Firewall different than a standard Azure network security group is that in an outbound direction it supports rules related to fully qualified domain names. So if I want to specifically allow a certain subset of URLs within a DNS domain, I can do that using the Azure Firewall.

The Azure Firewall also includes some threat intelligence capabilities that can not only alert on potential threats but also start denying traffic based on what's currently happening. Azure Firewall supports three different types of rules, one of which is called a NAT Rule to allow inbound access to resources deployed in Azure, either traffic stemming from your on-premises network or from somewhere else on the Internet.

So this is supported through TCP and UDP transport protocols. And it's referred to as Destination Network Address Translation, or DNAT. Where we've got a public IP address and port that is configured to map to an internal or private IP address import to allow traffic initiated from the outside in to Microsoft Azure. Each of the rules that we create within a collection has a priority value that determines the order of rule execution. And once there's a match with a rule then processing stops after that.

So, as I've mentioned, rules get placed into what's called a collection, so you can have more than one rule grouped together, for example, for Destination Network Address Translation, or DNAT. So pictured here, we can see a DNAT rule collection with the name of incoming, a priority of 100. And we've got one rule configured down below. Notice that the destination is the public IP address of the Azure Firewall.

And then further on the right, we can see the translated address and port which are what are used internally. Remember we've got a public IP address and port mapping to private IP address and port.

[Video description begins] A window titled Add NAT rule collection appears on the screen with certain data and Rules. The data displays: Name as Incoming, Priority as 100, Action as Destination Network Address Translation, which is abbreviated to DNAT. The Rules display: Name as Incoming HTTP, PROTOCOL as TCP , SOURCE ADDRESS as *, DESTINATION ADDRESS as 40.80.251.142, which is public IP of Azure Firewall, DESTINATION PORTS as 80, TRANSLATED ADDRESS as 10.1.1.1, and TRANSLATED PORT as 80. [Video description ends]

Next, we've got Azure Firewall network rules, which support TCP, UDP, ICMP, as well as any type of protocol, where we can specify the source and destination IP address, the destination port. And this is what you would normally use to allow communication or to control traffic flow between subnets. And it allows us to either configure an action of allowing the traffic or denying it.

Azure Firewall application rules are for outbound connectivity, which means from within Azure going out. And so we can specify Fully Qualified Domian Names, or FQDNs, including using wildcards. So we could specify star or asterisk dot somednsdomain.com or we can simply refer to everything with an asterisk. And we can specify the protocol and port, such as HTTPS:443, and we can either allow or deny.

Now bear in mind that the default configuration with Azure Firewall is things are denied. So if you want to allow specific access, if you want to make a white list of FQDNs, then you can certainly do that very easily. The last thing to mention is that you'll also need to build a route table Azure object that has the default route for a subnet going through the Azure firewall's private IP address for an outbound direction in the case of configuring application rules.


Configure Azure Firewall
In this demonstration, I'll be using the Azure portal to configure the Azure Firewall. The first thing we'll do is take a look at our existing configuration for virtual machines that will be affected by the Azure Firewall.

[Video description begins] The Homepage of Azure portal opens. The address bar shows: https://portal.azure.com/#home. The left navigation pane of the Homepage displays various links to resources and services, and the right pane of the Homepage displays icons to access various Azure services. [Video description ends]

So here in the portal, I'm going to click on the Virtual Machines view over on the left. Here I've got a virtual machine running, it's called eastwindowsvm1. And if we take a look at the networking for this, it's in a network called EastVnet1 and more specifically in a subnet within that vnet called EastSubnet1.

[Video description begins] He clicks Virtual machines on the left navigation pane of the Azure portal. A window titled Virtual machines default directory appears on the right pane. Virtual networks displays three networks in three rows. The details of the second row display: NAME as eastwindowsvm1, TYPE as Virtual Machine, STATUS as Running, RESOURCE GROUP as Rg1, LOCATION as Canada East, SUBSCRIPTION as Pay-As-You-Go. He clicks the second row. A window titled eastwindowsvm1 Virtual machines opens on the right pane. He clicks Networking under the Settings. The Network Interface and port rules display. Network interface displays as eastwindowsvm1758 and Virtual network/subnet displays as EastVnet1/EastSubnet1. He closes the window on the right pane. [Video description ends]

Now having said that, if I go to my jumpbox virtual machine, which is running, and click on it and look at the networking. It's in the same virtual network, EastVnet1, but in a different subnet, in this case EastSubnet2. Now a jumpbox is normally used as a point for remote administration from the outside. So I can make a connection from the Internet into the jumpbox, and from the jumpbox to other virtual machines on private networks.

[Video description begins] The window titled Virtual machines default directory appears on the right pane. Virtual networks displays three networks in three rows. The details of the third row display: NAME as JumpBox, TYPE as Virtual Machine, STATUS as Running, RESOURCE GROUP as Rg1, LOCATION as Canada East, SUBSCRIPTION as Pay-As-You-Go. He clicks the third row. A window titled JumpBox - Networking Virtual machines opens on the right pane. He clicks Networking under the Settings. The Network Interface details display: Network Interface as jumpbox568 and Virtual network/subnet as EastVnet1/EastSubnet2. [Video description ends]

So what I'm going to do then is take a look at my virtual network definition, because I've prepared something ahead of time. If I go into virtual networks on the left. And then if I open up one of my virtual networks here on the right, called EastVnet1. I've already created a subnet called AzureFirewallSubnet.

All one word, no spaces, and I've allocated it some address range that falls under the vnet range. Now you can either have this done ahead of time or you are prompted to create a new virtual network and a subnet with this name when you build the Azure Firewall, as you'll see pretty much now.

[Video description begins] He closes the window JumpBox - Networking. He clicks Virtual networks on the left navigation pane of the Azure portal. A window titled Virtual networks Default Directory appears on the right pane. Virtual networks displays four networks in four rows. The details of the first row are: NAME as EastVnet1, RESOURCE GROUP as Rg1, LOCATION as Canada East, SUBSCRIPTION as Pay-As-You-Go. He clicks the first row. A window titled EastVnet1 Virtual network opens on the right pane. He clicks Subnets under the Settings. Three subnets display in three rows on the right pane. He highlights the second row with the following details: NAME as AzureFirewallSubnet, ADDRESS RANGE as 10.1.5.0/24, and AVAILABLE ADDRESS as 251. [Video description ends]

So I'm going to click Create a resource in the upper left to begin building the firewall. I'm going to search for firewall. I'll select it from the list and I'll click Create. So I want to put this in an existing resource group I've already got created. And I'm going to call this Fw1 for firewall1, and in this case I'll put in the Canada East region and here's where you have the option to create a new virtual network or use an existing one.

Notice it wants to call it, the subnet at least within the Vnet, AzureFirewallSubnet. We've already done that. So if I were to choose Use existing, if I use existing Vnet, let's say I chose Vnet2 here. Notice it says you need to have a subnet called AzureFirewallSubnet. Well that Vnet doesn't but EastVnet1 does, and so I don't get that message any longer. Now remember that an Azure Firewall has a public IP address so it needs to create that resource. I'm going to call this Fw1PubIP and I'll click Review and create, it'll check.

[Video description begins] He clicks Create a resource on the left navigation pane of the Azure portal. A window titled New appears on the right pane. He types firewall in the search bar and clicks Firewall, which appears as the search result. A window titled Firewall Microsoft appears on the right pane. A section appears at the bottom of the window, which is titled Select a software plan, Firewall, Azure firewall is a managed cloud-based network security service that protects your Azure Virtual Network resources. He clicks the Create tab, below the section. A window titled Create a firewall appears on the right pane. It displays four tabs, Basic, Tags, review + create and requires certain details to be populated under each tab. Under the Basics tab, he enters the following details: Subscription as Pay-As-You-Go, Resource group as Rg1, Name as Fw1, Region as Canada East, Choose a virtual network as Use existing, Virtual network as EastVnet1 (Rg1), Public IP address as Fw1PubIP. He clicks Review + create. [Video description ends]

And once the validation has passed, I will click Create. So I'm in the midst of creating the firewall, and then we can see that the deployment is underway.

[Video description begins] A window appears on the right pane. It displays Create a firewall is in progress and then updates as Validation passed. The window also shows the summary of the data populated under Basics tab. He clicks the Create tab at the bottom of the window. A pop-up window appears on the top-right corner and displays: Submitting deployment. The pop-up updates that deployment is in progress. The window also shows: Your deployment is underway. [Video description ends]

While that's happening, I'm going to click Create a resource because what we need to create is a route table. Now we have to do this so we can direct any subnets that have resources that we want to go through our Azure Firewall, we need to define a route so that they are forced to so before traffic gets to the Internet.

Now that's going to be our example, the Azure Firewall also controls inbound traffic from the Internet. So I'm going to choose Route table and I'm going to click Create. And I'm going to call Fw1Rt1, firewall 1, router table 1. And I'll place this in an existing resource group. Same region or location, Canada East, and Create.

[Video description begins] He clicks Create a resource on the left navigation pane of the Azure portal. A window titled New appears on the right pane. He types route in the search bar and clicks Route table, which appears as the search result. A window titled Route table appears and he clicks the Create tab at the bottom of the window. A window titled Create route table appears on the right and requires certain details to be populated. He enters the following details: Name as Fw1Rt1, Subscription as Pay-As-You-Go, Resource group as Rg1, Location as Canada East, Virtual network gateway route propagation as Enabled. He clicks the Create tab at the bottom of the window. [Video description ends]

So we're going to have to do two things here. Number one, I'm going to have to create a route to the private IP address of my Azure Firewall. And I'm also going to have to associate the routing table with the subnet in question. Okay, looks like that resource deployment has succeeded. So let's just go to all resources here, I'll type rt and there it is, Firewall 1 Rt1, my routing table.

[Video description begins] A pop-up window appears on the top-right corner of the Homepage of the Azure portal. It displays that the deployment was successful. He closes the pop-up window. He clicks All resources on the left navigation pane of the Azure portal. A window titled All resources Default Directory appears on the right pane. He types rt in the search bar and a row displays as a search result. The details on the row display: NAME as Fw1Rt1, TYPE as Route table, RESOURCE GROUP as Rg1, LOCATION as Canada East, and SUBSCRIPTION as Pay-As-You-Go. He clicks the row and a window titled Fw1Rt1 Route table displays on the right pane. [Video description ends]

First thing that I'll do here is go to subnets and click Associate. I'm going to choose EastVnet1 and I'm interested in EastSubnet1. That's got virtual machines on it and my goal is to limit their access to specific Internet locations based on the FQDN. And those virtual machines are in EastSubnet1. So I want them affected by this routing table. So therefore I'm going to go ahead and click OK.

[Video description begins] He clicks Subnet under the Settings of Fw1Rt1 Route table window. He clicks the Associate Tab on the top of the window. The Associate subnet window displays two options to select from. The first is Virtual network and the second is Subnet. He clicks the first option. A list of four resources displays on the right. He clicks the first resource EastVnet1 canadaeast. A list of three subnets displays on the far right. He clicks the second subnet EastSubnet1 Rg1. He clicks OK on the bottom of the window. A pop-up window displays on the top-right corner of the right pane. It shows that route table is being saved for the subnet. [Video description ends]

Then, I need to create a route. Now, to do that, I need a private IP at the firewall. Let's see if the firewall is ready yet. So if I go to all resources and filter by fw, there is Fw1, but we don't have the private IP address yet. So let's give it a moment until it's completely initialized, then we'll copy the private IP because that needs to be in the routing table entry, as you will see in a moment. And after a minute, we have now have a private IP address for this firewall. So we're going to go ahead and copy that.

[Video description begins] He clicks Routes under the Settings of Fw1Rt1 - Routes window. He clicks All resources on the left navigation pane of the Azure portal. A window titled All resources Default Directory appears on the right pane. He types fw in the search bar and a list of three resources display in three rows. He clicks the first row with details: NAME as Fw1, TYPE as Firewall, RESOURCE GROUP as Rg1, LOCATION as Canada East, and SUBSCRIPTION as Pay-As-You-Go. A window titled Fw1 Firewall displays. The Private IP address 10.1.5.4 updates on the window. He clicks and copies the IP address. [Video description ends]

Now just for fun, let's go back to virtual networks for a moment and let's open up EastVnet1, and let's click Connected devices.

[Video description begins] He clicks Virtual networks on the left navigation pane of the Azure portal. A window titled Virtual Networks Default Directory appears on the right pane. A list of four virtual networks appear in four rows. He clicks the first row, which displays virtual network as EastVnet1. He clicks Connected devices under the Settings. [Video description ends]

So we can see that our firewall device, firewall 1 is connected to a subnet called AzureFirewallSubnet. We've got our jumpbox connected to EastSubnet2, we are going to reach into that jumpbox. And then from it we will connect to the private IP address for our Windows virtual machine running in EastSubnet2. So let's get back to our routing table and get this all figured out and working.

[Video description begins] A window titled EastVnet 1 - Connected devices opens with four devices displayed in four rows. He highlights the details of the first row: DEVICE as jumpbox568, TYPE as Network interface, IPADDRESS as 10.1.3.4, and SUBNET as EastSubnet2. He highlights the details of the second row: DEVICE as Fw1, TYPE as Firewall, IP ADDRESS as 10.1.5.4, and SUBNET as AzureFirewallSubnet. He highlights the details of the third row: DEVICE as eastwindowsvm1758, TYPE as Network interface, IP ADDRESS as 10.1.1.4, and SUBNET as EastSubnet1. He highlights the details of the first row: DEVICE as eastlinuxvm1764, TYPE as Network interface, IP ADDRESS as 10.1.1.5, and SUBNET as EastSubnet1. He closes the right pane. [Video description ends]

So I need to go to All resources. Filter it for rt, there's our routing table. We've already associated with EastSubnet1. And now I'm going to go to Routes and Add a route. I'm going to call this firewall1 default and the address prefix here for the default route is 0.0.0.0/0. The actual firewall is considered a virtual appliance in here, we're going to give it the private IP address. Then I'll click OK.

[Video description begins] He clicks All resources on the left navigation pane of the Azure portal. A window titled All resources Default Directory appears on the right pane. He types rt in the search bar and a resource Fw1Rt1 displays in a row. He clicks the row. A window titled Fw1Rt1 Route table displays. He clicks Subnets under the Settings. The subnet EastSubnet1 displays on the right pane. He clicks Routes under the Settings. A window titled Add route opens on the right pane. He clicks Add tab on the top of the window. A window titled Add route displays on the right pane and requires data to be populated. He enters the following details: Route name as Fw1Default, Address prefix as 0.0.0.0/0, Next hop type as Virtual appliance, and Next hop address as 10.1.5.4. He clicks OK at the bottom of the window. [Video description ends]

So now I've used remote desktop to RDP into my jumpbox and through it RDP to the private IP address of a Windows computer that is on a subnet affected by our default route to our firewall. And so what you are going to notice then on those machines, like if you go to the command prompt and if you try to ping something on the Internet, let's say www.google.com, you are not going to get a response back.

But you would from your jumpbox, of course, because it's reachable from the Internet. And so if I were to open a web browser here on this computer, and let's say I just try to go to cnn.com. Notice, I get an action of deny being shown here. No rule matched. And the default rule blocks connectivity. Okay, well, let's say I want to allow access to cnn.com. So I'm going to make an application rule that will allow that.

[Video description begins] He types the following command in the command prompt: ping www.google.com. No data displays as a result. He closes the command prompt. He opens the web browser Internet Explorer and types the following in the address bar: http://www.cnn.com/. He presses enter and the web page displays: Action Deny. No rules matched. Proceeding with default action. [Video description ends]

Back here in the Azure portal, in the All resources view, I'm going to filter for things that have fw in the name. And let see, firewall 1, Rules, Application rule collection, Add application rule collection. I'm going to call this AllowedEntertainment. If I can spell that correctly. I'm going to give it a rule priority. In this case, it's the only one I have, so 100. I want to allow, and the name here will be AllowHBO or CNN or whatever it is, in this case CNN. And let's say the source address is any, protocols and ports http,https, and the target FQDN will be star dot cnn.com and I'll click Add.

[Video description begins] He opens the Azure portal and clicks All resources on the left navigation pane. He types fw in the search bar on the right pane of the All resources window. Three resources display in three rows. He clicks Fw1 in the first row. A window titled Fw1 Firewall opens on the right pane. He clicks Rules under the Settings. Three tabs display on the right pane. He clicks the third tab Application rule collection. He clicks Add application rule collection, which displays below the three tabs. Add application rule collection window displays on the right pane, which requires some details. He enters the following details: Name as AllowedEntertainment, Priority as 100, Action as, Allow. He enters the following Target FQDNs details: NAME as AllowCNN, SOURCE ADDRESS as *, PROTOCOL PORT as http, https, Target FQDNS as *.cnn.com. He clicks Add tab at the bottom of the window. [Video description ends]

So once it's updated that firewall rule, I'm going to go back to that client station and retry the connection to cnn.com.

[Video description begins] The window titled Fw1 - Rules opens on the right pane of the Azure portal. A pop-up window displays on the top-right corner of the window. It displays that the firewall is being updated. [Video description ends]

And after a moment we can see we're able to pop up the web page because now that is listed as an allowed FQDN through our Azure Firewall. Although if I try to go to other sites here, like I've tried to go to google.com, again, I get an action of deny and I don't get access to the webpage.

[Video description begins] He opens the CNN website http://www.cnn.com/ on Internet Explorer. The web page opens successfully. He opens the Google website http://www.google.com/ The web page displays: Action Deny. No rules matched. Proceeding with default action. [Video description ends]

Azure DDoS Mitigation

[Video description begins] Topic Title: Azure DDoS Mitigation. Your host for the session is Dan Lachance. Screen Title: Azure DDoS Mitigation Distributed Denial of Service is abbreviated to: DDoS. [Video description ends]

A distributed denial of service attack is executed by an attacker, pictured here at the top of the diagram, who has control of a multitude of infected machines. Now, these machines would have been infected perhaps by tricking users into following links to websites that contain malicious code. Or email messages that have infected file attachments, and the like. Now the idea is that the attacker has control of all of these machines. These machines are called zombies or bots.

And they are organized into what is referred to as a botnet, a collection of computers under the control of an attacker. And often, if you actually search around the dark web, you will come across sites where these are for sale. You can rent the use of a botnet to execute a DDoS attack against, for example, a website or even a competitor to make their web application unavailable. Or even if you're a malicious person, to demand ransom. So highly illegal. However, it does exist and it's a reality.

And so we need to be able to mitigate this. So the attacker controls all of these bots organized into a botnet, which can render a website or an application useless for legitimate traffic. Now what can we do about this? Well, with a distributed denial of service attack, basic protection is automatically enabled for you in Microsoft Azure. And there's no additional cost, but what does that mean?

Well, why don't we compare basic with standard, which does have a cost associated with it. You configure standard DDoS mitigation protection in the properties of an Azure virtual network, when you're in the properties blade.

[Video description begins] Virtual network is abbreviated to: VNet. [Video description ends]

So what happens then, is that based on the resources deployed in that Azure VNet, Microsoft Azure will tune protection against DDoS attacks against those resources. And you also get alerts when DDoS attacks appear to be occurring against some of your deployed resources In those VNets.

Network Security Groups

[Video description begins] Topic Title: Network Security Groups. Your host for the session is Dan Lachance. [Video description ends]

Azure network security groups, or NSGs, are resources in Azure that get associated with other resources like NICs, network interface cards, used by virtual machines, or subnets.

[Video description begins] Network Interface Cards is abbreviated to: NICs. [Video description ends]

And so we're talking about inbound network security rules to control traffic coming into Azure, or even traffic leaving Azure in an outbound direction. But that inbound and outbound protection is associated at the NIC level for a specific virtual machine or, a little bit more generally, at the subnet level. So certainly, if you've got a subnet with a bunch of Linux machines that you want to be able to administer, you might allow inbound SSH, either to one jump box or to all of them.

And so you could do that through a network security group associated with the subnet. However, when it comes to associating network security groups with things like network interface cards used by DMs, bear in mind that only one network security group can be associated with a network interface card.

[Video description begins] Network Security Groups is abbreviated to: NSGs. [Video description ends]

Azure network security groups support Allow as well as Deny actions, depending on what your requirements are. There are also a series of default rules to allow things like load balancing, to allow Inter-VNet communication. And of course, incoming Internet traffic initiated from the Internet is blocked by default. Outbound Internet traffic, however, is allowed by default.

When you use the portal to create a network security group, or an NSG, it's going to look something like this. Specifically, this is a rule being created within the NSG, where at the top we specify the Source, in this case it's IP Addresses. We can control either a specific IP address or a range of IP addresses. We can specify a source port range or just a single port from which the traffic is initiated from. And then we have to specify the Destination, because this is an inbound rule. In this case, it could be a virtual network, it could be a specific virtual machine IP address. And, of course, we can see here the Destination port of 80.

We can specify the Protocol as being TCP, UDP, or Any. And then, of course, we determine whether we want to Allow or Deny this traffic, in this case we are allowing it. The Priority value is relative to other items. Here we've got a Priority for 100 in this rule. If we have another rule with a priority of 300, well this rule will get checked first, and if there's a match with the incoming traffic, rule processing stops. Otherwise, it would continue on to the next rule with a priority of 300. And then, of course, we have a name that we can assign to the rule.

[Video description begins] A window titled Add inbound security rule NSG1 appears. It shows Basic information that needs to be populated. The data shows: Source as IP Addresses, Source IP addresses/CIDR ranges as 199.126.129.55, Source port ranges as *, Destination as VirtualNetwork, Destination port ranges as 80, Protocol as TCP, Action as Allow, Priority as 100 and Name as Port_80. [Video description ends]

Here we can see a number of inbound security rules listed together for a network security group. We can see the first rule, PRIORITY 100, is the rule we just looked at a moment ago for port 80. So because that has the smallest priority number, at least value-wise numerically, it gets checked first. And on the far right, you can see the ACTION is to Allow it if incoming traffic matches those conditions.

The next three, the last three also, are default rules, and I can click the Default rules button pictured here in the screenshot to hide them if I don't want to see them. But allowing inbound VNet traffic and load balancing is allowed by default. But after that, notice the last rule at the bottom is to DenyAllInbound traffic if there is not a match from above.

[Video description begins] The screen displays a screenshot of inbound security rules. The screenshot shows a table with seven columns and five rows. Above the table, two tabs display: Add and Default rules. The first row of the table displays the title of seven columns as: PRIORITY, NAME, PORT, PROTOCOL, SOURCE, DESTINATION, and ACTION. The second row displays 100, Port_80, 80, TCP, 199.126.129.55, VirtualNetwork, Allow as values for each column. The third row displays 65000, AllowVnetInBound, Any, Any, VirtualNetwork, VirtualNetwork, Allow as values for each column. The fourth row displays 65001, AllowAzureLoadBalancerInBound, Any, Any, AzureLoadBalancer, Any, Allow as values for each column. The fifth row displays 65500, DenyAllInBound, Any, Any, Any, Any, Deny as values for each column. [Video description ends]

Network security groups in Azure can be managed using the Azure portal GUI, or using PowerShell cmdlets such as New-AzNetworkSecurityGroup, Get-AzNetworkSecurityGroup to retrieve a list of them. We can remove a security group with Remove-AzNetworkSecurityGroup.

However, there are also PowerShell cmdlets to manage the rules within the network security group. At the CLI level, we can use az network nsg create, naturally to create the network security group. We can list them, and of course we can delete them using the appropriate syntax.

Network Security Group GUI Management

[Video description begins] Topic Title: Network Security Group GUI Management. Your host for the session is Dan Lachance. [Video description ends]

In this demonstration, I will use the Azure portal to create and configure a network security group. In Azure, network security groups are often simply referred to as NSGs and they are used to control traffic into and out of VNet subnets.

[Video description begins] The Homepage of Azure portal opens. The address bar shows: https://portal.azure.com/#home. The left navigation pane of the Homepage displays various links to resources and services, and the right pane of the Homepage displays icons to access various Azure services. [Video description ends]

So to go ahead and get started here, let's take a look at an existing configuration and then we'll build a new one. So here in the portal, I'll start by clicking on Virtual networks over on the left, and I'm going to click on one of my existing virtual networks to pull up its properties blade. Now the first thing I want to do here is look at the subnet affiliation or

[Video description begins] He clicks Virtual networks on the left navigation pane of the Azure portal. A window titled Virtual networks appear on the right pane. Virtual networks displays two networks in two rows. The details of the first row display: Name as EastVnet1, Resource GROUP as RG1, LOCATION as Canada East, and SUBSCRIPTION as Pay-As-You-Go. The details of the second row display: Name as EastVnet2, Resource GROUP as Rg1, LOCATION as Canada East, and SUBSCRIPTION as Pay-As-You-Go. He clicks the first row. [Video description ends]

association to the selected VNet. And on the right, we can see that we've got a number of subnets such as EastSubnet1, for example, that is associated with this virtual network. And notice under the SECURITY GROUP column, we can see the network security group associated with that particular subnet, in this case, NSG1. So therefore, if I go to All resources and

[Video description begins] He clicks Subnets on the left navigation pane of the Azure portal. A window titled EastVnet1 - Subnets Virtual network appears on the right pane. Three rows display three subnets. He highlights the last row. The data displays: NAME as EastSubnet1, ADDRESS NAME as 10.1.1.0/24, AVAILABLE ADDRESS as 249, DEDICATED TO as blank, and SECURITY GROUP as NSG1. [Video description ends]

if I were to filter by NSG, among other things, we will certainly see NSG1, the network security group we were just talking about.

[Video description begins] He clicks All resources on the left navigation pane of Azure portal. A window titled All resources appears on the right pane with various links. He types nsg in the search bar placed above the links of all the resources. Three resources display in three rows as the result of the search. The third row displays data: NAME as NSG1, TYPE as Network security group, RESOURCE GROUP as Rg1, LOCATION as Canada East, and SUBSCRIPTION as Pay-As-You-Go. He clicks the last row. [Video description ends]

And if I go ahead and click on that to pull up its properties blade, it has a set of inbound security rules to control traffic into, in this particular case, the way it's being used, the subnet, and also outbound security rules. Now when I go to both inbound and outbound security rules, I can hide the built in default rules, which, if you look at their priority values fall towards the bottom of the list of rules.

The rules are matched against, in this case, incoming traffic starting at the very top based on the priority, and then going further down to the next priority value and so on and so forth. When there is a match, rule processing starts. And so that is also true when it comes to outbound security rules.

[Video description begins] The screen displays NSG1 network security group on the right pane of the portal. The right pane displays NSG1 properties and other links. He clicks Inbound security rules under Settings. A table with seven columns and six rows displays on the right. He clicks Outbound security rules under Settings. A table with seven columns and four rows displays on the right. He clicks Inbound security rules again. He clicks Default rules tab placed above the rows. This hides the default value rules and displays only three rows. He clicks the Default rules tab again and all the seven rows display. He highlights the first column of the table, which shows the PRIORITY as 1000, 1010, 65000, 65001, and 65500. He clicks Outbound security rules and closes the window. [Video description ends]

Now let's just go look at our virtual machines. If I were to pop up the properties blade of a virtual machine, and if we were to click on Networking, we would also see the VNet and the subnet association, but also the network security group. So notice here that we've got NSG1, that's network security group 1, attached to a subnet, and we can see that the rules are showing up in here. But also notice that if the virtual machine were running, we'd be able to click Effective Security Rules so that we would be able to see all of the rules in effect if we've got more than one particular security group. Because you might have a network security group associated to a virtual machine specifically.

[Video description begins] He clicks Virtual machines on the left navigation pane of the Azure portal. A window titled Virtual machines Default Directory displays on the right pane. The window displays three rows with three virtual machines. He clicks the second row, which displays: NAME as eastwindowsvm1, TYPE as Virtual machine, STATUS as Stopped, LOCATION as Canada East, and Subscription as Pay-As-You-Go. A window titled eastwindowsvm1 virtual machine opens on the right pane. He clicks Networking under Settings. The right pane displays: Network Interface as eastwindowsvm1758, Virtual network/subnet as Eastvnet1/EastSubnet1, and network security group as NSG1 (attached to subnet: EastSubnet1). A table also displays inbound and outbound port rules on the same window. He clicks Effective security rules on the top of the window. A window titled eastwindowsvn1758 - Effective security rules opens on the right pane, which displays all the effective inbound and outbound rules. [Video description ends]

So I'm going to go to the Create a resource button in the upper left, and here under the Networking section, I'm actually going to create a network security group. Now when I do that, I have to come up with a name for it. So if this is going to be, let's say for the Windows environment for an application, specifically, that has many resources like a back end database, some virtual machines, a load balancer and what not, maybe I would call this, WebApp1_ NSG, if it's for that purpose. Then I have to deploy it into either an existing resource group or create new resource group, specify the location, and then I simply click Create.

[Video description begins] He clicks Create a resource on the left navigation pane of the Azure portal. A window titled New appears on the right pane. Under the Azure Marketplace section, he clicks Networking and then clicks Network security group. A window titled Create network security group opens. He populates the required data: Name as WebApp1_NSG, Subscription as Pay-As-You-Go, Resource group as Rg1, and Location as Canada East. He clicks the Create tab at the bottom of the window. [Video description ends]

But that's not the end of the story with network security groups, though of course, because they need in and outbound rules configured appropriately so that they can be used. And then, of course, they need to be associated with things like subnets so they're actually effective.

So if I go to All resources here, let's just look or filter for NSG, here's WebApp1 NSG, so I'm just going to go ahead and click on that. So for inbound security rules, we've got the default rules, because if I hide them we see nothing. Same with the outbound rules, we've got the default rules.

[Video description begins] He clicks All resources on the left navigation pane of the Azure portal. A window titled All resources appears on the right pane. He types nsg in the search bar and four network security groups display in four rows, as a search result. He clicks the last row WebApp1_NSG. A window titled WebApp1_NSG Network security group opens on the right pane. He clicks Inbound security rules under Settings and a list of three rules displays in three rows. He clicks Default rules tab placed above the rows. This hides the default value rules and it does not display any row. He clicks Outbound security rules under Settings and a list of three rules displays in three rules. He clicks Default rules tab placed above the rows. This hides the default value rules and it does not display any row. [Video description ends]

However, I want to add a rule to allow inbound traffic. So because this is for a web app, I'm going to click Add to add a rule. The source will be Any. I can specify Source port range on the request, and I can also specify a destination of Any. Or I could specify an IP Address if I know, for instance, I've got a fixed IP address, a static, unchanging IP address, that I'm using for a virtual machine, that I can pop that in here.

If I know that the destination port is 443, it's an HTTPS connection type of application only, I know that's happening over TCP port 443, and I want to allow it. And again, I've got a priority value here and I need to give it a name. How about we call this AllowinboundHTTPS, and then I'll click Add.

[Video description begins] He clicks Inbound security rules under the Settings of WebApp1_NSG - Inbound security rules window. He clicks Add on the right pane of the window. A window titled Add inbound security rule opens on the right. He enters the following details: Source as Any, Source port ranges as *, Destination as IP Addresses, Destination IP addresses/CIDR ranges as 10.1.1.5, Destination port ranges as 443, Protocol as TCP, Action as Allow, Priority as 100, and Name as AllowInboundHTTPS. He clicks the Add tab at the bottom of the window. [Video description ends]

So once we've added the security rule or security rules to our liking, we're then ready to make this effective by associating this network security group with something, and those somethings could include, as we know, a subnet. If I go to Subnets, I can click Associate and I can choose, first, a virtual network and then choose the appropriate subnet to which I want that applied.

[Video description begins] He clicks Subnets under the Settings of WebApp1_NSG - Subnets window. He clicks the Associate tab on the right pane. A window titled Associate subnet WebApp1_NSG opens and displays two options to choose from: Virtual network and Subnet. He clicks the Virtual network option. A window titled Choose virtual network opens on the right. It displays EastVnet1 Rg1 and EastVnet2 rg1. He clicks EastVnet1. It displays three options under Choose subnet on far right. He clicks the second option EastSubnet 2 Rg1. A window titled Associate WebApp1_NSG opens with two options: Virtual network EastVnet1 and Subnet EastSubnet2. He clicks OK at the bottom of the window. [Video description ends]

However, I'm going to exit out of there because we can also associate this with a network interface that's tied to a virtual machine. So we could have a network security group for an entire subnet, but there are times when you might have a single virtual machine which is linked to a network interface that has specific in or outbound network traffic security rule requirements. And so in that case, you could associate your network security group with a specific network interface.

[Video description begins] He closes the Associate subnet window. He clicks Network interfaces under the Settings of WebApp1_NSG - Network interfaces window. He clicks the Associate tab on the right pane of the window. Associate network interface window opens on the right pane and displays jumpbox568 Rg1 network interface. He clicks jumpbox568 Rg1 and a pop-up window appears on the top-right corner of the right pane. It displays that the network interface is being saved. [Video description ends]

Network Security Group CLI Management

[Video description begins] Topic Title: Network Security Group CLI Management. Your host for the session is Dan Lachance. [Video description ends]

In this demonstration, I will create a network security group using the Azure CLI. I've downloaded and installed the Azure CLI and I've already run the az login command to authenticate to Azure. So at this point, I'm going to run az space network space nsg, for network security group, create. And from here, if I do --help, I'll learn about the syntax related to the creation of a network security group.

[Video description begins] A Command Prompt opens. He types and executes the following command in Command Prompt: az network nsg create --help. He presses enter and the screen displays various commands. He types and executes the following command: cls. A clear screen displays. [Video description ends]

However, I'm going to go ahead and bring up that command using my up arrow key and just modify it by removing --help. I'm going to use -g, I'm going to tie this network security group or deploy it into a resource group, and I'm going to call it, with -n for name, Windows_NSG. So assuming I need a network security group to control traffic into and out of Windows virtual machines, this will be a good name.

I'm going to go ahead and just do that. Once that's finished, of course, I can also get a list of virtual networks. So we can see it looks like it created our Windows_NSG, network security group.

[Video description begins] He types and executes the following command in Command Prompt: az network nsg create -g Rg1 -n Windows_NSG. He presses enter and the screen displays various commands. [Video description ends]

And at any point in time I could run az space network space nsg space list. Now I get the same kind of thing back.

[Video description begins] He types and executes the following command: cls. A clear screen displays. He types and executes the following command in Command Prompt: az network nsg list. He presses enter and the screen displays various commands. [Video description ends]

What I could do is also run that command, but pipe the result to the find command and tell it to look for name. Now I'm also going to get the names of rules within the network security groups. But at least we can see we have less to look at, and indeed, our Windows Network Security Group lives on.

[Video description begins] He types and executes the following command: cls. A clear screen displays. He types and executes the following command in Command Prompt: az network nsg list | find "name". He presses enter and the screen displays various commands. He highlights the following command: "name" "Windows_NSG" in the last command line of the Command Prompt. [Video description ends]

So, the next thing we're going to do is create a rule within that network security group to control traffic. So I'm going to run az space network space nsg space rule space create. And this is going to be for a resource group of Rg1 --nsg-name, in this case is Windows_NSG. I'll set the priority, let's say, for this rule to value of 200, which is relative to the other rules to control the execution.

And I'll use --source-address-prefixes anywhere, so asterisk, --destination-address-prefixes, same thing, going anywhere. And then I can specify also the destination port information. So, --destination-port-ranges. And in this case I want to make an allowance for port 443 --direction is going to be inbound because network security groups can also control traffic going out. -- access, we can either allow or deny, in this case, allow, the protocol, -- protocol, is tcp. And finally, let's give this thing a name.

How about AllowInboundHTTPS. And then I'll go ahead and press Enter on the assumption that everything was typed in correctly. Okay, it looks good.

[Video description begins] He types and executes the following command: cls. A clear screen displays. He types and executes the following command in Command Prompt: az network nsg rule create -g Rg1 -- nsg-name Windows_NSG --priority 200 --source-address-prefixes * --destination-address-prefixes * --destination-port-ranges 443 --direction inbound --access Allow --protocol tcp --name "AllowInboundHTTPS" . He presses enter and the screen displays various commands. [Video description ends]

Let's just do this, let's clear the screen. az space network nsg rule space list and --resource-group Rg1, and what's the name of our security group? --nsg-name, it's Windows_NSG, and we can press Enter, and we have a typo. Well, that's because we have az newtork when really it should be az network. A little dyslexic here, there we go.

[Video description begins] He types and executes the following command: cls. A clear screen displays. He types and executes the following command in Command Prompt: az network nsg rule list --resource-group Rg1 --nsg - name Windows_NSG. He presses enter and the screen displays various commands. [Video description ends]

So we got the same kind of output that we got when we created that rule. And we can see the destinationPortRange indeed is for port 443, and that this is for an Inbound direction and we're allowing that traffic.

[Video description begins] He highlights the following commands: "destinationPortRange": "443", "direction": "Inbound", "access": "Allow",. [Video description ends]

Network Security Group PowerShell Management

[Video description begins] Topic Title: Network Security Group PowerShell Management. Your host for the session is Dan Lachance. [Video description ends]

You can also use PowerShell to create and manage network security groups in Azure. Here I've already got a PowerShell script that I've opened up in the PowerShell ISE, the integrated scripting environment. The first command is Get-AzNetworkSecurityGroup. So having my cursor blinking on line 1 where that command exists, I'm going to click the Run Selection button. And this is going to list back, of course, the Azure network security groups and the details that go along with each of them as we can see.

[Video description begins] A window titled Windows PowerShell ISE displays. The window is divided into two sections. The first section displays commands and the second section below that displays codes. He highlights and executes the following command in the first line of command: Get-AzNetworkSecurityGroup. The cursor blinks after the command. He clicks the Run Selection button on the toolbar. The second section of the window displays various codes. [Video description ends]

However, in line 3 I'm filtering it out and only showing the name. So I'm piping it to the select alias in PowerShell, and telling it that the only prop I'm interested in is name. So let's go ahead and run that line, and see how the output differs. That is much cleaner looking, because now we see only the names of the network security groups as opposed to all of the details for each and every one of those network security groups.

[Video description begins] He highlights and executes the following command in the third line of command: Get-AzNetworkSecurityGroup | select name. The cursor blinks after the command. He clicks the Run Selection button on the toolbar. The second section of the windows displays: Name, eastlinuxvml-nsg, eastwindowsvml-nsg, NSG1, WebApp1_NSG, Windows_NSG. The section also displays other details of network security groups. [Video description ends]

So to build a new network security group we would use the New-AzNetworkSecurityGroup cmdlet. Where we have to specify a name,- name, we deploy it into a resource group, so I use -resourcegroupname for that, and then we specify the Azure region. Now I'm going to go ahead and run that line, so I'm going to select it and I'm going to run the selection. So after a moment we'll see that we've got a new network security group here.

[Video description begins] He types and executes the following command in the second section of the window: cls. He highlights and executes the following command in the fifth line of command in the first section: New-AzNetworkSecurityGroup - name Linux_NSG -resourcegroupname RG1 -location canadaeast. He selects the fifth line of command and clicks the Run Selection button on the toolbar. The second section of the windows displays data associated with new network security group. [Video description ends]

Let's clear the screen down here in PowerShell, why don't we run that command again where we just select by name. So how about we do that, let's just clear this up and let's see what we get returned here. What we're looking for is that we've got our Linux NSG or network security group that exist. And indeed it is returned from that PowerShell cmdlet,

[Video description begins] He types and executes the following command in the second section of the window: cls. He highlights and executes the following command in the third line of command in the first section: Get-AzNetworkSecurityGroup | select name. He clicks the Run Selection button on the toolbar. The second section of the windows displays: Name, eastlinuxvml-nsg, eastwindowsvml-nsg, Linux_NSG, NSG1, WebApp1_NSG, Windows_NSG. [Video description ends]

so, what are we doing in line 7? Well, I'm using the back tick character so that I can have this wrap across three lines, it's really one big statement. What we're doing here is we're running Get-AzNetworkSecurityGroup and I'm calling it by name. I want to get the Linux network security group, and here's the resource group it's in.

And then, once we have a handle on that object, we are piping that output to the Add-AzNetworkSecurityRuleConfig cmdlet. And we're adding a rule that's called AllowSSH, so we're allowing access that's destined from an inbound direction for TCP port 22, as we see way down here. We can see all the other details like the priority, the sourceaddressprefix, and in this case from anywhere, *the sourceportrange*, destinationaddressprefix*.

Having done that, that's the middle command as we can see selected here. Then we take the result of that and we pipe it to Set-AzNetworkSecurityGroup, so we can write the settings to the security group that we got from the beginning of the command. Does that make sense? We get the network security group, get a handle on it, add a rule and then write it using the Set-AzNetworkSecurityGroup cmdlet.

[Video description begins] He highlights and executes the following command in the seventh line of command: Get-AzNetworkSecurityGroup -name linux_nsg -resourcegroupname rg1 | Add-AzNetworkSecurityRuleConfig `. He highlights and executes the following command in the eighth line of command: -name AllowSSH -access allow -protocol tcp -direction inbound -priority 220 -sourceaddressprefix * `. He highlights and executes the following command in the ninth line of command: -sourceportrange * -destinationaddressprefix * -destinationportrange 22 | Set-AzNetworkSecurityGroup. [Video description ends]

So, let's make sure we execute lines 7, 8, 9 here as one expression. So I'm going to select them and I will click the Run Selection button. And after a moment, it looks like it ran. Why don't we do this? Why don't we go into the Azure portal and check our work in this particular example just for fun.

[Video description begins] He selects the seventh, eighth, and ninth line of command and clicks the Run Selection button on the toolbar. The second section of the windows displays various codes. [Video description ends]

So here in the portal I'm in the All resources view, why don't we filter it for things that have NSG in the name. There's the Linux network security group, and if you look at our inbound security rules, there is the AllowSSH with the priority of 220, port 22, and so on, and of course it is allowed. So there you have it, it's pretty easy to work with network security groups using Microsoft PowerShell.

[Video description begins] The Azure portal displays. He clicks All resources on the left navigation pane. The links to All resources display on the right pane. He types nsg in the search bar placed above the links of all the resources. Six resources display in six rows, as the search result. He clicks Linux_NSG on the third row. Linux_NSG network security group opens on the right pane. He clicks Inbound security rules under Settings. A table with five rows and seven columns displays. He highlights the first row, which shows the following data: PRIORITY as 220, NAME as AllowSSH, Port as 22, PROTOCOL as TCP, SOURCE as Any, DESTINATION as Any, and ACTION as Allow. [Video description ends]

Configure a VM Jump Box

[Video description begins] Topic Title: Configure a VM Jump Box. Your host for the session is Dan Lachance. [Video description ends]

In this demonstration, I'm going to create a jump box. A jump box is a machine that you can connect to. For example, from the Internet if you're working on premises, so that you have access into the Azure cloud. And from the jump box you can then make remote connections to other internal Azure resources. Like other virtual machines that might not be publicly accessible directly.

[Video description begins] The Homepage of Azure portal displays. The address bar shows: https://portal.azure.com/#home. The left navigation pane of the Homepage displays various links to resources and services, and the right pane of the Homepage displays icons to access various Azure services. [Video description ends]

And so to get started, really we're talking about creating a virtual machine. So I'm going to click Create a resource in the upper left here in the portal, it's going to be Windows Server 2016 Datacenter. And I will deploy this into an existing resource group. We're going to call this JumpBox, and I'm going to go ahead and deploy this into a specific Azure region of my choosing.

And I'll fill in the Username and Password information. And then I'll click Next, I'm going to accept the disks. And for networking this is going to go and do a virtual network called EastVnet. And specifically I'm going to put this in a subnet, let's say, called EastSubnet1, and it's going to make a new public IP.

So that's fine, let's let it create that, because I need a public IP to get to the jump box. And from the jump box we get to other internal resources that might not have a public IP. So I'm okay with this. I'm just going to basically go through the wizard. I'm okay with everything here. Let's make sure validation is passed.

[Video description begins] He clicks Create a resource on the left navigation pane of the Azure portal. A window titled New displays on the right pane. It displays various links. He clicks Windows Server 2016 Datacenter Quickstart tutorial. A window titled Create a virtual machine displays on the right pane. It displays seven tabs: Basics, Disks, Networking, Management Advanced, Tags, and Review + create. He clicks the Basics tab. The tab displays various details, which need to be populated to create a virtual machine. He selects and types the following details: Subscription as Pay-As-You-Go, Resource group as Rg1, Virtual machine group as JumpBox, Region as Canada East, Availability options as No infrastructure redundancy required, Image as Windows Server 2016 Datacenter, and size as Standard DS1 v2. He types his username and password and clicks the Next: Disks > tab at the bottom of the window. The Disks tab displays. The OS disk type displays as Premium SSD. He clicks Next: Networking > tab at the bottom of the window. The Networking tab displays. He enters the following data: Virtual network as EastVnet1, Subnet as EastSubnet1 (10.1.1.0/24), Public IP as (new) JumpBox-ip, NIC network security group as None, and Accelerated networking as Off. He clicks Next: Management > tab at the bottom of the window. He clicks the Advanced, Tags and Review + Create tabs also. [Video description ends]

And it is, so I'm going to create this virtual machine. Now, while that's happening, if I go look at my other virtual machines. I've got one here called eastwindowsvm1, and it's got a private IP allocated but not a public IP. And this virtual machine is actually in the midst of being started. Let's just go back here and do a refresh now. And in a moment, we'll see that it's actually up and running.

[Video description begins] The Create a virtual machine window on the right pane displays Validation passed. He clicks the Create tab at the bottom of the window. A pop-up window shows that the deployment is in progress. He clicks Virtual machine on the left navigation pane of the Azure portal. A window titled Virtual machine opens on the right pane and displays three virtual machines in three rows. He clicks the second virtual machine eastwindowsvm1 on the second row. A window titled eastwindowsvm1 Virtual machine opens on the right pane. The window displays Private IP Public Address but not the Public IP address. He clicks Virtual machine on the left navigation pane of the Azure portal. A window titled Virtual machine opens on the right pane and displays three virtual machines in three rows. He clicks Refresh tab displayed above the rows. The Status of the virtual machines eastwindowsvm1 and JumpBox, displayed on the second and third row gets updated to Running. [Video description ends]

And after a few moments, we can see that the two virtual machines are up and running. Again, we've got a virtual machine here that does not have a public IP, but it does have a private one. But that's not our JumpBox. Our JumpBox, if I click on it, in fact does have a public IP address.

Let's start by using the Remote Desktop client here on premises to connect into the jump box. Okay, so I've popped in the public IP address that I copied from the jump box virtual machine in Azure. So I'll paste that in here, I'm going to click on Connect. And when I put in the credentials and click OK, I'll just get this certificate message. I'm going to trust this certificate and tell it not to ask me again every time I connect, and I'll choose Yes. So we're making an inbound connection from on-premises through

[Video description begins] The window titled Virtual machines displays on the right pane. He clicks the second virtual machine eastwindowsvm1 on the second row. The Public IP address is still not displayed. He clicks the third virtual machine JumpBox on the third row. The window tilted JumpBox displays the Public IP address as 52.235.38.242. He clicks and copies the Public IP address. A pop-up window titled Remote Desktop Connection displays. He types Computer as 52.235.38.242 and clicks Connect. Another pop-up window titled Windows Security displays. He enters the credentials and clicks OK. A security warning displays on the window. He clicks the Yes tab. A pop-up titled Remote Desktop Connection displays, which shows the connection is being established to 52.235.38.242. [Video description ends]

the Internet into our jump box Windows virtual machine in the Azure cloud. Now, let me just go ahead and minimize that Remote Desktop window. Because what we want to do is now make a connection to this virtual machine eastwindowsvm1. Which, of course, as we know, if we go to overview, let's say, it does not have a public IP but it does have a private one. So I'm going to copy that private address, 10.1.1.4. Let's go back to our Remote Desktop session in our jump box.

[Video description begins] A window titled Virtual machines displays on the right pane of the Azure portal. The window displays three virtual machines in three rows. He clicks the second row: eastwindowsvm1. A window titled eastwindowsvm1- Networking displays on the pane. He clicks Overview. The right pane displays the Private IP address as 10.1.1.4, however, does not display the Public IP address. He clicks and copies the Private IP address. [Video description ends]

So now within here, I'm just going to go to my Start Menu and we're going to go ahead and fire up the Remote Desktop client. So from the jump box we're making a connection to other Azure host. In this case, using the private IP, in this case 10.1.1.4, which was our example, 1.1.4. And I'll click Connect. And of course it wants the credentials so I'll go ahead and supply that including the password.

And then after a moment we'll be prompted to trust a certificate for that connection to secure that network transmission. And now we can see that we are one level deeper, we are now connected to an internal Azure virtual machine, that itself, does not have a public IP. But rather, we got to it by going through a jump box. Now, the jump box itself does not have to be on the same subnet.

[Video description begins] He clicks Start menu on his computer and opens the Remote Desktop Connection. A pop-up window titled Remote Desktop Connection displays. He types the Private IP address as 10.1.1.4 and clicks the Connect tab on the pop-up window. Another pop-up window displays, which requires credentials to connect. He types the credentials and clicks the OK tab on the pop-up window. A security certificate appears and he clicks the Yes tab. The connection gets established. [Video description ends]

Back here in the Azure portal, if I open up EastVnet1 and look at the connected devices, we can see our Windows virtual machine and our jump box which are both on the same subnet. Now, that may or may not meet your security needs, we easily could have put our jump box on a different subnet in a different range.

And it would still be able to make a connection to the private IP of our Windows virtual machine. And sometimes because the jump box is publicly accessible, you might want to put it on its own subnet for isolation purposes, but it's not a requirement.

[Video description begins] A window titled eastwindowsvm1 Virtual machines displays on the right pane of the Azure portal. He clicks Activity log and a window titled Virtual networks displays on the right pane. The window displays two virtual machines in two rows. He clicks EastVnet1 on the first row. A window titled EastVnet1 Virtual network displays on the right pane. He clicks Connected devices under Settings and the right pane displays the following three network interfaces in three rows: eastwindowsvm1758 with IP address 10.1.1.4 , eastlinuxvm1764 with IP address 10.1.1.5, and jumpbox240 with IP address 10.1.1.6. [Video description ends]

Just-in-Time VM Access

[Video description begins] Topic Title: Just-in-Time VM Access. Your host for the session is Dan Lachance. [Video description ends]

Configuring a virtual machine in Azure with just in time access can further harden virtual machines. This is because instead of always allowing, for instance, inbound remote management traffic, then what we could do is only enable that as it's needed and then turn it off when remote management is complete. Instead of always leaving a port open, for example, through an inbound rule in a network security group. So here in the portal, I've got a list of virtual machines, one of which I will click on, it's called JumpBox.

[Video description begins] The Virtual Machines page of the Azure portal opens. The left navigation pane of the portal displays various links to resources and services, and the right pane displays details of three virtual machines in three rows. He clicks the last row. The details of the virtual machine are: NAME as JumpBox, TYPE as Virtual machine, STATUS as Running, RESOURCE GROUP as Rg1, LOCATION as Canada East, SUBSCRIPTION as Pay-As-You-Go. A window titled JumpBox opens on the right pane. [Video description ends]

And in here I am going to go to the configuration part of the properties blade, where I can enable just-in-time-access, so I'm going to go ahead and do that. Now when you enable that on a virtual machine, you can then open the Azure Security Center from that provided link or just by clicking Security Center here in the bottom left of the navigator, same thing, same place.

But when I do that, what happens is I can select virtual machines that are enabled for this and request access. Now before we do that, why don't we go back to our virtual machines here, and I'm going to copy the public IP address of this virtual machine and attempt to connect using the remote desktop protocol client on my station.

[Video description begins] He clicks Configuration under Settings displayed on the JumpBox window, A window titled JumpBox - Configuration opens on the right pane. The window displays: Just-in-time access with Enable just-in-time policy tab and Azure hybrid benefit with Yes and No tabs. He clicks the Enable just-in-time policy tab. A pop-up window appears on the top-right corner of the screen. It displays that just-in-time access policy is successfully enabled. The JumpBox - Configuration window displays Open Azure Security Center link under Just-in-time access. He clicks the link and a window titled Just in time VM access opens on the right pane. The window displays a row, which shows a configured JumpBox virtual machine with a checkbox. He clicks and enables the checkbox. He clicks Virtual machines on the left navigation pane of the Azure portal. The right pane displays a list of three virtual machines in three rows. He clicks the last row, which displays JumpBox. A window titled JumpBox opens on the right pane. He clicks and copies the Public IP address 52.235.38.242. [Video description ends]

So I'm trying to make a remote desktop connection to the public IP of this virtual machine. But notice it seems to be taking an awful long time, and that's because it's going to time out. When you enable just-in-time-access, this is what the desired outcome is.

[Video description begins] A Remote Desktop Connection pop-up window displays. It attempts to establish the remote desktop connection to the Public IP address 52.235.38.242. Another pop-up window shows that the connection could not be established. He clicked the OK tab on the pop-up window. He closes the Remote Desktop Connection pop-up window. [Video description ends]

And so, when we go to the Azure Security Center or we can do that through the configuration, then we can request access as we need it. So I'm going to select that JumpBox virtual machine, it could be any virtual machine, and then I'll click Request access. So I want access to port 3389 because it's running Windows, I want that on,

[Video description begins] He clicks Configuration under Settings of the JumpBox window. The JumpBox - Configuration window opens on the right pane. The window displays Just-in-time access with Enable just-in-time policy link. He clicks the link and the window titled Just in time VM access opens on the right pane. The window displays a row, which shows a configured JumpBox virtual machine with a checkbox. He clicks and enables the checkbox. He clicks the Request access tab displayed above the row. [Video description ends]

I want to allow it from my current IP address as it's known on the Internet. And it's set here for three hours, that's fine, although I do have the slider I could control. But I will leave it on 3, and I am going to click the Open ports button.

[Video description begins] A window titled Request Access opens on the right pane. A row displays the port details that need to be selected for JumpBox virtual machine. He selects the following details: PORT as 3399, TOGGLE as On, ALLOWED SOURCE IP as My IP, and TIME RANGE as 3 hours. He clicks the Open ports tab at the bottom of the window. [Video description ends]

And after a moment we can see in the upper right that it's enabling just-in-time or JIT access to that virtual machine. So now if I go back to my remote desktop connection for the public IP of that virtual machine and click Connect, we know it's working because it's prompting us for credentials right away. And if I pop those credentials in, then we will successfully have made a remote desktop connection through just-in-time-access to that virtual machine.

[Video description begins] The window titled Just in time VM access opens on the right pane. A pop-up window displays on the top-right corner of the window. It displays: JIT or Just-in-time network access request initiated. A Remote Desktop Connection pop-up window displays. He clicks the Connect tab displayed on the pop-up window. Another pop-up window titled Windows Security displays. He types the required credentials and the remote desktop connection gets established. [Video description ends]

VM Antimalware

[Video description begins] Topic Title: VM Antimalware. Your host for the session is Dan Lachance. [Video description ends]

There are a few ways, using the Azure Portal, that we can install anti-malware agents within virtual machines.

[Video description begins] The Virtual Machines page of the Azure portal opens. The left navigation pane of the portal displays various links to resources and services, and the right pane displays details of three virtual machines in three rows. [Video description ends]

One is to go to the Azure Security Center. When I go to the Azure Security Center, we can start to take a look at any of the recommendations that might apply to things like Compute, which would be virtual machines.

[Video description begins] He clicks Security Center on the left navigation pane of the Azure portal. A window titled Security Center - Overview opens on the right pane. The window displays three sections: Policy & compliance, Resource security hygiene, and Threat protection. These sections display certain data and various details. The Resource security hygiene section further displays two sections: Recommendations and Resource health monitoring. The Resource health monitoring section display: 3 Compute & apps, 3 Data & storage, 3 Networking, and 1 Identity access. He clicks 3 Compute & apps. [Video description ends]

And I can see here that it talks about installing endpoint protection on virtual machines. And if I click that, it'll have some recommendations for virtual machines that need it and I could select some or all of them and choose Install. But we can also do this manually.

[Video description begins] A window titled Compute opens on the right pane. The window displays four tabs: Overview, VMs and Computers, VM scale sets, Cloud services, and App services. The Overview tab displays four rows. He clicks the first row, which displays the following data: Recommendation as Install endpoint protection solution on virtual machines, Secure Score as +15, and Failed resources as 2 of 3 virtual machines. A window titled Endpoint Protection not installed on Azure VMs displays on the right pane. The window displays Virtual Machine row with no recommendations. [Video description ends]

So if I go to my Virtual machines view, and if I click on a virtual machine to pull up its property sheet, one of the things I can look at are its Extensions. And extensions are add-on items that run as agents within the virtual machine to give it additional functionality.

And so I have no extensions listed here, but I could click Add. And then it's a matter of choosing from the list. For example, I'll choose Microsoft Antimalware. And I'm going to go ahead and click on Create.

[Video description begins] He clicks Virtual machines on the left navigation pane of the Azure portal. The right pane displays details of three virtual machines in three rows. He clicks the second row, which displays the following data: NAME as eastwindowsvm1, TYPE as Virtual machine, STATUS as Running, RESOURCE GROUP as Rg1, LOCATION as Canada East, and SUBSCRIPTION as Pay-As-You-Go. A window titled eastwindowsvm1 opens on the right pane. He clicks Extensions under Settings and clicks the Add tab. A window titled New resource opens on the right pane. The window displays a list of resources and he clicks Microsoft Antimalware from the list. The details on Microsoft Antimalware display on the right. He clicks the Create tab at the bottom of the window. [Video description ends]

Now a lot of these extensions will give you some configuration settings, as we see here, that are specific to that extension. Such as whether I want to configure excluded files or locations from my anti-malware solution that might normally trigger false positives. Or files extensions I want to exclude, or processes that are running that I want to exclude.

So I'm going to leave Real-time protection enabled, and we're going to turn on Run a scheduled scan. That's enabled. And the Scan type will be a full scan. And the Scan day, let's say, will be Sundays. And we can also determine the maximum amount of Scan time from midnight, so this is the starting time. So this is 120 minutes from midnight, so in other words, at 2 o'clock in the morning we want to begin doing a scan. So I'm going to go ahead and click OK.

[Video description begins] A window titled Install extension displays on the right pane. He enters the following data: Excluded files and locations, Excluded file extensions, and Excluded processes as blank, Real-time protection as Enable, Run a scheduled scan as Enable, Scan type as Full, Scan day as Sunday, and Scan time as 120. He clicks the OK tab at the bottom of the window. [Video description ends]

And we can now see it's submitted that deployment to install that extension within that virtual machine. And after a moment, we can see that the provisioning succeeded for the installation of that anti-malware extension.

[Video description begins] The window titled New resource opens. A pop-up window titled Submitting deployment displays on the top-right corner of the right pane. A window titled eastwindowsvm1 - Extensions opens on the right pane. The window displays a row, which shows the following details: NAME as IaaSAntimalware, TYPE as Microsoft.Azure.Security.IaaSAntimalware, VERSION as 1.*, and STATUS as Provisioning succeeded. [Video description ends]

Storage Account Access

[Video description begins] Topic Title: Storage Account Access. Your host for the session is Dan Lachance. [Video description ends]

When you are planning your Azure resource deployment, one thing to consider is from where you want to allow access to that resource. And that also applies to storage accounts, which we'll focus on here.

[Video description begins] The Homepage of Azure portal opens. The address bar shows: https://portal.azure.com/#home. The left navigation pane of the Homepage displays various links to resources and services, and the right pane of the Homepage displays icons to access various Azure services. [Video description ends]

So, here in the Azure Portal, I'm going to start in the left-hand navigator by clicking on Storage accounts, where I will click on an existing one to pull up its properties blade. I'm interested in scrolling down in the properties blade until I see Firewalls and virtual networks.

[Video description begins] He clicks Storage accounts on the left navigation pane of the Azure portal. Three Storage accounts appear on the right pane. He clicks an existing storage account stor14567. The right pane displays the properties of stor14567. He scrolls through the list of properties and clicks Firewalls and virtual networks. The right pane of Firewalls and virtual networks displays two radio buttons under Allow access from. The first radio button is All network and the second radio button is Selected network. [Video description ends]

Notice that this is configured to allow access from all networks. Now we can limit that. If I click Selected networks, I can choose to add an existing VNet, or virtual network, or add a brand new virtual network that will have access to the storage account. So I'm going to choose Add existing virtual network. From here, I can select all my VNETs, or specifically cherry pick the ones I'm interested in. And then I can also choose subnets, any variation thereof, that should have access, I'll choose a specific subnet, and I'll click Add.

[Video description begins] The first radio button All network is selected, by default on the right pane of Firewalls and virtual networks. He clicks the second radio button: Selected networks. After the selection, Under Virtual networks displays: Secure your storage account with virtual networks. It also displays two options to select from: Add existing virtual network and Add new virtual network with a + sign in front of both the options. He clicks Add existing virtual network. Another window titled Add networks displays on further right of the pane. The window displays: Subscription, Virtual networks, and Subnets, each having a drop-down menu. From all the three drop-down menus, he selects Subscription as Pay-As-You-Go, Virtual networks as EastVnet1 displayed under Rg1, and Subnets as EastSubnet1. He clicks the Add at the bottom of the window. [Video description ends]

And we can see here that we've got an entry here for the EastVnet1 with EastSubnet1 having access to this storage account. But as we go further down below, we can also even add our client IP address. This IP address is my current IP as it's known on the Internet. And so conveniently, I can set that on. But bear in mind, if my public IP address for my Internet connection changes, then this will no longer work, but I can just come in and change it again.

I can also specify specific IP addresses or CIDR ranges. I can determine if I want to allow read access to logging or metrics related to this storage account from any network, I don't. And if I want to allow other trusted Microsoft services to access this storage account. But be careful with this one. Notice it's checked on by default, which it allows some other services like Azure Backup or Recovery services to be able to talk to the storage account. And so I'm going to go ahead and leave that on then because of that, and I'm going to click Save.

[Video description begins] The Firewalls and virtual networks pane of the storage account stor14567 displays the added virtual network. Virtual network displays: VIRTUAL NETWORK as EastVnet1, SUBNET as 1, RESOURCE GROUP as Rg1, and SUBSCRIPTION as Pay-As-You-Go. He clicks the arrow placed before EastVnet1. Under EastVnet1, the details display: SUBNET as EastSubnet1, ADDRESS RANGE as 10.11.0/24, ENDPOINT STATUS as Enabled, RESOURCE GROUP as Rg1, and SUBSCRIPTION as Pay-As-You-Go. He scrolls through the window. Under the Virtual networks, two more sections display: Firewall and Exceptions. Firewall displays Add IP ranges to allow access from the internet on your on-premises networks. He checks the checkbox: Add your IP address ('71.7.176.108'). He moves his cursor to Address Range, which displays under IP address checkbox. There are three check boxes under Exceptions: Allow trusted Microsoft services to access this storage account, Allow read access to storage logging from any network, and Allow read access to storage metrics from any network. The first checkbox is checked by default. He clicks Save, which displays on the top of the pane. [Video description ends]

After a moment, we can see it successfully wrote the changes here. So now we have limited access to our storage account from a specific VNet subnet, and from a specific on-premises client IP address.


Azure Advanced Threat Protection
  - Azure Advanced Threat Protection, or ATP, provides protection against security threats to your Azure resources
    - There is built-in monitoring to monitor for suspicious activity and then to send alerts about that activity.
  - It identifies anomalies based on what is not within the profile of being normal in your Azure usage environment
    - In other words, beyond a standard normal usage baseline, anything outside of that is considered abnormal
    - Advanced Threat Protection reports are available to be generated.
  - Specifically, the type of protection that ATP gives us is against attacks related to things such as pass the hash. Pass the hash is a type of attack that given access to a virtual machine where we've got, for example, an administrator logged on. Doesn't have to be an administrator, but that's in our example. Then, if an attacker can gain access to that host during that session, then the attacker can look at the hash values stored in memory and use that hash value to connect to other network resources as that user, without having to figure out what the password is.

Another protected item would be against enumeration of SMB, or Server Message Block, sessions. Protection against the enumeration of items in Active Directory. Protection against encryption downgrades, which is applicable when two machines begin to communicate, they negotiate how they will communicate. And in the attackers sense of realm, of what would happen is that they would try to use a lower level of encryption. Ideally, one that is known to have weaknesses.

And that's called an encryption downgrade attack. Advanced Threat Protection can also detect DNS reconnaissance attempts. Reconnaissance essentially is information gathering. The more that a malicious user knows about your Azure environment, including DNS names, IP addresses, deployed resources, which resources talk to each others, then the better off they are in finding some kind of a vulnerability and attempted to compromise something you've got deployed in Azure.

In order to use Advanced Threat Protection in Azure, you need an ATP license. And you manage this through the ATP portal, it's a separate portal that has a URL of portal.atp.azure.com.

[Video description begins] The ATP portal address typed is: https://portal.atp.azure.com. [Video description ends]

ATP is also designed to connect to and monitor Active Directory, there are Azure ATP sensors that are used to do that. And this is used to detect things like Active Directory enumeration type of reconnaissance attacks.                    


Azure Active Directory
  - Microsoft Active Directory Domain Services is an important infrastructure component that you'll see on many on-premises enterprise networks. However, we can also work with Active Directory in the cloud in the form of Azure Active Directory, otherwise called Azure AD, even sometimes just AAD. What it is is a managed service. This means that you don't have to manually deploy domain controller computers that will house your Active Directory instance. It's taken care of for you already.
  - Unto itself, Azure Active Directory does not offer the slew of features you would might be used to when you run Active Directory on-premises. An example of this is the lack of group policy for centralized configuration management. However, Azure Active Directory can contain standard types of objects like users so that users can authenticate and then be authorized to use services.
  - And we can even enable multi-factor authentication or MFA. So that we have an additional layer of security beyond just username and password when users authenticate. Users can be organized into groups, which is often done to facilitate permissions assignments for people that have the same type of privilege needs. We can also configure applications in Azure Active Directory. And devices can be joined to Azure Active Directory. Let's take a look at a couple of variations of Azure AD starting with Azure AD Join.
With Azure AD Join, we can join devices to the Azure Active Directory domain, such as Windows 10 computers. And not only that, but people sitting in front of those computers can then authenticate with the user account that exists. Not in the on-premises active directory necessarily, but rather in Azure Active Directory. Then we've got Azure AD Domain Services. And this is where you get some more features that make it feel like on-premises Active Directory.

Things like the ability to create organizational units, or OUs, which are like folders to organize users or groups in Active Directory. Furthermore, we can then apply group policy settings centrally that would apply to our Active Directory hierarchy. Finally, we've got Azure AD Connect, this used to be called DirSync. And it allows us to install an agent on an on-premises domain controller that will replicate select information into Azure AD.

So for users that should have access to on-premises IT systems and so would be authorized to do that through authenticating with their local Azure or with their local domain creds, rather, on-premises. If it's replicated to Azure, then they can also access Azure services without having to provide another set of credentials.


Navigate Azure Active Directory Settings
  - Azure Active Directory is an identity management solution in the Azure cloud. When you're in the Azure Portal, in the left hand navigator towards the bottom, you'll see an entry for Azure Active Directory.
  - Now, if you don't have the textual display, then you'll be able to hover over the icons in the left hand navigator to see what they are. Either way, when I go to Azure Active Directory, the first thing I'll see are some metrics related to the number of sign-ins plotted against dates. And as I scroll down, if I look over on the right, there's a quick list of common tasks, like creating users, or a guest user account, or a group. Or even having an application registered through Active Directory.
  - And, as I go further down, I even have the option of creating a brand new instance of Azure Active Directory by filling in my organization name and a domain name. Which will, by default, use the .onmicrosoft.com suffix, but you can change that by configuring a custom domain.
  - And as a matter of fact, if we kind of scroll down in the left hand navigator here, where we're looking at our settings for our default directory, so this is the properties blade for the default directory. You'll see as you go all the way down, you have a number of options available, and one of those options is to create custom domain names.

[Video description begins] The Default Directory - Overview page displays. He clicks the Custom domain names option. The Default Directory - Custom domain names page displays. It has different options, such as Add custom domain, Refresh, Troubleshoot, and Columns. It also displays Status, Federated, and Primary drop-down fields. [Video description ends]

So that way you could use the DNS domain name that represents your corporate identity on the Internet instead of something with the .onmicrosoft.com suffix. Now, also bear in mind when you're signed in to the Azure Portal, in the upper-right, if you click on your sign-in account name. You'll have the option to switch between different instances of Azure Active Directory, if you've got more than one instance.

[Video description begins] On the top-right corner, he clicks the login name. A pop-up box displays with the login information and two hyperlinks, My Microsoft account and Switch directory. He clicks Switch directory. [Video description ends]

So we can go ahead and simply click on one to switch to it. Now, bear in mind that when you switch to another instance of Azure Active Directory, you're looking at the resources from its context. So for example, you can see that we are now looking at the default directory.

[Video description begins] The Directory + subscription pane displays. It has the Switch directory section, which contains the Set your default directory drop-down field and it is set to Default Directory. It also displays two tabs, Favorites and All Directories. On the Favorites tab, two directories display, Default Directory and quick24x7.com. He points to Default Directory. [Video description ends]

And so if I were, for instance, to go to the All resources view, then I'm seeing all of the resources that would be related to that specific Azure Active Directory instance.

[Video description begins] He expands the left pane of the Microsoft Azure web page. Then, he clicks the All resources option. The All resources page displays. It has various options, such as Add, Edit columns, and Refresh. It also has different filter options, such as All resource groups, All types, and All locations. It displays the list of resources with details, such as Name, Type, Resource Group, and Location. [Video description ends]

But let's say in the upper right, I switch directory to another Azure Active Directory instance that I already have, and we know that we can create one. Well, if I go to the All resources view, notice we see nothing here. So all of the stuff, all the resources that we work with here in Azure will be related to the currently selected, well, Azure subscription for sure, but also the Azure Active Directory instance. So I'm just going to switch back to the default directory.

[Video description begins] On the top-right corner, he clicks the login name and then clicks Switch directory. The Directory + subscription pane displays. He clicks the quick24x7.com directory. The Microsoft Azure web page displays. He clicks the All resources option. The All resources page displays. The page does not display the list of resources. Then, he clicks the login name again, clicks Switch directory, and selects Default Directory. [Video description ends]

And once again, if I go to the All resources view, then we're back to seeing all the resources that have been previously deployed. I'm going to click on Azure Active Directory once again, on the left.

[Video description begins] The Microsoft Azure web page displays. He clicks the All resources option. The All resources page displays. [Video description ends]

So we see here that we can click on Users in the Properties blade to work with user accounts in Azure Active Directory.

[Video description begins] He clicks the Azure Active Directory option in the left pane. The Default Directory - Overview page displays. On the left-hand side, he clicks the Users option. The Users - All users page displays. It has various options, such as New user, New guest user, and Multi-Factor Authentication. It also displays the list of users, with details, such as Name, User Name, User Type, and Source. He clicks the Close button. [Video description ends]

We can also, if I close that out, organize users into groups, perhaps to facilitate permissions management. And also, if I take a look at Roles and administrators on the left, we can look at a specific role, let's say the Billing administrator role. And we can add members that will assume the privileges that this role provides, in this case, to manage things related to billing.

[Video description begins] On the left-hand side, he clicks the Groups option. The Groups - All groups page displays. It has various options, such as New group, Refresh, and Columns. It also displays the list of groups, with details, such as Name, Group Type, and Membership Type. He clicks the Close button. Then, he clicks the Roles and administrators option. The Default Directory - Roles and administrators page displays. It shows the list of different roles and their descriptions. He clicks the Billing administrator role. The Billing administrator - Members page displays. It has different options, such as Add member, Refresh, and Manage in PIM. He clicks the Close button. [Video description ends]

So we've got a number of options available here, including Azure AD Connect, which is used to synchronize On-Premises Active Directory with Azure Active Directory. So we can see the sync status here is that the Azure AD Connect component or agent is not even installed on-premises. So you see we have a Download link here to make that happen. And then we could follow through the installation and running of that wizard on-premises to make a connection to Azure for synchronization purposes.

[Video description begins] He clicks the Azure AD Connect option. The Default Directory - Azure AD Connect page displays. It has three sections: Sync Status, User Sign-In, and On-Premises Applications. [Video description ends]

Azure AD User and Group Management

[Video description begins] Topic Title: Azure AD User and Group Management. Your host for this session is Dan Lachance. [Video description ends]

You can use the Azure portal to create Azure Active Directory users and groups. Of course, you could also do the same thing programmatically or through the CLI or through PowerShell cmdlets. So here in the portal, to get started, I'm going to click Azure Active Directory in the left hand navigator.

[Video description begins] The Microsoft Azure web page displays. In the left pane, it has various options, such as Home, Dashboard, All services, and Resource groups. On the right-hand side, it has Azure services, such as Virtual machines, Storage accounts, and App Services. The host clicks the Azure Active Directory option in the left pane. [Video description ends]

First I'm going to take note of is the fully qualified domain name for my instance of Azure Active Directory. And I'm going to copy that only because I know I'm going to need that when I build a user account later on. Let's start by going to Groups.

[Video description begins] The Default Directory - Overview page displays. On the left-hand side, it has various options, such as Overview, Getting started, Users, Groups, and Organizational relationships. On the right-hand side, it displays a chart with sign-ins for the Default Directory. The host copies the domain name - stefansammsoutlook.onmicrosoft.com. Next, he clicks the Groups option. [Video description ends]

Here we can see any existing groups, but I'm going to click the New group button. Groups are used, of course, to organize users into a manageable unit, usually to facilitate things like permissions management. So you've got two group types you can select from here, Security, and Office 365. Because I'm setting this group up for assistant Azure IT technicians, I'm going to choose Security.

So we're not building this group to control access to Office 365 resources. The group name here will be HQ, for headquarters, _AzureIT. And the membership type can be old school, as in Assigned, where you manually add members to the group. But you can also use Dynamic User or Dynamic Device for membership of the group.

So for instance with Dynamic User, we could build a rule that would look at user attributes, such as the department the user is in. And based on the value of the department attribute, that would then determine the group that that user becomes a member of. However here, I'm going to use Assigned, and I'm not going to add members at this point. So I'll just click Create.

[Video description begins] The Groups - All groups page displays the list of groups with details, such as Name, Group Type, and Membership Type. He clicks the New group hyperlink. The Group dialog box displays. He selects Security in the Group type drop-down field, enters HQ_AzureIT in the Group name field, and selects Assigned in the Membership type drop-down field. Then, he clicks the Create button. [Video description ends]

So after a moment in the list, we're going to see our newly created group, HQ_AzureIT. And there it is in the list. Now we could click the three dots on the right to delete the group. We could also click on the group to open it up and maybe modify some of the properties of the group.

[Video description begins] The new group, HQ_AzureIT appears on the Groups - All groups page. He clicks the new group. [Video description ends]

Such as switching it from Assigned to Dynamic User. Or we could add members to the group, but I'm not going to that in this method.

[Video description begins] The HQ_AzureIT Group page displays. It displays fields, such as Membership type, Source, Type, and Object ID. On the left-hand side, it displays options, such as Properties, Members, and Owners. He clicks the Properties option. The Properties page displays. It has a General settings section with details, such as Group name, Group description, Group type, and Membership type. Then, he clicks the Members option on the left-hand side. The Members page displays. He clicks the Close button. [Video description ends]

So let's get out of here, and let's go back to the point where we can click on Users in the Properties blade. Now we can add guest users. Essentially you're sending an invitation, such as through email, to allow users' limited access to Azure. However I'm not going to do that here, I'm just going to click New user. And I'm going to build a user called Jonathan Gold.

And the user name will be jgold@, and then I'm going to paste in my Azure Active Directory domain name, after the @ symbol. I could then click things like Profile and fill in values, such as for the department. So I'm just going to go ahead and click OK. Then for properties, all we can see here is the authority source is Azure Active Directory. And here I can also modify group membership.

So I want this account, Jonathan Gold, to be a member of the HQ_AzureIT group. So I'm going to select that group and I'm going to click Select.

[Video description begins] The Default Directory - Overview page displays. He clicks the Users option. The Users - All users page displays. It shows the list of users with details, such as Name, User Name, User Type, and Source. He points to the New guest user hyperlink and clicks the New user hyperlink. The User dialog box opens. He enters Jonathan Gold in the Name field and jgold@ in the User name field. Then he appends the user name with the domain name. He clicks Profile. The Profile dialog box opens. It contains fields, such as First name, Last name, and Job title. He specifies IT in the Department field. He clicks Properties and the Properties dialog box opens. Next, he clicks Groups. The Groups dialog box opens. He selects HQ_AzureIT. [Video description ends]

Now down below, notice that a password is generated for this user. And if I click Show password, we can see it here. I'm just going to go ahead and copy that in case we want to use it. And we can reset it at any time if the password is forgotten.

[Video description begins] The Password field is populated with a password. He selects the Show Password checkbox and clicks the Copy icon. [Video description ends]

Now in this case, Jonathan Gold has a directory role of User. Now we could select Global administrator to give full access to that account to manage our Azure subscription. Or we could also use limited administrator.

[Video description begins] He clicks Directory role, which is set to User. The Directory role dialog box opens. It has three radio buttons: User, Global administrator, and Limited administrator. He selects the Global administrator and Limited administrator radio buttons, one by one. Then, he clicks the User radio button and clicks the Create button. [Video description ends]

So notice when I choose global administrator, it says this person will have full control over all directory resources. But if I choose Limited administrator, then we can see these specific roles that we might want to assign. Such as the billing administrator, and maybe an application administrator, and so on.

So we have a number of options available. We might even use things like custom roles that we build. So I'm going to leave it as just user and I'm going to create Jonathan Gold. So after a moment, we'll see that our account for user Jonathan Gold has been created.

[Video description begins] The user, Jonathan Gold, appears in the Users - All users page. [Video description ends]

So I've gone into a new web browser and I'm trying to authenticate to portal.azure.com. Although technically, there could be numerous different ways a user might want to authenticate to Azure. Or even Office 365 depending on the account type. Here we're just going to ahead and pop in the user account name. I'll click Next and I'll specify the password. And of course it wants me to change the password to something different, because it's the first time this user account is signing in.

[Video description begins] The Sign in to Microsoft Azure web page displays. It shows the user name as jgold@stefansammsoutlook.onmicrosoft.com. He clicks Next. The Enter password section displays. He pastes the copied password and clicks Sign in. The Update your password section shows three fields: Current password, New password, and Confirm password. He enters the current password. [Video description ends]

And after a moment, we get a welcome message to Azure. I'm not going to view the tour, but notice that we've got our account name jgold listed up here for the default directory. And so if we go to All resources, well we don't really have access to work with a lot of items. And if we go to Create a resource, such as a virtual machine. Well, we don't quite have access for that, so then instead, we get a list here of creating a free account with a link to start a free account.

[Video description begins] The Microsoft Azure web page displays. On the top-right corner, it displays the new user name. He clicks the All resources option. The All resources page displays. Next, he clicks the Create a resource option. The New dialog box displays. It contains several resources, such as Windows Server 2016 Datacenter, SQL Database, and Web App. He selects Windows Server 2016 Datacenter. The Create a free account page opens with a Start free hyperlink. [Video description ends]

However, we know that the account is valid, it just doesn't have any permissions to do anything yet. You can learn more about that in another video entitled Assigning Built-in RBAC Roles.

Azure AD User MFA

[Video description begins] Topic Title: Azure AD User MFA. Your host for this session is Dan Lachance. [Video description ends]

Multi-factor authentication, or MFA, enhances user login security. And it does this because instead of simply having the knowledge of a username and a password to authenticate to Azure, an additional factor is required. So let's get started enabling MFA here on the portal by clicking on Azure Active Directory in the left-hand navigator. Then I'm going to click on Users and I'm going to click the Multi-Factor Authentication button.

[Video description begins] The Microsoft Azure web page displays. In the left pane, it has various options, such as Home, Dashboard, All services, and Resource groups. On the right-hand side, it has Azure services, such as Virtual machines, Storage accounts, and App Services. The host clicks the Azure Active Directory option in the left pane. [Video description ends]

That's going to open up a new web browser, so I'm going to specify the admin credentials that I want to use.

[Video description begins] The Default Directory - Overview page displays. On the left-hand side, it has various options, such as Overview, Getting started, Users, Groups, and Organizational relationships. On the right-hand side, it displays a chart with sign-ins for the Default Directory. The host clicks the Users option. The Users - All users page displays the list of users. He clicks the Multi-Factor Authentication hyperlink. The Sign in to your account web page displays. It shows the Pick an account section with two active accounts. He selects stefan.samms@outlook.com. The Enter password section displays. [Video description ends]

Here I can see a list of my Azure Active Directory users and the multi-factor authentication status. In this case, it's listed as Disabled for all users. I want to enable it for user Jonathan Gold. So I'm going to put a check mark next to Jonathan Gold, and over on the right, under Quick Steps, I will click Enable.

[Video description begins] The multi-factor authentication page displays. It shows the list of users with details, such as Display Name, User Name, and Multi-Factor Auth Status. He selects the checkbox for the user - Jonathan Gold and clicks the Enable hyperlink in the quick steps section. [Video description ends]

It tells me here that if my users don't normally use a web browser to sign in, then I've got a link I can provide to them so that they can register for multi-factor authentication. But I don't have to worry about that here, I'm just going to click enable multi-factor authentication. And notice here it says multi-factor authentication is now enabled for the selected accounts. And if I close out, indeed we can see it is enabled for user Jonathan Gold.

[Video description begins] A dialog box opens to confirm the enabling of multi-factor authentication. He clicks the enable multi-factor auth button. A dialog box displays with the message - Updates successful. He clicks close. The Multi-Factor Auth Status of the user changes to Enabled. [Video description ends]

Now when I use that account to sign into my web browser again, so I've already specified the username and the password for the jgold account. I now get this message upon login. It says more information required. Your organization needs more info to keep your account secure. Okay, no problem. Let's continue, Next. So then we're prompted, how should we contact you?

So we can specify an office phone, a mobile app, or an authentication phone. Well, if I were to choose Mobile app, then it says, how do you want to use the mobile app? So you can receive notifications for verification or you can use a verification code. And it tells me down below that to use this I have to get the Microsoft Authenticator app installed on my smartphone. Okay, so what I'm going to do then is use the Microsoft Authenticator app to receive notifications for verification. And then I'm going to go ahead and click Set up.

[Video description begins] The Sign in to Microsoft Azure web page displays for the user - Jonathan Gold. He clicks Next. The Additional security verification page displays. From the Step 1: How should we contact you? drop-down field, he selects Mobile app. Next, he clicks the Receive notifications for verification radio button and clicks the Set up button. [Video description ends]

So then I get this little pop-up where I can scan this code, assuming I have an app on my phone to scan this type of code, and then I can continue configuring the Microsoft Authenticator app. And we do have a message that says, if we are unable to scan this image, for example, if we don't have some kind of a QR or bar code scanner app on our mobile device, then we can enter this code and the URI information manually.

Okay, so now that we've scanned that in within our Microsoft Authenticator app after choosing work or school account which I've done, then we're ready to continue with Next. What will happen on your smartphone is you'll have a numeric code, a six-digit code that pops up in the Microsoft Authenticator app for that account you've just added, and it's good for 30 seconds. It changes every 30 seconds.

So I'm going to go ahead and click Next. It's checking the activation status. Okay, looks good. So I'm going to click Next. And at this point it's trying to send a message

[Video description begins] The Configure mobile app pop-up box displays. It shows the scan image and other details. He clicks Next. The Additional security verification page displays. He clicks Next. [Video description ends]

to the Microsoft Authenticator app on my smartphone, and I did get a pop-up message, so I'm just going to tell it I approve this type of connectivity. And it says verification successful.

[Video description begins] The Step 2: Let's make sure that we can reach you on your Mobile App device section displays. [Video description ends]

So choose my country or region in case we lose access to the mobile app. Okay, well, I'm going to go down and fill in that information including my number. And then I'll click Done.

[Video description begins] The Step 3: In case you lose access to the mobile app section displays. He selects Canada from the drop-down field. He clicks Next. The Step 4: Keep using your existing applications section displays. He clicks Done. [Video description ends]

Okay, so I'm going to put in the password again. So I have to know the username and the password. And now we have to approve a sign in request by tapping on Approve on our smartphone app, so I'll tap on Approve, and now we are good to go. So we are logged in now as user jgold through multi-factor authentication.

[Video description begins] The Sign in to Microsoft Azure web page displays the Enter password section. Then, it displays the Approve sign in request section. The Microsoft Azure web page displays. [Video description ends]

Azure Subscription Overview

[Video description begins] Topic Title: Azure Subscription Overview. Your host for this session is Dan Lachance. [Video description ends]

Microsoft Azure Subscriptions allow you to create Azure resources. The hierarchy begins at the top, with an organization, under which we can create one or more subscriptions. Now you might have multiple subscriptions. For example, for different countries, if you're a multinational firm. In some cases maybe even for different projects, or maybe one subscription for development versus one for production.

There are many reasons that we would do this, but in the hierarchy, your subscription or subscriptions exist under an organization name. Now we are assigned licenses at the subscription level. And this was what allows us to use specific features of Azure. Going further down in the hierarchy under the subscription, we can create resource groups. Like the name implies, a resource group allows us to deploy resources.

So further down in the hierarchy under Resource Group 1, for example, we see three resources. But it could be one resource like a single virtual machine. Or it could be multiple resources like virtual networks, virtual machines, web applications, load balancers, all of that type of stuff. Often, we try to organize related items into a resource group. But as the diagram depicts, we can have more than one resource group to organize our Azure resources.

[Video description begins] A diagram displays. An Organization points to Subscription1, which has Licenses. Subscription1 bifurcates into Resource Group1 and Resource Group2. Both Resource Groups bifurcate into three Resources. [Video description ends]

So Azure Subscriptions then work in such a way that we can have one Azure account that we sign into, but we can switch between multiple subscriptions. We can do that in the Azure Portal, so in the GUI. But we can also do it using command line tools. Whether we're talking about programming SDKs or the Azure CLI, even PowerShell commandlets.

We can switch between subscriptions, so that we can manage resources within that subscription hierarchy. Billing also occurs separately for each individual subscription. And that's why sometimes it might facilitate having large scale projects that might run for long periods of times under their own Azure subscription, although, that certainly not a requirement. And if you sign up for a trial account, a trial subscription in Azure, once that time runs out, you can then convert it to a paid subscription, such as a Pay As You Go, for example.

Azure Policies and Initiatives

[Video description begins] Topic Title: Azure Policies and Initiatives. Your host for this session is Dan Lachance. [Video description ends]

In Microsoft Azure, we pay for the resources that we use. And so it's important that we have a way to control how resources can be deployed and which resources can be deployed by whom, and also how they can be managed. And that's where Azure policies and initiatives come in. By definition, an Azure Policy lets us control the deployment and management of Azure resources.

And it's much more granular than RBAC, role-based access control. With RBAC, we could determine, for example, whether an administrative assistant in Azure has the ability to deploy virtual machines or not. However, with an Azure Policy, we can be much more granular. So for example, we can limit how many virtual machines users can deploy and in which specific regions.

Now, we also have Azure Initiatives. Initiatives take Azure policies a step further because it groups similar policies together for management. So that we might have a series of individual policies that lock down certain Azure resources to be compliant with a certain law or set of regulations. And so we might have the initiative with the name of that law or regulations, and all the individual policies that that would entail would be contained within that initiative.

There are built-in policies that we can use. In Azure, built-in policies allow us to control resource deployment by region. We can control resource deployment by type, such as whether we can deploy storage accounts, or load balancers, or virtual machines and in which regions. We can also use built-in policies to essentially audit things, such as to verify the version of SQL Server that we are using in the cloud.

Now, custom policies can also be built. We can do this by getting them from Internet repositories like GitHub. We can manually create policies. We could copy an existing policy and then make minor changes. Either way, in the end, a policy uses JSON syntax. Notice here, also, in the middle of these two listings of built-in and custom policies, we see policy parameters.

Policy parameters are basically variable values that we can pass to the policy. And it enables us to reuse policies instead of hard-coding things like region names or virtual machine names and so on. Now bear in mind that whether we use built-in or custom policies to control resource deployment or management, we're really talking about these policies that will apply not only to the creation of new resources, but also to existing resources.

We can assign policies using a specific scope, which could include a specific resource group. Now if we assign a policy to a resource group, then it applies to child items within that resource group. Remember that policies apply not only to the creation of new resources but to existing ones. So that, for example, if we've got a virtual machine type that's been deployed in a resource group with a policy assigned to it that specifies only another virtual machine size that was allowed, then we'll see this show up as being non-compliant.

We can also assign policies to a management group. A management group essentially allows us to work with policies across more than one Azure subscription. We can also, of course, assign a policy to an entire Azure subscription, and that will flow down through the hierarchy. Under the subscription, of course, we would have resource groups under which, we would then have resources themselves, like virtual machines, storage accounts, and so on.

Bear in mind also that the permissions get inherited by the child objects throughout this hierarchy. There are exclusions that are permitted. So you might specify at the subscription-level that there are only specific Azure regions to which virtual machines of a certain kind can be deployed. But you might make an exclusion on a specific resource group. Then we have to think about policy effects, where we can deny, for example, the creation of something that doesn't fall into the scope of the policy.

We can append data. We can deploy only if something doesn't exist. Or we can audit if it doesn't exist. So in the case of deny, for example, as a policy effect, which we specify within the policy document itself, what we're talking about doing is notifying or making a note of items that are non-compliant. So imagine, if the policy only allows a specific virtual machine size, yet there are existing virtual machines that do not use that same sizing, and so that's a violation of our policy. So non-compliant items are then marked as non-compliant, but they wouldn't be deleted.

Assign Built-In RBAC Roles

[Video description begins] Topic Title: Assign Built-In RBAC Roles. Your host for this session is Dan Lachance. [Video description ends]

The purpose of Role-Based Access Control, or RBAC, in Microsoft Azure is to control permission's assignment to Azure resources. Here, in the Azure Portal, I've signed in not as a global administrative type of account, but as a regular user, jgold. And in this case, I'm looking at the virtual machine's view, and despite the fact that I might try to refresh the view, nothing shows up.

Now, what I'm demonstrating here is that user jgold does not have access in this particular example to virtual machines. The same thing could be said about going to the storage accounts view where nothing shows up at all, at least for this particular user, jgold.

[Video description begins] The Microsoft Azure web page displays. The Virtual machines page is open. In the left pane, there are various options, such as All resources, Resource groups, and App Services. On the right-hand side, options, such as Add, Reservations, and Edit columns display. The table shows 0 items. The host points to the user name and then clicks the Refresh hyperlink. Next, he clicks the Storage accounts option in the left pane. The Storage accounts page displays. Options, such as Add, Edit columns, and Refresh display. The table shows 0 items. [Video description ends]

However, in the Azure portal, when I'm signed in using an administrative account, in this case, stefan.samms, we can see indeed there are virtual machines, and there are storage accounts. So one way that you can work with role-based access control is on a per individual resource basis.

[Video description begins] The Virtual machines page displays for an administrative account. It shows list of virtual machines with details, such as Name, Type, Kind, and Resource Group. He clicks the Storage accounts option. The Storage accounts page displays. It shows the list of storage accounts with details, such as Name, Type, Kind, and Resource Group. [Video description ends]

So for example, I could go into the Properties of a storage account, I could choose access control, IAM, and then I could choose Roles. And over here, I can see role definitions related to this particular type of item. In this case, the storage accounts. So we've got some Backup options, some Monitoring, Reader, and Data Access options, and so on.

[Video description begins] He clicks the stor14567 storage account from the list. The stor14567 page displays. On the left-hand side, options, such as Overview, Activity log, and Access control (IAM) display. On the right-hand side, details, such as Resource group, Status, and Location display. He clicks the Access control (IAM) option. The Access control (IAM) page displays. It has different tabs, such as Check access, Role assignments, and Deny assignments. He clicks the Roles tab. The list of roles displays with details, such as Name, Type, Users, and Groups. He clicks the Add hyperlink, which displays two options, Add role assignment and Add co-administrator. He selects Add role assignment. The Add role assignment dialog box opens. He clicks the Close button. [Video description ends]

Now, what I could do is click the Add button to add a role assignment where I could chose a role and a specific principle that should have that privilege. So for example, why don't we do this for virtual machines? Although, it doesn't really matter, other than what your needs are.

So I'm going to go into a particular virtual machine, let's say East Windows VM1. And I'm going to go into Access control, IAM. I'll click on Roles. And really, what I want to look at is adding a role, so I'll click the Add button and I'll choose Add role assignment.

[Video description begins] He clicks the Virtual machines option. The Virtual machines page displays. He clicks the eastwindowsvm1 virtual machine from the list. The eastwindowsvm1 page displays. He clicks Access control (IAM). The Access control (IAM) page displays. He clicks Roles. The list of roles displays. He clicks the Add hyperlink and selects the Add role assignment option. [Video description ends]

Now, from this list, I have roles here that are specific, in this case, to this class of resource, in this case, a virtual machine, so whether I want to set as a virtual machine contributor. If you click the little informational icon, it will describe what permissions are allowed if you set the user or group as an occupant of this role.

So here, it says virtual machine contributor lets you manage virtual machines but not access them, and not the virtual network or storage account that they might be connected to. Okay, well, if that's what I want here, in this case, I'm going to go ahead and select it. And then, down below, I can choose from users and groups. I'm going to use my HQ_AzureIT group.

So I'm making sure that this group is assigned the virtual machine contributor role, in this case for a specific virtual machine called eastwindowsvm1. Now, user jgold is a member of this group.

[Video description begins] The Add role assignment dialog box opens. It has various fields, such as Role, Assign access to, and Select. The host selects Virtual Machine Contributor from the Role drop-down list. Next, in the Select field, different users and groups display. He selects HQ_AzureIT. He clicks Save. [Video description ends]

So I'm going to go ahead and click Save to save that role assignment. And then it says the role assignment succeeded.

[Video description begins] On the top-right corner, a message displays, which states - HQ_AzureIT was added as Virtual Machine Contributor for eastwindowsvm1. [Video description ends]

Now, after signing out and signing back in with that same user account, notice that in the virtual machines view, I see that single virtual machine to which the role grants me access, in this case, for virtual machine contributor purposes.

But if I go to other views like Storage accounts and so on, I don't even see the storage account associated with that virtual machine. If I go to things like virtual networks, I also don't see anything. Although, I know that those are also required for a virtual machine to function properly.

[Video description begins] The Microsoft Azure web page displays for the user - Jonathan Gold. The Virtual machines page displays. The list shows 1 virtual machine added - eastwindowsvm1. He clicks the Storage accounts option. The Storage accounts page displays. Next, he clicks the Virtual networks option. The Virtual networks page displays. He opens the Virtual machines page. [Video description ends]

Now, back here, in the Azure Portal as the global administrator account, so not the regular user jgold to which we have assigned a role through a group membership, I've gone to the Resource groups view. So if I pop-into the Properties blade for our resource group, it too has an Access Control, IAM, option. If I click on that, I can also add a role assignment from here.

Except, when you look at the list of roles, it's going to be much longer. Because it accounts for the different types of Azure resources, including virtual machines that might be deployed into this resource group. So by setting these permissions on a resource group, you are then applying this to the resources deployed within the resource group. So you can see then how role-based access control can facilitate permissions management to Azure resources.

[Video description begins] The Microsoft Azure web page displays for the administrative account. The Resource groups page is open. It displays the list of resource groups with details, such as Name, Subscription, Location, and Tags. He selects Rg1 resource group from the list. The Rg1 page displays. He clicks the Access control (IAM) option. The Access control (IAM) page displays. He clicks the Add hyperlink and selects Add role assignment. The Add role assignment dialog box opens. He clicks the Role drop-down arrow, which displays a list of roles. [Video description ends]

Create a Custom RBAC Role Using the CLI

[Video description begins] Topic Title: Create a Custom RBAC Role Using the CLI. Your host for this session is Dan Lachance. [Video description ends]

Here in Microsoft WordPad, I've created a custom role file using JSON syntax, where we've got an open curly brace and a closing curly brace. And then we've got things like the name of this custom role that I'm going to build. It's going to be called The Overseer. And the IsCustom flag is set to true, because it is a custom RBAC role that I am creating.

I've got a description here, and importantly, here I've got the Actions. What can anyone that might be assigned to this role do? Well, they have access to read all items. So */read, to be able to see if it will have read only access to everything within a subscription because down below for the AssignableScope, I've set the specific subscription ID for my Azure subscription.

[Video description begins] A WordPad file with title MyCustomRolejason displays. The code reads as the following: { "Name": "The Overseer", "IsCustom": true, "Description": "Subscription-level viewing..", "Actions": [ "*/read" ], "NotActions": [ ], "AssignableScopes": [ "/subscriptions/00da78ac-9d0e-427b-80da-e1b07c749f72 ] }. The Microsoft Azure web page displays. In the left pane, it has various options, such as Home, Dashboard, All services, and Resource groups. On the right-hand side, it has Azure services, such as Virtual machines, Storage accounts, and App Services. [Video description ends]

Here in the Azure portal if you're wondering how do I find out what my subscription ID is, one way is simply to go into your search box at the top. I've searched for sub so that I can choose Subscriptions and all my subscriptions will be listed here along with the subscription ID.

[Video description begins] The host enters sub in the Search field and selects the Subscriptions option from the drop-down menu. The Subscriptions page displays. The table displays the Pay-As-You-Go option as the Subscription with details, such as Subscription ID, My Role, Current Cost, and Status. He points to the Subscription ID. [Video description ends]

So using the Azure CLI that I've downloaded and installed locally on my on-premises station, I've already run the az space login command. So I've authenticated to my Azure subscription.

[Video description begins] The CommandPrompt window displays. It shows the version 10.0.17763.379 of the Microsoft Windows installed. At the command prompt, he enters and executes the authentication command az login. The output displays the details of AzureCloud. He then enters the cls command to clear the screen. [Video description ends]

So the next thing I'm going to do is create a role using the az role definition create command. So --role-definition, I simply refer to the path and name of the json file that we looked at that defines the role, assignable scope, and the actions that are either allowed or not allowed.

[Video description begins] He enters and executes the following command: a: role definition create -- role-definition d:\mycustomrole.json. [Video description ends]

So I'm going to go ahead and press Enter to create the role. And after a moment, we can see that we've got some returned JSON which indicates that the custom role was created.

[Video description begins] He returns to the WordPad file. [Video description ends]

Back here in WordPad, you can even clean it up a little bit so things are on one line instead of wrapped across multiple lines, if it's easier to read this way. So we've got our new custom role called The Overseer, that will have been created. It's a custom role and as we described earlier, it will provide read-only access to resources within the listed Azure subscription.

[Video description begins] He goes to the CommandPrompt window. He enters and executes the following command: a: role definition list --custom-role-only true pipe find "roleName". [Video description ends]

Back here in the CLI, we can use the az role definition list command, -- custom-role-only true, so only show custom roles. And I'm going to pipe that to the Windows find command, because all I want to see is the roleName attribute, or lines that display that, I should say. And notice here we can see our custom role, The Overseer.

[Video description begins] The result shows the role name as The Overseer. [Video description ends]

Managing Custom RBAC Roles Using the Portal

[Video description begins] Topic Title: Managing Custom RBAC Roles Using the Portal. Your host for this session is Dan Lachance. [Video description ends]

Once you've created a custom role, and I've already done this using the Azure CLI in another demo called Create a Custom RBAC Role Using the CLI. Well, now it's time to assign it, and to put it into effect, and I'm going to do that here in the Azure portal. Now I can apply custom roles or built-in roles at the Azure subscription level, or to be a little more specific, in the hierarchy below that.

I can assign roles to specific scopes like resource groups, or even individual resources, like storage accounts, and virtual machines, and so on. In this case, I'm going to do it for the subscription level. So in the search box at the top, I'm going to search for sub, and I'm going to choose Subscriptions, and I'm going to click on my subscription,

[Video description begins] The Microsoft Azure web page displays. In the left pane, it has various options, such as Home, Dashboard, All services, and Resource groups. On the right-hand side, it has Azure services, such as Virtual machines, Storage accounts, and App Services. The host enter sub in the Search field and selects Subscriptions from the drop-down list. The Subscriptions page displays. The list shows the Pay-As-You-Go subscription with details, such as Subscription ID, My Role, Current Cost, and Status. [Video description ends]

and I'm going to choose Access Control (IAM). Now here, I'll see any roles that are available here, whether they're built in, or as I scroll further, and further down, such as into the T's, I'll also see our custom role called The Overseer. Now I can also click the Add button up here if I actually want to add a role assignment, which I do.

[Video description begins] The Pay-As-You-Go Subscription page displays. He clicks the Access control (IAM) option from the left-hand side. The Access control (IAM) page displays. He clicks the Roles tab. The list of roles displays and he points to The Overseer role. Next, he clicks the Add hyperlink, which displays two options, Add role assignment and Add co-administrator. He selects Add role assignment. [Video description ends]

So I'll choose Add role assignment, and the role here is going to be the custom RBAC role that was created called The Overseer. If I actually hover over the little information I, it even shows the description, in this case it says Subscription-level viewing, so I'll select that. And I want to assign this custom role to a group in Azure Active Directory Called HQ_AzureIT, and so I'll go ahead and click Save.

[Video description begins] The Add role assignment dialog box opens, which has various fields, such as Role, Assign access to, and Select. He selects The Overseer in the Role drop-down field. Then, in the Select field, some users and groups display. He selects HQ_AzureIT and clicks Save. [Video description ends]

And so at this point the role has been applied to the entire Azure subscription, so if I go look at Azure Active Directory groups. And if we take a look at that group, HQ_AzureIT, and specifically the members, the members of the group. In this case only one, Jonathon Gold, will assume the privileges of that custom role which is read-only access to all items, in this case, for the entire subscription.

[Video description begins] He clicks the Azure Active Directory option. The Default Directory - Overview page displays. Next, he clicks the Groups option. The Groups - All groups page displays the list of groups. He selects the HQ_AzureIT group. The HQ_AzureIT page displays. He clicks the Members option. The Members page displays. It shows the user - Jonathan Gold. [Video description ends]

And I've just jumped in to Wordpad here so that we could quickly look at the definition that was used to create that custom role in the CLI. And notice here, it is read access tied to a subscription, so the AssignableScope is set to the subscription level.

[Video description begins] The Wordpad file with the JSON code displays. [Video description ends]

Azure Resource Tagging

[Video description begins] Topic Title: Azure Resource Tagging. Your host for this session is Dan Lachance. [Video description ends]

You can add tags to Azure resources for descriptive purposes. Tagging an item such as a storage account, or a web app, or even a virtual machine, for instance, allows you to add metadata, more detailed information. Perhaps a project that something is assigned to, or a department that something falls under for billing purposes. So to get started here in the Azure Portal, I'm going to go to my Virtual machines view, for no purpose other than to select some kind of an individual Azure resource.

[Video description begins] The Microsoft Azure web page displays. In the left pane, it has various options, such as Home, Dashboard, All services, and Resource groups. On the right-hand side, it has Azure services, such as Virtual machines, Storage accounts, and App Services. The host selects the Virtual machines option. The Virtual machines page displays. [Video description ends]

And I'm going to select one of my virtual machines, to open up its Properties blade. And you'll notice that whenever you look at the Properties blade for, really, any type of Azure resource, you're going to see a Tags item. And when you click Tags, you'll see any existing tags that might have been set already. For example, this virtual machine is already flagged as Project. That's the name of the tag, with a value of ProjectB.

[Video description begins] He clicks the eastlinuxvm1 virtual machine. The eastlinuxvm1 page displays. On the left-hand side, options such as Overview, Activity log, and Access control (IAM). On the right-hand side, details, such as Resource group, Status, and Location display. He clicks the Tags option. The Tags page displays. It shows the name and value of tags assigned. [Video description ends]

Now, we can also add multiple tags to an item. So for example, I could build a new tag here called Department. And over here, I might put in Sales. So now I've got two tags. Now I have to click Save in this case, for that to apply to that particular item.

[Video description begins] In the Name column, he adds another tag with the name Department and in the Value column, he specifies Sales. Then, he clicks Save. Next, he clicks Close. [Video description ends]

Now, we can also select multiple items if we want to tag them all at once. So let's say, in this case, that I want to select a couple of virtual machines. So I can select them here. And then I can click the Assign tags button up at the top. And from here, I can choose from existing tag names that were created. For example, there's Department.

And if I want to assign them to Sales, then I can go ahead and do that. And then once I'm done, I can click Save to apply those tags. You can also work with tags programmatically, and through the CLI, and through PowerShell.

[Video description begins] The Virtual machines page displays. He selects the checkboxes for two virtual machines - eastwindowsvm1 and JumpBox. Next, he clicks the Assign tags hyperlink. The Tags page displays. He selects Department in the Name drop-down field and Sales in the Value drop-down field. Then, he clicks Save. Next, he clicks Close. [Video description ends]

Now, one of the reasons that that works well is because you can filter resources, for example here in the GUI, by tags. Notice here when you go to the All resources view, I see, well, all resources. But from here, I can choose the All tags drop-down. And I can select something such as Department, Sales. And when I do that, it filters the list. And now I see only Sales Department-tagged items. Which in this case, happens to be those three virtual machines.

[Video description begins] He clicks the All resources option. The All resources page displays. He clicks the All tags drop-down arrow and selects the Sales checkbox from the Department category. The virtual machines from the Sales department display. [Video description ends]

But this can also be helpful for billing. So let's say up in my search bar, I search for subscriptions, so sub. And let's say, I go to my subscription. So here's my subscription. I'll click on it to open it up. What I can do within here is go to Cost analysis.

[Video description begins] The host enter sub in the Search field and selects Subscriptions from the drop-down list. The Subscriptions page displays. The list shows the Pay-As-You-Go subscription with details, such as Subscription ID, My role, Currency, and Status. He clicks the Pay-As-You-Go subscription. The Pay-As-You-Go subscription page displays. He clicks the Cost analysis option. [Video description ends]

And then towards the top here, I can also start to look at this in a variety of different ways. So instead of just viewing what's presented in front of me, which is a great way to break down costs, I can also click Add filter. And here I might choose Tag. So from here, I can then start to select the appropriate tag information I want to view.

[Video description begins] The Cost analysis page displays. It shows different cost graphs and charts. It also shows various filter options, such as Date, Granularity, and Group by. He clicks the Add filter button. Three drop-down fields appears. He selects Tag in the first drop-down field. Then, he selects project and projectb in the other two drop-down fields, respectively. [Video description ends]

Now, sometimes, newly added tags won't show up here. For example, I don't see Department quite yet. But I could choose some existing tags that existed previously, such as project. And from here, I can start to select exactly what it is that I'm looking for in terms of filtering by, in this case, the project tag.

So to do that down below, I'll open the next drop-down list. And let's say, I want to see items flagged as projectb. And I can also choose, for example, to view perhaps this quarter or this year. So I'm filtering out by the projectb tag, that's the value. And then I can now see that the numbers are changing based on my filtered selection.

[Video description begins] The Date drop-down list displays. He selects This year option and the filter is set to 2019. The updated charts display. [Video description ends]

Azure Resource Locking in the Portal

[Video description begins] Topic Title: Azure Resource Locking in the Portal. Your host for this session is Dan Lachance. [Video description ends]

Sometimes, IT technicians make mistakes. It happens, we're human too. And so one option in Azure is to lock resources. You can lock resources from either being deleted or being modified. And you can do this at various levels such as doing it at the subscription level, a resource group level, or a specific resource. It's kind of like a safeguard. So to get started here in Azure, in the portal, I'm going to go to my Virtual machines view to lock a particular virtual machine.

[Video description begins] The Microsoft Azure web page displays. In the left pane, it has various options, such as Home, Dashboard, All services, and Resource groups. On the right-hand side, it has Azure services, such as Virtual machines, Storage accounts, and App Services. He clicks the Virtual machines option. [Video description ends]

Let's say my first VM here, eastlinuxvm1. So I'm going to click on it to open up it's Properties blade. And what you'll notice when you're working in the Azure portal is that if you scroll down of the Properties blade, you're always going to see this Locks item. And when you select it you'll see the current state of locking on that resource.

[Video description begins] The Virtual machines page displays the list of virtual machines with details, such as Name, Type, Status, and Resource Group. He selects eastlinuxvm1. The eastlinuxvm1 page displays. On the left-hand side, options, such as Overview, Activity log, and Access control (IAM) display. On the right-hand side, details, such as Resource group, Status, and Location display. The host clicks the Locks option. [Video description ends]

Now, this one states that this resource has no locks. So I'm going to go ahead and click Add to add a lock. And I have to give a name to the lock. So how about PreventChanges. And the Lock type can either be Read-only, which is what I want here to prevent changes, or Delete. In other words, prevent from being deleted. So in this case, I'm going to choose Read-only. And I could add additional Notes, which I won't. And I'm going to click OK.

[Video description begins] The Locks page displays. It has various options, such as Add, Resource group, and Subscription. It also displays a table with details, such as Lock Name, Lock Type, and Scope. The table shows there are no locks for the resource. He clicks the Add hyperlink. The following fields appear: Lock name, Lock type, and Notes. He enters PreventChanges in the Lock name field. In the Lock type drop-down field, there are two options, Read-only and Delete. He selects Read-only. Next, he clicks OK. [Video description ends]

And now, notice that we see our current resource locked to prevent changes, it's Read-only for this resource. And of course, we can go ahead and Delete that lock at any point in time.

[Video description begins] The Locks page displays the lock details. [Video description ends]

So let's try to make a change here. So I don't know, let's say we try to resize the VM. I'm going to go to the Size part of the Properties blade. And I'll click Resize. And immediately, it says Failed to resize the virtual machine and something about resources being locked.

[Video description begins] He clicks the Size option. The Size page displays. It shows different details, such as VM Size, Offering, and RAM (GB) in a tabular format. He clicks the Resize button. A message displays. It states - Failed to resize virtual machine. [Video description ends]

So we know that it's working already. So of course, if I go and remove that lock, okay, let's just refresh to make sure it's good and it is. If I were to go ahead now and decide that I want to resize something, then it will let me resize it. It's in the midst of happening. So we have the option then of doing this at pretty much any level in the hierarchy.

[Video description begins] He clicks the Locks option. The Locks page displays. He clicks the Delete icon for the PreventChanges lock and clicks Refresh. Next, he clicks the Size option. The Size page displays. He clicks the Resize button. A message displays. It states - Resized virtual machine. [Video description ends]

So for example, let's say I go into Resource groups. And if I go into resource group RG1 there it is, again, Locks. As you might expect, it would apply to the child items within the resource group.

[Video description begins] He clicks the Resource groups option. The Resource groups page displays. He selects Rg1. The Rg1 page displays. He clicks the Locks option. The Locks page displays. It shows that the resource has no locks. [Video description ends]

And if I start going into Subscriptions, then in the same way, we'll also have the option of setting Resource locks down here by choosing Resource locks and clicking Add and, basically, filling out the same type of thing again. So this is a great way then to essentially, protect yourself from yourself if you're the only Azure IT technician.

[Video description begins] The host enter sub in the Search field and selects Pay-As-You-Go from the drop-down list. The Pay-As-You-Go Subscription page displays. He clicks the Resource locks option. The Resource locks page displays. It shows details, such as Lock Name, Lock Type, and Scope. It displays that the resource has no locks. He clicks the Add hyperlink. The Add lock section displays. It has the following fields: Lock name, Lock type, and Notes. [Video description ends]

Azure Resource Locking Using the CLI

[Video description begins] Topic Title: Azure Resource Locking Using the CLI. Your host for this session is Dan Lachance. The CommandPrompt window displays. He enters and executes the following command: a: lock create -- name Rg1Lock --lock-type CanNotDelete --resource-group Rg1. [Video description ends]

You can lock Azure resources to prevent deletion or modifications at the subscription, resource group, and individual resource level. You can do that in the portal or, as we're going to see here, we can also do that using the CLI using the az lock create command. So I'm going to name my lock Rg1Lock because I'm going to lock a resource group, which will also apply to the child items deployed within that resource group.

So then I'm going to use --lock-type. And I'm going to use CanNotDelete, so preventing deletion. And then I'm going to specify the resource group by name here of course, using --resource-group. And the resource group in question here I want to apply the locking to is Rg1. So I'm going to go ahead and press Enter. Now after a moment, we can see that it appears we have some output from that command that tells us that the lock is in place.

[Video description begins] The output displays. It provides details on the lock that includes level, name, notes, owners, resource group, and type. He enters and executes the following command: cls to clear the screen. [Video description ends]

Let's clear the screen and let's verify this, by typing az space lock space list, this will show us any locks that we currently have in place. And here, we can see that it's called Rg1Lock. It's set to CannotDelete, and it's set for a particular resource group in this case, Rg1.

Here in the Azure portal, if I were to open up that resource group and view its properties blade and then click Locks. I would see here that we've got our lock here, Rg1Lock that we just created through the Azure CLI. So indeed, it is in effect.

[Video description begins] The Resource group Microsoft Azure window displays. The Resource groups page is open. He selects the Rg1 option from the list of Names displayed on the screen. The Rg1 - Locks screen displays. Then, he clicks the Locks option. The Locks page displays. It shows the following details: Lock Name as Rg1Lock, Lock Type as Delete, and Scope as the Resource group. [Video description ends]

I can also use the az lock show command, so I can view the id related to that lock. Which we see up here, we see the id. All I'm doing here is telling it I want to show something specific about a lock called Rg1Lock for a resource-group called Rg1.

And I'm going to control the output and view the id. So I'm going to query for the id, in other words only show me the id. And that's really essentially what we see up here at the top. So I'm going to go ahead and copy that, because what we can then do is use that id to remove the lock using az lock delete. And of course I can just use --ids and paste in or we can use a variable if we really wanted to.

But if I go ahead and remove the lock that way after that's completed, let's just clear the screen. If I run az lock list, if we spell that correctly that would be superb, so az space lock space list, there we are. Then we're going to get a whole lot of nothing returned because we no longer have a resource lock, we have removed it.

[Video description begins] The CommandPrompt window displays. It shows the following code: az lock show --name Rg1Lock --resource-group Rg1 --output tsv --query id. The result displays and the host copies the id. Next, he enters the following code: az lock delete --ids and pastes the copied id. He clears the screen using the cls command. [Video description ends]

Azure Resource Locking Using PowerShell

[Video description begins] Topic Title: Azure Resource Locking Using PowerShell. Your host for this session is Dan Lachance. [Video description ends]

In this demonstration, I'm going to use Microsoft PowerShell to manage Azure resource locks. Resource locking is helpful if you want to prevent unwanted modifications or the deletion of Azure resources. And we can set locking at the subscription resource group or at the resource level. So here in the PowerShell ISE, I've already got a script here, where in line 1 I'm creating or locking a resource using the New-AzResourceLock PowerShell commandlet.

So I have to provide a name for this lock. So I'm calling this Rg1, for resource group 1, NoDelete. And the LockLevel here will be CannotDelete, but I can also specify that I want to prevent modifications as opposed to deletions. And here the resource group name to which I want this applied is called rg1.

[Video description begins] The Windows PowerShell ISE window displays. The screen is divided into two sections. The top section is where the host writes the codes and the bottom section is where the output displays on executing the code. He enters and executes the following code in line 1: New-AzResourceLock -LockName Rg1NoDelete -LockLevel CanNotDelete -ResourceGroupName rg1. He clicks the Play button at the top to run the code. The Confirm window displays. [Video description ends]

So let's go ahead and execute that one line by putting our cursor on the line somewhere here in the ISE and then clicking the Run Selection button. I get a prompt, are you sure you want to create that lock? Yes, so I'll click Yes. And after a moment it appears that it's done. Why don't we check our work in the portal?

[Video description begins] The host clicks the Yes button and the output displays in the bottom section. [Video description ends]

Here in the portal, I'm in the resource groups view. There's Rg1, so I'll click on it. And in the Properties blade, I'll click Locks. Here we could see we've got the Rg1NoDelete lock name that we just specified and applied from PowerShell.

[Video description begins] The Microsoft Azure web page displays. The Resource groups page is open. He selects Rg1 from the list. The Rg1-Lock page displays and he selects the Locks option. The Locks page displays. It shows the following details: Lock Name as Rg1NoDelete, Lock Type as Delete, and Scope as Resource group. [Video description ends]

Now, of course, here in PowerShell, we can view any current lock configuration using the Get-AzResourceLock commandlet. So I'm going to clear the screen down below, then I'm going to click on line 3 here to run Get-AzResourceLock. And, again, we can see here it is. We've only got one here, it's called Rg1NoDelete. And we know that it will be applied specifically to our resource group called rg1.

[Video description begins] The Windows PowerShell ISE window displays. He executes the cls command in the output section to clear the section. Then, in line 3 he enters and executes the following code: Get-AzResourceLock. He clicks the Play button at the top to run the code. The output displays in the section at the bottom. [Video description ends]

Now, the next thing I want to do is remove that lock. So the first thing I can do here is create a variable. Creating a variable here called lockId. And I'm going to run Get-AzResourceLock and going to specify the ResourceGroupName. And then I'm going to refer to the .LockID property. Now, the reason that I've got the open and closed parentheses here is because I need some way to tell Powershell that what is within the parentheses is part of one expression, one statement in PowerShell.

Then after that, I want to refer to a property. Because if I don't have the parentheses around it, it's going to think that rg1.LockId is a parameter value, when really the only parameter value here for ResourceGroupName is rg1. So the result of that, the ID, the LockId, will be put in the LockId variable. And so after that in line 7, we can simply remove it using Remove-AzResourceLock. Just tell up a LockId based on the variable that we've created back up here in line 5. So I'm going to select those lines of code in my script here and I'm going to click the Run Selection button.

[Video description begins] He enters and executes the following code in line 5: $lockId is equal to (Get-AzResourceLock -ResourceGroupName rg1 ). LockId. He also enters and executes the following code in line 7: Remove-AzResourceLock -LockId $lockId. He clicks the Play button at the top to run the code. The output displays in the section at the bottom. [Video description ends]

Then I get a prompt. Are you sure you want to delete that? Sure, yes, I am.

[Video description begins] The Confirm window displays. The host clicks the Yes button and the output displays in the bottom section. [Video description ends]

And it looks like it's good. Why don't we verify our work by running Get-AzResourceLock? We get a whole lot of nothing. And why don't we just check it just for fun in the Azure portal. Why not? So here in the portal, I'm just going to open up that resource group and look at Locks, and we now see it says, this resource has no locks.

[Video description begins] The Resource groups Microsoft Azure window displays. The Resource groups page is open. He selects Rg1 from the list. The Rg1-Locks page displays and he selects the Locks option. The Locks page displays. It shows the resource has no locks. [Video description ends]                    


Common Data Privacy Frameworks
  - Data privacy has a big impact on organizational security policies especially as related to cloud computing. We have to consider the types of data that we need to safeguard using data privacy frameworks. Data such as Personally Identifiable Information otherwise called P-I-I or PII, Protected Health Information, PHI.
  - Data that resides within specific national boundaries might be subject to specific laws and regulations. But then we need to consider data that's being transmitted into a country from elsewhere, and also data being transmitted out of a country. With data privacy frameworks, the first consideration is Personally Identifiable Information or PII, which would include things like a person's phone number, their credit history, their mother's maiden name, their social security number, their credit card number, and so on.
So essentially, whatever can uniquely identify an individual in some way is called Personally Identifiable Information. Then on the right, we've got Protected Health Information which is more medically related. It would include things such as a patient's name, medical discharge dates, medical payments, past procedures, drugs that had been administered, and so on.

And so in relation to this type of information, we have to consider data privacy frameworks which outline how the data will be collected, how the data will be used. And whether or not the data will be shared with third parties. And often users must supply consent to some or all of these activities. And, there are also maybe laws and regulations that stipulate that this data collection use and sharing must be related directly to business practices. One example of data privacy is the General Data Protection Regulation

[Video description begins] Screen title: General Data Protection Regulation (GDPR) [Video description ends]

otherwise called GDPR. This applies to European Union countries. It's all about data privacy within the European Union. But also it deals with data that will be exported outside of the European Union. Microsoft Azure is GDPR compliant. Now if an organization is found to be in breach of GDPR standards, then they could possibly be fined up to 4% of their annual global amount of profit or 20 million pounds.

So whichever one is greater. So there's definitely an incentive then for European Union organizations that will work with data to make sure that they adhere with the GDPR. Then we've got the National Institute of Standards and Technology, otherwise called NIST. This is a set of international standards, some of which are related to IT security, so the cybersecurity framework, which focuses on things like critical infrastructure.

Now critical infrastructure would be things like the power grid, water supplies, dams, that type of thing. And also, sensitive data related to that hosted by cloud providers. Now there are many different types of publications such as NIST Special Publication or SP 800-122. This specifically is the guide to protecting the confidentiality of Personally Identifiable Information or PII, P-I-I.

And it relates to things like strong access control and protection of data at rest. But in order for us to implement these types of security controls in accordance with these types of data privacy frameworks, we need to first identify things like Personally Identifiable Information within the organization and the systems that will process and store that type of information.

And then, we have to think about minimizing the collection and use of Personally Identifiable Information so that it only is used strictly for business-related purposes. There are many other bodies of frameworks related to data privacy, including the International Standards Organization, ISO. This is international, and one of the many standards is ISO/IEC 27017:2015. And this deals with cloud computing security controls, related to things like access control. So being authenticated and then authorized to use specific cloud services or resources.

Cloud tenant isolation or separation from one another. And also the secure removal of cloud tenant data so that there are no artifacts that can be retrieved by unauthorized parties after the fact. So with data privacy frameworks, the first thing we have to consider is which data privacy laws and regulations affect the organization.

And then, we need to think about our cloud solution, in this case, Azure, to ensure that we are adhering to those respective laws or regulations. We then need to incorporate data privacy into organizational security policies. And then within the organization, assign responsibility for compliance to laws and regulations. This normally comes in the form of an organizational role called a compliance officer.


The Azure Security Center
The Microsoft Azure Security Center gives you a central place where you can view security related items to be in a better position to enhance your security posture with the use of Azure Cloud Computing Services.
And so here in the Azure Portal, in the navigator on the left at the very bottom, I'm going to click Security Center. But notice everything is gray in the properties blade, and
that's because we need to make sure that we're using a security center plan, and it's not enabled by default. But we're going to go ahead and start a trial, a 30 day free trial to be specific, so if I scroll down here on the far right, I can click Start trial.

[Video description begins] The Start trial button is located at the bottom of the page. [Video description ends]

So I'm going to go ahead and do that.

[Video description begins] A message box pops up in the right corner and it says:Trial started. [Video description ends]

And one of the things that it wants to do is install agents within my virtual machines in my Azure subscription, so it knows how secure they are or are not.

[Video description begins] A section titled Install agents automatically, displays. It has a table with the type of subscriptions installed, Pay-As-You-Go, in this case. It also has a button labelled Install agents. [Video description ends]

So I've got my subscription selected here, I'm going to go ahead and click Install agents. Once that's been done, we can see things become available in the properties blade. And I'm still in the Overview area where we can get a great list of overall suggestions related to security, or rather any security shortcomings related to our Azure environment.

[Video description begins] All the menu items in the navigator become enabled now. A Policy & compliance section displays on the right. It shows the Least compliant regulatory standards, Secure score, resource security hygiene, and Subscription coverage. [Video description ends]

So we can see we've got an overall secure score here of 348 out of 480. Well, that's not 480 out of 480, so let me go ahead and click on that to pull up some details related to that.

[Video description begins] The Secure Score Dashboard displays. It shows a section titled Secure score by category. Here, 4 categories are covered- Compute & apps, Data & storage, Networking, and Identity & access. Progress bars below each category shows the score. A table displays below the scores, and it contains 2 columns titled SUBSCRIPTION and SECURE SCORE. 1 subscription, Pay-As-You-Go, displays in the table. A hyperlink, View recommendations, is present next to this subscription. [Video description ends]

So down below, we can see our subscription, and we can see that we have a View recommendations link up above. You can also click on specific categories like Compute & apps versus Identity & access. Down below, I'm just going to click on View recommendations, so we can see all of them.

[Video description begins] The Recommendations page displays. All 9 resources in different categories display along with their health monitoring score, marked by different colors for different severity levels- red for high severity; orange for medium severity; and blue for low severity. Below this, all recommendations display in a table format with columns titled RECOMMENDATION, SECURE SCORE, and FAILED RESOURCES. [Video description ends]

Well, red naturally might be a problem, so let's see. We've got a problem here with our subscription, it says that we need to enable MFA multi-factor authentication. For accounts that have owner permissions on our subscription, apparently, that's not been done. That's a great point actually. Because with multi-factor authentication, instead of having knowledge of the username and password with overall access to our subscription.

We could add another factor such as requiring a smartphone that has a constantly changing numeric value, that is only good for a few seconds. So, when we have to authenticate, we'd have to specify the numeric code which is only good for a short period of time, in addition to having knowledge of the username and the password. That's a good way to secure our accounts through multi-factor authentication.

And we'll focus more on that in another demo where we focus on identity and access management. It says here we should also enable network security groups on subnets. So remember, you can click on each of these to get more further detail about what that description is for that recommendation.

[Video description begins] He clicks one of the recommendations, Enable Network Security Groups Groups on Subnets, and its page opens. It contains the number of Unhealthy resources and Healthy resources, and a Learn more hyperlink. Remediation steps also display. The page contains tabs- Unhealthy resources, Healthy resources, and Unscanned resources. Unhealthy resources tab is active now and it shows one unhealthy resource- Subnet1. [Video description ends]

So it'll go ahead and tell us the culprit, so to speak here, which in this case, happens to be Subnet1.

[Video description begins] The Subnet1 page opens. It contains fields such as Address range, Available addresses, Network security group, and Route table. [Video description ends]

And when I actually click on that, I can actually see details related to that, such as, the network security group, which is set to none for that specific subnet. So we can drill down and actually solve problems. We can also see here that we don't have endpoint protection installed on virtual machines, for things like anti-malware at least, in this case, for one of two virtual machines.

[Video description begins] He returns to the Recommendations page and hovers over the next recommendation. [Video description ends]

And if I click on that to drill down, we can see here the severity level is high and the culprit here apparently is a virtual machine called eastwindowsvm1.

[Video description begins] The Endpoint Protection not installed on Azure VMs page opens. It contains a table with columns titled VIRTUAL MACHINE, STATE, and SEVERITY. One VM is listed. Its name is eastwindowsvm1 and its state is open and severity is high. The following 2 links display at the top of the page: Filter and Install on 1 VMs. [Video description ends]

So, notice that we've got a link here to install on 1 VM, we can just click it and choose to install Microsoft anti-malware, we can go through and get that done.

[Video description begins] The Select Endpoint Protection page opens. One software, Microsoft Antimalware, displays here. [Video description ends]

[Video description begins] The Microsoft Antimalwareinstallation page displays. [Video description ends]

So not only does it point out any security deficiencies but it gives us a very convenient and easy way to solve the problem. Now, of course, if you have that problem on hundreds of virtual machines, that's probably not the best way to deal with it, however, it does work.

Now here, we've got Install on 1 VMs because that is what happens to be selected here. So if we select a bunch of them, for example, hundreds of them, then we can have the ability to install that endpoint protection agent on hundreds of VMs at once, so it's very convenient. 

[Video description begins] He returns to The Endpoint Protection not installed on Azure VMs page and unchecks the eastwindowsvm1 option. [Video description ends]

As we go further down the list in the Azure Security Center, we can also see it suggests that we don't have disk encryption applied on virtual machines for protection of data at rest, so we can go ahead and do that. So the security center that is designed to give us details on any security shortcomings in our Azure environment, along with the convenient way to address those concerns.


Azure Service Trust Portal
  - The Microsoft Azure Service Trust Portal allows us to track compliance, to run audit reports on that compliance. And also to focus on data protection in line with laws and regulations. The Azure Service Trust Portal allows us to work with the Compliance Manager. This allows us to be compliant with different data protection regulations including HIPAA, GDPR, ISO 27001, to name just a few.

We can also track our compliance with specific rules that need to be followed, and we can also even assign compliance responsibility. In the Azure Service Trust Portal, another aspect is auditing. Where we can run audit reports for compliance with standards related to ISO, PCI DSS for cardholder data protection, FedRAMP, SOC, otherwise called SOC.

So for example, SOC3 allows organizations to adhere to rules for internal controls within an organization for things like business processes and the integrity of those business processes. Finally, the Azure Service Trust Portal also deals with data protection, where documentation is made available. There is also mappings made between data privacy frameworks, a variety of them, to the Azure security controls will allow organizations to be compliant in those specific regards. There are also frequently asked question documents and white papers that are available for Azure IT technicians.


Block Public SSH and RDP Traffic
When you deploy Linux and Windows virtual machines into Azure, you probably want to remotely manage them from on-premises. And so you might use SSH to get into Linux hosts or the remote desktop protocol client to get into Windows hosts. The problem is we don't want that type of accessibility through a public IP address on each VM.

Instead ideally, we would use a point to site VPN connection from our administration on-premises to Azure, and then SSH or RDP to the private IP address of those VMs. So here in the Azure Portal, why don't we start by going into the Virtual machines view on the left?

[Video description begins] The Microsoft Azure portal home page displays in a browser window. The host clicks Virtual machines in the navigator pane. Its page opens on the right. It has buttons titled Add reservations, Edit columns, Assign tags, Start, Stop, Delete, and Services. The available Subscriptions, namely, Pay-As-You-Go, displays below the buttons. By default, Filter fields are set to All resource groups, all types, All locations, all tags, and No grouping. A table with columns titled NAME, TYPE, STATUS, RESOURCE GROUPS, LOCATION, MAINTENANCE, SUBSCRIPTION, and TAGS, displays below. The table displays 2 items- eastlinuxvm1 and eastwindowsvm1. [Video description ends]

Let's start with our eastlinuxvm1 virtual machine that's running Linux.

[Video description begins] The eastlinuxvm1 page opens. It shows the virtual machine settings such as Resource group set to Rg1, Status set to Running, and Location set to Canada East. [Video description ends]

Now, the first thing I notice is it does have a public IP address. Well, if that's only for the purpose of allowing inbound administration, that's a problem. So what we're going to do is click on Networking over on the left as well.

[Video description begins] He clicks Networking in the navigator. Its page opens. The Effective security rules and Topology hyperlinks display here. The Public IP is present as a hyperlink below Effective security rules. [Video description ends]

And I can see here that if we look at the effective security rules, I'll click on Effective security rules. And the virtual machine has to be running for effective rules to display here. We'll then see that we've got access that would be allowed here into the virtual machine over a specific port.

[Video description begins] After the security rules complete the loading process, eastlinuxvm1 -Effective security rules page opens. Associated NSGs field has the value NSG1 (Subnet). 2 tabs- eastlinuxvm1 and NSG1 display below. eastlinuxvm1 is open now. The text- Inbound rules- display on the top. A table with columns such as NAMES PRIORITY, SOURCE, SOURCE PORTS and DESTINATION, displays. [Video description ends]

So for example, we've got a port 22 rule from any source that's allowed to get to any destination on TCP port 22, which is SSH. However, do we really want to allow that coming in? The answer is no. And at the same time, we really don't need a public IP address if that's the sole purpose of it for this Linux virtual machine.

So let's clean this up a little bit. We're going to go ahead and close out some of these things. I'm going to go back to Networking, where notice we've got the public IP listed here for this Linux virtual machine.

[Video description begins] He returns to the Networking page and clicks the link under the Public IP field . A page titled pubIP1 opens. The page has buttons titled Associate, Dissociate, Move, Delete, and Refresh. [Video description ends]

And when I click the link, it takes me into that because it's a separate Azure resource, the public IP. I'm going to click Dissociate. Now I'm going to do that so

[Video description begins] When he clicks Dissociate, a confirmation window pops up and he clicks Yes in it. [Video description ends]

that it's not associated any longer with the Linux virtual machine.

[Video description begins] A window with the text: Saving network interface- pops up in the top-right corner of the page. [Video description ends]

And if this public IP address resource isn't needed for anything else, I can even go ahead and delete the resource. It's always a good idea to delete Azure resources that you are certain you no longer need. Because then you're not incurring any additional charges, plus it just makes management of your Azure resources a little bit more streamlined.

[Video description begins] A window with the text: Saved network interface- displays. [Video description ends]

Now, at the same time, I'm going to close out of that and go back to the Networking part of the properties blade for my Linux virtual machine. Because I'm interested in looking at the network security groups here. So I've got a couple of network security groups.

Remember, if we click on Effective security rules, if the VM's running, we'll see all effective security rules that apply to this particular virtual machine at this point in time. And here, I've got a network security group for the VM itself and then another one for a subnet. And if I click on these links, notice I can see where the rules comes from. And so the Port_22 item is from the eastlinuxvm1-nsg, or network security group. I'm going to go ahead and click on that so we can look at the inbound rules.

[Video description begins] The eastlinuxvm1 -nsg page opens and he clicks the Inbound security rules menu in the Settings menu group in the navigator. On the right, the rules display in a table containing columns titled PRIORITY, NAME, PORT, PROTOCOL, SOURCE, DESTINATION, and ACTION. 4 rules display in the table. [Video description ends]

Here is the Port_22 rule, so I'm going to go ahead and select that and delete the rule, why?

[Video description begins] The Port_ 22 pane displays on the extreme right. It has 4 buttons titled Save, Discard, Basic, and Delete. When he clicks Delete, a confirmation window displays and he clicks Yes in it. [Video description ends]

Because we don't need it. What we're going to be doing, as we've seen in another demo, is connecting our on-premises station through a VPN to Azure, that's called a point to site VPN. After which, we can then connect to the private IP of the virtual machine.

[Video description begins] He clicks Overview in the navigator. [Video description ends]

So let's just go ahead and close out of this network security group, we can see the rule's been removed. And back here, let's just close the network interface actually. We've got all kinds of levels of resources we're into. Now let's go back to the overview for the VM itself. So what we're going to be interested in then is noting that we no longer have a public IP address. But if I go ahead and click on Networking on the left, we can see the private IP for this host.

[Video description begins] He highlights the value in the Private IP field. [Video description ends]

And so the private IP then is going to go ahead and allow us to make a connection to that host once we have VPNed into the network environment. And just bear in mind that the default rule here, AllowVnetInbound will allow connectivity for resources on the VNET to resources in that same VNET, like our Linux virtual machine.

[Video description begins] He hovers over the AllowVnetInBound port rule in the displayed table. [Video description ends]

So we could go ahead and follow this practice and apply it to all the virtual machines that we don't want publicly accessible for remote management purposes.

Azure Government Services

[Video description begins] Topic title: Azure Government Services. Your host for this session is Dan Lachance. [Video description ends]

Cloud computing with Azure presents a lot of interesting opportunities, not only for private sector enterprises, but also for the US government.

[Video description begins] Screen title: Azure Government Services. [Video description ends]

So Azure Government Services provides specific Azure services for US government agencies, such as the Department of Defense or DoD. So federal agencies, state agencies, and even municipal agencies. With Azure Government Services, one consideration is a hybrid cloud, where there are some government agency data centers, that can be extended into the Azure cloud.

So that some services and data reside in the cloud and are replicated from on premises, either for safe keeping or for high availability. Also Azure Government Services uses dedicated data centers located throughout the United States, although those locations are not disclosed. There are many different types of connected devices that can be related to government use of the Azure government cloud. Such as traffic control systems, heating, ventilation and air conditioning for government agency facilities.

Also, entire smart cities and military sites. With Azure Government Services, we need to think about differences between how we would configure IT systems and services on premises versus the cloud. Because while there are a lot of similarities, it's not done in exactly the same manner. One reason for this is shared responsibility, because when we use cloud computing, depending on exactly what we're deploying into the cloud, such as an infrastructure as a service virtual machine.

Means that some of the underlying responsibility such as for the hypervisor that hosts our virtual machine would be the responsibility of Microsoft in the Azure cloud. But the maintenance and the application of updates and configuration of the operating system in that virtual machine, in this case, would be the responsibility of us, the cloud consumer.

Things like DNS name resolution, bear in mind, set as a default Azure-provided DNS. Which means that if we want to use our own DNS servers, that has to be a conscious decision, and that's a configuration we'd have to make.

Also, virtual network IP addresses that are available. Bear in mind that when you might be configuring a government agency network on premises and assigning IP address ranges. You will have more IP addresses available for your use than you might in the Azure cloud, because Azure reserves IP addresses. As seen here, when we are adding a subnet to a Microsoft Azure virtual network, notice that there are five Azure reserved addresses that are allocated.

[Video description begins] Screen title: Azure Virtual Networking. A screenshot of the Add subnet dialog box displays. It contains 2 fields- Name and Address range. Subnet4 displays in the Name field and 10.1.0.0/24 displays in the Address range field. Below this field is the text- 10.1.0.0-10.1.0.255 (251 + 5 Azure reserved addresses). [Video description ends]

So that means within your IP address range for the subnet, that's five IP addresses that you cannot use. And so that's an important consideration. Azure Government Secret is a part of the Azure government cloud that adheres to Department of Defense Impact Level 5. Which deals with controlled yet unclassified information, otherwise called CUI. And it's also compliant with the use of National Security Systems or NSS.

So this is any type of computing system that processes data that meets a certain level of security and is deemed acceptable for use in this context for US government use. Also, Azure Government Secret uses dedicated infrastructure so that we've got a physical separation between cloud tenants. And connectivity is through the Non-classified Internet Protocol Router Network, otherwise called NIPRNet. NIPRNet is a private network that's used for the sharing of information that's considered unclassified for Azure government use.


Azure Germany Services
Azure Germany services, as the name implies, relates to the use of Azure cloud services in the German environment. This means that workloads need to run in German data centers. And the data also needs to reside in German data centers. This means that we need to have appointed a German data trustee that is responsible for the oversight of these data centers in Germany.

And this is done specifically by T-Systems International. There are only two Azure German regions. Now, replication occurs between these regions for high availability like it would between any other regions around the world for Azure. The two regions are Germany Central and Germany Northeast.

When you use Azure Germany services, you'll notice that some of the DNS suffixes are different than what you might be used to when you use Azure outside of Germany. So for example, when we're using Azure SQL we would have a DNS suffix by default that ends in .database.cloudapi.de. Whereas outside of Germany, normally that SQL suffix for DNS would be .database.windows.net. And you'll see some of those changes with a variety of different Azure services that use DNS suffixes.

In Azure Germany services, ExpressRoute circuits are supported, but only for Azure not for Office 365. ExpressRoute circuits use a local point of presence so that organizations, or in some cases government agencies, can have a dedicated network circuit or link straight from their data center directly into the Azure cloud without traversing the Internet.

Azure Active Directory is supported with Azure Germany services, however, you can't use a standard Microsoft account sign-in for Azure. Where that will work outside of Azure Germany, it does not work with Azure Germany services.


View Azure PCI DSS Compliance
PCI DSS is a security standard that applies to organizations that deal with cardholder data, things like credit cards and debit cards. And it's a series of security controls that should be put in place to ensure the safeguarding of that type of data. And in Azure, we have a way to view our compliance based on our current configuration of our Azure resources. While it's not complete and doesn't give us a 100% assurance that we are complying, it certainly a very good starting point. So to get to this, the first thing I'll do here in the Azure Portal is go to the Security Center down at the bottom of the left-hand navigator.
And then in the properties blade for the Security Center, there's something you'll see under policy and compliance called Regulatory compliance which is currently a preview feature. So I'm going to go ahead and click on it. Now over on the right, I can see we've got number of different standards bodies here such as ISO 27001, SOC TSP, and

[Video description begins] A Download report hyperlink displays on the top of the page. A donut chart titled Regulatory compliance assessment displays below. It shows the number of failed, passed, and skipped assessments, denoted by colors- red, green, and grey, respectively. On the right, the Regulatory standards compliance status report displays. It shows assessment status for 4 services- Azure CIS1.0.0, PCI DSS3.2, ISO27001, and SOC TSP. The page also shows 4 tabs by the same name as the services, plus a tab titled All. [Video description ends]

of course, what we're looking for PCI DSS. It says that out of 30 past controls, we've got 30. However, that doesn't mean we are 100% compliant with what we should be in a PCI DSS context if we're dealing with cardholder data. So I'm going to click the link down below for PCI DSS 3.2. This gives me a bit more detail. I'm going to choose the checkbox for expand all compliance controls.

Because as you see, just because we have a green bar next to something. In this case, install and maintain a firewall configuration to protect cardholder data that comes straight from PCI DSS. Notice that we've got some compliance green bars here but others, not necessarily. So we have to take a look at those and

[Video description begins] A multi-level list of compliance controls displays. It has a total of 4 items- 3 of which have a green bar before them, and 1 has a grey bar. [Video description ends]

address them, so we can expand upon them to read more details about what we should be doing to be fully compliant. And as we go further down through this list, well actually why don't we do this. How about I remove the check mark for expanding all compliance controls.

There's no question that the grayed out items mean that we are missing some things that we should be doing to secure cardholder data.

[Video description begins] The multi-level list collapses and a single, numbered list of compliance controls displays. Some of them have a green bar before them, and some have grey. A down arrow is present next to all controls. [Video description ends]

And if I expand them, in this case for the regular use and updating of antivirus programs. Well, it says that we should be deploying that solution, and we are not,

[Video description begins] When he clicks the down arrow of one of the compliance control, it expands downwards to reveal recommended steps. [Video description ends]

on all of our virtual machines. However, again, if we've got something like, assign a unique ID to each person with computer access, if we expand that, and take a look at these subordinate items. While some of them do have green bars, again some do not, there are gray bars. So we need to read those and make the appropriate changes if we are seeking full compliance, in this case, with PCI DSS.


Azure Service Level Agreements
Service Level Agreements or SLAs are contractual documents between a service provider and the service consumer. In this context, the service provider is Microsoft Azure, and in this context, the service consumer would be you. You are the Azure customer. So the service level agreement is important because it stipulates what we can expect for performance and uptime from a given Azure service.

So in other words, there's an SLA for each different Azure service. And it's important that we take a look at that to know what we can expect. Especially if we're burdened with meeting specific compliance guidelines, perhaps by certain industry standards. And we want to make sure that we comply with those through the use of Azure Cloud Computing Services.

[Video description begins] The Microsoft Azure home page displays in a browser window. The URL in the address bar is: https://azure.microsoft.com/en-ca/support/legal/sla. The re are some tabs on the page such as Overview, Solutions, Products, Documentation, Pricing, and Training. The page titles says: Service Level Agreements. [Video description ends]

So here, I've gone to the Microsoft Azure Service Level Agreements page. You can use your favorite search engine to search this up and you'll find it in a hurry. And if I scroll down, I can see that I've got a list of all kinds of different products and categories that I can do the SLAs for. So for example, let's say we start with the Compute category and I want to look at the SLA for Virtual Machines.

[Video description begins] He scrolls down to reach the products sections. On the left, all the products are listed and a search field is present at the top. He selects Compute from the product list and its page opens on the right. It has hyperlinks such as Virtual Machines, Azure Kubernetes Service, Service Fabric, and Batch. [Video description ends]

[Video description begins] A page titled- SLA for Virtual Machines- displays. It has a bulleted list of information and expandable links such as Introduction and General Terms. [Video description ends]

So here we see the service level agreement for virtual machines and whether it's deployed across two or more availability zones for high availability. And we can see here connectivity to at least one of them, 99.99% of the time. So as we go further down through a Service Level Agreement document, you'll see that it's broken into an Introduction section.

Then we've got a General Terms, so the terms that are used throughout the SLA document. And then as we go further down, we can see the SLA details for this specific service, in this case, virtual machines. And we can also determine what kind of, in this case, a service credit we might receive if we've got less than a specific amount of service uptime that is promised through the SLA.

Now that's just for virtual machines, let's say, we were to go and look at Storage. So I'm interested in looking at standard storage with storage accounts. So again, we can see that we've got 99.99% uptime, and the ability to process storage requests. And here it also even mentions something specific to this class of Azure resource, or storage, in this case, for Cool Access Tiers.

And again, we can view the introductory information about this SLA, in this case, for Azure storage, just as before, we can see General Terms. A lot of that would be similar across SLAs but they won't always be exactly the same naturally due to the nature of the different types of cloud services. And then we can see the SLA details. So for example, here, we've got references to Blob Storage Accounts, Hot Access Tier, Cool Access Tier.

And as we go further down again, we can see the processing time and the types of transactions that we can expect to get in terms of performance. And then if that is not met, then we can see the service credits related to the sub par performance that we might experience. Hopefully, you will never experience it. So, it's very important then that we keep abreast of all of these service level agreements and any changes to them for the Azure services that we are using.


Azure Preview Features and General Availability
Azure preview features are just that. They're new features that Microsoft is making available for testing purposes in the Azure environment because with Microsoft Azure there is a constant process for improvement of available cloud services. However, we don't want to use preview features for mission critical workloads.

Azure preview features can be turned on or off for the specific services that you might be interested in using the preview feature for. But the thing to bear in mind is that Azure preview features are excluded from Azure service level agreements or SLAs. So where the SLA might guarantee up time or response time, that would not apply if you are using an Azure preview feature. You can get notifications of Azure preview features that show up in the portal as pictured here.

[Video description begins] A screenshot of Azure Notifications page displays. The bell icon in the title bar is selected. There are 2 hyperlinks on the page, namely More events in the activity log and Dismiss all. A list of latest updates such as Recent, Resource groups, Marketplace, and Templates, displays below. [Video description ends]

When you look at the Notification icon, the alarm bell icon, you'll see notifications for the appropriate items that have new preview features. Here we can see preview listed next to Templates and the Quickstart Center. After Azure preview features have gone through the appropriate testing and feedback from customers has been brought into the final version of the product, the final version of that product or feature means it is now available generally. That's called general availability, often simply notated in documentation as GA.

[Video description begins] Screen title: Azure General Availability, abbreviated to: GA. [Video description ends]

So GA features and APIs then are covered by Azure service level agreements because its an actual feature that is supported now by Microsoft. It's no longer in the preview phase. Now if you're a developer, and you've taken advantage of some preview features, the reality is that sometimes features that were available in preview at the development level are removed once the feature or product goes to general availability.


Azure Monitoring and Service Health
Anyone that's worked in IT for more than a few minutes will understand how important log files are. Log files help us analyze any problems to quickly resolve the issue. They can also sometimes indicate suspicious activity. So there are plenty uses of log files. So in Azure Monitoring and Service Health, we have to consider how log files play in to this. So we've got the Azure individual resource activity log.

So when you open up the properties blade, say for a virtual machine in the Azure portal, you'll see that you've got activity log listed where you can click on it and see just that. Activity related to that resource such as creation, modification of that resource. We can get more detail with Azure Performance Diagnostics. This is a Window's virtual machine extension that you can install in to an Azure virtual machine.

Now, the great thing about this, is that the output from Azure Performance Diagnostics is stored in a storage account and it's left there for 30 days as a zip file that you can take a look at. Now, you might wonder how does it know where to put it? Well, when you install the Azure Performance Diagnostics Windows VM extension, you are prompted to specify storage account information in which it will dump this data.

Then we've got custom dashboards that can be built. Dashboards give us a quick visual way to reference potentially multiple different aspects of Azure Performance or alerts in one place. And we can build as many custom dashboards that we might want. So for example, someone that's responsible for the Azure compute side in the sense of virtual machines could have their own type of dashboard. Whereas if we're more responsible for an entire web application then we might have different items on a separate dashboard.

And speaking of web applications, Azure Application Insights is a big deal. This lets you monitor a web application. So what you do is install this small package within your application software and then you need to make an Azure Application Insights resource. Now the next thing that happens is it monitors the use of the application. And this is great for determining the performance of your Azure-based web application.

And you could even have the result of that Application Insights' data show up within a custom dashboard. So when it comes to Azure logs, then we know we can have specific application logs and that might be monitored using your custom solution, or with application insights. Diagnostic logs which might through the Azure virtual machine diagnostics extension. And then, of course, we've got activity logs, which is part of Azure, outside of the details that occur within the specific resource, in this case a virtual machine.

[Video description begins] A diagram of Azure Infrastructure displays. It has three areas, Application with Application Log, Guest VM OS with Diagnostic Logs, and Activity Logs. [Video description ends]

Pictured on the screen we can see the Azure monitoring portion of a virtual machine. So when you go into a virtual machine's properties blade in the portal and you're looking at the overview section. On the right if you scroll down, you'll see things like this, where we can show data for the last hour, 6 hours, 12 hours, 1 day, 7 and 30 days, and we can see the CPU average, the total network traffic. We can also see disk traffic, disk operations per second average. And we can even modify these items and add our own custom monitoring panels in the overview part of the properties blade of a virtual machine.

[Video description begins] The VM Overview page of Azure Monitoring displays. It has different sections for CPU (average), Network (total), Disk bytes (total), and Disk operation/sec (average). [Video description ends]

Pictured here, we can see that on the left if we click on All services in the navigator and search for monitor, then we can get up the Azure monitoring tool. Where we can see we can monitor and visualize metrics, query and analyze a variety of different types of logs. And what you're not even seeing here because it's off screen is also setting up alerts when certain thresholds are exceeded.

[Video description begins] The Microsoft Azure window displays. In the left pane, it has different options, such as Home, Dashboard, All services, All resources, and Resource groups. The All services option is highlighted. On the right-hand side, the Monitor - Overview page displays. On the left-hand side of the page, it has a Search field and various options, such as Overview, Activity log, Alerts, and Metrics. On the right-hand side of the page, the Get started hyperlink is selected and it displays two sections, Monitor & Visualize Metrics and Query & Analyze Logs. [Video description ends]


View Azure Resource Logs
The Azure portal allows you to view activity logs. And activity logs are not specific to what's running, for example, within a virtual machine, that's diagnostic logging. But rather we're talking about activity related to the management of the Azure resource itself. So for example, here in the Azure portal, if I were to go to the Virtual machines view, and if I were to click on a virtual machine, I could then view Activity log in the properties blade. The default Timespan is your viewing log information for the last 6 hours.

[Video description begins] The Home page of the Microsoft Azure window displays. In the left pane, various options, such as Dashboard, All services, All resources, and Resource groups display. On the right-hand side, the Azure services section displays options, such as Virtual machines, Storage accounts, and App services. The host clicks the Virtual machines option. The Virtual machines page displays the list of virtual machines with details, such as Name, Type, Status, and Location. He clicks the eastlinuxvm1 virtual machine. The eastlinuxvm1 page displays. On the left-hand side, various options, such as Overview, Activity log, and Tags display. On the right-hand side, details of the virtual machine, such as Resource group, Computer name, and Status display. He clicks Activity log. [Video description ends]

And we can see here a number of operations that were completed against this specific resource, in this case such as to Create or Update a Virtual Machine. We can see when it occurred, so its date and timestamped. We can see the subscription that it's tied to and then who initiated that event.

And of course, if we wanted to change the Timespan let's say to the Last month, click Apply. Naturally, we're going to have a lot more information to sift through, but depending on what our requirements are, that might be what we need to do. And we can add multiple filters, right now, we're looking at All severities.

[Video description begins] The Activity log page displays. It contains the Search field and different filtering options, such as Subscription, Timespan, Event severity, Resource group, Resource, and Add Filter. Then, it displays the list of operations in a tabular format, with specific columns for Operation Name, Time, Time Stamp, Subscription, and Event Initiated By. The host points to the first operation in the list. Then, he clicks the Timespan filter, which is set to Last 6 hours, selects Last month, and clicks Apply. The list of operations updates. [Video description ends]

But what we might do is change that for example, only to see Critical and Errors.

[Video description begins] He clicks the Event severity filter, which is set to All. A drop-down list displays four selected checkboxes: Critical, Error, Warning, and Informational. He clears the Warning and Informational checkboxes. The list of operations updates. [Video description ends]

Now if we don't have anything reported back that would be great. Otherwise, we'll see down below any items related to, in this case, those two selected severities. Now we can also view this type of Activity log for different types of Azure resources. So let's say, for example, we go to Storage accounts, and we pop up the properties blade for a storage account and go to the Activity log. Once again, we're going to see information related to activity for that specific resource.

[Video description begins] In the left pane, he clicks the Storage accounts option. The Storage accounts page displays the list of storage accounts with details, such as Name, Type, Kind, and Location. He clicks eaststorageaccount1. The eaststorageaccount1 page displays. On the left-hand side, various options, such as Overview, Activity log, and Tags display. On the right-hand side, details of the storage account, such as Resource group, Location, and Status display. He clicks Activity log. [Video description ends]

Now because this is a storage account, you can expect the nature of the operations to be a little bit different, such as listing Storage Account Keys for programmatic or command line access. And again, we can filter it out based on the Timespan, the severity, even the Resource group, the specific resource which we are looking at the properties blade for.

[Video description begins] The Activity log page displays. It contains the Search field and different filtering options, such as Subscription, Timespan, Event severity, Resource group, Resource, and Add Filter. Then, it displays the list of operations in a tabular format, with specific columns for Operation Name, Time, Time Stamp, Subscription, and Event Initiated By. The host points to the second operation in the list and then expands it. A sub-list appears for the selected operation. [Video description ends]

Now if I go to the All resources view, we can also drill down to even more specific types of resources like, for example, network interfaces that can be attached to virtual machines. If I click on that, once again, I can go to the Activity log and again we've got the filtering. So if I change the Timespan to something appropriate, then I'll see some reported information related to the management of that specific resource.

[Video description begins] In the left pane, he clicks the All resources option. The All resources page displays the list of different resources with details, such as Name, Type, and Resource Group. He clicks eastlinuxvm1764, which is a Network Interface. The eastlinuxvm1764 page displays. On the left-hand side, various options, such as Overview, Activity log, and Tags display. On the right-hand side, details, such as Resource group, Location, and Subscription display. He clicks Activity log. The Activity log page displays. He clicks the Timespan filter, selects Last month from the list of options, and clicks Apply. The list of operations displays. [Video description ends]

Now if we go back to something like Storage accounts, then we can also scroll down in the properties blade and if we go all the way down under Monitoring, we can also view Metrics.

[Video description begins] The Storage accounts page displays and he clicks eaststorageaccount1. The eaststorageaccount1 page displays. He scrolls down the list of options on the left-hand side and clicks Metrics in the Monitoring section. [Video description ends]

In this case, for a storage account, we've got metrics related to that specific type of items. So if I look at the Transactions, we can see based on the time plotted graph here, where the transactions begin to increase. And of course, we can change it up instead of Sum, we might want to configure this a little bit differently.

[Video description begins] The Metrics page displays. It contains fields, such as Resource, Metric Namespace, Metric, and Aggregation. The Resource field contains the name of the selected resource. The Metric Namespace field is set to Account. He clicks the Metric drop-down arrow and selects Transactions. The Aggregation field displays Sum. A time plotted chart displays. [Video description ends]

Now if you don't have the option to change the aggregation type, then change the metrics. So if I were to look at the Used capacity, for example, for this particular storage account, then I can look at the Avg or the Sum in terms of aggregation. And again, it's all plotted here over days and times, on those days.

[Video description begins] He clicks the Metric drop-down arrow and selects Used capacity. Then, he clicks the Aggregation drop-down arrow and selects Avg. The chart changes as per the selected values. [Video description ends]

Now we can also flip over to virtual machines, and pretty much do the same type of thing in terms of viewing metrics. This could be part of what we do to monitor the performance of a virtual machine. So I'll wait for the list of metrics to pop up, and I might be interested let's say in Percentage CPU. Now again, the aggregation here, I can look at the Count of instances, the average, Min, Max or the Sum. So I'm just going to leave it on the average to get an overall picture of CPU utilization over time, for this particular virtual machine.

[Video description begins] The Virtual machines page displays and he clicks eastlinuxvm1. The eastlinuxvm1 page displays. He scrolls down the list of options on the left-hand side and clicks Metrics in the Monitoring section. The Metrics page displays. It contains fields, such as Resource, Metric Namespace, Metric, and Aggregation. The Resource field contains the name of the selected resource. The Metric Namespace field is set to Virtual Machine Host. He clicks the Metric drop-down arrow and selects Percentage CPU. The Aggregation field displays Avg. He clicks the Aggregation drop-down arrow and displays the list of options. A time plotted chart displays. [Video description ends]


Configure Alert Notifications
While we can manually go to an individual Azure resource and look at its metrics, such as performance metrics, it's handy to sometimes be notified automatically when a specific metric value violates a preconfigured threshold. So for example, here in the Azure Portal, let's say we went to the Virtual machines view and opened up an existing VM. In the properties blade, if you go all the way down under Monitoring, you'll be able to click on Metrics.

[Video description begins] The Home page of the Microsoft Azure window displays. In the left pane, various options, such as Dashboard, All services, All resources, and Resource groups display. On the right-hand side, the Azure services section displays options, such as Virtual machines, Storage accounts, and App services. The host clicks the Virtual machines option. The Virtual machines page displays the list of virtual machines with details, such as Name, Type, Status, and Location. He clicks the eastlinuxvm1 virtual machine. The eastlinuxvm1 page displays. On the left-hand side, various options, such as Overview, Activity log, and Tags display. On the right-hand side, details of the virtual machine, such as Resource group, Computer name, and Status display. He scrolls down on the left-hand side and clicks Metrics in the Monitoring section. [Video description ends]

You would do the same type of thing for other types of resources, like storage accounts for example. So let's say I want to look at Percentage CPU. And I'm looking at the average here and I can see the date, Thursday the 28th, and the time to which this would apply, where we've got a change in our graph. So the idea is instead of us having to do this, wouldn't it be great if we could be notified?

[Video description begins] The Metrics page displays. It contains fields, such as Resource, Metric Namespace, Metric, and Aggregation. The Resource field contains the name of the selected resource. The Metric Namespace field is set to Virtual Machine Host. He clicks the Metric drop-down arrow and selects Percentage CPU. The Aggregation field displays Avg. A time plotted chart displays. [Video description ends]

Now notice that we've got an Alerts section over here in the properties blade. We also could have clicked New alert rule, right here, while viewing the metrics. So I'm going to click the Alerts area in the properties blade and click New alert rule. It's for the virtual machine whose properties blade we're looking at already, that's already there. So I'm going to click Add a condition.

[Video description begins] He points to the Alerts option in the left pane and the New alert rule option above the chart. Then, he clicks the Alerts option. The Alerts page displays. He clicks the New alert rule option. The Create rule page displays. It has different sections for Resource, Condition, and Action Groups. He clicks the Add condition button in the Condition section. [Video description ends]

And I'm interested in the percentage of CPU utilization. But notice we've got Network In, Network Out, Disk Read, Disk Write, a lot of different metrics. So Percentage CPU will be what I choose here. And I can see what it currently is at this point in time.

And down below, I'm going to set the Operator to be Greater than an Average of, and notice that the unit of measurement for the Threshold value here in this particular case is percentage. So if we've got an average utilization CPU above 80%, I want to know about it. And the frequency of the evaluation here will be every one minute, that's fine. I'll click Done.

[Video description begins] The Configure signal logic dialog box displays. It displays all signals with details, such as Signal Name, Signal, Type, and Monitor Service. He selects Percentage CPU from the list. A time plotted chart displays for Percentage CPU. Then, he scrolls down and points to the Operator and Aggregation type options. Next, he enters 80 in the Threshold value field. He points to the Aggregation granularity and Frequency of evaluation options and clicks Done. [Video description ends]

But the next thing I need to do is determine what actions should be taken when that threshold is violated. So for that, down under ACTION GROUPS, I'm going to create a new one.

[Video description begins] On the Create rule page, in the Action Groups section, he clicks the Create New button. [Video description ends]

So next, I have to specify an Action group name, I will call it Ag1 for action group 1, and the Short name will be the same. And down below I have to choose the ACTION TYPE, whether it's Email/SMS/Push or some kind of voice notification. Or I can trigger an Azure Function or LogicApp, send this to a Webhook, and so on.

[Video description begins] The Add action group dialog box displays. It contains the following fields: Action group name, Short name, Subscription, and Resource group. It also displays the Actions section with details, such as Action Name, Action Type, Status, and Details. He types Ag1 in the Action group name and Short name fields. Then, he clicks the Action Type drop-down arrow, which displays a list of options. He selects Email/SMS/Push/Voice. [Video description ends]

So I'm going to use Email/SMS/Push and Voice, and I'm going to call this SMS. And then over on the right, I'm going to call this SMS Notify. And I'm going to turn on SMS, and here I can specify the phone number. Once I've done that for the country code, and I've just filled in a fictitious phone number here of course, I would click OK to create this notification. Otherwise, instead of SMS, I can also, or in addition to, configure email notifications.

[Video description begins] The Email/SMS/Push/Voice dialog box appears on the right-hand side. The host enters SMS in the Action Name field. The Edit details hyperlink is highlighted. In the Email/SMS/Push/Voice dialog box, he enters SMS Notify in the Name field and selects the SMS checkbox. Then, in the Phone number field, he enters 555-555-5555 and displays the Country code drop-down list, which is set to 1. Then, he clears the SMS checkbox and selects the Email checkbox. [Video description ends]

This way you will be notified automatically when your configured thresholds are violated, which saves you from having to go and look at all of these metrics.


Create an Azure Dashboard
Over time, as you work in the Azure portal, you'll probably realize that there are certain items in the GUI that you access more often than others. And so what you can do is take those items that you do use and place them together on a single dashboard, or you can even build multiple dashboards. So what I'm going to do here is start by clicking Dashboard over on the left here on the portal, and I'll click the plus sign at the top to add a new dashboard. And I'm going to change the name of it to My Stuff.

[Video description begins] The Home page of the Microsoft Azure window displays. In the left pane, various options, such as Dashboard, All services, All resources, and Resource groups display. On the right-hand side, the Azure services section displays options, such as Virtual machines, Storage accounts, and App services. The host clicks the Dashboard option. The Dashboard page appears, which has icons for add, upload, download, and edit. He clicks the plus icon. A Tile Gallery appears on the left-hand side. On the right-hand side, the page appears divided into tiles. He types My Stuff in the My Dashboard text field. [Video description ends]

And from here I can search for specific tiles in the Tile Gallery or I can clear all the search items and view all categories in all resource types, and I can manually browse this. I'm going to start by adding All resources.

[Video description begins] In the Tile Gallery, he points to the Search tiles field and the All categories and All resource types drop-down fields. Then he scrolls down the list of tiles and clicks the Add hyperlink for All resources. [Video description ends]

Now, when I add that, it places it over here on the right, and I can drag it around to determine the positioning. I've got a little trash can here in the tile header, which you can remove from the dashboard. And I've got a context menu that looks like three dots, where I can control things like the sizing.

[Video description begins] The All resources tile appears on the dashboard. The host moves around the tile on the dashboard. Then he points to the Remove from dashboard icon and clicks the Context menu, which displays a list of options, such as 2 x 1, 2 x 2, and 4 x 2. He selects 4 x 2. The tile appears over 4 rows and 2 columns. [Video description ends]

So maybe I'll go ahead and control the sizing a little bit. Let's see, that's probably okay, and then I'm going to position it accordingly.

[Video description begins] Next, he selects 2 x 2 and then 4 x 4. Then, he positions the tile on top-left corner of the dashboard. [Video description ends]

The other thing I can do is search, of course. So if I'm interested in managing Azure Active Directory user accounts, then there's a Users and groups tile in the Gallery. And I can drag that over and position it where I want it to appear.

[Video description begins] He enters users in the Search tiles field and drags the Users and groups tile to the dashboard. He positions it next to the All resources tile. [Video description ends]

And I'm also going to search up let's say Events, I'm interested in storage account events. So there we've got a tile for it, I'll just add that. That one requires configuration. So I'm going to click Configure tile, in this case it needs to know the storage account of interest. So I'll select that and I'll click Apply.

[Video description begins] He enters events in the Search tiles field and clicks the Add hyperlink for the Events tile. The tile appears on the dashboard with a Configure tile button. He clicks the button and the Configure tile settings dialog box appears. It has the following drop-down fields: Subscription, Resource group, and Storage account. He clicks the Storage account drop-down arrow and selects star14567 and clicks Apply. [Video description ends]

Now, once I'm happy with this and assuming that that's everything I need, I am happy, I can then click Done customizing up at the top.

[Video description begins] The Event tile on the dashboard displays with the name - Activity log. He clicks the Done Customizing button at the top. The Tile Gallery disappears and the Microsoft Azure web page displays the Dashboard page. [Video description ends]

So any time I come back into the portal, I can simply go to Dashboard. And if I've got more than one, I can switch back and forth between them from the selector list.

[Video description begins] He displays the Dashboard drop-down menu and points to the two dashboards, Dashboard and My Stuff. Then, he clicks My Stuff. [Video description ends]

So now I've got a list of all of my resources for quick access to things like virtual machines and anything else I care to administer through that tile. I've also got Users and groups, essentially these are like shortcuts but it's very convenient. And I've also got the Activity log for my storage account. Now, in this case I'd have to, perhaps, choose a different time span that would show me more events.

But in the end, what we're trying to do here is take the things that we administer most often in the portal and place them together for convenience. And the cool thing about this is you can even go full screen, so it really does serve as your primary management pane here in Azure.

[Video description begins] In the My Stuff dashboard, he clicks the Jumpbox Virtual Machine resource in the All resources tile. The Jumpbox page displays. He clicks the Close button. Then, he clicks the Users and groups tile on the dashboard. The Users - All users page displays. He clicks the Close button. Next, he clicks the Activity log tile, which displays the Activity log page. The Activity log appears empty. He clicks the Timespan option, which is set to Last 6 hours, selects Last month, and clicks Apply. The Activity log displays a list of activities. He clicks the Close button. Then, he clicks the Full screen icon and the dashboard displays in the Full screen mode. [Video description ends]


Azure Cost Management
Everybody is always interested in saving money, whether it's personally or within the organization. And there are some things to bear in mind with Microsoft Azure that can actually save us money. So Azure Cost Management means that we've got a monthly operational expense through cloud computing that we can manage properly.

That's what we're going to focus on here. It can facilitate budgeting, so you know what to expect for costs of your usage of Azure Cloud services. We can also configure billing alerts, so that we get a notification once we get to a certain threshold that might be a warning flag about excessive costs. We can even set spending limits. We might even go ahead and tag resources. Tagging a resource means that you are adding extra data, metadata to an Azure resource, such as assigning it to a department or a project.

And you might do that for billing purposes, so you can look at costs organized by a tag such as by project or by department. We can also make use of the Azure Pricing Calculator. This one's a great one to figure out what your costs will be to help you with your budgeting. Because the first thing you do is add the Azure resource types you're interested in. Let's say it's Azure SQL database and also some infrastructure as a service virtual machines.

So you fill in those details for those types of resources, and finally, you can view a cost estimate. So you have a general sense of what you're looking at. And of course, that would depend on how long you keep things running. Shutting things down especially databases is important when they're not needed to save on costs. So what are some best practices? One would be to configure virtual machine automatic shutdown. You can do that in the properties blade for a virtual machine.

Another is to review VM sizing. Remember that the sizing for a virtual machine really details its horsepower. The number of virtual CPUs allocated, the amount of RAM, and so on. And so you might realize over time that you've over allocated those types of resources for one virtual machine compared to the workload it's running. And so you might be able to scale back on the number of virtual CPUs or RAM.

That can be a bit of a balancing act that you'd want to do over time, but it is an important item to inspect. If we're using auto-scaling, we want to bear in mind that auto-scaling isn't just for scaling out or adding virtual machines under peak workloads for an app. But also, we can configure scaling in when things slow down. We might even consider the use of virtual machine reserved instances. Reserved instances are an option for cost savings in Microsoft Azure.

So what this means is, ahead of time, you can reserve future capacity for the use of virtual machines or Azure SQL database as examples. In either for one year or three years, and when you pay upfront for that much time, you get it at a great discount compared to if you weren't reusing VM reserved instances. Pictured on the screen, we can also see the Azure cost advisor, and here are some recommendations for it. So notice in the bottom left, we can click on Advisor here in the Azure Portal in the navigator.

And then we can click on Cost in the Properties blade, and that's what we're looking at here, and it has a recommendation. It's a medium impact recommendation here but it does say that we can delete a public IP address that isn't associated with anything. Well, that makes sense, why would you want to consume a public IP address in Azure that isn't even being used. Unless that's only temporarily not being used. And from here, we could see, over on the far right, the potential yearly savings, which here shows up as approximately US $68.

[Video description begins] The Microsoft Azure window displays. In the left pane, it has various options, such as Home, Dashboard, All services, and All resources. The Advisor option is highlighted. On the right-hand side, the Advisor - Cost page displays. On the left-hand side of the page, the Cost option is highlighted. On the right-hand side, various details, such as Subscriptions, Total recommendations, Recommendations by impact, Impacted resources, and Potential yearly savings display. [Video description ends]


Azure Pricing Calculator
Your company's use of Azure cloud computing services needs to be monitored carefully to make sure that costs are within specific limits. Now for budgeting purposes, we can also use the Azure pricing calculator to get a really solid idea of what we might be looking at for costs ahead of time. So I've searched up pricing calculator on the Internet, which brought me to this page.

Where I'm looking at the Products tab, and on the left I've got a bunch of different Azure service offerings like Compute, Networking, Storage, Web, Containers, Databases and so on. Those are categories of items that I can add that I can start getting pricing costs or estimates on. So for example, if I go to Compute, I could see things like Virtual Machines. That also showed up under Featured. It doesn't matter which one you go to to select, in this particular case, Virtual Machines.

[Video description begins] The Pricing Calculator web page for Microsoft Azure displays. The Products tab is open. On the left-hand side, it has options, such as Featured, Compute, Networking, and Storage. On the right-hand side, options, such as Virtual Machines, Storage, and App Service display. [Video description ends]

When I select Virtual Machines, I get a little icon of a calculator. And it says that Virtual Machines was added, which means it was added down below.

[Video description begins] He clicks the Featured option and then selects Virtual Machines. [Video description ends]

And I can see here it's filled in some values but I can change them to suit my budgetary needs. So for example, which region? Well, I plan on deploying some of my stuff in the Canada East region. And I'm talking not about Windows but Linux, and I'm going to talk about CentOS as the distribution using the Standard TIER. And then of course, I can choose the INSTANCE types. So the sizing related to this which determines the number of virtual CPUs, the amount of RAM and so on.

[Video description begins] A message displays, which states "Virtual Machines added". The host scrolls down the web page. The Your Estimate section for Virtual Machines displays. It has drop-down fields, such as Region, Operating System, Type, Tier, and Instance. He selects Canada East from the Region drop-down list, Linux from the Operating System drop-down list, and CentOS from the Type drop-down list. Then, he selects an instance from the Instance drop-down list. [Video description ends]

Now once I've done that, as I scroll further down, I can determine whether I'm using Pay as you go. Or I'm going with a reserved instance where I can pay ahead of time for 1 or 3 years of usage, which results in cost savings. Then I determine how many virtual machine instances and how many hours I suspect that they will be running. Because it says here Virtual Machines are billed on a per-second basis.

Now this is all on a per-month basis. So what I could do is even say, well, let's say the number of days I would have this running, because I might be using it for development testing of some kind, would be 8 on a monthly basis. As I start adjusting these, the price over here on the right changes. Now we've got US dollars listed here as the currency, and it's $10.75. But if I were to increase the amount of virtual machine instances, notice that the pricing is changing.

[Video description begins] The host scrolls down the web page and the Billing Option section displays. It has three radio buttons: Pay as you go, 1 year reserved, and 3 year reserved. The Pay as you go radio button is selected. The Billing Option section also has a Virtual machines spin box and a spin box along with a drop-down field for the duration. The total of the values in these fields displays on the right in US$ per month. He changes the value in the drop-down field from Hours to Days and changes the number of days to 8. Then, he changes the value in the Virtual machines spin box from 1 to 4. The pricing in US$ changes to 43.01. [Video description ends]

Then down below, I can determine, well, okay, what's the disk configuration for those virtual machines? So we can determine the amount of data Disks, the anticipated amount of Storage transactions. And again, we can finally see our Sub-total at the very bottom.

[Video description begins] The Managed OS Disks section displays. It has two drop-down fields, Tier and Disk Size. It also contains two spin boxes, Disks and Transaction units. The total displays at the bottom in US$. [Video description ends]

But what about other types of items besides just virtual machines. So let's say we want to get some pricing information related to Azure SQL Database. So I can choose the Databases category. I'll click on Azure SQL Database, it gets added. And down below, if I go past my virtual machine stuff, I'll see the Azure SQL Database, okay.

[Video description begins] He clicks the Databases option in the left pane and then clicks Azure SQL Database on the right-hand side. He scrolls down the web page and the Azure SQL Database section displays. [Video description ends]

So once again, which region do you think you'll deploy this in? Is it going to be a Managed Instance or just a Single Database? I'm going to leave it on Managed Instance. I've got a lot of details specific here to, in this case, Azure SQL Database. I can choose the INSTANCE type. And down below, the Billing Option, Pay as you go or reserved billing.

Now, you want to be careful with this one because look at the pricing. We're at $1,600 a month in US dollars. And that's because we're talking about running instances every hour of the month, and that's only one instance. Databases can cost a lot, you want to make sure you shut these things down when they aren't being used. But let's say that we suspect we only really want to use this about 9 hours a month. Well, then, now we've got better pricing.

[Video description begins] The Azure SQL Database section displays fields, such as Region, Type, Backup Storage Tier, and Generation. The host changes the region to Canada East. The Type is set to Managed Instance and the Instance is set to 8 vCore. He scrolls down to display the Billing Option section, which displays the Pay as you go radio button selected. It also shows Instance set to 1, Hours set to 730, and the billing total. He changes the hours to 9. The billing total changes to US$20.35. Then, he scrolls down to display the Storage and Support sections and the Estimated monthly cost. [Video description ends]

And as we go further down, we can determine Storage and the Support type. And finally, we've got our monthly bill total down here, which, of course, is relative to not just the cost for Azure SQL Database but also our cost up above for our compute through virtual machines.

So you see how we can continually add various types of Azure service offerings that we anticipate we will use, and how we will use them, to start getting a sense here of what kind of pricing that we would be looking at. Notice here that we've also got an Export option. So you can download this information and your estimate as an Excel spreadsheet.

Or you can save it as an estimate that you can access when you log on by going up to the very top and going to the Estimates tab. Either way, this is a great tool so that you can start planning your budgets accordingly for your usage of Azure services.


Azure TCO Calculator
If you search the Internet for Azure Total Cost of Ownership Calculator, you'll easily arrive at this page. Where we've got three steps that we must complete in order to determine what kind of cost savings can be achieved by migrating what's currently running on-premises into the cloud.

[Video description begins] The Total Cost of Ownership (TCO) Calculator page for Microsoft Azure displays. It shows three steps: Define your workloads, Adjust assumptions, and View report. The first step is active. [Video description ends]

So in step 1, we have to define our workloads. So I'm going to scroll down, and here I can add workloads related to servers. And I can add multiple workloads, whether we're using Windows or Linux or some kind of web app server. I can leave it on Windows and Linux and currently we might have, let's say, 3 physical servers. So I can specify those details running Windows.

I can determine the number of processors per server. Well, let's say they've each got 2, and each of those has 2 cores. I can also specify the amount of RAM. These might currently have 8 gigs of RAM. So I can keep adding server workloads based on what I'm currently running on-premises.

[Video description begins] The Servers section displays. It has various fields, such as Workload, Environment, Operating system, and Servers. The host specifies 3 in the Servers spin box, 2 in the Procs per server spin box, and 2 in the Core(s) per proc spin box. He also specifies 8 in the RAM (GB) spin box. He points to the Add server workload hyperlink. [Video description ends]

Because what it's going to do is try to find the equivalent match in the Azure cloud. And then we can see how long we'll take to realize a cost savings as part of our TCO, our total cost of ownership. We can also add database information, I've already added some database information here. In this case, SQL Server, and I've also determined the destination in the cloud to be SQL Database Managed instances. So we can continue to add database workloads here.

[Video description begins] The Database section displays. It has various drop-down fields, such as Database, License, Environment, and Operating system. Below the Database section, the Destination section displays, which has drop-down fields, such as Service, Managed instance tier, and Managed instance cores. [Video description ends]

You can also add storage workloads. Here I have specified that we've got a storage area network running SSD, about 500 gig currently. And I can determine how much space I would need for backup and for archiving, and the amount of performance or disk IOPS.

[Video description begins] The Storage section displays. It has various fields, such as Storage type, Disk type, and Capacity. [Video description ends]

And then the anticipated outbound bandwidth, which I'll leave it at the default of 1 gigabyte.

[Video description begins] The Networking section displays, which has the Outbound bandwidth option. [Video description ends]

When I click Next, then we've got a number of assumptions to consider. Such as whether we want Software Assurance coverage. And we could see it's broken down here by Windows Server, because that's part of the workload that we added, and also SQL Server, again, for the same reason. So we can turn any of these things on or off. We can determine specific features like geo-redundancy, replicating to other regions in Azure.
We can then scroll down and determine what our price per kilowatt hour is in our particular location. So that it can be more accurate when it determines our cost savings over time. Because when you run things on the cloud, the space to house equipment and the electricity to power that equipment and the HVAC, the heating, ventilation, and air conditioning, is no longer your worry.
That's the problem of the cloud provider, in this case, Microsoft Azure. So we can fill in all of these fine-tune details like labor costs for having a full time physical server administrator in terms of US dollars and so on. There are a number of assumptions, but I'm going to leave them as they are, and I'll click Next.
And finally, we can see the amount potentially that we could save over 5 years, by migrating the specified workloads into the Azure cloud. Now as we go further down, it's graphed in a multitude of ways where we can see, for instance, the on-premises cost as a blue line here versus the green line. And of course, like any good investment, it takes time to realize more savings.
As we go further down, we can see the information presented in different ways. Such as the total on-premises costs over 5 years versus the total Azure cloud computing cost for those specified workloads over 5 years. All of this stuff is listed in a variety of ways, very valuable information. And at the bottom, we've also got the option of clicking Download.
And when you do that, you get a printing option where I might choose to Save as PDF.
So then that way I have a record of this generated TCO report. So I can just go ahead and save that and peruse it at my leisure. So at this point, we now have a sense based on the supplied workload information of what kind of total cost of ownership we will be looking at over time, by migrating on-premises workloads into the Azure cloud.


Configure Billing Alerts
Some Azure services like Managed Azure SQL databases can cost a lot of money if you keep them running all month. And so what we can do then is configure billing alerts so that when the amount of our bill gets to a certain point, somebody gets notified before it gets too out of control. So to set this up the first thing I'm going to do here in the Azure portal is I'm going to search for my subscriptions. And I'm going to select my subscription.
And then on the right, I'm going to click Manage which opens up another browser window. Now this has taken me to a location where I can actually manage the details related to that specific subscription, including billing alerts.
Now, if you've not already enabled alerts which I have, I can see it here. You can go to preview features where you'll see preview features including the Billing Alert Service. And if you've not signed up for, you can go ahead and sign up for. But naturally, it's already been done in this particular case, so I don't have to worry about doing that.
So I'm just going to go back into my subscription. And I'm going to click on Alerts.
Any existing alerts that might have been created will be shown but we would click Add alert here to add a new one.
So here, I'm going to call this alert name Too much. And when the billing total let's say is at $500 spent. And depending on your account and your subscription, the unit of measurement, or the currency, will vary here, in my case it's US dollars. And we can specify an email address here.
So we can specify an email recipient or two that will get a notification when we've got to that point. So I'm going to go ahead and click Save. So you can add a billing alert to responsibly manage your monthly
Azure charges.


Azure Support Plans
Microsoft Azure support plans are useful because they can provide your organization with help when certain problems arise with the use of Azure cloud computing services. And we can breakdown the support plans into two general categories. They would be development versus production workloads. Items that factor into which support plan you might select for your organization would include the degree of technical support, the response time.
Do we have to wait one week or one hour to get a response when we have an issue? Then, operations support on the planning and the use of Azure services, and training options. The Azure support plans begin with Basic, followed by Developer, followed by Standard, after which we have Professional Direct, and finally, Premier.
So what happens is with each level of support, so starting with Basic all the way down to Premier, each plan gets successfully more expensive. And that's because more support options are made available. So for example, with the Azure Basic support plan, there is no tech support. And if all you're doing is evaluating Azure, or you have technicians that are very used to working in Azure already for a testing environment, you might even stick with Basic if you don't need any support at all.
Then with the Developer Azure support plan, tech support is made available during business hours. But compare that to Standard, where there is 24/7 tech support, and even as quick as one hour response times for any issues that might pop up. Professional Direct is also something that's available if you need Azure technicians to help you with your planning of your Azure architecture. And finally, we've got Premier. Premier also allocates a designated Azure IT technician from Microsoft when you have incidents.


Submit an Azure Support Ticket
Well, believe it or not there isn't an infinite amount of resources available at least by default to Azure cloud customers. Here I've pulled up the Azure subscription limits and quotas document. And I can see that there are limits for example the number of virtual machine course per subscription per region.
Or things like the amount of storage account per region per subscription. And if you plan on potentially exceeding these, then you can ask for an increase beyond the default limit. Now, we can do that here in the Azure portal, by going to our question mark help icon in the bar. And choosing Help and Support where we can submit a support request.
And of course, you could also submit a support request for numerous other reasons, so is it related to Azure? Yes, and here it could be related to billing or what we're just talking about now service and subscription limits, or subscription management, or it could be a technical question or issue.
So here I'll choose service and subscription limits and specifically let's say I'm interested in going beyond the 200 storage account quota per region per subscription. So maybe I'll choose storage quota and I'll click the Next button at the bottom. Then I'll have to provide details,
I'll just fill in some sample text at this point. And I could even upload a file perhaps a screenshot related to something that I have encountered or plan on doing. And then down below I can determine what the severity is to the organization, the preferred contact method. I can also determine, notice that when I choose Phone as well I can determine that same information.
And the response hours here is set to business hours but that will vary depending on your support plan in Azure and the language I wish to be contacted in. And as I go down below, there's more contact information that can be specified. So once I filled all this in, I can see that I will have support requests
that will show up under the All support requests view. Now, of course, I haven't submitted any specifically recently, so I'm not going to see any new ones. But here I can take a look at the time frame. And I can also check the status of any support requests that might have been submitted in the past.
So having problems in Azure is a rarity, so it shouldn't be often that you need to submit an Azure support request ticket. But if you do need to do it, you now know how to do it through the portal.
                    
