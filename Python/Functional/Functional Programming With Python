                      Functional Programming With Python
                      Course Notes
                      
                      Section 1 - Introduction
1 - Introduction
A very quick run through of the syllabus
The course will be making use of Python libraries in the course including
  - Toolz -- A general purpose utility library for functional programming in Python
  - Pyrsistent -- Provides high-performance immutable data structures
  - Hypothesis -- Gives property based testing
  - Effect -- Allows for side effects in pure functions

2 - Libraries And Setting Up Our Environment
Author recommends using if you are not familiar with setting up python environment
  http://docs.python-guide.org/en/latest/

3 - About The Author
A quick biography of the author

4 - How to Access your Working Files
How to use the working files that came with the course



                      Section 2 - Functional Programming
1 - What is Functional Programming
Functional Programming is like it says programming functions
  - There is a difference between functions in imperative programming and functions as in Functional Programming
There are fewer classes, control flow primitives and mutations as functions can give the same power  
Functional programming comes from the mathematical idea of functions
A Side Effect is
  - Comes from non-mathematical functions
  - If has an effect on the state of the world
  - It is observable from outside
  - Functions without side effects are called pure functions
Example Syntax
  // This is a pure function
  def append2_a(l):
    return l + [2]
  
  // This function has a side effect
  def append2_b(l):
    l.append(2)
    return l
  
  l = [1]
  append2_a(l)
Code with side effects can be more difficult to maintain and debug
Some side effects are necessary
  - Read input interactively
  - Display things to the screev
  - Communicate over the network
  - You will need to sort out what is necessary and unnecessary

2 - Why Functional Programming
Using Functional Programming will probably change the way you think about programming
  - It is a new way of thinking about the problem you are solving
  - A lot of programmers like working with new technology and are better when happy

3 - First Class Functions
Python has a couple of important features which allow functional programming
  - Functions are first class values
    - This means that they can be passed around like any other value
  - Functions have closures
    - This means that they capture their environment
    - This means that their values get carried when the functions are passed around
      - Usually a variable in a function diappears when it is passed around but if an inner function
        references that variables then it will be atached to that function and go along with it
    - This is used quite a lot when using Python
Example Syntax
  def outer():
    x = 1
    def inner():
      return x
    return inner
    
  f = outer()
  assert f() == 1
  print "OK!!"
 
 - First class functions with closures are necessary to have meaningful abstraction
Python does miss some features that are available in other languages
  - A strong library of built-in pure functions
  - Efficient immutable data structures
  - Cheap recursion

4 - Recursion

5 - Higher Order Functions

6 - Modifying Data Structures



                      Section 3 - A Tour of FP Libraries
1 - Immutable Data Structures Introduction To Pyrsistent

2 - Immutable Data Structures How Pyrsistent Works

3 -

4 -

5 - 


                      Section 4 - Implementing A Game
1 - 


                      Section 5 - Testing
1 - 


                      Section 6 - User Interface
1 -


                      Section 7 - Integrating With An Imperative Third Party Library
1 -


                      Section 8 - First Class Effects
1 -


                      Section 9 - WebUI
1 -


                      Section 10 - Conclusion
1 -                     
