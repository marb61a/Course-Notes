                    Python - Working With Unicode
                    Course Notes
                    
                    
                    Section 1 - Introduction
1 - Course Introduction And What To Expect
If parsing through large amounts of texts you are likely to have run into some unicode related issues
Expanded character sets will also necessitate using unicode
The course will benefit students who
  - Have a limited background with using unicode
  - Would like to better understand unicode errors in Python
  - Are moving from Python 2 to Python 3
  - Need to adapt existing software to a multilingual environment
The goals for the course
  - Work with unicode in Python
  - Avoid unicode related problems
  - Understand what is happening when things go wrong
  - Implement solutions to problems when the arise
The chapter also contains a quick run through of the syllabus of the course.
  - The course will cover Python 2 & 3

2 - About The Author
Brief introduction to the author

3 - Software Setup And Tips

4 - Windows Setup Issues
There are 2 main issues
  - The first is when using winpty terminal as there are issues between winpty and Python
    - You may not be able to run the python interactive shell by just typing python you may need to type winpty python
  - Use pip install win-unicode-console to avoid some windows command shell unicode issues
    - This will need to be imported and enabled or added to usercustomize file
    - The procedure is the same for Python 2 & 3
  

5 - How To Access Your Working Files
There are working files which accompany the course and they can be used to follow along with
the instructor as the course progresses

                    
                    Section 2 - Text Encodings
1 - Ascii And Legacy Encodings
Users are concerned with characters whereas computers are concerned with binary
Character Encoding is a mapping of sets of characters to their binary representations
There is no natural character encoding schemes which has meant a large variety of schemes are available
ASCII - American Standard Coding for Information Interchange
  - 7 bit encoding
  - Suitable for the English Language
  - It includes control characters, punctuation, symbols, numerals and Latin letters
  - http://www.asciitable.com
  - The standard ISO-8859-1 is an 8 bit encoding which extends ASCII
The xxd command which creates a hex dumpe of a file is used to compare two files with the same text
saved in different encoding schemes
  - The python module chardetect module will help avoid isues with misreading of encoding schemes

2 - Unicode Character Encoding Schemes Part 1

3 - Unicode Character Encoding Schemes Part 2


                    
                    Section 3 - Python String Basics
1 - Unicode String Vs Byte Strings

2 - Converting Between Text And Bytes

3 - Implicit Decoding In Python


                    
                    Section 4 - Reading And Writing Unicode Data
1 - The Unicode Sandwich

2 - File IO

3 - File IO Example Character Counter


                    
                    Section 5 - Special Unicode Functions
1 - Accesing Unicode Character Metadata

2 - Normailzation Part 1

3 - Normalization Part 2

4 - Case Folding

5 - Example Removing Diacritics


                    
                    Section 6 - Conclusion
1 - Wrap Up And Further Resources                    
