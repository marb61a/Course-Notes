                    Notes from the Udemy Course
                    Python Network Programming 1
                    

                    Section 1 Getting started with this course
1 - Introduction to Python
A very quick intro to the Python language

2 - Quick Insight To Get You Warmed Up!
A quick run through of what the course will contain

3 - Some administrative details about this course
A break down of the conceptual structure of the course

4 - How To Receive Maximum Results From This Course
Tips from the author on how to achieve the best possible learning experience while on the course.

5 - The Python 2 vs 3 Debate
For some applications and uses, Python 3.x may fit better than Python 2.x.
In the authors opinion for Network related programming Python 2.X is still a better fit
Many popular Python modules for Networking related work have not been conversted such as
  - Scapy
  - EasySNMP
  - Trigger



                    Section 2 Course Resources and Troubleshooting Guides
1 - Setting up the working environment
A demonstration of the working environment which the author provides
  - Host is Windows 8.1

2 - Download the resources and necessary applications
Author provided download links to
  - Debian based VM
  - GNS3 version 1.4.5
  - You will also need to download a Cisco IOS image for working with GNS2

3 - Downloading GNS3 and VirtualBox
Downloads for the GNS3 software and Virtualbox.
GNS3 is a network simulator available at - https://www.gns3.com
VirtualBox is a free virtualiser - https://www.virtualbox.org

4 - How to import and setup the Debian 7 VM in VirtualBox

5 - Setting up the GNS3 network topology

6 - How to connect the Debian 7 VM to GNS3 v1.4.x

7 - FAQ - Please Read This In Case You Run Into Any Issues!

8 - VirtualBox and Virtual Machines - Short Guide

9 - Using VirtualBox and GNS3 on MAC OS X
Installation guide for people using the Mas OSX platform

10 - Asking For Help

11 - Massive Course Refresh Summary - May 2016
The course and resouces were updated due to a lot of outdated content



                    Section 3 Python Basic Operations
1 - Python interpreter

2 - Python scripts

3 - Python argument passing

4 - User input

5 - dir and help
Python gives a couple of commands for finding out about a modules functionality
Using the python interpreter shell
  - You should have the module installed if it is not a built in module
  - Example sys
    - import sys
      - help(sys) -- This will return module name, source location and description of functionality
      - dir(sys) -- Gives a list of available functions in this module


                    Section 4 Python Data Types
1 - Python Variables

2 - Python keywords

3 - Python Data Types

4 - Python Strings

5 - Python String methods

6 - Python String operators and formatting

7 - Python String slices

Quiz 3 Strings

8 - Numbers and math operators

9 - Booleans and logical operators

Quiz 4 Numbers and Booleans

10 - Python Lists introduction

11 - Python List methods

12 - Python List slices

Quiz 5 Lists

13 - Python Sets introduction

14 - Python Set methods

Quiz 6 Sets

15 - Python Tuples introduction

16 - Python Tuple methods

Quiz 7 Tuples

17 - Python Dictionaries introduction

18 - Python Dictionary methods

19 - Conversions between data types

Quiz 8 Dictionaries

                    
                    
                    Section 5 Python Control Flow
1 - If / Elif / Else conditionals

2 - For / For-Else loops

3 - While / While-Else loops

4 - If / For / While nesting

5 - Break, Continue, Pass

6 - Python Exceptions

7 - Try / Except / Else / Finally

Quiz 9 Control Flow



                    Section 6 Python Functions
1 - Python Functions

2 - Python Arguments

3 - Python Namespaces

4 - Modules and importing

Quiz 10 Functions



                    Section 7 Python File Operations
1 - File opening and reading

2 - File writing and appending

3 - File closing / The "with" method

4 - File access modes table

Quiz 11 Files



                    Section 8 Python Regular Expressions
1 - The "re.match" and "re.search" methods

2 - The "re.findall" and "re.sub" methods

3 - Python Regular Expressions sheet

Quiz 12 Regular Expressions



                    Section 9 Python Classes (Object-Oriented Programming) Basics
                    
                    
                    
                    Section 10 Bonus Python Tools
1 - List / Set / Dictionary comprehensions

Quiz 14 Comprehensions

2 - Python Lambda functions

Quiz 15 Lambda functions

3 - Python Map, Filter, Reduce

Quiz 16 Map, Filter, Reduce

4 - Python Threading basics

64 - Some advice on coding


 
                    Section 11 Python Networking
1 - Overview of this section

2 - Python networking with Telnet

3 - Python networking with SSH

4 - Telnet and SSHv2 router configuration

5 - Python networking with SNMP

6 - SNMP documentation resources

7 - Python networking with Scapy. Creating your own packets.

8 - Code snippet (.txt + .py): Telnet (General Guidelines)

9 - Code snippet (.txt + .py): SSH (General Guidelines)

10 - Code snippet (.txt + .py): SNMP (General Guidelines)



                    Section 12 Python and MySQL
1 - Setting up the MySQL database

2 - MySQL Setup and Commands

3 - Python interacting with MySQL

4 - Allowing remote connections to MySQL server



                    Section 13 Application #1 - Basic subnet calculator
1 - Short introduction

2 - What are we going to build?

3 - Planning the application

4 - Application #1 - Logical Flow Diagram

5 - Application #1 - Part #1

6 - Application #1 - Part #2

7 - Application #1 - Part #3

8 - Application #1 - Part #4

9 - Testing the application

10 - Entire application code (.txt + .py)
Source Code for the section applicatiion

 
 
                    Section 14 Application #2 - SSH/Telnet network configuration
1 - What are we going to build?

2 - Planning the application

3 - Application #2 - Logical Flow Diagram

4 - Application #2 - Part #1

5 - Application #2 - Part #2

6 - Application #2 - Part #3

7 - Application #2 - Part #4

8 - Testing the application

9 - Entire SSH application code (.txt + .py)

10 - Entire Telnet application code (.txt + .py)
Source Code for the section applicatiion

 
 
                    Section 15 Application #3 - DHCP client simulator
1 - What are we going to build?

2 - Planning the application

3 - Application #3 - Logical Flow Diagram

4 - DHCP client simulator prerequisites

5 - Application #3 - Part #1

6 - Application #3 - Part #2

7 - Application #3 - Part #3

8 - Application #3 - Part #4

9 - Testing the application

10 - Entire application code (.txt + .py)
Source Code for the section applicatiion



                    Section 16 Application #4 - Network parameters extraction
1 - What are we going to build?

2 - Planning the application

3 - Application #4 - Logical Flow Diagram

4 - Application #4 - Part #1

5 - Application #4 - Part #2

6 - Application #4 - Part #3

7 - Application #4 - Part #4

8 - Application #4 - Part #5

9 - Testing the application

10 - Entire application code (.txt + .py)
Source Code for the section applicatiion


 
                    Section 17 Application #5 - OSPF network discovery via SNMP
1 - What are we going to build?

2 - Planning the application

3 - Application #5 - Logical Flow Diagram

4 - Application #5 - Part #1

5 - Application #5 - Part #2

6 - Application #5 - Part #3

7 - Application #5 - Part #4

8 - Application #5 - Part #5

9 - Application #5 - Part #6

10 - OSPF-SNMP application prerequisites

11 - Testing the application

12 - Entire application code (.txt + .py)
Source Code for the section applicatiion
 
 
 
                      Section 18 Application #6 - Basic network sniffer
1 - Application #6 - Guidelines

2 - Application #6 - Logical Flow Diagram

3 - Entire application code (.txt + .py)
Source Code for the section applicatiion



                    Section 19 Application #7 - Configuration file comparator
1 - Application #7 - Guidelines

2 - Application #7 - Logical Flow Diagram

3 - Entire application code (.txt + .py)
Source Code for the section applicatiion
 
 
 
                    Section 20 Python 2.x vs. Python 3.x. Converting your code easily.
1 - Python 2.x vs. Python 3.x differences. The 2to3 module.

2 - Setting up the working environment

3 - Converting Python 2.x to Python 3.x code in Windows

4 - Converting Python 2.x to Python 3.x code in Linux

5 - Converting large scripts from Python 2.x to 3.x



                    Section 21 Updates and Final Words
1 - 100 Python Exercises
  Python Exercises
  
2 - Answers for All the Exercises
  Answers
  
3 - Project - Homework

4 - Answer to a Student Question in Lecture 58

5 - How To Install a New Python Module
Getting Started With setuptools and setup.py
setuptools 18.0.1

6 - Python Iterators and Generators

7 - Itertools

8 - Decorators

9 - Sockets: Server

10 - Socket Server Code (.txt + .py)

11 - Sockets: Client

12 - Socket Client Code (.txt + .py)

13 -Web Access Basics with Python: requests

14 - Final Words

15 - Please Read This Carefully!
